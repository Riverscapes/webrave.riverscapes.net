{"version":3,"sources":["../../src/index.ts","../../src/types.ts","../../src/xml.ts","../../src/api.ts","../../src/schema.graphql.ts","../../../src/classes/Program.ts","../../../src/classes/Project.ts","../../../src/classes/errors.ts","../../../src/classes/TileServiceJSONClass.ts","../../../src/frame/Footer.tsx","../../../src/modals/ShareDialog.tsx","../../../../src/modals/provisional/ProvisionalModal.tsx","../../../../src/modals/provisional/ProvisionalButton.tsx","../../src/config.ts","../../../src/frame/Topbar.tsx","../../../src/frame/Topbar.style.ts","../../../src/misc/DownloadZipBtn.tsx","../../../src/misc/WarehouseButton.tsx","../../../src/misc/WebRaveBtn.tsx","../../src/constants.ts","../../../src/modals/ProgramChooser.tsx","../../../../src/modals/ProjectModal/RecurseTreeItem.tsx","../../../../src/modals/ProjectModal/RecurseTreeItem.style.ts","../../../../src/modals/ProjectModal/ProjectModal.tsx","../../../../src/modals/ProjectModal/ProjectModal.style.ts","../../../src/modals/LoginScreen.tsx","../../../src/modals/NotAllowedModal.tsx","../../../src/lib/LocalForageCache.ts","../../../src/hooks/useDownloads.tsx","../../../src/hooks/useProject.ts","../../../src/hooks/useQueryParams.ts","../../src/themes.ts","../../src/googleAnalytics.ts","components/AppWrapper.tsx","components/ProjectLoading.tsx","lib/util.ts","components/map/defaultSymbology.ts","lib/MapManager.ts","mapStyles/index.ts","config.ts","recoil/project.ts","recoil/tree.ts","lib/downloadQueue.ts","recoil/tiles.ts","recoil/symbology.ts","recoil/layers.ts","recoil/map.ts","hooks/useViews.tsx","recoil/url.ts","hooks/useAppStateInit.tsx","components/ProjectNotFound.tsx","components/AppSplitter.tsx","components/WebRaveError.tsx","components/TreeDrawer.tsx","hooks/useMapLayers.tsx","components/tree/TreeNodeLabel.tsx","../../src/Multidot.tsx","../../src/Polygon.tsx","../../src/Polyline.tsx","../../src/QRCode.tsx","../../src/Raster.tsx","../../src/LayerIcon.tsx","../../src/ContentCopy.tsx","components/tree/TreeLeaf.tsx","components/tree/TreeBranch.tsx","components/tree/TreeControl.tsx","components/tree/TreeContextMenu.tsx","hooks/useZoomExtents.tsx","connectors/TreeContextMenu.connect.tsx","components/meta/MetaData.tsx","components/meta/LayerMeta.tsx","components/meta/LayerTileInfo.tsx","components/meta/LayerInfo.tsx","connectors/TreeLayerInfo.connect.tsx","connectors/Treecontrol.connect.tsx","connectors/MapTiles.connect.tsx","components/legend/ViewList.tsx","components/legend/BaseLayerPicker.tsx","components/legend/LegendError.tsx","components/legend/Legend.tsx","components/legend/ColorRamp.tsx","components/legend/LegendLayerItem.tsx","connectors/Legend.connect.tsx","components/map/ZoomIndicator.tsx","components/map/OverzoomedHelp.tsx","connectors/ZoomIndicator.connect.tsx","components/map/MapLoading.tsx","components/map/Map.tsx","components/TreeToggleBtn.tsx","connectors/TreeToggle.connect.tsx","connectors/MapLayer.connect.tsx","connectors/Map.connect.tsx","components/ProjectInfoTab.tsx","hooks/useColourFallback.ts","connectors/App.connect.tsx","connectors/AppAuth.connect.tsx","index.tsx"],"names":["default","_","fileSort","currFolder","sort","a","children","b","filter","padding","theme","spacing","button","marginLeft","paddingLeft","paddingRight","domain","flex","treeFolder","root","main","AppWrapper","title","history","signOut","containerProps","ThemeProvider","themes","home","maxWidth","noScroll","fullWidth","topbar","Topbar","signOutHandler","shareUrl","window","location","href","provisional","ProjectLoading","logoSVG","CircularProgress","size","thickness","status","Typography","variant","component","style","position","zIndex","top","left","width","height","background","zoomExtents","cornersArr","viewport","WebMercatorViewport","fitBounds","longitude","latitude","zoom","newBounds","worldBounds","oldBounds","newRect","Math","max","min","calculateOpacity","transparency","sanitized","newZoomBounds","oldZBounds","newZbounds","fallback","appDefaults","zoomRange","SORT_ORDER","ProjectTreeLayerTypes","POINT","LINE","POLYGON","TIN","RASTER","commonFeatures","layerId","tiles","lyrProps","minzoom","minZoom","maxzoom","layout","rsLayer","subLayers","sublyr","find","sl","id","path","MapLayerTypes","line","leaf","rndColor","type","paint","point","polygon","outline","sourceIdGen","lpath","sName","layerSource","layerIdGen","subIdx","userContent","checkLoaded","map","Boolean","isStyleLoaded","getMapLayerIds","getStyle","layers","metadata","isUndefined","mType","metaMaker","mIdx","mRef","userLayerRecalc","renderablelayers","mapInst","start","Date","now","validLayerIds","beforeId","succeeded","slice","reverse","forEach","lyr","symbologyName","sourceId","layerType","layerPath","symbology","layerName","getSource","addSource","scheme","maxZoom","url","format","layerIdPath","getVectorSource","push","getLayer","log","debug","addLayer","layer","source","getRasterLayerProps","undefined","symbologyStatus","SymbologyStatus","FETCHING","symbJSONArr","mapboxJson","length","randomColor","rndCol","legendColors","defaultSymbology","symb","subLyrId","opacity","getVectorLayerProps","lyrId","indexOf","removeLayer","fixMapboxExport","sourcePrefix","rawStyle","sources","rawSources","rawLayers","glyphs","sprite","sourceLookup","Object","keys","reduce","acc","sKey","newId","bgSource","idx","lyrMeta","newLyr","bgLayer","toString","mapStyles","toolTip","Icon","SatelliteOutlined","color","Satellite","TerrainOutlined","RiverscapesTopo","DirectionsCarOutlined","BasicMap","process","REACT_APP_DOMAIN","endpoints","graphql","warehouseUrl","imagesUrl","appName","apiTimeout","defaultViewport","baseLayer","baseLayers","drawerOpen","init","minFilterTextLength","maxMapLayers","retryDelayS","refreshDelayS","initMapStyle","version","name","red","green","blue","orange","purple","cyan","lime","brown","redirectUrl","URL","endsWith","origin","publicUrl","projectAtom","atom","key","authAtom","drawerOpenAtom","activeIdsAtom","activeTreeLeavesSelector","selector","get","proj","activeIds","tree","leaves","activeLeavesSortedSelector","newArr","lyrA","lyrB","layerSort","projectMapLayerLeafsSelector","nodeExists","ProjectTreeLayerTileTypes","projectLayerPathsSelector","newPath","treeFilterTextAtom","projectLeafHierarchySelector","project","parent","pid","ancestry","searchStrings","branches","foundBranch","br","bid","label","toLowerCase","trim","projectLeafSearchAncestry","treeInfoPaneIdAtom","treeInfoPaneOpenAtom","treeLeafSelectorFamily","selectorFamily","ptid","Error","treeSelectedIdsAtom","treeSelectedSelector","rawIds","selectedIds","ids","parseInt","replace","projectHiddenNodesSelector","retVal","hierarchy","filterText","filterTextArr","split","w","allowedLeaves","leafHierarchy","every","word","allowedBranches","Array","from","Set","lid","treeLeafStateSelector","layerStateSelectorFamily","hidden","active","reportUrl","REPORT","tileStatus","TilingStatus","SUCCESS","tilesState","treeAllowed","renderable","treeRootBranchId","branch","treeBranchSelectorFamily","lf","treeBranchStateSelectorFamily","hiddenNodes","collapsed","treeExpandedSelector","selected","treeContextMenuAtom","treeExpandedIdsAtom","treeAllIdsSelector","QUEUE","Bottleneck","maxConcurrent","LOCAL_CACHE","LocalForageCache","prune","tilesRequestIdAtomFamily","atomFamily","tilesRetriesAtomFamily","tilesSelectorFamily","auth","UNKNOWN","cacheKey","projType","program","cacheVal","downloadQueue","schedule","priority","getCurrentToken","then","jwt","getLayerTiles","apiRes","errors","data","FETCH_ERROR","error","e","JSON","stringify","join","String","TilingStatusFinished","set","createSymbologyKeys","symbKey","sk","isEqual","projectSymbologiesSelector","mapLyrs","symbologySelectorFamily","activeSymb","isRaster","getWebSymbology","catch","err","ERROR","finalVal","FOUND","assignedRandomColorsAtom","leafRandomColAtomFamily","selectNextColor","current","leafid","isMapAddable","isOnTileServer","legendActive","treeSelected","NOT_APPLICABLE","tileServLoadable","noWait","symbologyLoadable","state","contents","FILE","viewProjLeafIdsSelector","views","view","viewIds","vl","ptl","blLayerId","baseLayerAtom","viewportAtom","mapSizeAtom","mapErrorAtom","mapLoadedAtom","activeBoundsSelector","renderableLayers","renderableMapLayersSelector","bounds","usableLayers","rndCols","activeViewAtom","boundsAtom","zoomBoundsAtom","boundsSelector","useViews","currentView","d","c","bearing","pitch","v","l","useRecoilState","currView","setCurrView","viewLeafIds","useRecoilValue","setActiveMapIds","useSetRecoilState","setView","viewId","googleAnalytics","event","resetView","defaultView","useAppStateInit","initAuth","initProj","setProjectTree","setActiveIds","setAuth","projectSymbologies","projectLayerPaths","setExpanded","resetApp","useCallback","useEffect","preFetchLayerTile","useRecoilCallback","snapshot","getLoadable","preFetchSymbology","document","useStyles","makeStyles","rootContainer","display","flexDirection","spacer","flexGrow","buttonContainer","textAlign","logoContainer","logo","ProjectNotFound","classes","Container","className","Paper","src","alt","paragraph","Link","stay","splitPane","resizer","boxSizing","backgroundClip","transition","margin","borderTop","borderBottom","cursor","borderLeft","borderRight","borderColor","AppSplitter","open","child1","child2","primary","defaultSize","minSize","maxSize","child1Memoized","useMemo","child2Memoized","resizerClassName","pane1Style","overflow","pane2Style","WebRaveError","machineName","message","noWHButton","appBar","tabs","tabContents","closeButton","palette","secondary","contrastText","right","TreeDrawer","useState","activeTab","setValue","Tabs","value","onChange","newValue","indicatorColor","textColor","tab","Tab","tid","useMapLayers","setError","toggleLayer","normal","fontStyle","highlighted","fontWeight","TreeNodeLabel","text","query","t","chunks","highlightWords","match","useLeafStyles","treeLeafLabel","innerLabel","metaIcon","fontSize","lineHeight","loadingSpinner","leafQUEUED","leafNO_GEOMETRIES","leafCREATING","leafTILING_ERROR","leafTIMEOUT","leafFETCH_ERROR","leafNOT_FOUND","leafINDEX_NOT_FOUND","leafLAYER_NOT_FOUND","leafUNKNOWN","leafFETCHING","leafSUCCESS","TreeLeaf","searchText","handleContext","handleClick","handleDoubleClick","tileStatusStr","QUEUED","CREATING","TILING_ERROR","TIMEOUT","INDEX_NOT_FOUND","NO_GEOMETRIES","LAYER_NOT_FOUND","TreeItem","nodeId","clsx","onClick","onDoubleClick","onContextMenu","preventDefault","clientX","clientY","icon","useBranchStyles","marginTop","iconContainer","TreeBranch","stopPropagation","container","folderIcon","paddingBottom","searchBox","searchBoxInput","TreeControl","lyrInfoOpen","setSearchText","expanded","ctxMenu","lyrInfo","setSelected","setSearchDebounced","debounce","stext","TextField","placeholder","target","InputProps","input","startAdornment","InputAdornment","TreeView","defaultCollapseIcon","defaultExpandIcon","onNodeToggle","nodeIds","onNodeSelect","isArray","item","menuItemIcon","marginRight","TreeContextMenu","onClose","menuItems","Menu","keepMounted","anchorReference","anchorPosition","disabled","MenuItem","useZoomExtents","zoomLayerExtent","lyrBounds","getPromise","mapSize","zoomView","TreeContextMenuConnect","ctxState","downloadFile","leafId","setTreeInfoPaneId","setTreeeInfoPaneOpen","HourglassEmptyIcon","AssessmentIcon","newWindow","opener","DownloadIcon","RemoveCircleIcon","ZoomOutMapIcon","AddCircleIcon","ErrorIcon","InfoIcon","table","section","marginBottom","sectionHeader","metaKey","metaValue","overflowWrap","SPECIAL_FORMATS","datecreated","val","valDate","dates","HTML5InputToTimestamp","formatDate","formatDateAgo","formatString","lwrKey","MetaData","meta","TableContainer","Table","TableBody","rowKey","TableRow","TableCell","scope","align","DONTSHOW","minimal","whNote","LayerMeta","sections","k","distill","rk","upstreamWarehouse","upstreamProject","upstreamLayer","Layer","makeSections","_rs_prj_projType","Symbology","LayerTileInfo","Status","Started","started","lastStatus","duration","toFixed","originFile","numeral","Files","numFiles","lastModified","toolbar","minHeight","dark","layerTitle","layerIcon","layerMeta","overflowY","userSelect","typeContainer","LayerInfo","handleClose","Toolbar","Tooltip","IconButton","edge","TreeLayerInfo","leafID","TreeBranchConnector","branchId","depth","branchState","TreeLeafConnector","treeLeafState","setCtxState","setInfoPaneId","TreeControlConnect","setFilterText","rootBranchId","expandedIds","setExpandedIds","setSelectedIds","infoPaneId","allIds","infoPaneOpen","setInfoPaneOpen","realExpanded","realSetExpanded","treeContrextMenu","rootBranch","MapTilesConnect","tLoad","useRecoilValueLoadable","updateBoundsState","reqId","retryId","zoomBounds","setTimeout","newBoundsCalc","newZoomBoundsCalc","EMPTY_VID","ViewList","activeView","projectViews","handleChange","realView","viewOptions","viewOpts","defaultString","FormControl","InputLabel","htmlFor","Select","menuIcon","menuItem","BaseLayerPicker","setBaseLayer","selectMenu","newBl","bl","LegendError","border","borderRadius","maxHeight","boxShadow","subheaders","legendList","Legend","setViewId","List","dense","disablePadding","tooltip","row","colorBox","flexShrink","whiteSpace","textOverflow","ColorRamp","rampType","legend","pRamp","ramp","newRamp","RampType","INTERPOLATED","regMatch","percent","parseFloat","newRampDict","r","values","parseRamp","ListItem","divider","disableGutters","idr","enterDelay","listItem","paddingTop","listItemActive","listItemAvatar","minWidth","expandIcon","avatar","expandIconButton","expandDisabled","textPrimary","textSecondary","heading","layerItem","legendName","deleteButtonHover","legendColor","deleteButton","zoomButton","LegendLayerItem","loading","subLabel","fallbackColor","useTheme","setOpen","hasLegend","hasOneItemLegend","fgColor","bgColor","getContrastText","toggle","Fragment","ListItemIcon","ListItemAvatar","Avatar","iconProps","ListItemText","ListItemSecondaryAction","LegendConnect","mapError","setMapError","enqueueSnackbar","useSnackbar","activeLeaves","_setBaseLayer","autoHideDuration","LegendItemConnect","rndColIdx","stats","rasterStats","maximum","minimum","overZoomed","normalBG","light","backgroundColor","warning","normalButtons","overZBG","animation","overZButtons","labelIcon","warnText","chipIcon","typography","caption","coordsTxt","helpIcon","ZoomIndicator","onHelpClick","onCopyClick","cc","bg","btn","cb","Chip","clickable","labelSmall","onMouseOver","ContentCopy","actions","content","rasterImgsContainer","rasterImgsContainerCol","rasterImgs","OverZoomedHelp","Dialog","DialogTitle","disableTypography","DialogContent","dividers","bottom","TreeToggleConnect","overZoomDlg","setOverZoomDlg","minMaxRasterZoom","lyrMaxZoom","navigator","clipboard","writeText","OverzoomedHelp","MapLoading","navControlStyle","pointerEvents","mapContainer","transform","drawerContents","drawerSpacer","drawerSpacerOpen","dialogContainer","alignItems","justifyContent","loaderSpinner","dialog","dummyText","debounceConsoleLog","Map","styleLoading","_setViewport","boundsSet","setBoundsSet","rawBounds","setMapSize","mapLoaded","setMapLoaded","viewportRef","useRef","loadHandler","styleLoaded","setViewport","inV","outV","geoFenceCorrect","coords","center","newCoords","geoFence","baseStyle","createInitialStyle","mapLoader","clickRadius","onLoad","onResize","mapStyle","onViewportChange","onError","console","mapboxApiAccessToken","config","mapConfig","mapBoxToken","toggleTree","zoomExtent","toggleDrawer","Fab","TreeToggleBtn","MapLayers","React","useContext","MapContext","renderableMapLayers","mapRef","check","base","refreshNeeded","setRefreshNeeded","newState","c_success","newBase","validBgLayers","newSourceKey","addCounter","removeCounter","changeBaseLayer","l_success","v_success","lMeta","usrLyrOrder","bgIds","slotIds","delta","correctStack","have","need","allLayers","needId","needIdx","moveLayer","verifyLayerOrder","refreshInterval","setInterval","clearInterval","MapConnect","activeBounds","run","success","info","maxSnack","preventDuplicate","anchorOrigin","vertical","horizontal","btnGroup","footerLogo","ProjectInfoTab","downloadZipFile","pendingZips","projectInfo","Title","Type","tags","createdOn","updatedOn","pendingSince","Divider","rel","useColourFallback","activeTreeLeaves","assignRndCol","colIds","currRndCol","nextCol","needRndCol","cid","exFunc","AppConnect","hasViewAccess","WarehouseRoleEnum","role","useProject","currentPageView","Promise","resolve","isProjLoading","initialized","useDownloads","downloadFileFn","fkey","mapComponent","treeComponent","hash","plp","ProgramErrors","getProgramMachineName","locationHash","validUrl","hashCheck","programStringCheck","projectIdCheck","AppAuthConnect","authInfo","setAuthInfo","networkError","setNetworkError","programState","setProgramState","isAppPreLoading","setIsAppPreLoading","useHosted","useHistory","authCheck","authResp","authVals","region","userPoolId","userPool","userPoolWebClientId","clientId","mandatorySignIn","oauth","redirectSignIn","redirectSignOut","responseType","storageUrl","localUrl","pathname","isAuthenticated","isAuthComplete","del","navigate","address","getProgramAuth","apiReturn","NOT_FOUND","appWrapProps","render","props","signIn","mapboxgl","workerClass","require","devSetup","ReactDOM","basename","hashHistory","getElementById","addEventListener","pushState","storage","persist","granted","warn"],"mappings":"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","file":"static/js/main.72cefff2.chunk.js","sourcesContent":["export { default as Multidot } from './Multidot';\nexport { default as Polygon } from './Polygon';\nexport { default as Polyline } from './Polyline';\nexport { default as QRCode } from './QRCode';\nexport { default as Raster } from './Raster';\nexport { default as LayerIcon } from './LayerIcon';\nexport { default as ContentCopy } from './ContentCopy';\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProjectTreeLayerTileTypes = exports.ProjectTreeLayerTypes = exports.TileTypes = exports.SymbologyStatus = exports.TilingStatusFinished = exports.TilingStatus = exports.RampType = exports.AccessEnum = exports.WarehouseRoleEnum = exports.FieldTypeEnum = void 0;\nvar FieldTypeEnum;\n(function (FieldTypeEnum) {\n    FieldTypeEnum[\"string\"] = \"S\";\n    FieldTypeEnum[\"number\"] = \"N\";\n    FieldTypeEnum[\"boolean\"] = \"BOOL\";\n    FieldTypeEnum[\"stringArr\"] = \"SARR\";\n    FieldTypeEnum[\"numberArr\"] = \"NARR\";\n})(FieldTypeEnum = exports.FieldTypeEnum || (exports.FieldTypeEnum = {}));\nvar WarehouseRoleEnum;\n(function (WarehouseRoleEnum) {\n    WarehouseRoleEnum[\"SuperUser\"] = \"SUPER\";\n    WarehouseRoleEnum[\"Admin\"] = \"ADMIN\";\n    WarehouseRoleEnum[\"Observer\"] = \"OBSERVER\";\n    WarehouseRoleEnum[\"Participant\"] = \"PARTICIPANT\";\n})(WarehouseRoleEnum = exports.WarehouseRoleEnum || (exports.WarehouseRoleEnum = {}));\nvar AccessEnum;\n(function (AccessEnum) {\n    AccessEnum[\"Public\"] = \"PUBLIC\";\n    AccessEnum[\"Private\"] = \"PRIVATE\";\n    AccessEnum[\"Secret\"] = \"SECRET\";\n})(AccessEnum = exports.AccessEnum || (exports.AccessEnum = {}));\nvar RampType;\n(function (RampType) {\n    RampType[\"INTERPOLATED\"] = \"INTERPOLATED\";\n    RampType[\"DISCRETE\"] = \"DISCRETE\";\n    RampType[\"EXACT\"] = \"EXACT\";\n})(RampType = exports.RampType || (exports.RampType = {}));\nvar TilingStatus;\n(function (TilingStatus) {\n    TilingStatus[\"UNKNOWN\"] = \"UNKNOWN\";\n    TilingStatus[\"QUEUED\"] = \"QUEUED\";\n    TilingStatus[\"FETCHING\"] = \"FETCHING\";\n    TilingStatus[\"NOT_APPLICABLE\"] = \"NOT_APPLICABLE\";\n    TilingStatus[\"CREATING\"] = \"CREATING\";\n    TilingStatus[\"NO_GEOMETRIES\"] = \"NO_GEOMETRIES\";\n    TilingStatus[\"TIMEOUT\"] = \"TIMEOUT\";\n    TilingStatus[\"TILING_ERROR\"] = \"TILING_ERROR\";\n    TilingStatus[\"INDEX_NOT_FOUND\"] = \"INDEX_NOT_FOUND\";\n    TilingStatus[\"LAYER_NOT_FOUND\"] = \"LAYER_NOT_FOUND\";\n    TilingStatus[\"FETCH_ERROR\"] = \"FETCH_ERROR\";\n    TilingStatus[\"SUCCESS\"] = \"SUCCESS\";\n})(TilingStatus = exports.TilingStatus || (exports.TilingStatus = {}));\nexports.TilingStatusFinished = [\n    TilingStatus.NOT_APPLICABLE,\n    TilingStatus.NO_GEOMETRIES,\n    TilingStatus.TIMEOUT,\n    TilingStatus.TILING_ERROR,\n    TilingStatus.SUCCESS\n];\nvar SymbologyStatus;\n(function (SymbologyStatus) {\n    SymbologyStatus[\"UNKNOWN\"] = \"UNKNOWN\";\n    SymbologyStatus[\"FETCHING\"] = \"FETCHING\";\n    SymbologyStatus[\"MISSING\"] = \"MISSING\";\n    SymbologyStatus[\"NOT_APPLICABLE\"] = \"NOT_APPLICABLE\";\n    SymbologyStatus[\"FOUND\"] = \"FOUND\";\n    SymbologyStatus[\"ERROR\"] = \"ERROR\";\n})(SymbologyStatus = exports.SymbologyStatus || (exports.SymbologyStatus = {}));\nvar TileTypes;\n(function (TileTypes) {\n    TileTypes[\"RASTER\"] = \"RASTER\";\n    TileTypes[\"HTML\"] = \"HTML\";\n    TileTypes[\"VECTOR_SHP\"] = \"VECTOR_SHP\";\n    TileTypes[\"VECTOR_GPKG\"] = \"VECTOR_GPKG\";\n})(TileTypes = exports.TileTypes || (exports.TileTypes = {}));\nvar ProjectTreeLayerTypes;\n(function (ProjectTreeLayerTypes) {\n    ProjectTreeLayerTypes[\"REPORT\"] = \"report\";\n    ProjectTreeLayerTypes[\"RASTER\"] = \"raster\";\n    ProjectTreeLayerTypes[\"LINE\"] = \"line\";\n    ProjectTreeLayerTypes[\"POLYGON\"] = \"polygon\";\n    ProjectTreeLayerTypes[\"POINT\"] = \"point\";\n    ProjectTreeLayerTypes[\"FILE\"] = \"file\";\n    ProjectTreeLayerTypes[\"TIN\"] = \"tin\";\n})(ProjectTreeLayerTypes = exports.ProjectTreeLayerTypes || (exports.ProjectTreeLayerTypes = {}));\nexports.ProjectTreeLayerTileTypes = [\n    ProjectTreeLayerTypes.RASTER,\n    ProjectTreeLayerTypes.POLYGON,\n    ProjectTreeLayerTypes.LINE,\n    ProjectTreeLayerTypes.POINT\n];\n//# sourceMappingURL=types.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verifyMeta = exports.augmentXML = exports.parseProjectXML = exports.parseProgramXML = exports.parseXMLMeta = exports.getXML = void 0;\nvar xml2js_1 = require(\"xml2js\");\nvar axios_1 = __importDefault(require(\"axios\"));\nvar _1 = require(\"./\");\nvar xmldom_1 = __importDefault(require(\"xmldom\"));\nvar loglevel_1 = __importDefault(require(\"loglevel\"));\nfunction getXML(url) {\n    return __awaiter(this, void 0, void 0, function () {\n        var start, result, duration;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    start = Date.now();\n                    return [4, (0, axios_1.default)({\n                            url: url,\n                            method: 'get'\n                        })];\n                case 1:\n                    result = _a.sent();\n                    duration = (Date.now() - start) / 1000;\n                    if (duration > 10)\n                        loglevel_1.default.warn(\"getXML took \".concat(duration.toFixed(1), \" seconds\"));\n                    if (!result.data)\n                        throw new Error('Error retrieving XML file');\n                    return [2, result.data];\n            }\n        });\n    });\n}\nexports.getXML = getXML;\nfunction parseXMLMeta(metaArr) {\n    try {\n        return metaArr.reduce(function (acc, _a) {\n            var _b;\n            var $ = _a.$, _ = _a._;\n            return (__assign(__assign({}, acc), (_b = {}, _b[$.name] = _ && _.trim(), _b)));\n        }, {});\n    }\n    catch (_a) {\n        return {};\n    }\n}\nexports.parseXMLMeta = parseXMLMeta;\nfunction _recursePaths(xmlDom, products, groups, collections) {\n    var HierarchyNode = xmlDom.getElementsByTagName('Hierarchy')[0];\n    var productsInHierarchy = Array.from(HierarchyNode.getElementsByTagName('Product'));\n    var retVal = [];\n    productsInHierarchy.forEach(function (prodEl) {\n        var pathArr = [];\n        var ref = prodEl.getAttribute('ref');\n        var product = products.find(function (o) { return o.id === ref; });\n        if (!product)\n            throw new Error(\"Product not found for ref='\".concat(ref, \"'\"));\n        var currEl = prodEl.parentNode;\n        var _loop_1 = function () {\n            var ref_1 = currEl.getAttribute('ref');\n            var tag = currEl.tagName;\n            var def = tag === 'Group' ? groups.find(function (g) { return g.id === ref_1; }) : collections.find(function (g) { return g.id === ref_1; });\n            var folder = def.folder, name_1 = def.name;\n            pathArr.push({\n                type: tag,\n                id: ref_1,\n                folder: folder,\n                name: name_1\n            });\n            currEl = currEl.parentNode;\n        };\n        while (currEl && currEl.parentNode && currEl.tagName !== 'Hierarchy') {\n            _loop_1();\n        }\n        retVal.push(__assign(__assign({}, product), { pathArr: pathArr.reverse() }));\n    });\n    return retVal;\n}\nfunction parseProgramXML(rawXML) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedProgramJSON, _a, projectFile, projectXSDs, meta, collections, groups, productsRaw, xmlDom, products;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4, (0, xml2js_1.parseStringPromise)(rawXML).catch(function (err) {\n                        throw new _1.ValidationError('Error parsing XML file. This likely means a broken or unclosed tag.', [err.message]);\n                    })];\n                case 1:\n                    parsedProgramJSON = _b.sent();\n                    _a = parseXMLMeta(parsedProgramJSON.Program.MetaData[0].Meta), projectFile = _a.projectFile, projectXSDs = _a.projectXSDs, meta = __rest(_a, [\"projectFile\", \"projectXSDs\"]);\n                    collections = parsedProgramJSON.Program.Definitions[0].Collections[0].Collection.map(function (_a) {\n                        var $ = _a.$, Allow = _a.Allow, AllowRegex = _a.AllowRegex;\n                        return (__assign(__assign({}, $), { Allow: Allow ? (Array.isArray(Allow) ? Allow.map(function (a) { return a.$; }) : [Allow]) : undefined, AllowRegex: AllowRegex\n                                ? Array.isArray(AllowRegex)\n                                    ? AllowRegex.map(function (a) { return a.$.pattern; })\n                                    : [AllowRegex.pattern]\n                                : undefined }));\n                    });\n                    groups = [];\n                    if (parsedProgramJSON.Program.Definitions[0].Groups[0].Group) {\n                        if (Array.isArray(parsedProgramJSON.Program.Definitions[0].Groups[0].Group))\n                            groups = parsedProgramJSON.Program.Definitions[0].Groups[0].Group.map(function (a) { return a.$; });\n                        else\n                            groups = [parsedProgramJSON.Program.Definitions[0].Groups[0].Group];\n                    }\n                    productsRaw = [];\n                    if (parsedProgramJSON.Program.Definitions[0].Products[0].Product) {\n                        if (Array.isArray(parsedProgramJSON.Program.Definitions[0].Products[0].Product))\n                            productsRaw = parsedProgramJSON.Program.Definitions[0].Products[0].Product.map(function (a) { return a.$; });\n                        else\n                            productsRaw = [parsedProgramJSON.Program.Definitions[0].Products[0].Product];\n                    }\n                    xmlDom = new xmldom_1.default.DOMParser().parseFromString(rawXML);\n                    products = _recursePaths(xmlDom, productsRaw, groups, collections);\n                    return [2, Promise.resolve(new _1.Program({\n                            name: parsedProgramJSON.Program.Name[0],\n                            machineName: parsedProgramJSON.Program.MachineName[0],\n                            projectXSDs: projectXSDs,\n                            projectFile: projectFile,\n                            meta: meta,\n                            products: products,\n                            collections: collections,\n                            groups: groups\n                        }))];\n            }\n        });\n    });\n}\nexports.parseProgramXML = parseProgramXML;\nfunction parseProjectXML(rawXML) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedProjectJSON, retVal, whMeta, meta;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, (0, xml2js_1.parseStringPromise)(rawXML).catch(function (err) {\n                        throw new _1.ValidationError('Error parsing XML file. This likely means a broken or unclosed tag.', [err.message]);\n                    })];\n                case 1:\n                    parsedProjectJSON = _a.sent();\n                    retVal = parsedProjectJSON.Project;\n                    whMeta = {};\n                    if (retVal.Warehouse) {\n                        whMeta = parseXMLMeta(retVal.Warehouse[0].Meta);\n                    }\n                    meta = {};\n                    if (retVal.MetaData) {\n                        meta = parseXMLMeta(retVal.MetaData[0].Meta);\n                    }\n                    return [2, Promise.resolve({\n                            id: whMeta.id,\n                            name: retVal.Name[0],\n                            projType: retVal.ProjectType[0],\n                            Warehouse: whMeta,\n                            program: whMeta.program,\n                            meta: meta,\n                            tags: _1.Project.parseTagString(whMeta.tags),\n                            xml: rawXML,\n                            parsedProjectJSON: parsedProjectJSON,\n                            rawXML: rawXML\n                        })];\n            }\n        });\n    });\n}\nexports.parseProjectXML = parseProjectXML;\nfunction augmentXML(newMeta, xmlfile) {\n    var parsed = new xmldom_1.default.DOMParser().parseFromString(xmlfile);\n    var metadata = parsed.getElementsByTagName('MetaData')[0];\n    if (parsed.getElementsByTagName('Warehouse').length > 0) {\n        parsed.removeChild(parsed.getElementsByTagName('Warehouse')[0]);\n    }\n    var warehouseNode = parsed.createElement('Warehouse');\n    Object.keys(newMeta).forEach(function (k) {\n        var mNode = parsed.createElement('Meta');\n        mNode.setAttribute('name', k);\n        mNode.appendChild(parsed.createTextNode(newMeta[k]));\n        warehouseNode.appendChild(mNode);\n    });\n    parsed.insertBefore(warehouseNode, metadata);\n    var formatted = new xmldom_1.default.XMLSerializer().serializeToString(parsed);\n    return formatted;\n}\nexports.augmentXML = augmentXML;\nfunction verifyMeta(projType, projectMeta, program) {\n    var projectDef = program.products.find(function (p) { return p.id === projType; });\n    if (!projectDef) {\n        throw new Error(\"No project type '\".concat(projType, \"' found in program '\").concat(program.name, \"'\"));\n    }\n    var collectionathArrs = projectDef.pathArr.filter(function (f) { return f.type === 'Collection'; });\n    return collectionathArrs.map(function (arrEl) { return ({\n        name: arrEl.name,\n        value: projectMeta[arrEl.name]\n    }); });\n}\nexports.verifyMeta = verifyMeta;\n//# sourceMappingURL=xml.js.map","\"use strict\";\nvar __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.adminGetUsers = exports.adminUpdateUserPermissions = exports.search = exports.deleteProject = exports.downloadZipFile = exports.getWebSymbology = exports.getLayerTiles = exports.downloadFile = exports.getUploadUrls = exports.getProject = exports.getProgram = exports.getProgramAuth = exports.getPrograms = exports.validateProjectXML = exports.authCheck = exports.apiCall = void 0;\nvar axios_1 = __importDefault(require(\"axios\"));\nvar graphql_1 = require(\"graphql\");\nvar graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nvar loglevel_1 = __importDefault(require(\"loglevel\"));\nvar _1 = require(\"./\");\nvar apiCall = function (url, jwt, query, variables, timeout) {\n    var start = Date.now();\n    return (0, axios_1.default)({\n        url: url,\n        method: 'post',\n        timeout: timeout,\n        headers: {\n            Authorization: jwt ? \"Bearer \".concat(jwt) : 'Bearer NONE'\n        },\n        data: {\n            query: (0, graphql_1.print)(query),\n            variables: variables\n        }\n    })\n        .then(function (_a) {\n        var axiosData = _a.data;\n        var time = (Date.now() - start) / 1000;\n        if (time > 10)\n            loglevel_1.default.warn(\"Query took \".concat(time.toFixed(1), \" seconds. \").concat((0, graphql_1.print)(query)\n                .replace(/\\n/g, '')\n                .slice(0, 50), \" \").concat(JSON.stringify(variables)));\n        return axiosData;\n    })\n        .catch(function (err) {\n        if (err.response && err.response.status === 404) {\n            throw new Error(\"API Url not found: \".concat(url));\n        }\n        else if (err.code && err.code === 'ECONNREFUSED') {\n            throw new Error(\"Connection refused. Could not contact: '\".concat(url, \"'\"));\n        }\n        else {\n            loglevel_1.default.error('apiCall Error', { url: url, jwt: jwt, query: (0, graphql_1.print)(query), variables: variables, err: err });\n            throw err;\n        }\n    });\n};\nexports.apiCall = apiCall;\nfunction authCheck(url, jwt, timeout) {\n    return (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n            query AuthCall {\\n                auth {\\n                    loggedIn\\n                    userPool\\n                    clientId\\n                    region\\n                    domain\\n                }\\n            }\\n        \"], [\"\\n            query AuthCall {\\n                auth {\\n                    loggedIn\\n                    userPool\\n                    clientId\\n                    region\\n                    domain\\n                }\\n            }\\n        \"]))), {}, timeout);\n}\nexports.authCheck = authCheck;\nfunction validateProjectXML(url, jwt, xml, projType, program, timeout) {\n    return (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n            query validateProject($xml: String!, $projType: String!, $program: String!) {\\n                validate(xml: $xml, projType: $projType, program: $program) {\\n                    result\\n                    xmlErrors\\n                }\\n            }\\n        \"], [\"\\n            query validateProject($xml: String!, $projType: String!, $program: String!) {\\n                validate(xml: $xml, projType: $projType, program: $program) {\\n                    result\\n                    xmlErrors\\n                }\\n            }\\n        \"]))), { xml: xml, program: program, projType: projType }, timeout);\n}\nexports.validateProjectXML = validateProjectXML;\nfunction getPrograms(url, jwt, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n            query programs {\\n                auth {\\n                    loggedIn\\n                    userPool\\n                    clientId\\n                    region\\n                    domain\\n                }\\n                programs {\\n                    name\\n                    machineName\\n                    projectXSDs\\n                    projectFile\\n                    role\\n                    groups {\\n                        id\\n                        name\\n                        folder\\n                    }\\n                    collections {\\n                        id\\n                        name\\n                        AllowRegex\\n                        Allow {\\n                            id\\n                            name\\n                            aliases\\n                            folder\\n                        }\\n                    }\\n                    products {\\n                        id\\n                        name\\n                        folder\\n                        pathArr\\n                    }\\n                    hierarchy\\n                    meta\\n                }\\n            }\\n        \"], [\"\\n            query programs {\\n                auth {\\n                    loggedIn\\n                    userPool\\n                    clientId\\n                    region\\n                    domain\\n                }\\n                programs {\\n                    name\\n                    machineName\\n                    projectXSDs\\n                    projectFile\\n                    role\\n                    groups {\\n                        id\\n                        name\\n                        folder\\n                    }\\n                    collections {\\n                        id\\n                        name\\n                        AllowRegex\\n                        Allow {\\n                            id\\n                            name\\n                            aliases\\n                            folder\\n                        }\\n                    }\\n                    products {\\n                        id\\n                        name\\n                        folder\\n                        pathArr\\n                    }\\n                    hierarchy\\n                    meta\\n                }\\n            }\\n        \"]))), {}, timeout).then(function (gqlReturn) {\n                    return __assign(__assign({}, gqlReturn), { data: {\n                            programs: gqlReturn.data.programs.map(_1.Program.fromGraphQL)\n                        } });\n                })];\n        });\n    });\n}\nexports.getPrograms = getPrograms;\nfunction getProgramAuth(url, jwt, programName, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a, program, errors;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n            query program($program: String!) {\\n                program(program: $program) {\\n                    name\\n                    machineName\\n                    projectXSDs\\n                    projectFile\\n                    role\\n                    groups {\\n                        id\\n                        name\\n                        folder\\n                    }\\n                    collections {\\n                        id\\n                        name\\n                        AllowRegex\\n                        Allow {\\n                            id\\n                            name\\n                            aliases\\n                            folder\\n                        }\\n                    }\\n                    products {\\n                        id\\n                        name\\n                        folder\\n                        pathArr\\n                    }\\n                    hierarchy\\n                    meta\\n                }\\n            }\\n        \"], [\"\\n            query program($program: String!) {\\n                program(program: $program) {\\n                    name\\n                    machineName\\n                    projectXSDs\\n                    projectFile\\n                    role\\n                    groups {\\n                        id\\n                        name\\n                        folder\\n                    }\\n                    collections {\\n                        id\\n                        name\\n                        AllowRegex\\n                        Allow {\\n                            id\\n                            name\\n                            aliases\\n                            folder\\n                        }\\n                    }\\n                    products {\\n                        id\\n                        name\\n                        folder\\n                        pathArr\\n                    }\\n                    hierarchy\\n                    meta\\n                }\\n            }\\n        \"]))), { program: programName }, timeout)];\n                case 1:\n                    _a = _b.sent(), program = _a.data.program, errors = _a.errors;\n                    return [2, {\n                            data: {\n                                program: _1.Program.fromGraphQL(program)\n                            },\n                            errors: errors\n                        }];\n            }\n        });\n    });\n}\nexports.getProgramAuth = getProgramAuth;\nfunction getProgram(url, jwt, programName, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a, program, errors;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_5 || (templateObject_5 = __makeTemplateObject([\"\\n            query program($program: String!) {\\n                program(program: $program) {\\n                    name\\n                    machineName\\n                    projectXSDs\\n                    projectFile\\n                    role\\n                    groups {\\n                        id\\n                        name\\n                        folder\\n                    }\\n                    collections {\\n                        id\\n                        name\\n                        AllowRegex\\n                        Allow {\\n                            id\\n                            name\\n                            aliases\\n                            folder\\n                        }\\n                    }\\n                    products {\\n                        id\\n                        name\\n                        folder\\n                        pathArr\\n                    }\\n                    hierarchy\\n                    meta\\n                }\\n            }\\n        \"], [\"\\n            query program($program: String!) {\\n                program(program: $program) {\\n                    name\\n                    machineName\\n                    projectXSDs\\n                    projectFile\\n                    role\\n                    groups {\\n                        id\\n                        name\\n                        folder\\n                    }\\n                    collections {\\n                        id\\n                        name\\n                        AllowRegex\\n                        Allow {\\n                            id\\n                            name\\n                            aliases\\n                            folder\\n                        }\\n                    }\\n                    products {\\n                        id\\n                        name\\n                        folder\\n                        pathArr\\n                    }\\n                    hierarchy\\n                    meta\\n                }\\n            }\\n        \"]))), { program: programName }, timeout)];\n                case 1:\n                    _a = _b.sent(), program = _a.data.program, errors = _a.errors;\n                    return [2, {\n                            data: {\n                                program: _1.Program.fromGraphQL(program)\n                            },\n                            errors: errors\n                        }];\n            }\n        });\n    });\n}\nexports.getProgram = getProgram;\nfunction getProject(url, jwt, id, program, files, tree, timeout) {\n    if (files === void 0) { files = false; }\n    if (tree === void 0) { tree = false; }\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_6 || (templateObject_6 = __makeTemplateObject([\"\\n            query getProject($id: ID!, $program: String!) {\\n                project(id: $id, program: $program) {\\n                    id\\n                    name\\n                    projType\\n                    totalSize\\n                    program\\n                    tags\\n                    createdBy\\n                    updatedBy\\n                    createdOn\\n                    updatedOn\\n                    meta\\n                    \", \"\\n                    \", \"\\n                }\\n            }\\n        \"], [\"\\n            query getProject($id: ID!, $program: String!) {\\n                project(id: $id, program: $program) {\\n                    id\\n                    name\\n                    projType\\n                    totalSize\\n                    program\\n                    tags\\n                    createdBy\\n                    updatedBy\\n                    createdOn\\n                    updatedOn\\n                    meta\\n                    \", \"\\n                    \", \"\\n                }\\n            }\\n        \"])), files\n                    ? \"\\n                    files {\\n                        key\\n                        md5\\n                        size\\n                        downloadUrl\\n                    }\"\n                    : '', tree\n                    ? \"\\n                        tree {\\n                            name\\n                            description\\n                            projectType\\n                            metaStr\\n                            leaves {\\n                                id\\n                                pid\\n                                label\\n                                layerId\\n                                blLayerId\\n                                layerType\\n                                layerPath\\n                                layerName\\n                                nodeExists\\n                                metaStr\\n                                symbology\\n                                transparency\\n                            }\\n                            branches {\\n                                label\\n                                collapsed\\n                                bid\\n                                pid\\n                            }\\n                            defaultView\\n                            views  {\\n                                id\\n                                name\\n                                description\\n                                layers{\\n                                id\\n                                visible\\n                                }\\n                            }\\n                        }\\n                    \"\n                    : ''), { id: id, program: program }, timeout).then(function (gqlReturn) { return (__assign(__assign({}, gqlReturn), { data: {\n                        project: _1.Project.fromGraphQL(gqlReturn.data.project)\n                    } })); })];\n        });\n    });\n}\nexports.getProject = getProject;\nfunction getUploadUrls(url, jwt, id, fileList, projectType, program, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_7 || (templateObject_7 = __makeTemplateObject([\"\\n            query requestUploadProject($id: ID, $files: [String!], $program: String!, $projectType: String!) {\\n                requestUpload(id: $id, files: $files, program: $program, projectType: $projectType) {\\n                    id\\n                    uploadUrls {\\n                        url\\n                        fields\\n                        origPath\\n                    }\\n                }\\n            }\\n        \"], [\"\\n            query requestUploadProject($id: ID, $files: [String!], $program: String!, $projectType: String!) {\\n                requestUpload(id: $id, files: $files, program: $program, projectType: $projectType) {\\n                    id\\n                    uploadUrls {\\n                        url\\n                        fields\\n                        origPath\\n                    }\\n                }\\n            }\\n        \"]))), { id: id, files: fileList, projectType: projectType, program: program }, timeout)];\n                case 1:\n                    response = _a.sent();\n                    return [2, response];\n            }\n        });\n    });\n}\nexports.getUploadUrls = getUploadUrls;\nfunction downloadFile(url, jwt, projType, program, id, filePath, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_8 || (templateObject_8 = __makeTemplateObject([\"\\n            query downloadFileQuery($program: String!, $id: ID!, $projType: String!, $filePath: String!) {\\n                downloadFile(program: $program, id: $id, projType: $projType, filePath: $filePath) {\\n                    key\\n                    md5\\n                    contentType\\n                    size\\n                    downloadUrl\\n                }\\n            }\\n        \"], [\"\\n            query downloadFileQuery($program: String!, $id: ID!, $projType: String!, $filePath: String!) {\\n                downloadFile(program: $program, id: $id, projType: $projType, filePath: $filePath) {\\n                    key\\n                    md5\\n                    contentType\\n                    size\\n                    downloadUrl\\n                }\\n            }\\n        \"]))), { projType: projType, program: program, id: id, filePath: filePath }, timeout)];\n                case 1:\n                    response = _a.sent();\n                    return [2, response];\n            }\n        });\n    });\n}\nexports.downloadFile = downloadFile;\nfunction getLayerTiles(url, jwt, projType, program, id, layerPath, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var res, retVal;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_9 || (templateObject_9 = __makeTemplateObject([\"\\n            query getLayerTilesQuery($program: String!, $id: ID!, $projType: String!, $layerPath: String!) {\\n                getLayerTiles(program: $program, id: $id, projType: $projType, layerPath: $layerPath) {\\n                    url\\n                    indexUrl\\n                    status\\n                    lastStatus\\n                    error\\n                    rsLayer\\n                    rasterStats\\n                    numFiles\\n                    started\\n                    duration\\n                    format\\n                    bounds\\n                    maxZoom\\n                    minZoom\\n                    originFile {\\n                        lastModified\\n                        etag\\n                        size\\n                        key\\n                    }\\n                }\\n            }\\n        \"], [\"\\n            query getLayerTilesQuery($program: String!, $id: ID!, $projType: String!, $layerPath: String!) {\\n                getLayerTiles(program: $program, id: $id, projType: $projType, layerPath: $layerPath) {\\n                    url\\n                    indexUrl\\n                    status\\n                    lastStatus\\n                    error\\n                    rsLayer\\n                    rasterStats\\n                    numFiles\\n                    started\\n                    duration\\n                    format\\n                    bounds\\n                    maxZoom\\n                    minZoom\\n                    originFile {\\n                        lastModified\\n                        etag\\n                        size\\n                        key\\n                    }\\n                }\\n            }\\n        \"]))), { projType: projType, program: program, id: id, layerPath: layerPath }, timeout)];\n                case 1:\n                    res = _a.sent();\n                    if (!res.data)\n                        return [2, { errors: res.errors }];\n                    else {\n                        retVal = res.data.getLayerTiles;\n                        return [2, {\n                                errors: res.errors,\n                                data: {\n                                    getLayerTiles: __assign(__assign({}, retVal), { started: retVal && retVal.started && parseInt(retVal.started, 10), lastStatus: retVal && retVal.lastStatus && parseInt(retVal.lastStatus, 10), rasterStats: retVal && retVal.rasterStats && JSON.parse(retVal.rasterStats), rsLayer: retVal && retVal.rsLayer && JSON.parse(retVal.rsLayer), originFile: retVal &&\n                                            retVal.originFile && __assign(__assign({}, retVal.originFile), { lastModified: parseInt(retVal.originFile.lastModified, 10) }) })\n                                }\n                            }];\n                    }\n                    return [2];\n            }\n        });\n    });\n}\nexports.getLayerTiles = getLayerTiles;\nfunction getWebSymbology(url, jwt, projType, name, isRaster, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var res;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_10 || (templateObject_10 = __makeTemplateObject([\"\\n            query getWebSymbology($projType: String!, $name: String!, $isRaster: Boolean) {\\n                getWebSymbology(projType: $projType, name: $name, isRaster: $isRaster) {\\n                    name\\n                    status\\n                    legend\\n                    rampType\\n                    mapboxJson\\n                    url\\n                    error\\n                }\\n            }\\n        \"], [\"\\n            query getWebSymbology($projType: String!, $name: String!, $isRaster: Boolean) {\\n                getWebSymbology(projType: $projType, name: $name, isRaster: $isRaster) {\\n                    name\\n                    status\\n                    legend\\n                    rampType\\n                    mapboxJson\\n                    url\\n                    error\\n                }\\n            }\\n        \"]))), { projType: projType, name: name, isRaster: isRaster }, timeout)];\n                case 1:\n                    res = _a.sent();\n                    if (!res.data)\n                        return [2, { errors: res.errors }];\n                    else {\n                        return [2, {\n                                errors: res.errors,\n                                data: {\n                                    getWebSymbology: res.data.getWebSymbology && __assign(__assign({}, res.data.getWebSymbology), { mapboxJson: res.data.getWebSymbology.mapboxJson && JSON.parse(res.data.getWebSymbology.mapboxJson) })\n                                }\n                            }];\n                    }\n                    return [2];\n            }\n        });\n    });\n}\nexports.getWebSymbology = getWebSymbology;\nfunction downloadZipFile(url, jwt, projType, program, id, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_11 || (templateObject_11 = __makeTemplateObject([\"\\n            query downloadZipFileQuery($program: String!, $id: ID!, $projType: String!) {\\n                downloadZip(program: $program, id: $id, projType: $projType) {\\n                    key\\n                    md5\\n                    contentType\\n                    size\\n                    downloadUrl\\n                    pendingSince\\n                }\\n            }\\n        \"], [\"\\n            query downloadZipFileQuery($program: String!, $id: ID!, $projType: String!) {\\n                downloadZip(program: $program, id: $id, projType: $projType) {\\n                    key\\n                    md5\\n                    contentType\\n                    size\\n                    downloadUrl\\n                    pendingSince\\n                }\\n            }\\n        \"]))), { projType: projType, program: program, id: id }, timeout)];\n                case 1:\n                    response = _a.sent();\n                    return [2, response];\n            }\n        });\n    });\n}\nexports.downloadZipFile = downloadZipFile;\nfunction deleteProject(url, jwt, id, program, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_12 || (templateObject_12 = __makeTemplateObject([\"\\n            mutation deleteProject($id: ID!, $program: String!) {\\n                deleteProject(id: $id, program: $program)\\n            }\\n        \"], [\"\\n            mutation deleteProject($id: ID!, $program: String!) {\\n                deleteProject(id: $id, program: $program)\\n            }\\n        \"]))), { program: program, id: id }, timeout)];\n                case 1:\n                    response = _a.sent();\n                    return [2, response];\n            }\n        });\n    });\n}\nexports.deleteProject = deleteProject;\nfunction search(url, jwt, program, params, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var res, _a, nextToken, projects, total;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_13 || (templateObject_13 = __makeTemplateObject([\"\\n            query searchQuery(\\n                $program: String!\\n                $projType: String\\n                $nameStr: String\\n                $metaStr: String\\n                $metaArr: String\\n                $tags: String\\n                $noTags: Boolean\\n                $limit: Int\\n                $nextToken: Int\\n            ) {\\n                search(\\n                    program: $program\\n                    projType: $projType\\n                    nameStr: $nameStr\\n                    metaStr: $metaStr\\n                    metaArr: $metaArr\\n                    tags: $tags\\n                    noTags: $noTags\\n                    limit: $limit\\n                    nextToken: $nextToken\\n                ) {\\n                    projects {\\n                        id\\n                        name\\n                        projType\\n                        program\\n                        tags\\n                        totalSize\\n                        createdBy\\n                        updatedBy\\n                        createdOn\\n                        updatedOn\\n                        meta\\n                        score\\n                    }\\n                    nextToken\\n                    total\\n                }\\n            }\\n        \"], [\"\\n            query searchQuery(\\n                $program: String!\\n                $projType: String\\n                $nameStr: String\\n                $metaStr: String\\n                $metaArr: String\\n                $tags: String\\n                $noTags: Boolean\\n                $limit: Int\\n                $nextToken: Int\\n            ) {\\n                search(\\n                    program: $program\\n                    projType: $projType\\n                    nameStr: $nameStr\\n                    metaStr: $metaStr\\n                    metaArr: $metaArr\\n                    tags: $tags\\n                    noTags: $noTags\\n                    limit: $limit\\n                    nextToken: $nextToken\\n                ) {\\n                    projects {\\n                        id\\n                        name\\n                        projType\\n                        program\\n                        tags\\n                        totalSize\\n                        createdBy\\n                        updatedBy\\n                        createdOn\\n                        updatedOn\\n                        meta\\n                        score\\n                    }\\n                    nextToken\\n                    total\\n                }\\n            }\\n        \"]))), __assign(__assign({}, params), { program: program }), timeout)];\n                case 1:\n                    res = _b.sent();\n                    if (!res.data)\n                        return [2, { errors: res.errors }];\n                    else {\n                        _a = res.data.search || {}, nextToken = _a.nextToken, projects = _a.projects, total = _a.total;\n                        return [2, {\n                                errors: res.errors,\n                                data: {\n                                    search: {\n                                        projects: Array.isArray(projects) ? projects.map(_1.Project.fromGraphQL) : projects,\n                                        nextToken: nextToken,\n                                        total: total\n                                    }\n                                }\n                            }];\n                    }\n                    return [2];\n            }\n        });\n    });\n}\nexports.search = search;\nfunction adminUpdateUserPermissions(url, jwt, id, program, permission, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_14 || (templateObject_14 = __makeTemplateObject([\"\\n            mutation project($id: ID!, $program: String!, $permission: String) {\\n                updateUser(id: $id, program: $program, permission: $permission) {\\n                    email\\n                    name\\n                    picture\\n                    username\\n                    createdOn\\n                    updatedOn\\n                    role\\n                }\\n            }\\n        \"], [\"\\n            mutation project($id: ID!, $program: String!, $permission: String) {\\n                updateUser(id: $id, program: $program, permission: $permission) {\\n                    email\\n                    name\\n                    picture\\n                    username\\n                    createdOn\\n                    updatedOn\\n                    role\\n                }\\n            }\\n        \"]))), { program: program, id: id, permission: permission }, timeout)];\n                case 1:\n                    response = _a.sent();\n                    if (!response.data)\n                        return [2, { errors: response.errors }];\n                    else {\n                        return [2, {\n                                errors: response.errors,\n                                data: {\n                                    updateUser: response.data.updateUser\n                                        ? __assign(__assign({}, response.data.updateUser), { createdOn: parseInt(response.data.updateUser.createdOn, 10), updatedOn: parseInt(response.data.updateUser.updatedOn, 10) }) : null\n                                }\n                            }];\n                    }\n                    return [2];\n            }\n        });\n    });\n}\nexports.adminUpdateUserPermissions = adminUpdateUserPermissions;\nfunction adminGetUsers(url, jwt, program, limit, nextToken, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response, _a, nextTokenNEW, users;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_15 || (templateObject_15 = __makeTemplateObject([\"\\n            query getUsers($program: String!, $limit: Int, $nextToken: String) {\\n                getUsers(program: $program, limit: $limit, nextToken: $nextToken) {\\n                    users {\\n                        email\\n                        name\\n                        picture\\n                        username\\n                        createdOn\\n                        updatedOn\\n                        role\\n                    }\\n                    nextToken\\n                }\\n            }\\n        \"], [\"\\n            query getUsers($program: String!, $limit: Int, $nextToken: String) {\\n                getUsers(program: $program, limit: $limit, nextToken: $nextToken) {\\n                    users {\\n                        email\\n                        name\\n                        picture\\n                        username\\n                        createdOn\\n                        updatedOn\\n                        role\\n                    }\\n                    nextToken\\n                }\\n            }\\n        \"]))), { program: program, limit: limit, nextToken: nextToken }, timeout)];\n                case 1:\n                    response = _b.sent();\n                    if (!response.data)\n                        return [2, { errors: response.errors }];\n                    else {\n                        _a = response.data.getUsers || {}, nextTokenNEW = _a.nextToken, users = _a.users;\n                        return [2, {\n                                errors: response.errors,\n                                data: {\n                                    getUsers: {\n                                        users: Array.isArray(users)\n                                            ? users.map(function (u) { return (__assign(__assign({}, u), { createdOn: parseInt(u.createdOn, 10), updatedOn: parseInt(u.updatedOn, 10) })); })\n                                            : users,\n                                        nextToken: nextTokenNEW\n                                    }\n                                }\n                            }];\n                    }\n                    return [2];\n            }\n        });\n    });\n}\nexports.adminGetUsers = adminGetUsers;\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10, templateObject_11, templateObject_12, templateObject_13, templateObject_14, templateObject_15;\n//# sourceMappingURL=api.js.map","\"use strict\";\nvar __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nvar types_1 = require(\"./types\");\nvar typeDefs = (0, graphql_tag_1.default)(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n    # Check out the cheat sheet:\\n    # https://raw.githubusercontent.com/sogko/graphql-shorthand-notation-cheat-sheet/master/graphql-shorthand-notation-cheat-sheet.png\\n\\n    schema {\\n        query: Query\\n        mutation: Mutation\\n    }\\n\\n    type Query {\\n        # Get a project and associated metadata\\n        auth: AuthParams\\n\\n        project(id: ID!, program: String!): Project\\n        projects(program: String!, projType: String, limit: Int, nextToken: String): PaginatedProjects\\n\\n        program(program: String!): Program\\n        programs: [Program]\\n\\n        downloadFile(program: String!, id: ID!, projType: String!, filePath: String!): FileDownloadMeta\\n\\n        downloadZip(program: String!, id: ID!, projType: String!): FileDownloadMeta\\n\\n        getWebSymbology(projType: String, name: String!, isRaster: Boolean): Symbology\\n        getLayerTiles(program: String!, id: ID!, projType: String!, layerPath: String!): TileService\\n\\n\\n        # Request an upload start. Writes a manifest file on the upload bucket\\n        # and creates upload urls for everything\\n        requestUpload(id: ID, files: [String!], program: String!, projectType: String!): FileUpload\\n\\n        search(\\n            program: String!\\n            projType: String\\n            nameStr: String\\n            metaStr: String\\n            metaArr: String\\n            tags: String\\n            noTags: Boolean\\n            limit: Int\\n            nextToken: Int\\n        ): PaginatedSearchResults\\n\\n        validate(xml: String!, projType: String!, program: String!): Validation\\n\\n        getUsers(program: String!, limit: Int, nextToken: String): PaginatedUsers\\n\\n        projectTree(id: ID!, program: String!, projType: String!): ProjectTree\\n    }\\n\\n    # this schema allows the following mutation:\\n    type Mutation {\\n        # signal a deletion of a project\\n        deleteProject(id: ID!, program: String!): ID!\\n        updateUser(id: ID!, program: String!, permission: String): User\\n        reIndexProject(id: ID!, program: String!, projType: String!): WatcherOutput\\n        queueTileRebuild(id: ID!, program: String!, projType: String!, filePath: String, symbologies: [String]): String\\n    }\\n\\n    type User {\\n        email: String\\n        name: String\\n        picture: String\\n        username: String!\\n        createdOn: String\\n        updatedOn: String\\n        role: String\\n    }\\n\\n    type PaginatedUsers {\\n        users: [User]\\n        nextToken: String\\n    }\\n\\n    type Validation {\\n        result: Boolean\\n        xmlErrors: [String]\\n    }\\n\\n    type AuthParams {\\n        loggedIn: Boolean\\n        userPool: String\\n        clientId: String\\n        region: String\\n        domain: String\\n    }\\n\\n    interface ProjectBase {\\n        id: ID!\\n        name: String\\n        meta: String\\n        tags: String\\n        projType: String\\n        program: String\\n        createdBy: ID!\\n        updatedBy: ID!\\n        createdOn: String!\\n        updatedOn: String!\\n    }\\n\\n    type Project implements ProjectBase {\\n        id: ID!\\n        name: String\\n        meta: String\\n        tags: String\\n        projType: String\\n        totalSize: String\\n        program: String\\n        createdBy: ID!\\n        updatedBy: ID!\\n        createdOn: String!\\n        updatedOn: String!\\n        files: [FileDownloadMeta]\\n        tree: ProjectTree\\n    }\\n\\n    type ProjectSearchResult implements ProjectBase {\\n        id: ID!\\n        name: String\\n        meta: String\\n        tags: String\\n        projType: String\\n        totalSize: String\\n        program: String\\n        createdBy: ID!\\n        updatedBy: ID!\\n        createdOn: String!\\n        updatedOn: String!\\n        score: Float\\n        files: [FileDownloadMeta]\\n    }\\n\\n    # This is mostly just JSON that's stringified\\n    type Product {\\n        id: ID!\\n        name: String!\\n        folder: String\\n        # Stringified JSON Array:\\n        pathArr: String\\n    }\\n    type Group {\\n        id: ID!\\n        name: String!\\n        folder: String\\n    }\\n    type NamedAllow {\\n        id: ID!\\n        name: String!\\n        aliases: String\\n        folder: String\\n    }\\n    type Collection {\\n        id: ID!\\n        name: String!\\n        AllowRegex: [String]\\n        Allow: [NamedAllow]\\n    }\\n    type Program {\\n        name: String\\n        machineName: String\\n        projectXSDs: String\\n        projectFile: String\\n        meta: String\\n        groups: [Group]\\n        collections: [Collection]\\n        products: [Product]\\n        hierarchy: String\\n        role: String\\n    }\\n\\n    type FileDownloadMeta {\\n        key: String!\\n        md5: String!\\n        size: String\\n        contentType: String\\n        downloadUrl: String!\\n        pendingSince: String\\n    }\\n\\n    type FileUpload {\\n        id: ID!\\n        uploadUrls: [UploadUrl]\\n    }\\n\\n    type UploadUrl {\\n        url: String\\n        fields: String\\n        origPath: String\\n    }\\n\\n    type FileUploadMeta {\\n        key: String!\\n        downloadUrl: String!\\n    }\\n\\n    # Series Connection allows us to implement pagination easily\\n    type PaginatedProjects {\\n        projects: [Project]\\n        nextToken: String\\n    }\\n\\n    type PaginatedSearchResults {\\n        projects: [ProjectSearchResult]\\n        nextToken: Int\\n        total: Int\\n    }\\n\\n    type NewProject {\\n        id: ID!\\n    }\\n\\n    \\\"\\\"\\\"\\n    ProjectTreeLayerTypes is an enumeration to help us display layers with the\\n    correct icon and assign them to the right slot\\n    \\\"\\\"\\\"\\n    enum ProjectTreeLayerTypes {\\n        \", \"\\n    }\\n    enum SymbologyStatus {\\n        \", \"\\n    }\\n    enum TilingStatus {\\n        \", \"\\n    }\\n    enum RampType {\\n        \", \"\\n    }\\n\\n    type ProjectTreeBranch {\\n        label: String!\\n        collapsed: Boolean\\n        # Branch ID and parent ID\\n        bid: Int\\n        pid: Int\\n    }\\n    type ProjectTreeLeaf {\\n        id: Int # This is a global ID not an id within a branch\\n        pid: Int\\n        label: String!\\n        layerId: ID\\n        blLayerId: ID\\n        layerType: ProjectTreeLayerTypes!\\n        layerPath: String\\n        layerName: String\\n        nodeExists: Boolean\\n        # This is the path that helps u\\n        metaStr: String\\n        symbology: String\\n        transparency: Int\\n    }\\n\\n    # The project tree comes back as non-recursive list of layers.\\n    # The ProjectTree class will need to parse this into a typescript \\n    # Recursive type\\n    type ProjectTreeViewLayer {\\n        id: ID!\\n        visible: Boolean\\n    }\\n\\n    type ProjectTreeViews {\\n        id: ID!\\n        name: String!\\n        description: String\\n        layers: [ProjectTreeViewLayer]\\n    }\\n\\n    type ProjectTree {\\n        name: String\\n        description: String\\n        projectType: String\\n        metaStr: String\\n        leaves: [ProjectTreeLeaf]\\n        branches: [ProjectTreeBranch]\\n        defaultView: ID\\n        views: [ProjectTreeViews]\\n    }\\n\\n    type TileServiceOriginFile {\\n        lastModified: String\\n        etag: String\\n        size: Int\\n        key: String\\n    }\\n\\n    type TileService {\\n        url: String\\n        indexUrl: String\\n        status: TilingStatus!\\n        lastStatus: String\\n        error: String\\n        rasterStats: String\\n        numFiles: Int\\n        rsLayer: String        # Arbitrary depth so stringify rsLayer\\n        started: String\\n        duration: Float\\n        format: String\\n        bounds: [Float]\\n        maxZoom: Int\\n        minZoom: Int\\n        originFile: TileServiceOriginFile\\n    }\\n    type Symbology {\\n        name: String!\\n        status: SymbologyStatus\\n        legend: [[String]]\\n        rampType: RampType\\n        mapboxJson: String\\n        url: String\\n        error: String\\n    }\\n\\n    # Just a nice convenience type for our lambda invoke methods\\n    type WatcherOutput {\\n        message: String\\n        results: [String]\\n        errors: [String]\\n    }\\n\"], [\"\\n    # Check out the cheat sheet:\\n    # https://raw.githubusercontent.com/sogko/graphql-shorthand-notation-cheat-sheet/master/graphql-shorthand-notation-cheat-sheet.png\\n\\n    schema {\\n        query: Query\\n        mutation: Mutation\\n    }\\n\\n    type Query {\\n        # Get a project and associated metadata\\n        auth: AuthParams\\n\\n        project(id: ID!, program: String!): Project\\n        projects(program: String!, projType: String, limit: Int, nextToken: String): PaginatedProjects\\n\\n        program(program: String!): Program\\n        programs: [Program]\\n\\n        downloadFile(program: String!, id: ID!, projType: String!, filePath: String!): FileDownloadMeta\\n\\n        downloadZip(program: String!, id: ID!, projType: String!): FileDownloadMeta\\n\\n        getWebSymbology(projType: String, name: String!, isRaster: Boolean): Symbology\\n        getLayerTiles(program: String!, id: ID!, projType: String!, layerPath: String!): TileService\\n\\n\\n        # Request an upload start. Writes a manifest file on the upload bucket\\n        # and creates upload urls for everything\\n        requestUpload(id: ID, files: [String!], program: String!, projectType: String!): FileUpload\\n\\n        search(\\n            program: String!\\n            projType: String\\n            nameStr: String\\n            metaStr: String\\n            metaArr: String\\n            tags: String\\n            noTags: Boolean\\n            limit: Int\\n            nextToken: Int\\n        ): PaginatedSearchResults\\n\\n        validate(xml: String!, projType: String!, program: String!): Validation\\n\\n        getUsers(program: String!, limit: Int, nextToken: String): PaginatedUsers\\n\\n        projectTree(id: ID!, program: String!, projType: String!): ProjectTree\\n    }\\n\\n    # this schema allows the following mutation:\\n    type Mutation {\\n        # signal a deletion of a project\\n        deleteProject(id: ID!, program: String!): ID!\\n        updateUser(id: ID!, program: String!, permission: String): User\\n        reIndexProject(id: ID!, program: String!, projType: String!): WatcherOutput\\n        queueTileRebuild(id: ID!, program: String!, projType: String!, filePath: String, symbologies: [String]): String\\n    }\\n\\n    type User {\\n        email: String\\n        name: String\\n        picture: String\\n        username: String!\\n        createdOn: String\\n        updatedOn: String\\n        role: String\\n    }\\n\\n    type PaginatedUsers {\\n        users: [User]\\n        nextToken: String\\n    }\\n\\n    type Validation {\\n        result: Boolean\\n        xmlErrors: [String]\\n    }\\n\\n    type AuthParams {\\n        loggedIn: Boolean\\n        userPool: String\\n        clientId: String\\n        region: String\\n        domain: String\\n    }\\n\\n    interface ProjectBase {\\n        id: ID!\\n        name: String\\n        meta: String\\n        tags: String\\n        projType: String\\n        program: String\\n        createdBy: ID!\\n        updatedBy: ID!\\n        createdOn: String!\\n        updatedOn: String!\\n    }\\n\\n    type Project implements ProjectBase {\\n        id: ID!\\n        name: String\\n        meta: String\\n        tags: String\\n        projType: String\\n        totalSize: String\\n        program: String\\n        createdBy: ID!\\n        updatedBy: ID!\\n        createdOn: String!\\n        updatedOn: String!\\n        files: [FileDownloadMeta]\\n        tree: ProjectTree\\n    }\\n\\n    type ProjectSearchResult implements ProjectBase {\\n        id: ID!\\n        name: String\\n        meta: String\\n        tags: String\\n        projType: String\\n        totalSize: String\\n        program: String\\n        createdBy: ID!\\n        updatedBy: ID!\\n        createdOn: String!\\n        updatedOn: String!\\n        score: Float\\n        files: [FileDownloadMeta]\\n    }\\n\\n    # This is mostly just JSON that's stringified\\n    type Product {\\n        id: ID!\\n        name: String!\\n        folder: String\\n        # Stringified JSON Array:\\n        pathArr: String\\n    }\\n    type Group {\\n        id: ID!\\n        name: String!\\n        folder: String\\n    }\\n    type NamedAllow {\\n        id: ID!\\n        name: String!\\n        aliases: String\\n        folder: String\\n    }\\n    type Collection {\\n        id: ID!\\n        name: String!\\n        AllowRegex: [String]\\n        Allow: [NamedAllow]\\n    }\\n    type Program {\\n        name: String\\n        machineName: String\\n        projectXSDs: String\\n        projectFile: String\\n        meta: String\\n        groups: [Group]\\n        collections: [Collection]\\n        products: [Product]\\n        hierarchy: String\\n        role: String\\n    }\\n\\n    type FileDownloadMeta {\\n        key: String!\\n        md5: String!\\n        size: String\\n        contentType: String\\n        downloadUrl: String!\\n        pendingSince: String\\n    }\\n\\n    type FileUpload {\\n        id: ID!\\n        uploadUrls: [UploadUrl]\\n    }\\n\\n    type UploadUrl {\\n        url: String\\n        fields: String\\n        origPath: String\\n    }\\n\\n    type FileUploadMeta {\\n        key: String!\\n        downloadUrl: String!\\n    }\\n\\n    # Series Connection allows us to implement pagination easily\\n    type PaginatedProjects {\\n        projects: [Project]\\n        nextToken: String\\n    }\\n\\n    type PaginatedSearchResults {\\n        projects: [ProjectSearchResult]\\n        nextToken: Int\\n        total: Int\\n    }\\n\\n    type NewProject {\\n        id: ID!\\n    }\\n\\n    \\\"\\\"\\\"\\n    ProjectTreeLayerTypes is an enumeration to help us display layers with the\\n    correct icon and assign them to the right slot\\n    \\\"\\\"\\\"\\n    enum ProjectTreeLayerTypes {\\n        \", \"\\n    }\\n    enum SymbologyStatus {\\n        \", \"\\n    }\\n    enum TilingStatus {\\n        \", \"\\n    }\\n    enum RampType {\\n        \", \"\\n    }\\n\\n    type ProjectTreeBranch {\\n        label: String!\\n        collapsed: Boolean\\n        # Branch ID and parent ID\\n        bid: Int\\n        pid: Int\\n    }\\n    type ProjectTreeLeaf {\\n        id: Int # This is a global ID not an id within a branch\\n        pid: Int\\n        label: String!\\n        layerId: ID\\n        blLayerId: ID\\n        layerType: ProjectTreeLayerTypes!\\n        layerPath: String\\n        layerName: String\\n        nodeExists: Boolean\\n        # This is the path that helps u\\n        metaStr: String\\n        symbology: String\\n        transparency: Int\\n    }\\n\\n    # The project tree comes back as non-recursive list of layers.\\n    # The ProjectTree class will need to parse this into a typescript \\n    # Recursive type\\n    type ProjectTreeViewLayer {\\n        id: ID!\\n        visible: Boolean\\n    }\\n\\n    type ProjectTreeViews {\\n        id: ID!\\n        name: String!\\n        description: String\\n        layers: [ProjectTreeViewLayer]\\n    }\\n\\n    type ProjectTree {\\n        name: String\\n        description: String\\n        projectType: String\\n        metaStr: String\\n        leaves: [ProjectTreeLeaf]\\n        branches: [ProjectTreeBranch]\\n        defaultView: ID\\n        views: [ProjectTreeViews]\\n    }\\n\\n    type TileServiceOriginFile {\\n        lastModified: String\\n        etag: String\\n        size: Int\\n        key: String\\n    }\\n\\n    type TileService {\\n        url: String\\n        indexUrl: String\\n        status: TilingStatus!\\n        lastStatus: String\\n        error: String\\n        rasterStats: String\\n        numFiles: Int\\n        rsLayer: String        # Arbitrary depth so stringify rsLayer\\n        started: String\\n        duration: Float\\n        format: String\\n        bounds: [Float]\\n        maxZoom: Int\\n        minZoom: Int\\n        originFile: TileServiceOriginFile\\n    }\\n    type Symbology {\\n        name: String!\\n        status: SymbologyStatus\\n        legend: [[String]]\\n        rampType: RampType\\n        mapboxJson: String\\n        url: String\\n        error: String\\n    }\\n\\n    # Just a nice convenience type for our lambda invoke methods\\n    type WatcherOutput {\\n        message: String\\n        results: [String]\\n        errors: [String]\\n    }\\n\"])), Object.values(types_1.ProjectTreeLayerTypes).join('\\n      '), Object.values(types_1.SymbologyStatus).join('\\n      '), Object.values(types_1.TilingStatus).join('\\n      '), Object.values(types_1.RampType).join('\\n      '));\nexports.default = typeDefs;\nvar templateObject_1;\n//# sourceMappingURL=schema.graphql.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Program = void 0;\nvar Program = (function () {\n    function Program(programObj) {\n        Object.assign(this, programObj);\n    }\n    Program.fromGraphQL = function (input) {\n        if (!input)\n            return null;\n        var meta = input.meta ? JSON.parse(input.meta) : {};\n        return new Program(__assign(__assign({}, input), { meta: meta, role: input.role, products: input.products\n                ? input.products.map(function (p) { return (__assign(__assign({}, p), { pathArr: JSON.parse(p.pathArr) })); })\n                : [] }));\n    };\n    return Program;\n}());\nexports.Program = Program;\n//# sourceMappingURL=Program.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Project = void 0;\nvar path_1 = __importDefault(require(\"path\"));\nfunction fileSort(currFolder) {\n    currFolder.sort(function (a, b) {\n        if (a.children && !b.children)\n            return -1;\n        if (!a.children && b.children)\n            return 1;\n        if (a.name.toLowerCase() < b.name.toLowerCase())\n            return -1;\n        if (a.name.toLowerCase() > b.name.toLowerCase())\n            return 1;\n        return 0;\n    });\n}\nvar Project = (function () {\n    function Project(projectObj) {\n        var _this = this;\n        this.treeIzeFilePaths = function () {\n            var root = [];\n            _this.files.forEach(function (_a) {\n                var key = _a.key;\n                var pathArr = key.split('/');\n                if (pathArr.length === 1 && key.indexOf('\\\\') > -1) {\n                    pathArr = key.split('\\\\');\n                }\n                var currFolder = root;\n                var _loop_1 = function () {\n                    var folder = { name: pathArr.shift(), children: [] };\n                    var found = currFolder.find(function (f) { return f.name === folder.name; });\n                    if (found && found.children) {\n                        currFolder = found.children;\n                    }\n                    else {\n                        currFolder.push(folder);\n                        currFolder = folder.children;\n                    }\n                    fileSort(currFolder);\n                };\n                while (pathArr.length > 1) {\n                    _loop_1();\n                }\n                currFolder.push({ name: pathArr[0], path: key });\n            });\n            fileSort(root);\n            return root;\n        };\n        Object.assign(this, projectObj);\n        if (!this.files)\n            this.files = [];\n        if (this.tree && this.tree.leaves) {\n            this.tree.leaves = this.tree.leaves.map(function (lf) { return (__assign(__assign({}, lf), { meta: lf && lf.metaStr ? JSON.parse(lf.metaStr) : {} })); });\n        }\n    }\n    Project.fromGraphQL = function (input) {\n        if (!input)\n            return null;\n        return new Project(__assign(__assign({}, input), { createdOn: parseInt(input.createdOn, 10), updatedOn: parseInt(input.updatedOn, 10), meta: input.meta ? JSON.parse(input.meta) : {}, tags: input.tags ? input.tags.split(',') : [] }));\n    };\n    Project.fromDynamoDB = function (input) {\n        return new Project(__assign(__assign({}, input), { name: input.Name || input.name, meta: input.meta ? Project.parseDynamoMeta(input.meta) : undefined }));\n    };\n    Project.diff = function (left, right) {\n        var different = [];\n        var same = [];\n        if (!right || right.length === 0) {\n            return {\n                leftOnly: left.map(function (f) { return f.key; }),\n                rightOnly: [],\n                different: [],\n                same: []\n            };\n        }\n        else if (!left || left.length === 0) {\n            return {\n                leftOnly: [],\n                rightOnly: right.map(function (f) { return f.key; }),\n                different: [],\n                same: []\n            };\n        }\n        var leftOnly = left\n            .filter(function (leftFile) {\n            var found = right.find(function (rightFile) { return leftFile.key === rightFile.key; });\n            if (found) {\n                if (found.md5 === leftFile.md5)\n                    same.push(leftFile.key);\n                else\n                    different.push(leftFile.key);\n            }\n            return !found;\n        })\n            .map(function (f) { return f.key; });\n        var rightOnly = right\n            .filter(function (rightFile) { return !left.find(function (leftFile) { return rightFile.key === leftFile.key; }); })\n            .map(function (f) { return f.key; });\n        return {\n            leftOnly: leftOnly,\n            rightOnly: rightOnly,\n            different: different,\n            same: same\n        };\n    };\n    Project.getProjectS3Keys = function (program, projectId, projType) {\n        var prefix = path_1.default.join(program.machineName, projType, projectId);\n        var zipKey = \"\".concat(prefix, \".zip\");\n        var projFileKey = path_1.default.join(prefix, program.projectFile);\n        var zipKeyPending = path_1.default.join(program.machineName, projType, \"\".concat(projectId, \".zip.pending\"));\n        var downloadFolderName = \"\".concat([program.machineName, projType, projectId].join('-'));\n        var downloadZipFilename = \"\".concat(downloadFolderName, \".zip\");\n        return {\n            prefix: prefix,\n            zipKey: zipKey,\n            projFileKey: projFileKey,\n            zipKeyPending: zipKeyPending,\n            downloadFolderName: downloadFolderName,\n            downloadZipFilename: downloadZipFilename\n        };\n    };\n    Project.parseDynamoMeta = function (dynObj) {\n        var metavals = Object.keys(dynObj)\n            .filter(function (k) { return k.indexOf('META_') === 0; })\n            .reduce(function (acc, k) {\n            var _a;\n            var newk = k.split('META_')[1];\n            return __assign(__assign({}, acc), (_a = {}, _a[newk] = dynObj[k], _a));\n        }, {});\n        return JSON.stringify(metavals);\n    };\n    Project.parseTagString = function (tagString) {\n        if (!tagString || tagString.trim().length === 0)\n            return [];\n        return tagString\n            .split(',')\n            .map(function (t) { return t.trim(); })\n            .filter(function (t) { return t.length > 0 && t !== 'null' && t !== 'undefined'; });\n    };\n    Project.parseS3Key = function (program, key) {\n        var keyArr = key.split('/');\n        if (keyArr.length < 3)\n            throw new Error('Not a valid project key');\n        var _a = key.split('/'), programMachineName = _a[0], projType = _a[1], id = _a[2];\n        if (program.machineName !== programMachineName) {\n            throw new Error(\"Program passed to parseS3 key \".concat(program.machineName, \" does not correspond to program in key: \").concat(programMachineName));\n        }\n        return Project.getProjectS3Keys(program, id, projType);\n    };\n    Project.parseS3KeyDUMB = function (key) {\n        var keyArr = key.split('/');\n        if (keyArr.length < 3)\n            throw new Error('Not a valid project key');\n        var programMachineName = keyArr[0], projType = keyArr[1], id = keyArr[2];\n        var prefix = path_1.default.join(programMachineName, projType, id);\n        var zipKey = \"\".concat(prefix, \".zip\");\n        return {\n            programMachineName: programMachineName,\n            projType: projType,\n            id: id,\n            zipKey: zipKey,\n            prefix: prefix\n        };\n    };\n    return Project;\n}());\nexports.Project = Project;\n//# sourceMappingURL=Project.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValidationError = void 0;\nvar ValidationError = (function (_super) {\n    __extends(ValidationError, _super);\n    function ValidationError(message, reasons) {\n        var _this = _super.call(this, message) || this;\n        _this.name = _this.constructor.name;\n        _this.reasons = reasons;\n        Error.captureStackTrace(_this, _this.constructor);\n        return _this;\n    }\n    return ValidationError;\n}(Error));\nexports.ValidationError = ValidationError;\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TileServiceJSONClass = void 0;\nvar TileServiceJSONClass = (function () {\n    function TileServiceJSONClass(raw) {\n        Object.assign(this, raw);\n    }\n    return TileServiceJSONClass;\n}());\nexports.TileServiceJSONClass = TileServiceJSONClass;\n//# sourceMappingURL=TileServiceJSONClass.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) { return ({\n    root: {\n        display: 'flex',\n        zIndex: theme.zIndex.drawer + 1\n    },\n    text: {\n        flexGrow: 1\n    },\n    logo: {}\n}); });\nvar Footer = function (_a) {\n    var version = _a.version;\n    var classes = useStyles();\n    return (_jsxs(Container, __assign({ className: classes.root, maxWidth: \"md\" }, { children: [version && (_jsxs(Typography, __assign({ component: \"div\", className: classes.text, color: \"textSecondary\", variant: \"overline\" }, { children: [\"v.\", version] }))), _jsx(\"img\", { className: classes.logo, alt: \"footer\", src: \"\".concat(process.env.PUBLIC_URL, \"/cc-watermarks-riverscapes_orig.png\") })] })));\n};\nexport default Footer;\n//# sourceMappingURL=Footer.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FacebookShareButton, LinkedinShareButton, TwitterShareButton, EmailShareButton, FacebookIcon, TwitterIcon, LinkedinIcon, EmailIcon } from 'react-share';\nvar useStyles = makeStyles(function (theme) { return ({\n    root: {},\n    shareIconTitle: {},\n    shareButtons: {\n        margin: theme.spacing(1, 0),\n        '&>*': {\n            marginRight: theme.spacing(1)\n        }\n    },\n    flexGrow: {\n        flexGrow: 1\n    },\n    dlgTitle: {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.main,\n        display: 'flex'\n    },\n    closeButton: {\n        flex: '0 0'\n    }\n}); });\nvar ShareDialog = function (_a) {\n    var open = _a.open, shareUrl = _a.shareUrl, handleClose = _a.handleClose;\n    var classes = useStyles();\n    return (_jsxs(Dialog, __assign({ open: open, onClose: handleClose, \"aria-labelledby\": \"form-dialog-title\" }, { children: [_jsxs(DialogTitle, __assign({ className: classes.dlgTitle, disableTypography: true }, { children: [_jsx(IconButton, __assign({ color: \"inherit\" }, { children: _jsx(ShareIcon, { className: classes.shareIconTitle }) })), _jsx(Typography, __assign({ variant: \"h4\", className: classes.flexGrow }, { children: \"Share\" })), _jsx(\"div\", __assign({ className: classes.closeButton }, { children: _jsx(IconButton, __assign({ onClick: handleClose, color: \"inherit\" }, { children: _jsx(CloseIcon, {}) })) }))] })), _jsxs(DialogContent, { children: [_jsx(DialogContentText, { children: \"Copy this link and share it using your preferred method.\" }), _jsx(TextField, { value: shareUrl, margin: \"dense\", id: \"name\", variant: \"outlined\", fullWidth: true, inputProps: {\n                            onClick: function (e) {\n                                e.preventDefault();\n                                var target = e.target;\n                                target.select();\n                            }\n                        } }), _jsxs(\"div\", __assign({ className: classes.shareButtons }, { children: [_jsx(EmailShareButton, __assign({ url: shareUrl }, { children: _jsx(EmailIcon, { size: 32, round: true }) })), _jsx(TwitterShareButton, __assign({ url: shareUrl }, { children: _jsx(TwitterIcon, { size: 32, round: true }) })), _jsx(LinkedinShareButton, __assign({ url: shareUrl }, { children: _jsx(LinkedinIcon, { size: 32, round: true }) })), _jsx(FacebookShareButton, __assign({ url: shareUrl, quote: 'title' }, { children: _jsx(FacebookIcon, { size: 32, round: true }) }))] }))] })] })));\n};\nexport default ShareDialog;\n//# sourceMappingURL=ShareDialog.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Link from '@material-ui/core/Link';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) { return ({\n    root: {},\n    title: {\n        margin: 0,\n        display: 'flex',\n        padding: theme.spacing(2),\n        background: theme.palette.warning.main,\n        color: theme.palette.warning.contrastText\n    },\n    actions: {\n        margin: 0,\n        padding: theme.spacing(1)\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    rasterImgsContainer: {\n        display: 'flex',\n        width: '100%',\n        overflow: 'hidden'\n    },\n    rasterImgsContainerCol: {},\n    rasterImgs: {\n        width: '100%',\n        height: 'auto'\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1)\n    }\n}); });\nvar ProvisionalModal = function (_a) {\n    var onClose = _a.onClose, open = _a.open;\n    var classes = useStyles();\n    return (_jsxs(Dialog, __assign({ \"aria-labelledby\": \"customized-dialog-title\", open: open, maxWidth: \"sm\", onClose: onClose }, { children: [_jsxs(DialogTitle, __assign({ disableTypography: true, className: classes.title }, { children: [_jsx(Typography, __assign({ variant: \"h6\", color: \"inherit\" }, { children: \"Provisional Data\" })), _jsx(IconButton, __assign({ \"aria-label\": \"close\", className: classes.closeButton, onClick: onClose, color: \"inherit\" }, { children: _jsx(CloseIcon, {}) }))] })), _jsxs(DialogContent, __assign({ dividers: true }, { children: [_jsxs(Typography, __assign({ paragraph: true }, { children: [\"As of \", _jsx(\"strong\", { children: \"November 2021\" }), \", All projects in the Riverscapes Warehouse are provisional!\"] })), _jsxs(Typography, __assign({ paragraph: true }, { children: [\"You have been granted early-access and are free to explore and download these provisional projects and data. Until Summer 2022, the\", ' ', _jsx(\"strong\", { children: _jsx(Link, __assign({ href: \"https://rave.riverscapes.net/\", target: \"_blank\" }, { children: \"RAVE viewers\" })) }), \", the project reports, and many of the models will be undergoing major development.\"] })), _jsx(Typography, __assign({ paragraph: true }, { children: \"These provisional data are still extremely useful, but many projects have not yet been reviewed and properly quality controlled. We are actively developing a rigorous quality assurance program that will include manual quality control to communicate the quality of the data. The data might contain unreported errors. Users should use caution using data obtained from the riverscapes data warehouse until these QA/QC statuses are fully reported for each project.\" })), _jsx(Typography, __assign({ paragraph: true }, { children: \"Please check back regularly for the latest version of projects and model outputs, as well as improvements. We are also developing versioning reporting, and attribution to make clear what projects were produced from what versions of tools, and who ran the tools, who curated the projects, who performed quality control and who funded or supported that work to make available to others. Thank you for your patience while we work towards a launch.\" })), _jsx(Typography, __assign({ paragraph: true }, { children: _jsx(\"strong\", { children: \"For feature suggestions, questions or to report a bug please visit:\" }) })), _jsx(Typography, __assign({ paragraph: true, style: { textAlign: 'center' } }, { children: _jsx(Button, __assign({ variant: \"outlined\", size: \"large\", href: \"https://github.com/Riverscapes/riverscapes-website/discussions/categories/riverscapes-warehouse\", target: \"_blank\" }, { children: \"Discussion forum\" })) })), _jsxs(Typography, __assign({ paragraph: true, variant: \"caption\" }, { children: [_jsx(\"strong\", { children: \"Note\" }), \": Issues and discussions are open and public but you will need a free Github account to contribute.\"] }))] }))] })));\n};\nexport default ProvisionalModal;\n//# sourceMappingURL=ProvisionalModal.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport ToolTip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport ProvisionalModal from './ProvisionalModal';\nvar useStyles = makeStyles(function (theme) { return ({\n    button: {\n        marginLeft: theme.spacing(1),\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2)\n    }\n}); });\nvar ProvisionalButton = function () {\n    var classes = useStyles();\n    var _a = useState(false), open = _a[0], setOpen = _a[1];\n    return (_jsxs(_Fragment, { children: [_jsx(ToolTip, __assign({ title: \"These are provisional riverscape projects. They are from models and tools undergoing active development, and individual projects are undergoing QA/QC and subject to change. Please treat with caution. No warranty is expressed or implied.\" }, { children: _jsx(Button, __assign({ variant: \"contained\", size: \"small\", color: \"secondary\", className: classes.button, startIcon: _jsx(WarningIcon, {}), onClick: function () { return setOpen(true); } }, { children: \"Provisional Data\" })) })), _jsx(ProvisionalModal, { open: open, onClose: function () { return setOpen(false); } })] }));\n};\nexport default ProvisionalButton;\n//# sourceMappingURL=ProvisionalButton.js.map","import { red, green, blue, orange, purple, cyan, lime, brown } from '@material-ui/core/colors';\nimport log from 'loglevel';\nexport var tagColors = {\n    tagColors: [\n        '#418CF0',\n        '#FCB441',\n        '#E0400A',\n        '#056492',\n        '#BFBFBF',\n        '#1A3B69',\n        '#FFE382',\n        '#129CDD',\n        '#CA6B4B',\n        '#005CDB',\n        '#F3D288',\n        '#506381',\n        '#F1B9A8',\n        '#E0830A',\n        '#7893BE'\n    ]\n};\nvar domain = process.env.REACT_APP_DOMAIN;\nif (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n    domain = 'localhost';\n}\nlog.debug('config: ', { domain: domain });\nexport var isDev = process.env.NODE_ENV && process.env.NODE_ENV === 'development';\nexport var mapConfig = {\n    mapBoxToken: process.env.REACT_APP_MAPBOX_TOKEN\n};\nexport var version = process.env.REACT_APP_VERSION;\nexport var endpoints = {\n    graphql: process.env.REACT_APP_GRAPHQL,\n    cdn: process.env.REACT_APP_CDN\n};\nexport var mandatoryMetaColors = [red, green, blue, orange, purple, cyan, lime, brown];\nexport var redirectUrl = new URL(process.env.PUBLIC_URL.endsWith('/') ? process.env.PUBLIC_URL : process.env.PUBLIC_URL + '/', window.location.origin);\nconsole.log('RedirectUrl', { redirectUrl: redirectUrl, publicUrl: process.env.PUBLIC_URL });\nexport var googleAnalytics = process.env.REACT_APP_GOOGLE_ANALYTICS;\nexport var awsAuth = {\n    Auth: {\n        region: process.env.REACT_APP_AWS_REGION_DEPLOY,\n        userPoolId: process.env.REACT_APP_AWS_USERPOOLID,\n        userPoolWebClientId: process.env.REACT_APP_AWS_USERPOOLWEBCLIENTID,\n        mandatorySignIn: true,\n        oauth: {\n            domain: process.env.REACT_APP_HOSTED_DOMAIN,\n            scope: ['email', 'profile', 'openid'],\n            redirectSignIn: redirectUrl,\n            redirectSignOut: redirectUrl,\n            responseType: 'code'\n        }\n    }\n};\n//# sourceMappingURL=config.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport ShareIcon from '@material-ui/icons/Share';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { WarehouseRoleEnum } from '@riverscapes/common';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport style from './Topbar.style';\nimport ShareDialog from '../modals/ShareDialog';\nimport ProvisionalButton from '../modals/provisional/ProvisionalButton';\nimport { version } from '../config';\nvar useStyles = makeStyles(style);\nexport function isDisabled(prog) {\n    if (prog.meta && prog.meta.access && prog.meta.access === 'PUBLIC')\n        return false;\n    return prog.role === null;\n}\nvar TopBar = function (_a) {\n    var title = _a.title, program = _a.program, programs = _a.programs, signOutHandler = _a.signOutHandler, toolbarItems = _a.toolbarItems, provisional = _a.provisional, shareUrl = _a.shareUrl, history = _a.history;\n    var classes = useStyles();\n    var _b = useState(false), shareOpen = _b[0], setShareOpen = _b[1];\n    var _c = useState(null), mobileMoreAnchorEl = _c[0], setMobileMoreAnchorEl = _c[1];\n    var handleMobileMenuClose = function () { return setMobileMoreAnchorEl(null); };\n    var handleShareMenuOpen = function () { return setShareOpen(true); };\n    var handleNavigate = function (nm) {\n        handleMobileMenuClose();\n        if (history)\n            history.push(\"/\".concat(nm.machineName));\n    };\n    var isAdmin = history && history.location.pathname.indexOf('/admin') > -1;\n    var handleAdmin = function () {\n        if (history && program) {\n            if (isAdmin)\n                history.push(\"/\".concat(program.machineName));\n            else\n                history.push(\"/\".concat(program.machineName, \"/admin\"));\n        }\n    };\n    var handleMobileMenuOpen = function (event) { return setMobileMoreAnchorEl(event.currentTarget); };\n    var renderMobileMenu = (signOutHandler || programs) && (_jsxs(Menu, __assign({ anchorEl: mobileMoreAnchorEl, anchorOrigin: { vertical: 'top', horizontal: 'right' }, keepMounted: true, transformOrigin: { vertical: 'top', horizontal: 'right' }, open: !!mobileMoreAnchorEl, onClose: handleMobileMenuClose }, { children: [programs && (_jsx(MenuItem, { children: _jsx(Typography, __assign({ variant: \"overline\", onClick: function () { return history.push(\"/\"); } }, { children: \"Programs\" })) })), programs && _jsx(Divider, {}), programs &&\n                programs.length > 0 &&\n                programs.map(function (prog, idx) { return (_jsx(MenuItem, __assign({ disabled: (program && program.machineName === prog.machineName) || isDisabled(prog), onClick: function () { return handleNavigate(prog); }, value: prog.machineName }, { children: prog.name }), \"prog-\".concat(idx))); }), signOutHandler && _jsx(Divider, {}), signOutHandler && _jsx(MenuItem, __assign({ onClick: signOutHandler }, { children: \"Log Out\" }))] })));\n    var showAdmin = program && (program.role === WarehouseRoleEnum.Admin || program.role === WarehouseRoleEnum.SuperUser);\n    return (_jsxs(React.Fragment, { children: [_jsx(AppBar, __assign({ position: \"static\", className: classes.appBar }, { children: _jsxs(Toolbar, __assign({ className: classes.root, disableGutters: true }, { children: [_jsx(\"a\", __assign({ href: \"http://riverscapes.net/\" }, { children: _jsx(\"img\", { className: classes.logo, src: 'https://riverscapes.net/assets/images/RiverscapesLogo.png', alt: \"logo\" }) })), program ? (_jsxs(\"div\", { children: [_jsx(Typography, __assign({ variant: \"subtitle1\" }, { children: program.name })), _jsx(Typography, __assign({ variant: \"caption\" }, { children: title }))] })) : (_jsx(Typography, __assign({ variant: \"subtitle1\" }, { children: title }))), _jsx(\"div\", { className: classes.spacer }), version && (_jsxs(Typography, __assign({ component: \"div\", className: classes.text, color: \"inherit\", variant: \"overline\" }, { children: [\"v.\", version] }))), showAdmin && (_jsx(IconButton, __assign({ \"aria-haspopup\": \"true\", onClick: handleAdmin, color: \"inherit\" }, { children: isAdmin ? _jsx(ListAltIcon, {}) : _jsx(SupervisorAccountIcon, {}) }))), toolbarItems, provisional && _jsx(ProvisionalButton, {}), shareUrl && (_jsx(IconButton, __assign({ \"aria-haspopup\": \"true\", onClick: handleShareMenuOpen, color: \"inherit\" }, { children: _jsx(ShareIcon, {}) }))), (signOutHandler || programs) && (_jsx(IconButton, __assign({ \"aria-haspopup\": \"true\", onClick: handleMobileMenuOpen, color: \"inherit\" }, { children: _jsx(MoreIcon, {}) })))] })) })), renderMobileMenu, shareUrl && _jsx(ShareDialog, { open: shareOpen, shareUrl: shareUrl, handleClose: function () { return setShareOpen(false); } })] }));\n};\nexport default TopBar;\n//# sourceMappingURL=Topbar.js.map","import { alpha } from '@material-ui/core/styles';\nexport default (function (theme) {\n    var _a, _b, _c, _d;\n    return ({\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1\n        },\n        root: {\n            display: 'flex',\n            alignItems: 'center',\n            width: '100%',\n            padding: theme.spacing(0, 1),\n            textShadow: '3px 3px 3px rgba(0,0,0,0.7)',\n            backgroundImage: \"url(\".concat(process.env.PUBLIC_URL, \"/HeaderBackground.png)\"),\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: '0% 50%',\n            backgroundSize: 'cover',\n            backgroundColor: '#444444'\n        },\n        logo: {\n            height: 40,\n            width: 40,\n            marginRight: theme.spacing(2)\n        },\n        programChooser: {\n            margin: theme.spacing(0, 1),\n            color: theme.palette.primary.contrastText,\n            '& svg': {\n                color: theme.palette.primary.contrastText\n            },\n            '&:before': {\n                borderColor: theme.palette.primary.contrastText\n            },\n            '&:after': {\n                borderColor: theme.palette.primary.contrastText\n            }\n        },\n        transparent: {\n            backgroundColor: 'transparent',\n            background: 'none',\n            color: theme.palette.text.primary\n        },\n        search: (_a = {\n                position: 'relative',\n                borderRadius: theme.shape.borderRadius,\n                backgroundColor: alpha(theme.palette.common.white, 0.15),\n                '&:hover': {\n                    backgroundColor: alpha(theme.palette.common.white, 0.25)\n                },\n                marginRight: theme.spacing(2),\n                marginLeft: 0,\n                width: '100%',\n                flexGrow: 1\n            },\n            _a[theme.breakpoints.up('sm')] = {\n                marginLeft: theme.spacing(3),\n                width: 'auto'\n            },\n            _a),\n        searchIcon: {\n            width: theme.spacing(7),\n            height: '100%',\n            position: 'absolute',\n            pointerEvents: 'none',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n        },\n        inputRoot: {\n            color: 'inherit'\n        },\n        spacer: {\n            flexGrow: 1\n        },\n        inputInput: (_b = {\n                padding: theme.spacing(1, 1, 1, 7),\n                transition: theme.transitions.create('width'),\n                width: '100%'\n            },\n            _b[theme.breakpoints.up('sm')] = {\n                width: 200\n            },\n            _b),\n        sectionDesktop: (_c = {\n                display: 'none'\n            },\n            _c[theme.breakpoints.up('sm')] = {\n                display: 'flex',\n                flexGrow: 1\n            },\n            _c),\n        sectionMobile: (_d = {\n                display: 'flex',\n                flexGrow: 1\n            },\n            _d[theme.breakpoints.up('sm')] = {\n                display: 'none'\n            },\n            _d)\n    });\n});\n//# sourceMappingURL=Topbar.style.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function () { return ({\n    root: {\n        '& *': {\n            cursor: 'pointer'\n        }\n    },\n    disabledButton: {\n        opacity: 0.5\n    }\n}); });\nvar DownloadZipBtn = function (_a) {\n    var title = _a.title, project = _a.project, pendingSince = _a.pendingSince, btnProps = _a.btnProps, downloadZipFile = _a.downloadZipFile;\n    var classes = useStyles();\n    var btnRender = (_jsx(Tooltip, __assign({ title: _jsxs(React.Fragment, { children: [_jsx(Typography, __assign({ variant: \"body1\" }, { children: \"Download Project Zip\" })), _jsx(Typography, __assign({ variant: \"caption\", paragraph: true }, { children: \"Click to download this project as a single zip file\" })), _jsx(Typography, __assign({ variant: \"caption\", paragraph: true }, { children: \"There may be a delay if the zip file needs to be built.\" }))] }) }, { children: title ? (_jsx(Button, __assign({ variant: \"contained\", color: \"primary\", onClick: function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n                downloadZipFile(project);\n            }, startIcon: _jsx(CloudDownloadIcon, {}) }, btnProps, { children: title || 'ZIP' }))) : (_jsx(IconButton, __assign({ color: \"primary\", onClick: function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n                downloadZipFile(project);\n            } }, btnProps, { children: _jsx(CloudDownloadIcon, {}) }))) })));\n    if (pendingSince) {\n        btnRender = (_jsx(Tooltip, __assign({ title: _jsxs(React.Fragment, { children: [_jsx(Typography, __assign({ variant: \"body1\" }, { children: \"Preparing Zip\" })), _jsx(Typography, __assign({ variant: \"caption\", paragraph: true }, { children: \"The warehouse is building your zip file for you.\" })), _jsxs(Typography, __assign({ variant: \"caption\", paragraph: true }, { children: [\"started \", moment(pendingSince, 'x').fromNow()] }))] }) }, { children: _jsx(Button, __assign({ variant: \"outlined\", disableFocusRipple: true, disableRipple: true, disableTouchRipple: true, color: \"primary\", onClick: function (e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }, className: classes.disabledButton, startIcon: _jsx(CircularProgress, { color: btnProps && btnProps.color && btnProps.color === 'secondary' ? 'primary' : 'secondary', size: 24, thickness: 6 }) }, btnProps, { children: title || 'ZIP' })) })));\n    }\n    return _jsx(\"div\", __assign({ className: classes.root }, { children: btnRender }));\n};\nexport default DownloadZipBtn;\n//# sourceMappingURL=DownloadZipBtn.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { googleAnalytics } from '..';\nvar useStyles = makeStyles(function (theme) { return ({\n    root: {},\n    whBtnLogo: { height: 20, width: 20, marginRight: theme.spacing(1) },\n    whButton: {\n        maxWidth: 300\n    }\n}); });\nvar WarehouseButton = function (_a) {\n    var title = _a.title, href = _a.href, stay = _a.stay;\n    var classes = useStyles();\n    return (_jsxs(Button, __assign({ className: classes.whButton, target: stay ? undefined : '_blank', variant: \"contained\", href: href, onClick: function () {\n            googleAnalytics.event('webrave', 'open_warehouse', 'open_warehouse');\n        }, color: \"secondary\", fullWidth: true }, { children: [_jsx(\"img\", { className: classes.whBtnLogo, src: 'https://riverscapes.net/assets/images/RiverscapesLogo.png', alt: \"logo\" }), title] })));\n};\nexport default WarehouseButton;\n//# sourceMappingURL=WarehouseButton.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport PublicIcon from '@material-ui/icons/Public';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { googleAnalytics } from '..';\nvar useStyles = makeStyles(function () { return ({\n    root: {\n        '& *': {\n            cursor: 'pointer'\n        }\n    },\n    disabledButton: {\n        opacity: 0.5\n    }\n}); });\nvar WebRaveBtn = function (_a) {\n    var title = _a.title, project = _a.project, url = _a.url, btnProps = _a.btnProps;\n    var classes = useStyles();\n    if (!url || url.length === 0)\n        return null;\n    var webRaveUrl = \"\".concat(url, \"#/\").concat(project.program, \"/\").concat(project.id);\n    var btnRender = (_jsx(Tooltip, __assign({ title: _jsxs(React.Fragment, { children: [_jsx(Typography, __assign({ variant: \"body1\" }, { children: \"Explore using map\" })), _jsx(Typography, __assign({ variant: \"caption\", paragraph: true }, { children: \"Explore this data set using an online map\" }))] }) }, { children: title ? (_jsx(Button, __assign({ variant: \"contained\", onClick: function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n                googleAnalytics.event('warehouse', 'open_webrave', 'open_webrave');\n                window.open(webRaveUrl);\n            }, color: \"primary\", startIcon: _jsx(PublicIcon, {}) }, btnProps, { children: title || 'MAP' }))) : (_jsx(IconButton, __assign({ color: \"primary\", onClick: function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n                googleAnalytics.event('warehouse', 'open_webrave', 'open_webrave');\n                window.open(webRaveUrl);\n            } }, btnProps, { children: _jsx(PublicIcon, {}) }))) })));\n    return _jsx(\"div\", __assign({ className: classes.root }, { children: btnRender }));\n};\nexport default WebRaveBtn;\n//# sourceMappingURL=WebRaveBtn.js.map","var _a;\nimport { WarehouseRoleEnum } from '@riverscapes/common';\nimport { red, pink, blue, lime } from '@material-ui/core/colors';\nexport var accessColors = (_a = {},\n    _a[WarehouseRoleEnum.SuperUser] = pink,\n    _a[WarehouseRoleEnum.Admin] = red,\n    _a[WarehouseRoleEnum.Participant] = lime,\n    _a[WarehouseRoleEnum.Observer] = blue,\n    _a);\n//# sourceMappingURL=constants.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Chip from '@material-ui/core/Chip';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport FaceIcon from '@material-ui/icons/Face';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { accessColors } from '../constants';\nvar useStyles = makeStyles(function (theme) { return ({\n    rootContainer: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden'\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: theme.spacing(2, 4, 4, 4),\n        maxHeight: '85%',\n        overflow: 'hidden'\n    },\n    instruct: {\n        flex: '0 0'\n    },\n    progList: {\n        border: '1px solid #cccccc',\n        flex: '1 1',\n        overflowY: 'scroll'\n    },\n    logoContainer: {\n        flex: '0 0',\n        padding: theme.spacing(2),\n        textAlign: 'center'\n    },\n    scrollHint: {\n        width: '100%',\n        height: 30,\n        marginTop: -30,\n        display: 'block',\n        background: 'linear-gradient(0deg, rgba(255,255,255,1) 0%, rgba(255,255,255,0) 100%)',\n        zIndex: 1000\n    },\n    logo: {},\n    accessChip: __assign({}, Object.keys(accessColors).reduce(function (acc, ack) {\n        var _a;\n        return (__assign(__assign({}, acc), (_a = {}, _a[\"&.access_\".concat(ack)] = {\n            color: theme.palette.getContrastText(accessColors[ack][500]),\n            background: accessColors[ack][500]\n        }, _a)));\n    }, {}))\n}); });\nexport function isDisabled(prog) {\n    if (prog.meta && prog.meta.access && prog.meta.access === 'PUBLIC')\n        return false;\n    return prog.role === null;\n}\nvar ProgramChooser = function (_a) {\n    var programs = _a.programs, history = _a.history, navigate = _a.navigate;\n    var classes = useStyles();\n    return (_jsxs(\"div\", __assign({ className: classes.rootContainer }, { children: [_jsx(\"div\", { className: classes.spacer }), _jsxs(Paper, __assign({ className: classes.root, elevation: 1 }, { children: [_jsx(\"div\", __assign({ className: classes.logoContainer }, { children: _jsx(\"img\", { className: classes.logo, src: process.env.PUBLIC_URL + '/RiverscapesLogo.png', alt: \"logo\" }) })), _jsx(Typography, __assign({ variant: \"h5\", className: classes.instruct }, { children: \"Choose a program:\" })), _jsx(List, __assign({ className: classes.progList }, { children: programs &&\n                            programs.map(function (p, idx) {\n                                var chip = (_jsx(Chip, { icon: _jsx(FaceIcon, {}), className: clsx(classes.accessChip, \"access_\".concat(p.role)), label: p.role || 'Observer', color: \"primary\" }));\n                                var disabled = isDisabled(p);\n                                if (disabled)\n                                    chip = _jsx(Chip, { label: \"No Access\", color: \"default\" });\n                                return (_jsxs(ListItem, __assign({ disabled: disabled, button: true, divider: true, onClick: function () { return navigate(history, p); } }, { children: [_jsx(ListItemAvatar, { children: _jsx(Avatar, __assign({ alt: \"programname\" }, { children: p.name.substr(0, 1) })) }), _jsx(ListItemText, { primary: p.name, secondary: p.meta.description }), chip] }), \"progKey-\".concat(idx)));\n                            }) })), _jsx(\"div\", { className: classes.scrollHint }), _jsxs(Typography, __assign({ paragraph: true, variant: \"caption\", className: classes.instruct }, { children: [\"If there are programs labeled\", ' ', _jsx(Chip, { label: \"No Access\", component: \"span\", color: \"default\", size: \"small\" }), \" and you think you should be able to see them please contact your program administrator.\"] }))] })), _jsx(\"div\", { className: classes.spacer })] })));\n};\nexport default ProgramChooser;\n//# sourceMappingURL=ProgramChooser.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport filesize from 'filesize';\nimport style from './RecurseTreeItem.style';\nvar useStyles = makeStyles(style);\nvar RecurseTreeItem = function (_a) {\n    var item = _a.item, fileDict = _a.fileDict, keyStr = _a.keyStr, project = _a.project, fileClick = _a.fileClick;\n    var classes = useStyles();\n    if (item.children) {\n        var childNodes = item.children.map(function (c, idx) { return (_jsx(RecurseTreeItem, { keyStr: \"\".concat(keyStr, \"-l\").concat(idx), item: c, fileDict: fileDict, project: project, fileClick: fileClick }, \"\".concat(keyStr, \"-l\").concat(idx))); });\n        return (_jsx(TreeItem, __assign({ nodeId: keyStr, className: classes.treeFolder, classes: {\n                content: classes.treeFolderContent\n            }, label: _jsx(\"div\", __assign({ className: classes.treeFolderText }, { children: item.name })) }, { children: childNodes })));\n    }\n    else {\n        var lookup = item.path ? fileDict[item.path] : { size: '0' };\n        return (_jsx(TreeItem, { nodeId: keyStr, className: classes.treeFile, classes: {\n                root: classes.treeItemRoot,\n                content: classes.treeFileContent\n            }, label: _jsxs(\"div\", __assign({ className: classes.treeItemContainer }, { children: [_jsxs(\"div\", __assign({ className: classes.treeItemText }, { children: [_jsx(Typography, __assign({ color: \"textPrimary\", component: \"div\", variant: \"body1\" }, { children: item.name })), _jsxs(Typography, __assign({ color: \"textSecondary\", component: \"div\", variant: \"caption\" }, { children: [filesize(parseInt(lookup.size, 10)), \" --\", ' ', _jsx(\"span\", __assign({ className: classes.allowSelect }, { children: item.path }))] }))] })), _jsx(Tooltip, __assign({ title: _jsx(React.Fragment, { children: _jsxs(Typography, __assign({ variant: \"body1\" }, { children: [\"Download: \", item.path] })) }) }, { children: _jsx(IconButton, __assign({ disableRipple: true, className: classes.treeItemIcon, color: \"primary\", onClick: function () { return fileClick(project, item.path); } }, { children: _jsx(CloudDownloadIcon, {}) })) }))] })), endIcon: lookup.icon }));\n    }\n};\nexport default RecurseTreeItem;\n//# sourceMappingURL=RecurseTreeItem.js.map","export default (function (theme) { return ({\n    treeItemRoot: {\n        backgroundColor: theme.palette.background.paper,\n        '&:nth-child(odd)': {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    treeItemContainer: {\n        display: 'flex'\n    },\n    treeItemText: {\n        marginLeft: theme.spacing(1),\n        padding: theme.spacing(1),\n        flexGrow: 1\n    },\n    treeItemIcon: {},\n    treeFile: {},\n    treeFileContent: {\n        borderBottom: \"1px solid \".concat(theme.palette.grey[100])\n    },\n    treeFolder: {},\n    treeFolderContent: {},\n    treeFolderText: {\n        padding: theme.spacing(1)\n    },\n    allowSelect: {\n        '&,& *': {\n            userSelect: 'text',\n            cursor: 'auto'\n        }\n    }\n}); });\n//# sourceMappingURL=RecurseTreeItem.style.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Popover from '@material-ui/core/Popover';\nimport ShareIcon from '@material-ui/icons/Share';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport Terrain from '@material-ui/icons/Terrain';\nimport Assignment from '@material-ui/icons/Assignment';\nimport TreeView from '@material-ui/lab/TreeView';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport WarehouseTags from '../../misc/WarehouseTags';\nimport clsx from 'clsx';\nimport filesize from 'filesize';\nimport moment from 'moment';\nimport WebRaveBtn from '../../misc/WebRaveBtn';\nimport DownloadZipBtn from '../../misc/DownloadZipBtn';\nimport ShareDialog from '../../modals/ShareDialog';\nimport RecurseTreeItem from './RecurseTreeItem';\nimport style from './ProjectModal.style';\nvar useStyles = makeStyles(style);\nvar ProjectModal = function (_a) {\n    var onClose = _a.onClose, project = _a.project, downloadFile = _a.downloadFile, webRaveUrl = _a.webRaveUrl, program = _a.program, showFileTree = _a.showFileTree, pendingZips = _a.pendingZips, downloadZipFile = _a.downloadZipFile;\n    var classes = useStyles();\n    var _b = useState(null), popOver = _b[0], setPopover = _b[1];\n    var _c = useState(false), shareOpen = _c[0], setShareOpen = _c[1];\n    var pendingSince = pendingZips[project.id];\n    var iconMapping = [\n        { pattern: /.*\\.(png|gif|jpg|jpeg)$/i, icon: _jsx(PhotoIcon, { className: classes.photoIcon }), classStr: 'photo' },\n        { pattern: /.*\\.(tif|img|shp)$/i, icon: _jsx(Terrain, { className: classes.TerrainIcon }), classStr: 'terrain' },\n        {\n            pattern: /.*\\.(csv|pdf|doc)$/i,\n            icon: _jsx(Assignment, { className: classes.documentIcon }),\n            classStr: 'assignment'\n        }\n    ];\n    var files = (project.files || []).reduce(function (acc, file) {\n        var _a;\n        var found = iconMapping.find(function (_a) {\n            var pattern = _a.pattern;\n            return file.key.match(pattern);\n        });\n        return __assign(__assign({}, acc), (_a = {}, _a[file.key] = __assign(__assign({}, file), { icon: found ? found.icon : _jsx(InsertDriveFileIcon, { className: classes.normalIcon }), classStr: found ? found.classStr : 'normalIcon' }), _a));\n    }, {});\n    var fileTree = project.treeIzeFilePaths();\n    var pType = program.products.find(function (p) { return p.id === project.projType; });\n    var pTypeName = pType ? pType.name : 'Unknown';\n    var descriptionTag = Object.keys(project.meta).find(function (k) { return k.toLowerCase() === 'description'; });\n    return (_jsxs(Dialog, __assign({ onClose: onClose, open: true, maxWidth: \"md\", fullWidth: true, className: classes.root, classes: {\n            scrollPaper: classes.scrollPaper\n        } }, { children: [_jsx(ShareDialog, { open: shareOpen, shareUrl: window.location.href, handleClose: function () { return setShareOpen(false); } }), _jsxs(DialogTitle, __assign({ disableTypography: true, className: classes.titlebar }, { children: [_jsxs(\"div\", __assign({ className: classes.titlebarLeft }, { children: [_jsx(Tooltip, __assign({ title: _jsx(Typography, __assign({ variant: \"body1\" }, { children: project.name })) }, { children: _jsx(Typography, __assign({ variant: \"h5\", component: \"div\", className: clsx(classes.name, classes.allowSelect) }, { children: project.name })) })), _jsx(\"div\", __assign({ className: classes.subHeader }, { children: _jsx(\"div\", __assign({ className: classes.flexGrow }, { children: _jsxs(Typography, __assign({ variant: \"caption\", color: \"inherit\", component: \"div\" }, { children: [\"ID: \", _jsx(\"span\", __assign({ className: classes.allowSelect }, { children: project.id }))] })) })) }))] })), onClose ? (_jsx(\"div\", { children: _jsx(IconButton, __assign({ \"aria-label\": \"close\", className: classes.closeButton, onClick: onClose, size: \"small\" }, { children: _jsx(CloseIcon, {}) })) })) : null] })), _jsxs(DialogContent, __assign({ dividers: true }, { children: [_jsxs(\"div\", __assign({ className: clsx(classes.allowSelect) }, { children: [_jsxs(\"div\", __assign({ className: classes.header }, { children: [_jsxs(\"div\", __assign({ className: classes.headerLeft }, { children: [_jsxs(Typography, __assign({ variant: \"caption\", component: \"div\", color: \"inherit\" }, { children: [_jsx(\"strong\", { children: \"Project Type\" }), \": \", _jsx(\"strong\", { children: pTypeName }), \" (\", pType && pType.id, \")\"] })), _jsxs(Typography, __assign({ variant: \"caption\", component: \"div\", color: \"inherit\" }, { children: [_jsx(\"strong\", { children: \"Created\" }), \": \", moment(project.createdOn, 'x').fromNow(), \" (\", moment(project.createdOn, 'x').format('lll'), \")\"] })), _jsxs(Typography, __assign({ variant: \"caption\", component: \"div\", color: \"inherit\" }, { children: [_jsx(\"strong\", { children: \"Updated\" }), \": \", moment(project.updatedOn, 'x').fromNow(), \" (\", moment(project.updatedOn, 'x').format('lll'), \")\"] })), _jsxs(Typography, __assign({ variant: \"caption\", component: \"div\", color: \"inherit\" }, { children: [_jsx(\"strong\", { children: \"Warehouse tags: \" }), _jsx(WarehouseTags, { tags: project.tags })] })), _jsxs(Typography, __assign({ variant: \"caption\", component: \"div\", color: \"inherit\" }, { children: [_jsx(\"strong\", { children: \"Size (Unzipped)\" }), \":\", ' ', project.totalSize && project.totalSize > -1\n                                                        ? filesize(project.totalSize)\n                                                        : 'Not available'] }))] })), _jsx(\"div\", __assign({ className: classes.headerRight }, { children: _jsxs(ButtonGroup, __assign({ color: \"primary\" }, { children: [webRaveUrl && (_jsx(WebRaveBtn, __assign({ title: \"Map\", url: webRaveUrl }, { project: project }, { btnProps: {\n                                                        variant: 'text'\n                                                    } }))), _jsx(Button, __assign({ variant: \"text\", onClick: function () { return setShareOpen(true); }, style: {\n                                                        cursor: 'pointer'\n                                                    }, startIcon: _jsx(ShareIcon, {}) }, { children: \"Share\" })), _jsx(DownloadZipBtn, __assign({ title: \"Download\" }, { project: project, pendingSince: pendingSince, downloadZipFile: downloadZipFile }, { btnProps: {\n                                                        variant: 'text'\n                                                    } }))] })) }))] })), descriptionTag && (_jsxs(\"div\", { children: [_jsx(Typography, __assign({ className: classes.title, color: \"inherit\", component: \"div\", variant: \"subtitle1\" }, { children: \"Description\" })), _jsx(Typography, __assign({ color: \"textSecondary\", variant: \"body2\" }, { children: project.meta[descriptionTag] }))] })), _jsx(Typography, __assign({ className: classes.title, color: \"inherit\", variant: \"subtitle1\" }, { children: \"Metadata\" })), _jsx(Divider, {}), _jsx(\"div\", __assign({ className: classes.metaDisplay }, { children: Object.keys(project.meta)\n                                    .filter(function (k) { return ['description'].indexOf(k.toLowerCase()) === -1; })\n                                    .map(function (metaKey, idk) {\n                                    var textComponent = project.meta[metaKey];\n                                    if (project.meta[metaKey].indexOf('http') === 0) {\n                                        textComponent = (_jsx(Link, __assign({ href: project.meta[metaKey], target: \"_blank\" }, { children: project.meta[metaKey] })));\n                                    }\n                                    return (_jsx(Tooltip, __assign({ placement: \"bottom\", title: _jsxs(React.Fragment, { children: [_jsx(Typography, __assign({ variant: \"body1\", component: \"div\" }, { children: _jsx(\"strong\", { children: metaKey }) })), _jsx(Typography, __assign({ variant: \"body2\", component: \"div\" }, { children: textComponent }))] }) }, { children: _jsxs(\"div\", __assign({ className: classes.metaDisplayItem }, { children: [_jsx(Typography, __assign({ variant: \"caption\", component: \"div\", color: \"textPrimary\" }, { children: _jsx(\"strong\", { children: metaKey }) })), _jsx(Typography, __assign({ variant: \"caption\", component: \"div\", color: \"textPrimary\" }, { children: textComponent }))] })) }), \"result-\".concat(idk)));\n                                }) }))] })), showFileTree && (_jsxs(_Fragment, { children: [_jsx(Typography, __assign({ className: classes.title, color: \"inherit\", variant: \"subtitle1\" }, { children: \"Files\" })), _jsx(Divider, {}), _jsx(TreeView, __assign({ className: classes.treeRoot, defaultExpanded: ['1'], disableSelection: true, defaultCollapseIcon: _jsx(ExpandMoreIcon, { color: \"inherit\" }), defaultExpandIcon: _jsx(ChevronRightIcon, { color: \"inherit\" }) }, { children: fileTree.map(function (ft, idx) { return (_jsx(RecurseTreeItem, { project: project, keyStr: \"treeNode-\".concat(idx), item: ft, fileDict: files, fileClick: downloadFile }, \"treeNode-\".concat(idx))); }) }))] }))] })), _jsx(Popover, __assign({ open: Boolean(popOver), anchorEl: popOver ? popOver[0] : null, onClose: function () { return setPopover(null); }, anchorOrigin: {\n                    vertical: 'bottom',\n                    horizontal: 'center'\n                }, transformOrigin: {\n                    vertical: 'top',\n                    horizontal: 'center'\n                } }, { children: _jsx(Typography, __assign({ className: classes.popOver }, { children: popOver ? popOver[1] : '' })) }))] })));\n};\nexport default ProjectModal;\n//# sourceMappingURL=ProjectModal.js.map","import { red, purple, green } from '@material-ui/core/colors';\nexport default (function (theme) { return ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2)\n    },\n    allowSelect: {\n        '&,& *': {\n            userSelect: 'text',\n            cursor: 'auto'\n        }\n    },\n    scrollPaper: {\n        alignItems: 'baseline'\n    },\n    name: {\n        maxWidth: '95%',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        marginBottom: theme.spacing(1)\n    },\n    titlebar: {\n        backgroundColor: '#444444',\n        color: theme.palette.primary.contrastText,\n        display: 'flex'\n    },\n    titlebarLeft: {\n        flexGrow: 1\n    },\n    header: {\n        display: 'flex'\n    },\n    headerLeft: {\n        flex: '1 1 80%'\n    },\n    headerRight: {\n        textAlign: 'right',\n        flex: '1 0'\n    },\n    flexGrow: {\n        flexGrow: 1\n    },\n    closeButton: {\n        flex: '0 0',\n        color: theme.palette.grey[500]\n    },\n    normalIcon: {},\n    documentIcon: {\n        color: red[500]\n    },\n    photoIcon: {\n        color: purple[500]\n    },\n    TerrainIcon: {\n        color: green[500]\n    },\n    metaDisplay: {\n        display: 'flex',\n        flexFlow: 'wrap'\n    },\n    title: {\n        marginTop: theme.spacing(2)\n    },\n    treeItemContainer: {\n        display: 'flex'\n    },\n    treeItemText: {\n        marginLeft: theme.spacing(1),\n        flexGrow: 1\n    },\n    treeItemIcon: {},\n    treeFileContent: {\n        borderBottom: \"1px solid \".concat(theme.palette.grey[100]),\n        padding: theme.spacing(1)\n    },\n    treeFolder: {},\n    treeFolderContent: {\n        padding: theme.spacing(1)\n    },\n    metaDisplayItem: {\n        flex: '1 1',\n        borderRadius: theme.spacing(1),\n        backgroundColor: '#fafafa',\n        margin: theme.spacing(1, 0.5),\n        border: '#1px solid #e7e7e7',\n        padding: theme.spacing(1),\n        maxWidth: '25%',\n        minWidth: 150,\n        '&>*': {\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis'\n        }\n    },\n    prodChip: {\n        marginLeft: theme.spacing(1),\n        backgroundColor: theme.palette.primary.light,\n        color: 'white'\n    },\n    popOver: {\n        padding: theme.spacing(2)\n    },\n    subHeader: {\n        width: '100%',\n        display: 'flex'\n    }\n}); });\n//# sourceMappingURL=ProjectModal.style.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) { return ({\n    rootContainer: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    root: {\n        padding: theme.spacing(2, 4, 4, 4)\n    },\n    logoContainer: {\n        padding: theme.spacing(2),\n        textAlign: 'center'\n    },\n    logo: {}\n}); });\nvar LoginScreen = function (_a) {\n    var title = _a.title, signIn = _a.signIn;\n    var classes = useStyles();\n    return (_jsxs(Container, __assign({ className: classes.rootContainer, maxWidth: \"md\" }, { children: [_jsx(\"div\", { className: classes.spacer }), _jsxs(Paper, __assign({ className: classes.root }, { children: [_jsx(\"div\", __assign({ className: classes.logoContainer }, { children: _jsx(\"img\", { className: classes.logo, src: process.env.PUBLIC_URL + '/RiverscapesLogo.png', alt: \"logo\" }) })), _jsxs(Typography, __assign({ paragraph: true, variant: \"body1\" }, { children: [\"Welcome to \", _jsx(\"strong\", { children: title }), \". Please click the button below to log in.\"] })), _jsx(Typography, __assign({ paragraph: true, variant: \"body1\" }, { children: \"If you don't have an account you will be prompted to use your Google account or create a new account using another email address.\" })), _jsx(Button, __assign({ variant: \"contained\", onClick: signIn, color: \"primary\", fullWidth: true, size: \"large\", startIcon: _jsx(LockOpenIcon, {}) }, { children: \"Sign In\" }))] })), _jsx(\"div\", { className: classes.spacer })] })));\n};\nexport default LoginScreen;\n//# sourceMappingURL=LoginScreen.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Typography from '@material-ui/core/Typography';\nvar useStyles = makeStyles(function (theme) { return ({\n    root: {\n        marginLeft: theme.spacing(1)\n    },\n    titlebar: {\n        display: 'flex',\n        background: theme.palette.error.main,\n        color: theme.palette.error.contrastText\n    },\n    closeButton: {},\n    name: {\n        paddingLeft: theme.spacing(1),\n        flexGrow: 1\n    }\n}); });\nvar NotAllowedModal = function (_a) {\n    var onClose = _a.onClose, program = _a.program;\n    var classes = useStyles();\n    return (_jsxs(Dialog, __assign({ onClose: onClose, open: true, maxWidth: \"xs\", fullWidth: true, className: classes.root, classes: {} }, { children: [_jsxs(DialogTitle, __assign({ disableTypography: true, className: classes.titlebar }, { children: [_jsx(ErrorIcon, { color: \"inherit\" }), _jsx(Typography, __assign({ className: classes.name }, { children: \"Access Denied\" }))] })), _jsx(DialogContent, __assign({ dividers: true }, { children: program ? (_jsxs(Typography, __assign({ variant: \"body1\", component: \"div\", color: \"inherit\" }, { children: [\"You don't have access to the program \", _jsx(\"strong\", { children: program.name }), \".\", 'If you arrived here via URL you will be able to use the URL ', 'again once you have access.'] }))) : (_jsx(Typography, __assign({ variant: \"body1\", component: \"div\", color: \"inherit\" }, { children: 'This URL is not valid. If you arrived here via URL you will be able to use the URL again once you have access.' }))) })), _jsx(DialogActions, { children: _jsx(Button, __assign({ onClick: onClose, color: \"primary\" }, { children: 'Back' })) })] })));\n};\nexport default NotAllowedModal;\n//# sourceMappingURL=NotAllowedModal.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport localforage from 'localforage';\nimport log from 'loglevel';\nvar makeKey = function (name, key) { return \"_\".concat(name, \"_\").concat(key); };\nvar checkExpired = function (ts, ttl) {\n    return !ts || ts < Date.now() - ttl * 1000;\n};\nvar getKeys = function (ns) { return __awaiter(void 0, void 0, void 0, function () {\n    var keys;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4, localforage.keys()];\n            case 1:\n                keys = _a.sent();\n                return [2, keys.filter(function (k) { return k.indexOf(\"_\".concat(ns, \"_\")) === 0; })];\n        }\n    });\n}); };\nvar LocalForageCache = (function () {\n    function LocalForageCache(ns, ttl) {\n        var _this = this;\n        this.prune = function () { return __awaiter(_this, void 0, void 0, function () {\n            var keys, idx, key, val;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        log.debug(\"[\".concat(this.ns, \"]LocalForageClass PRUNE\"));\n                        return [4, getKeys(this.ns)];\n                    case 1:\n                        keys = _a.sent();\n                        idx = 0;\n                        _a.label = 2;\n                    case 2:\n                        if (!(idx < keys.length)) return [3, 6];\n                        key = keys[idx];\n                        return [4, localforage.getItem(key)];\n                    case 3:\n                        val = _a.sent();\n                        if (!checkExpired(val === null || val === void 0 ? void 0 : val.ts, this.ttl)) return [3, 5];\n                        log.debug(\"[\".concat(this.ns, \"]LocalForageClass Prune Expired. Deleting: \").concat(key));\n                        return [4, localforage.removeItem(key)];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5:\n                        idx++;\n                        return [3, 2];\n                    case 6: return [2];\n                }\n            });\n        }); };\n        this.get = function (key, update) {\n            if (update === void 0) { update = false; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var newKey, item;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            newKey = makeKey(this.ns, key);\n                            return [4, localforage.getItem(newKey).catch(function (e) {\n                                    log.error('LocalForageClass ERROR', e);\n                                })];\n                        case 1:\n                            item = _a.sent();\n                            if (!(item && item.v && item.ts)) return [3, 7];\n                            if (!checkExpired(item.ts, this.ttl)) return [3, 3];\n                            log.debug(\"[\".concat(this.ns, \"]LocalForageClass Get Expired. Deleting: \").concat(key));\n                            return [4, localforage.removeItem(newKey)];\n                        case 2:\n                            _a.sent();\n                            return [2, null];\n                        case 3:\n                            log.debug(\"[\".concat(this.ns, \"]LocalForageClass HIT: \").concat(key));\n                            if (!(update === true)) return [3, 5];\n                            return [4, localforage.setItem(newKey, __assign(__assign({}, item), { ts: Date.now() }))];\n                        case 4:\n                            _a.sent();\n                            _a.label = 5;\n                        case 5: return [2, item.v];\n                        case 6: return [3, 8];\n                        case 7: return [2, null];\n                        case 8: return [2];\n                    }\n                });\n            });\n        };\n        this.set = function (key, value) {\n            var newKey = makeKey(_this.ns, key);\n            var val = {\n                ts: Date.now(),\n                v: value\n            };\n            return localforage.setItem(newKey, val).then(function () {\n                log.debug(\"[\".concat(_this.ns, \"]LocalForageClass Set: \").concat(key));\n            });\n        };\n        this.del = function (key) {\n            log.debug(\"[\".concat(_this.ns, \"]LocalForageClass Deleting: \").concat(key));\n            return localforage\n                .removeItem(makeKey(_this.ns, key))\n                .catch(function () {\n            })\n                .then();\n        };\n        this.clear = function () { return __awaiter(_this, void 0, void 0, function () {\n            var keys, idx;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        log.debug(\"[\".concat(this.ns, \"]LocalForageClass clear\"));\n                        return [4, getKeys(this.ns)];\n                    case 1:\n                        keys = _a.sent();\n                        for (idx = 0; idx < keys.length; idx++) {\n                            localforage.removeItem(keys[idx]);\n                        }\n                        return [2];\n                }\n            });\n        }); };\n        this.ns = ns;\n        this.ttl = ttl;\n    }\n    return LocalForageCache;\n}());\nexport default LocalForageCache;\n//# sourceMappingURL=LocalForageCache.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { useState, useRef, useCallback } from 'react';\nimport { downloadFile, downloadZipFile as apiDownloadZip } from '@riverscapes/common';\nimport _ from 'lodash';\nimport log from 'loglevel';\nimport { endpoints } from '../config';\nvar useDownload = function (auth, program) {\n    var _a = useState({}), pendingZips = _a[0], setPendingZips = _a[1];\n    var pendingZipsRef = useRef();\n    pendingZipsRef.current = pendingZips;\n    var downloadFileFn = useCallback(function (project, fkey) { return __awaiter(void 0, void 0, void 0, function () {\n        var jwt, res, error_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!program)\n                        return [2, Promise.resolve()];\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 4, , 5]);\n                    return [4, auth.getCurrentToken()];\n                case 2:\n                    jwt = _a.sent();\n                    return [4, downloadFile(endpoints.graphql, jwt, project.projType, program.machineName, project.id, fkey)];\n                case 3:\n                    res = _a.sent();\n                    try {\n                        if (res.data)\n                            window.open(res.data.downloadFile.downloadUrl, '_self');\n                    }\n                    catch (err) {\n                        log.error('DOWNLOAD err', err);\n                    }\n                    return [3, 5];\n                case 4:\n                    error_1 = _a.sent();\n                    log.error('DOWNLOAD err', error_1);\n                    return [3, 5];\n                case 5: return [2];\n            }\n        });\n    }); }, [program, auth]);\n    var downloadZipFile = useCallback(function (project) {\n        if (!program)\n            return Promise.resolve();\n        var checkZipFunc = function () {\n            return auth\n                .getCurrentToken()\n                .then(function (jwt) {\n                return apiDownloadZip(endpoints.graphql, jwt, project.projType, program.machineName, project.id);\n            })\n                .then(function (res) {\n                var _a;\n                try {\n                    if (res.data && !res.data.downloadZip.pendingSince) {\n                        setPendingZips(_.pickBy(pendingZipsRef.current, function (val, key) { return key !== project.id; }));\n                        window.open(res.data.downloadZip.downloadUrl, '_self');\n                    }\n                    else {\n                        setPendingZips(__assign(__assign({}, pendingZipsRef.current), (_a = {}, _a[project.id] = res.data ? res.data.downloadZip.pendingSince : Date.now(), _a)));\n                        setTimeout(checkZipFunc, 5000);\n                    }\n                }\n                catch (err) {\n                    log.error('DOWNLOAD err', err);\n                }\n            })\n                .catch(function (err) {\n                log.error('DOWNLOAD err', err);\n            });\n        };\n        return checkZipFunc();\n    }, [program, auth]);\n    return {\n        pendingZips: pendingZipsRef.current,\n        downloadFileFn: downloadFileFn,\n        downloadZipFile: downloadZipFile\n    };\n};\nexport default useDownload;\n//# sourceMappingURL=useDownloads.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getProject } from '@riverscapes/common';\nimport { endpoints } from '../config';\nimport log from 'loglevel';\nvar STATE_INIT = { loading: false, initialized: false };\nvar useProject = function (auth, program, files, tree, onProjectChange) {\n    if (files === void 0) { files = false; }\n    if (tree === void 0) { tree = false; }\n    var projectId = useParams().projectId;\n    var _a = useState(STATE_INIT), projState = _a[0], setProjState = _a[1];\n    var currProjectStateRef = useRef(STATE_INIT);\n    currProjectStateRef.current = projState;\n    var projLoadingDone = useRef(false);\n    useEffect(function () {\n        if (!projectId || projectId.length < 2) {\n            setProjState(STATE_INIT);\n            return;\n        }\n        try {\n            if (!program || !projectId)\n                return;\n            if (projectId && projState.project && projectId === projState.project.id)\n                return;\n            var progMachineName_1 = program.machineName;\n            setTimeout(function () {\n                if (!projLoadingDone.current && !projState.project)\n                    setProjState(__assign(__assign({}, currProjectStateRef.current), { loading: true }));\n            }, 500);\n            auth.getCurrentToken()\n                .then(function (jwt) { return getProject(endpoints.graphql, jwt, projectId, progMachineName_1, files, tree); })\n                .then(function (res) { return __awaiter(void 0, void 0, void 0, function () {\n                var _a;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            projLoadingDone.current = true;\n                            log.debug('getProjectById::Response', res);\n                            if (!(res.data &&\n                                res.data.project &&\n                                currProjectStateRef.current &&\n                                currProjectStateRef.current.project &&\n                                ((_a = currProjectStateRef.current) === null || _a === void 0 ? void 0 : _a.project.id) === res.data.project.id)) return [3, 1];\n                            return [2];\n                        case 1:\n                            if (!res.data) return [3, 4];\n                            setProjState({ project: res.data.project, loading: false, initialized: true });\n                            if (!onProjectChange) return [3, 3];\n                            return [4, onProjectChange(res.data.project)];\n                        case 2:\n                            _b.sent();\n                            _b.label = 3;\n                        case 3: return [3, 6];\n                        case 4:\n                            setProjState({ project: undefined, loading: false, initialized: true });\n                            if (!onProjectChange) return [3, 6];\n                            return [4, onProjectChange(null)];\n                        case 5:\n                            _b.sent();\n                            _b.label = 6;\n                        case 6: return [2];\n                    }\n                });\n            }); })\n                .catch(function (err) {\n                projLoadingDone.current = true;\n                setProjState({ project: undefined, loading: false, initialized: true });\n                log.error('api.getProjectById error', err);\n            });\n        }\n        catch (_a) {\n            return;\n        }\n    }, [projectId, program, auth]);\n    return projState;\n};\nexport default useProject;\n//# sourceMappingURL=useProject.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { useEffect, useState } from 'react';\nimport { useParams, generatePath } from 'react-router-dom';\nimport log from 'loglevel';\nimport base64url from 'base64url';\nimport { createHashHistory } from 'history';\nimport { isUndefined } from 'lodash';\nexport var hashHistory = createHashHistory();\nvar useQueryParams = function (pathPattern, history) {\n    var _a = useParams(), config = _a.config, params = __rest(_a, [\"config\"]);\n    var _b = useState([null, {}]), _c = _b[0], encoded = _c[0], decoded = _c[1], setState = _b[1];\n    var setQuery = function (input) {\n        if (Object.keys(input).length === 0) {\n            setState([null, {}]);\n            var newPath = generatePath(pathPattern, params);\n            history.replace(newPath);\n        }\n        else {\n            var newEncoded = encode(input);\n            if (newEncoded !== config) {\n                var newPath = generatePath(pathPattern, __assign(__assign({}, params), { config: newEncoded }));\n                log.debug('DEBUG::useQueryParams setQuery', { newEncoded: newEncoded, input: input });\n                setState([newEncoded, input]);\n                history.replace(newPath);\n            }\n        }\n    };\n    useEffect(function () {\n        if (!config || encoded === config) {\n            return;\n        }\n        else {\n            try {\n                var decoded_1 = decode(config);\n                log.debug('DEBUG::useQueryParams  YES!!!', { encoded: encoded, config: config, decoded: decoded_1 });\n                setState([config, decoded_1]);\n            }\n            catch (e) {\n                log.error(e);\n                setState([null, {}]);\n            }\n        }\n    }, [config, encoded]);\n    return { query: decoded, setQuery: setQuery };\n};\nexport default useQueryParams;\nfunction encode(qry) {\n    if (qry === null || isUndefined(qry))\n        return null;\n    switch (typeof qry) {\n        case 'string':\n            return qry;\n        default:\n            if (typeof qry === 'object' && Object.keys(qry || {}).length === 0) {\n                return '';\n            }\n            else {\n                return '~' + base64url(JSON.stringify(qry));\n            }\n    }\n}\nfunction decode(input) {\n    if (!input || input.length < 2 || input[0] !== '~')\n        return {};\n    var output = {};\n    try {\n        output = JSON.parse(base64url.decode(input.slice(1)));\n    }\n    catch (_a) {\n        output = {};\n    }\n    return output;\n}\n//# sourceMappingURL=useQueryParams.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { createTheme } from '@material-ui/core/styles';\nimport { indigo, orange } from '@material-ui/core/colors';\nvar home = {\n    palette: {\n        primary: {\n            main: indigo[500]\n        },\n        secondary: {\n            main: orange[600],\n            contrastText: '#FFFFFF'\n        },\n        text: {}\n    }\n};\nvar homeDark = __assign(__assign({}, home), { palette: __assign(__assign({}, home.palette), { type: 'dark' }) });\nexport default {\n    home: createTheme(home),\n    homeDark: createTheme(homeDark)\n};\n//# sourceMappingURL=themes.js.map","import ReactGA from 'react-ga';\nimport { googleAnalytics } from './config';\nimport log from 'loglevel';\nexport var init = function () {\n    if (googleAnalytics)\n        ReactGA.initialize(googleAnalytics, {\n            titleCase: false\n        });\n    else\n        log.error('Google Analytics: no UA- code found');\n};\nexport var currentPageView = function (path) {\n    ReactGA.pageview(path || window.location.pathname + window.location.hash);\n};\nexport var event = function (category, action, label) {\n    ReactGA.event({\n        category: category,\n        action: action,\n        label: label\n    });\n};\n//# sourceMappingURL=googleAnalytics.js.map","import React from 'react'\nimport { History, useHistory } from 'react-router-dom'\nimport log from 'loglevel'\n\nimport { ThemeProvider } from '@material-ui/styles'\nimport { AppFrame } from '@northarrowresearch/react-common'\nimport { ContainerProps } from '@material-ui/core/Container'\n\nimport { Topbar, themes } from '@riverscapes/react-common'\n\ninterface Props {\n    title: string\n    children: React.ReactChild | React.ReactChildren | React.ReactElement\n    history?: History\n    containerProps?: Partial<ContainerProps>\n    signOut?: () => Promise<void>\n}\n\n/**\n * Note: We keep this as a separate component in case WebRAVE needs a second screen\n * (like a settings screen or something)\n * It's basically the screen template with topbar and app frame all set up\n * @param param0\n * @returns\n */\nconst AppWrapper: React.FC<Props> = ({ title, children, history, signOut, containerProps }: Props) => {\n    return (\n        <ThemeProvider theme={themes.home}>\n            <AppFrame\n                containerProps={{ maxWidth: 'md', ...containerProps }}\n                noScroll\n                fullWidth\n                topbar={\n                    <Topbar\n                        history={history}\n                        title={title}\n                        signOutHandler={signOut}\n                        shareUrl={window.location.href}\n                        provisional\n                    />\n                }\n                // footer={<Footer version={config.version as string} />}\n            >\n                <>{children}</>\n            </AppFrame>\n        </ThemeProvider>\n    )\n}\nexport default AppWrapper\n\n/**\n * The cosmos wrapper is here to make our cosmos experience prettier\n * @param param0\n * @returns\n */\nexport const CosmosAppWrapper: React.FC<Props> = ({ children, containerProps }: Props) => {\n    const signOut = (): Promise<void> => Promise.resolve(log.info('logging out'))\n    const history = useHistory()\n    return (\n        <ThemeProvider theme={themes.home}>\n            <AppFrame\n                containerProps={{ maxWidth: 'md', ...containerProps }}\n                noScroll\n                fullWidth\n                topbar={\n                    <Topbar\n                        history={history}\n                        title=\"Riverscapes Warehouse\"\n                        signOutHandler={signOut}\n                        provisional\n                        shareUrl={window.location.href}\n                    />\n                }\n            >\n                {children}\n            </AppFrame>\n        </ThemeProvider>\n    )\n}\n","import React from 'react'\n// import log from 'loglevel'\n// import { useHosted } from '@northarrowresearch/react-auth'\nimport { Typography, CircularProgress } from '@material-ui/core'\nimport { Loading } from '@northarrowresearch/react-common'\n\ninterface Props {\n    title?: string\n}\n\nconst ProjectLoading: React.FC<Props> = ({ title }: Props) => {\n    return (\n        <Loading\n            logoSVG={<CircularProgress size=\"7rem\" thickness={7} />}\n            status={\n                <Typography variant=\"h5\" component=\"div\">\n                    {title || 'Loading...'}\n                </Typography>\n            }\n            containerProps={{\n                maxWidth: 'xl',\n                style: {\n                    position: 'absolute',\n                    zIndex: 1000,\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    background: '#FFFFFF77'\n                }\n            }}\n        />\n    )\n}\n\nexport default ProjectLoading\n","import { appDefaults } from '../config'\nimport { WebMercatorViewport, ViewportProps } from 'react-map-gl'\nimport { Project, ProjectTreeLeaf, ProjectTreeLayerTypes } from '@riverscapes/common'\nimport { decomposeColor, recomposeColor } from '@material-ui/core/styles/colorManipulator'\nimport { isUndefined } from 'lodash'\n\nexport type FallbackColor = { fg: string; bg: string }\n\n// It's annoying that MaterialUI doesn't expose Alpha function\n// Hopefully this stays put over the next few versions\nexport function addColorAlpha(inColor: string, alpha: number): string {\n    const bgTmp = decomposeColor(inColor)\n    if (bgTmp.type === 'rgb' || bgTmp.type === 'hsl') {\n        bgTmp.type += 'a'\n    }\n    bgTmp.values[3] = alpha\n    const bg = recomposeColor(bgTmp)\n    return bg\n}\n/**\n * Get a latitude, longitude and zoom for a bounds and frame size\n * @param cornersArr\n * @param width\n * @param height\n * @returns\n */\nexport const zoomExtents = (\n    cornersArr: [number, number, number, number],\n    width: number,\n    height: number\n): ViewportProps => {\n    // Use WebMercatorViewport to get center longitude/latitude and zoom\n    const viewport = new WebMercatorViewport({ width, height }).fitBounds(\n        [\n            [cornersArr[0], cornersArr[1]],\n            [cornersArr[2], cornersArr[3]]\n        ],\n        { padding: 200 }\n    ) // Can also use option: offset: [0, -100]\n    const { longitude, latitude, zoom } = viewport\n    return { longitude, latitude, zoom }\n}\n\n/**\n * Just a function to grow a bounding rectangle around a set of tiled bounds\n * @param oldBounds [minx, miny, maxx, maxy]\n * @param newRect\n * @returns\n */\nexport function newBounds(\n    worldBounds: [number, number, number, number],\n    oldBounds: [number, number, number, number] | null,\n    newRect: [number, number, number, number] | null\n): [number, number, number, number] | null {\n    if (!newRect && !oldBounds) return null\n    else if (newRect && !oldBounds)\n        return [\n            // Note the extra wrapper function. We do this to keep really wonky values out\n            Math.max(worldBounds[0], newRect[0]),\n            Math.max(worldBounds[1], newRect[1]),\n            Math.min(worldBounds[2], newRect[2]),\n            Math.min(worldBounds[3], newRect[3])\n        ]\n    else if (oldBounds && !newRect)\n        return [\n            // Note the extra wrapper function. We do this to keep really wonky values out\n            Math.max(worldBounds[0], oldBounds[0]),\n            Math.max(worldBounds[1], oldBounds[1]),\n            Math.min(worldBounds[2], oldBounds[2]),\n            Math.min(worldBounds[3], oldBounds[3])\n        ]\n    else if (oldBounds && newRect) {\n        return [\n            // Note the extra wrapper function. We do this to keep really wonky values out\n            Math.max(worldBounds[0], Math.min(newRect[0], oldBounds[0])),\n            Math.max(worldBounds[1], Math.min(newRect[1], oldBounds[1])),\n            Math.min(worldBounds[2], Math.max(newRect[2], oldBounds[2])),\n            Math.min(worldBounds[3], Math.max(newRect[3], oldBounds[3]))\n        ]\n    }\n    return null\n}\n\nexport function calculateOpacity(transparency = 0): number {\n    const sanitized = Math.max(0, Math.min(100, transparency))\n    return 1 - sanitized / 100\n}\n\n/**\n *\n * @param coords The [lon,lat] we're testing\n * @param bounds The bounds of the system (or null if we don't have them)\n * @param center Jump to the center of the bounds if true\n * @returns\n */\nexport function geoFence(\n    coords: [number | undefined, number | undefined] | null,\n    bounds: [number, number, number, number] | null,\n    center = false\n): [number, number] | null {\n    // If we have bounds but not coords then we can still send back a correction if the\n    // center is requested\n    if (!coords && bounds && center === true) {\n        return [(bounds[0] + bounds[2]) / 2, (bounds[1] + bounds[3]) / 2]\n    }\n    // If there's nothing to compare there's nothing to correct\n    if (!bounds || !coords || isUndefined(coords[0]) || isUndefined(coords[1])) return null\n    const newCoords = [\n        bounds[0] > coords[0] ? bounds[0] : bounds[2] < coords[0] ? bounds[2] : coords[0],\n        bounds[1] > coords[1] ? bounds[1] : bounds[3] < coords[1] ? bounds[3] : coords[1]\n    ] as [number, number]\n    if (newCoords[0] === coords[0] && newCoords[1] === coords[1]) return null\n    else if (center) return [(bounds[0] + bounds[2]) / 2, (bounds[1] + bounds[3]) / 2]\n    else return newCoords\n}\n\nexport function newZoomBounds(\n    oldZBounds: [number, number],\n    newZbounds?: [number | undefined, number | undefined]\n): [number, number] {\n    const fallback = appDefaults.zoomRange as [number, number]\n    if (!oldZBounds && !newZbounds) return fallback\n    else if (!newZbounds) return oldZBounds\n\n    // The min zoom is always set at the APP level\n    const min = oldZBounds ? oldZBounds[0] : appDefaults.zoomRange[0]\n    const max = Math.min(appDefaults.zoomRange[1], Math.max(oldZBounds[1], newZbounds[1] || oldZBounds[1]))\n\n    return [min, max]\n}\n\nexport type TreeNodeID = { branches: number[]; leaves: number[] }\n\n/**\n * MAterial UI uses strings as treenodes. This is a bit awkward for us trying to differentiate branches and leaves\n * @param ids\n */\nexport function treeNodeIDsParse(rawIds: string[]): TreeNodeID {\n    return {\n        branches: rawIds.filter((ids) => ids.indexOf('b-') > -1).map((ids) => parseInt(ids.replace('b-', ''), 10)),\n        leaves: rawIds.filter((ids) => ids.indexOf('l-') > -1).map((ids) => parseInt(ids.replace('l-', ''), 10))\n    }\n}\n\n/**\n * This is the return trip function for taking our TreeNodeID and squooshing it back to an array of strings\n * @param betterIds\n * @returns\n */\nexport function treeNodeIDCreate(betterIds: TreeNodeID): string[] {\n    return [...betterIds.branches.map((bid) => `b-${bid}`), ...betterIds.leaves.map((lid) => `l-${lid}`)]\n}\n\n/**\n * Create an ancestry array with search text we can use to filter the tree\n * it is ordered deepest (current) --> shallowest (root)\n * @param project\n * @param bid\n * @returns\n */\nexport function projectLeafSearchAncestry(project: Project, leaf: ProjectTreeLeaf): [number, string][] {\n    let parent = leaf.pid\n    // Let's just track what we've already found so we don't get circles\n    const ancestry: number[] = []\n    const searchStrings: string[] = []\n\n    // The touchedIds is basically just to insulate against\n    // Everything in  a tree can only have one parent so work down\n    while (parent > -1 && ancestry.length < project.tree.branches.length) {\n        const foundBranch = project.tree.branches.find((br) => br.bid === parent)\n        // If we've found a valid parent then add its label to the search terms\n        if (foundBranch && ancestry.indexOf(foundBranch.bid) < 0) {\n            ancestry.push(foundBranch.bid)\n            searchStrings.push(foundBranch.label.toLowerCase().trim())\n            parent = foundBranch.pid\n        }\n        // Insulate ourselves from endless searching\n        else {\n            parent = -1\n        }\n    }\n    // We put it back int\n    return ancestry.map((bid, idx) => [bid, searchStrings[idx]])\n}\n\nconst SORT_ORDER = [\n    ProjectTreeLayerTypes.POINT,\n    ProjectTreeLayerTypes.LINE,\n    ProjectTreeLayerTypes.POLYGON,\n    ProjectTreeLayerTypes.TIN,\n    ProjectTreeLayerTypes.RASTER\n]\n\nexport function layerSort(leaves: ProjectTreeLeaf[]): ProjectTreeLeaf[] {\n    const newArr = [...leaves]\n    newArr.sort((lyrA, lyrB) => {\n        // First we sort by the layer type\n        if (lyrA.layerType !== lyrB.layerType)\n            return SORT_ORDER.indexOf(lyrA.layerType) - SORT_ORDER.indexOf(lyrB.layerType)\n        // Then we sort by the treePath id order. The way the BusinessLogic file is parsed should be the\n        // same as tree order (TODO: Verify this?!?)\n        else {\n            return lyrA.id - lyrB.id\n        }\n    })\n    return newArr\n}\n","import { TileService, GISTileLayer, ProjectTreeLeaf } from '@riverscapes/common'\nimport { Color } from '@material-ui/core'\nimport { LayerProps } from 'react-map-gl'\nimport { calculateOpacity } from '../../lib/util'\n\nfunction commonFeatures(layerId?: string, tiles?: TileService): Partial<LayerProps> {\n    const lyrProps: Partial<LayerProps> = {\n        minzoom: tiles?.minZoom || 0,\n        maxzoom: 24,\n        layout: {}\n    }\n    if (tiles?.rsLayer?.subLayers) {\n        const sublyr = tiles.rsLayer.subLayers.find((sl) => sl.id === layerId) as GISTileLayer\n        lyrProps['source-layer'] = sublyr.path\n    } else {\n        lyrProps['source-layer'] = tiles?.rsLayer?.id\n    }\n    return lyrProps\n}\n\nfunction getPolygonOutlineLayer(leaf: ProjectTreeLeaf, rndColor: Color, tiles?: TileService): Partial<LayerProps> {\n    const lyrProps: Partial<LayerProps> = {\n        ...commonFeatures(leaf.layerId, tiles),\n        type: 'line',\n        paint: {\n            'line-color': rndColor[500],\n            'line-opacity': calculateOpacity(leaf.transparency)\n        }\n    }\n    return lyrProps\n}\n\nfunction getPolygonLayer(leaf: ProjectTreeLeaf, rndColor: Color, tiles?: TileService): Partial<LayerProps> {\n    const lyrProps: Partial<LayerProps> = {\n        ...commonFeatures(leaf.layerId, tiles),\n        type: 'fill',\n        paint: {\n            'fill-opacity': calculateOpacity(leaf.transparency),\n            'fill-color': rndColor[700]\n        }\n    }\n    return lyrProps\n}\n\nfunction getPointLayer(leaf: ProjectTreeLeaf, rndColor: Color, tiles?: TileService): Partial<LayerProps> {\n    const lyrProps: Partial<LayerProps> = {\n        ...commonFeatures(leaf.layerId, tiles),\n        type: 'circle',\n        paint: {\n            'circle-stroke-opacity': 1,\n            'circle-stroke-width': 2,\n            'circle-stroke-color': rndColor[500],\n            'circle-opacity': calculateOpacity(leaf.transparency),\n            'circle-radius': 4,\n            'circle-color': rndColor[700]\n        }\n    }\n    return lyrProps\n}\n\nfunction getLineLayer(leaf: ProjectTreeLeaf, rndColor: Color, tiles?: TileService): Partial<LayerProps> {\n    const lyrProps: Partial<LayerProps> = {\n        ...commonFeatures(leaf.layerId, tiles),\n        type: 'line',\n        paint: {\n            'line-color': rndColor[500],\n            'line-opacity': calculateOpacity(leaf.transparency)\n        }\n    }\n    return lyrProps\n}\n\nexport default {\n    line: getLineLayer,\n    point: getPointLayer,\n    polygon: getPolygonLayer,\n    outline: getPolygonOutlineLayer\n}\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-unused-vars */\nimport MapboxGL from 'mapbox-gl'\nimport { BaseLayer } from '../types'\nimport { SourceProps, LayerProps } from 'react-map-gl'\nimport log from 'loglevel'\nimport defaultSymbology from '../components/map/defaultSymbology'\nimport { ProjectTreeLayerTypes, TileService, SymbologyStatus } from '@riverscapes/common'\n\nimport { legendColors, initMapStyle } from '../config'\nimport { calculateOpacity } from '../lib/util'\nimport { RenderableMapLayer, MapLayerState } from '../recoil'\nimport { isUndefined } from 'lodash'\n// Sources accumulate but layers get swapped in and out\n\nexport type FixedMapBoxExport = {\n    sources: MapboxGL.Sources\n    layers: MapboxGL.AnyLayer[]\n    glyphs?: string\n    sprite?: string\n}\n\nexport type MapLayerMeta = {\n    mType: string\n    mIdx: number\n    mRef: string\n}\n\nexport enum MapLayerTypes {\n    bgLayer = 'BGL',\n    userContent = 'USRLYR',\n    // These don't sort\n    bgSource = 'BGSRC',\n    layerSource = 'SRC'\n}\n\n// Helper functions to make sure we name layers and sources consistently\nconst sourceIdGen = (lpath?: string, sName?: string): string => {\n    return `${MapLayerTypes.layerSource}_${lpath || 'NOPATH'}_${sName || 'SRC'}`\n}\n\nconst layerIdGen = (lpath?: string, sName?: string, subIdx = 0): string =>\n    `${MapLayerTypes.userContent}_${lpath || 'UNKNOWN'}_${sName || 'NOSYMB'}_${subIdx}`\n\nconst checkLoaded = (map: any): boolean => Boolean(map && map.isStyleLoaded())\nconst getMapLayerIds = (map: any, filter?: MapLayerTypes): string[] => {\n    const mStyle = map.getStyle().layers\n    return mStyle.filter(({ metadata }) => isUndefined(filter) || metadata.mType === filter).map(({ id }) => id)\n}\n\nconst metaMaker = (mType: MapLayerTypes, mIdx = 0, mRef = ''): MapLayerMeta => ({\n    mType,\n    mIdx,\n    mRef\n})\n\n/**\n * This function changes Riverscapes layer order if we need to move any slots around\n * @param newLayers\n */\nexport function userLayerRecalc(map: any, renderablelayers: RenderableMapLayer[]): boolean {\n    if (!checkLoaded(map)) return false\n    let mapInst = map\n    const start = Date.now()\n\n    // Keep track of everything that's supposed to be on the map so we can delete everything else\n    const validLayerIds: string[] = []\n    let beforeId: string | null = null\n\n    // If symbology is still loading or anything else goes wrong we want to keep this boolean dirty so\n    // changes will continue to cause map refreshes\n    let succeeded = true\n    // First make sure we have a divider layer\n    renderablelayers\n        .slice() // renderablelayers is immutable so make a sliced copy before reversing\n        .reverse()\n        .forEach((lyr) => {\n            // We tightly control the Ids. Rasters have one source per symbology.\n            // Vectors share a source but have different layers\n            const sourceId =\n                lyr.leaf.layerType === ProjectTreeLayerTypes.RASTER\n                    ? sourceIdGen(lyr.leaf.layerPath, lyr.leaf.symbology)\n                    : sourceIdGen(lyr.leaf.layerPath, lyr.leaf.layerName || lyr.leaf.layerId)\n\n            // Add the source (if necessary)\n            if (!mapInst.getSource(sourceId)) {\n                if (lyr.leaf.layerType === ProjectTreeLayerTypes.RASTER) {\n                    mapInst = mapInst.addSource(sourceId, getRasterSource(lyr.tiles as TileService, lyr.leaf.symbology))\n                } else {\n                    mapInst = mapInst.addSource(\n                        sourceId,\n                        getVectorSource(lyr.tiles as TileService, lyr.leaf.layerName || lyr.leaf.layerId)\n                    )\n                }\n            }\n\n            // If this is a RASTER layer then it's a lot easier\n            if (lyr.leaf.layerType === ProjectTreeLayerTypes.RASTER) {\n                const layerId = layerIdGen(lyr.leaf.layerPath, lyr.leaf.symbology)\n                validLayerIds.push(layerId)\n                if (!mapInst.getLayer(layerId)) {\n                    log.debug(`DEBUG::MM: Adding raster layer \"${layerId}\" before \"${beforeId}\"`)\n                    mapInst = mapInst.addLayer(\n                        {\n                            ...getRasterLayerProps(lyr, layerId, sourceId),\n                            metadata: metaMaker(\n                                MapLayerTypes.userContent,\n                                undefined,\n                                `${lyr.leaf.layerPath}/${lyr.leaf.symbology}`\n                            )\n                        },\n                        beforeId\n                    )\n                    beforeId = layerId\n                }\n            } else {\n                if (lyr.symbologyStatus === SymbologyStatus.FETCHING) {\n                    succeeded = false\n                    return\n                }\n\n                // Layer has already been added. We can set the layer order but otherwise do nothing\n                // fetch the symbology from the state object\n                let symbJSONArr = (lyr.symbology?.mapboxJson || []) as Partial<LayerProps>[]\n                // If we need a default fallback symbology then go create one\n                if ((!symbJSONArr || symbJSONArr.length === 0) && lyr.randomColor !== null) {\n                    const rndCol = legendColors[lyr.randomColor]\n                    switch (lyr.leaf.layerType) {\n                        case ProjectTreeLayerTypes.LINE:\n                            symbJSONArr = [defaultSymbology.line(lyr.leaf, rndCol, lyr.tiles)]\n                            break\n                        case ProjectTreeLayerTypes.POLYGON:\n                            symbJSONArr = [\n                                defaultSymbology.polygon(lyr.leaf, rndCol, lyr?.tiles),\n                                defaultSymbology.outline(lyr.leaf, rndCol, lyr?.tiles)\n                            ]\n                            break\n                        case ProjectTreeLayerTypes.POINT:\n                            symbJSONArr = [defaultSymbology.line(lyr.leaf, rndCol, lyr.tiles)]\n                            break\n                        default:\n                            break\n                    }\n                }\n                // Vector user layers can have multiple mapbox layers.\n                symbJSONArr\n                    // .slice() // renderablelayers is immutable so make a sliced copy before reversing\n                    // .reverse()\n                    .forEach((symb, subIdx) => {\n                        const subLyrId = layerIdGen(\n                            `${lyr.leaf.layerPath}/${lyr.leaf.layerName || lyr.leaf.layerId}`,\n                            lyr.leaf.symbology,\n                            subIdx\n                        )\n                        validLayerIds.push(subLyrId)\n                        // If this is the last item (idx== 0 because of reverse) then tuck it behind the slot placeholder\n                        // Otherwise put it behind its predecessor\n                        if (!mapInst.getLayer(subLyrId)) {\n                            log.debug(`DEBUG::MM: Adding vector sublayer \"${subLyrId}\" before \"${beforeId}\"`)\n                            mapInst = mapInst.addLayer(\n                                {\n                                    ...getVectorLayerProps(lyr, symb, subLyrId, sourceId),\n                                    metadata: metaMaker(\n                                        MapLayerTypes.userContent,\n                                        subIdx,\n                                        `${lyr.leaf.layerPath}/${lyr.leaf.symbology}`\n                                    )\n                                },\n                                beforeId\n                            )\n                            beforeId = subLyrId\n                        } else {\n                            log.debug(`DEBUG::MM: Already found \"${subLyrId}\" in the map`)\n                        }\n                    })\n            }\n        })\n    // Now we need to clean up anything that shouldn't be on the map\n    getMapLayerIds(mapInst, MapLayerTypes.userContent).forEach((lyrId) => {\n        if (validLayerIds.indexOf(lyrId) < 0) {\n            log.debug(`DEBUG::MM: Removing unused layer: ${lyrId}`, { validLayerIds })\n            mapInst = mapInst.removeLayer(lyrId)\n        }\n    })\n    // Finally if anything has changed call the sort function to put everything in the right order\n    log.debug(`DEBUG::MM: userLayerRecalc took ${Date.now() - start} ms`)\n    return succeeded\n}\n\n/**\n * Here we build up the array we want to have for layer order and then correct it, making the smallest number of moves\n * possible\n * @param map\n * @param renderablelayers\n * @returns\n */\nexport function verifyLayerOrder(map: any, renderablelayers: RenderableMapLayer[]): boolean {\n    if (!checkLoaded(map)) return false\n    let mapInst = map\n\n    const lMeta = getMapLayerIds(mapInst).reduce<Record<string, MapLayerMeta>>(\n        (acc, lyrId) => ({ ...acc, [lyrId]: mapInst.getLayer(lyrId).metadata as MapLayerMeta }),\n        {}\n    )\n\n    const usrLyrOrder = renderablelayers.map(({ leaf }) => `${leaf.layerPath}/${leaf.symbology}`).reverse()\n\n    // The background stack\n    const bgIds = getMapLayerIds(mapInst, MapLayerTypes.bgLayer)\n    bgIds.sort((a: string, b: string) => lMeta[a].mIdx - lMeta[b].mIdx)\n\n    const slotIds = getMapLayerIds(mapInst, MapLayerTypes.userContent)\n    slotIds.sort((a: string, b: string) => {\n        // If we're not in the same slot then the sort is easy\n        const delta = usrLyrOrder.indexOf(lMeta[a].mRef) - usrLyrOrder.indexOf(lMeta[b].mRef)\n        if (delta !== 0) return delta\n        // If we're in the same slot then sort by index\n        else {\n            return lMeta[a].mIdx - lMeta[b].mIdx\n        }\n    })\n\n    // This will be the truth\n    const correctStack: string[] = [...bgIds, ...slotIds]\n    correctStack.reverse()\n\n    // Now we have the layer order and the intended layer order\n    log.debug('DEBUG::MM: verifyLayerOrder', { have: getMapLayerIds(mapInst).reverse(), need: correctStack })\n\n    let allLayers = getMapLayerIds(mapInst)\n    allLayers.reverse()\n    correctStack.forEach((needId, needIdx) => {\n        if (needIdx !== allLayers.indexOf(needId)) {\n            const beforeId = needIdx === 0 ? null : correctStack[needIdx - 1]\n            log.debug(`DEBUG::MM: Move Needed ${needId} to before ${beforeId}`)\n            mapInst = mapInst.moveLayer(needId, beforeId)\n            allLayers = getMapLayerIds(mapInst)\n            allLayers.reverse()\n        }\n    })\n    return true\n}\n\n/**\n * When the user changes or initializes a base layer we need to swap out all the base layers that\n * may be affected\n * @param newBase\n * @returns\n */\nexport function changeBaseLayer(map: any, newBase: BaseLayer): boolean {\n    if (!checkLoaded(map)) return false\n    log.debug('DEBUG::MM: changeBaseLayer', newBase.id)\n    const start = Date.now()\n    let mapInst = map\n\n    const validBgLayers: string[] = []\n\n    // 1. Add any new sources we might need\n    Object.keys(newBase.sources).forEach((newSourceKey) => {\n        if (!mapInst.getSource(newSourceKey)) mapInst = mapInst.addSource(newSourceKey, newBase.sources[newSourceKey])\n    })\n\n    // 2. Add any background layers Back in reverse order\n    let beforeId: string | null = null\n    let addCounter = 0\n    newBase.layers.forEach((lyr) => {\n        // Layer names should be unique so if they are just move them\n        if (!mapInst.getLayer(lyr.id)) {\n            mapInst = mapInst.addLayer(lyr, beforeId)\n            addCounter++\n        }\n        validBgLayers.push(lyr.id)\n        beforeId = lyr.id\n    })\n    log.debug(`DEBUG::MM: changeBaseLayer Added ${addCounter} background layers`)\n\n    // 3. Find any old background layers and remove them\n    let removeCounter = 0\n    getMapLayerIds(mapInst)\n        .filter((lyrId) => lyrId.indexOf(MapLayerTypes.bgLayer) === 0)\n        .filter((lyrId) => validBgLayers.indexOf(lyrId) < 0)\n        .forEach((lyrId) => {\n            removeCounter++\n            mapInst = mapInst.removeLayer(lyrId)\n        })\n    if (removeCounter > 0) log.debug(`DEBUG::MM: changeBaseLayer Removed ${removeCounter} unneeded background layers`)\n\n    // Now we need to Put All the placeholders back where they should be if anything has changed\n    log.debug(`DEBUG::MM: userLayerRecalc took ${Date.now() - start} ms`)\n    return true\n}\n\nexport function createInitialStyle(baseLayer: BaseLayer): Partial<MapboxGL.Style> {\n    return {\n        ...initMapStyle,\n        sources: baseLayer.sources,\n        layers: baseLayer.layers\n    }\n}\n\n/**\n * This is just stripping out all the useful information from a direct export from Mapbox\n * We prefix the IDs too so that we can find them easier for map shuffling\n * @param sourcePrefix\n * @param rawStyle\n * @returns\n */\nexport function fixMapboxExport(sourcePrefix: string, rawStyle: MapboxGL.Style): FixedMapBoxExport {\n    if (!rawStyle.sources) return { sources: {}, layers: [] }\n    const rawSources = rawStyle.sources || {}\n    const rawLayers = rawStyle.layers || []\n    const glyphs = rawStyle.glyphs\n    const sprite = rawStyle.sprite\n    const sourceLookup: Record<string, string> = {}\n    const sources = Object.keys(rawStyle.sources).reduce((acc, sKey) => {\n        const newId = `${MapLayerTypes.bgSource}_${sourcePrefix}_${sKey}`\n        const source = rawSources[sKey]\n        // Add to the lookup so we can find this in the layers later\n        sourceLookup[sKey] = newId\n        return {\n            ...acc,\n            [newId]: source\n        }\n    }, {})\n    const layers = rawLayers.map<MapboxGL.AnyLayer>((lyr, idx) => {\n        const lyrMeta = (lyr.type !== 'custom' && lyr.metadata) || {}\n        const newLyr = {\n            ...lyr,\n            metadata: { ...lyrMeta, ...metaMaker(MapLayerTypes.bgLayer, idx) },\n            id: `${MapLayerTypes.bgLayer}_${idx}_${lyr.id}`\n        }\n        // IF the source is specified (and it is not a complex type) then go get it from the lookup\n        if (\n            newLyr.type !== 'background' &&\n            newLyr.type !== 'circle' &&\n            newLyr.type !== 'custom' &&\n            newLyr.source &&\n            typeof newLyr.type === 'string'\n        )\n            newLyr.source = sourceLookup[newLyr.source.toString()]\n        return newLyr\n    })\n    return { sources, layers, glyphs, sprite }\n}\n\nfunction getVectorSource(tiles: TileService, layerId?: string): SourceProps {\n    const layerIdPath = `${layerId}/`\n    return {\n        type: 'vector',\n        maxzoom: tiles.maxZoom || 20,\n        minzoom: tiles.minZoom || 4,\n        tiles: [`${tiles.url}${layerIdPath}{z}/{x}/{y}.${tiles.format || 'pbf'}`]\n    }\n}\nfunction getRasterSource(tiles: TileService, symbologyName?: string): SourceProps {\n    return {\n        type: 'raster',\n        scheme: 'tms',\n        maxzoom: tiles.maxZoom || 20,\n        minzoom: tiles.minZoom || 4,\n        tiles: [`${tiles.url}${symbologyName || 'raster'}/{z}/{x}/{y}.${tiles.format || 'png'}`]\n    }\n}\n\nfunction getRasterLayerProps(layer: MapLayerState, id: string, sourceId: string): LayerProps {\n    const lyrProps: LayerProps = {\n        type: 'raster',\n        id,\n        source: sourceId,\n        minzoom: layer.tiles?.minZoom || 0,\n        maxzoom: 24,\n        layout: {},\n        paint: {}\n    }\n    if (layer.leaf.transparency && layer.leaf.transparency > 0) {\n        lyrProps.paint['raster-opacity'] = calculateOpacity(layer.leaf.transparency)\n    }\n    return lyrProps\n}\n\nfunction getVectorLayerProps(\n    layer: MapLayerState,\n    symb: Record<string, unknown>,\n    id: string,\n    sourceId: string\n): LayerProps {\n    const lyrProps: LayerProps = {\n        // this will get overridden by\n        type: 'fill',\n        minzoom: layer.tiles?.minZoom || 0,\n        maxzoom: 24, // hardcoded to the max value possible\n        layout: {},\n        paint: {\n            // 'fill-opacity': 0,\n            // 'line-opacity': 0,\n            // 'circle-opacity': 0\n        },\n        ...symb,\n        id,\n        source: sourceId,\n        'source-layer': layer.leaf.layerName || layer.leaf.layerId\n    }\n    if (layer.leaf.transparency && layer.leaf.transparency > 0) {\n        const opacity = calculateOpacity(layer.leaf.transparency)\n        switch (lyrProps.type) {\n            case 'fill':\n                lyrProps.paint = { ...lyrProps.paint, ['fill-opacity']: opacity }\n                break\n            case 'line':\n                lyrProps.paint = { ...lyrProps.paint, ['line-opacity']: opacity }\n                break\n            case 'circle':\n                lyrProps.paint = { ...lyrProps.paint, ['circle-opacity']: opacity }\n                break\n            default:\n                break\n        }\n    }\n    return lyrProps\n}\n","import Satellite from './SatStreets.json'\n// import Satellite from './Satellite.json'\nimport BasicMap from './BasicMap.json'\n// import TopoMap from './TopoMap.json'\n// import GrayscaleHS from './GrayscaleHS.json'\nimport RiverscapesTopo from './RiverscapesTopo.json'\nimport { BaseLayer } from '../types'\nimport { fixMapboxExport } from '../lib/MapManager'\nimport MapboxGL from 'mapbox-gl'\n\nimport {\n    // Satellite as SatIcon,\n    SatelliteOutlined,\n    // Terrain,\n    // DirectionsCar,\n    DirectionsCarOutlined,\n    TerrainOutlined\n} from '@material-ui/icons'\n\nconst mapStyles: BaseLayer[] = [\n    {\n        id: 'SATELLITE',\n        title: 'Satellite Imagery',\n        toolTip: 'Satellite Imagery',\n        Icon: SatelliteOutlined,\n        color: 'green',\n        ...fixMapboxExport('SAT', Satellite as MapboxGL.Style)\n    },\n    {\n        id: 'HILLSHADE',\n        title: 'Topo',\n        toolTip: 'OSM Topo Map',\n        Icon: TerrainOutlined,\n        color: 'blue',\n        ...fixMapboxExport('HS', RiverscapesTopo as MapboxGL.Style)\n    },\n    {\n        id: 'STREET',\n        title: 'Street Map',\n        toolTip: 'Street Map',\n        Icon: DirectionsCarOutlined,\n        color: 'blue',\n        ...fixMapboxExport('ST', BasicMap as MapboxGL.Style)\n    }\n    // {\n    //     id: 'HILLSHADE',\n    //     title: 'Hillshade',\n    //     toolTip: 'Hillshade',\n    //     Icon: TerrainOutlined,\n    //     color: 'blue',\n    //     ...fixMapboxExport('HS', GrayscaleHS as MapboxGL.Style)\n    // }\n]\n\nexport default mapStyles\n","import { red, green, blue, orange, purple, cyan, lime, brown } from '@material-ui/core/colors'\nimport { Color } from '@material-ui/core'\nimport log from 'loglevel'\nimport MapboxGL from 'mapbox-gl'\nimport baseLayers from './mapStyles'\n\nlet domain = process.env.REACT_APP_DOMAIN\nif (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n    domain = 'localhost'\n    // basename = ''\n}\nlog.debug('config: ', { domain })\nexport const isDev = process.env.NODE_ENV && process.env.NODE_ENV === 'development'\nexport const version = process.env.REACT_APP_VERSION\n\nexport const endpoints = {\n    graphql: `${process.env.REACT_APP_GRAPHQL}` as string\n}\n\nexport const warehouseIconUrl = process.env.PUBLIC_URL + '/RiverscapesLogo.png'\nexport const warehouseUrl = process.env.REACT_APP_WAREHOUSE_URL\nexport const imagesUrl = process.env.PUBLIC_URL + '/images'\n\n/**\n * Here are the App defaults we might want to change\n */\nexport const appDefaults = {\n    appName: 'Riverscapes Project Viewer (webRAVE)',\n    zoomRange: [4, 18], // Think of this like the min and max possible zooms\n    apiTimeout: 20000, // ms timeout for API Queries\n    defaultViewport: {\n        zoom: 8\n    },\n    worldBounds: [-141, 23, -50, 70] as [number, number, number, number], // the maximum possible bounds\n    baseLayer: baseLayers[0],\n    drawerOpen: true,\n    init: false,\n    minFilterTextLength: 3,\n    maxMapLayers: 5,\n    retryDelayS: 2,\n    refreshDelayS: 20\n}\n\nexport const initMapStyle: Partial<MapboxGL.Style> = {\n    version: 8,\n    name: 'WebRaveStyle',\n    sprite: 'mapbox://sprites/northarrowresearch/ckmuw9x2e5f0417pe3vy7y0cz/55jsegcrpjhdm8ibxtin56tly',\n    glyphs: 'mapbox://fonts/northarrowresearch/{fontstack}/{range}.pbf'\n}\n\nexport const appRouterPath = '/:programId/:projectId/:config?'\n\nexport const mandatoryMetaColors: Color[] = [red, green, blue, orange, purple, cyan, lime, brown]\n// These are used if the symbology fails to load\nexport const legendColors: Color[] = [red, green, blue, orange, purple, cyan, lime, brown]\n\nexport const redirectUrl = new URL(\n    process.env.PUBLIC_URL.endsWith('/') ? process.env.PUBLIC_URL : process.env.PUBLIC_URL + '/',\n    window.location.origin\n)\n\nlog.debug('RedirectUrl', { redirectUrl, publicUrl: process.env.PUBLIC_URL })\n","import { atom, selector } from 'recoil'\nimport { appDefaults } from '../config'\nimport { Project, ProjectTreeLeaf, ProjectTreeLayerTileTypes } from '@riverscapes/common'\nimport { UseHostedReturn } from '@northarrowresearch/react-auth'\nimport { layerSort } from '../lib/util'\n// import log from 'loglevel'\n\n/**\n * This is the SOURCE OF TRUTH for the project tree. In some ways it's the MOST IMPORTANT ATOM\n */\nexport const projectAtom = atom<Project | null>({\n    key: 'project',\n    default: null\n})\n\nexport const authAtom = atom<UseHostedReturn | null>({\n    key: 'auth',\n    default: null\n})\n\n/**\n * Whether the tree pane is open or closed.\n * TODO: this might be way better using useState. Not sure any other components need this\n */\nexport const drawerOpenAtom = atom<boolean>({\n    key: 'drawerOpen',\n    default: appDefaults.drawerOpen\n})\n\n/**\n * When setting active layers or when order isn't important use this one\n */\nexport const activeIdsAtom = atom<number[]>({\n    key: 'map/activeLayerIds',\n    default: []\n})\n\n/**\n * Which layer ids are currently on the map and highlighted in the tree\n */\n\nexport const activeTreeLeavesSelector = selector<ProjectTreeLeaf[]>({\n    key: 'activeTreeLeaves',\n    get: ({ get }) => {\n        const proj = get(projectAtom)\n        const activeIds = get(activeIdsAtom)\n        if (!proj || !proj.tree) return []\n        return proj?.tree.leaves.filter((leaf) => activeIds.indexOf(leaf.id) > -1) || []\n    }\n})\n\n/**\n * Get the active map layer ids in the correct order. Use this in the map or legend, anywhere order\n * is important\n */\nexport const activeLeavesSortedSelector = selector<ProjectTreeLeaf[]>({\n    key: 'map/activeLeavesSorted',\n    get: ({ get }) => {\n        const activeTreeLeaves = get(activeTreeLeavesSelector)\n        const sorted = layerSort(activeTreeLeaves)\n        return sorted\n    }\n})\n\n/**\n * Utility selector for getting just the leaves we can add to a map\n */\nexport const projectMapLayerLeafsSelector = selector<ProjectTreeLeaf[]>({\n    key: 'project/mapLayerLeaves',\n    get: ({ get }) => {\n        const proj = get(projectAtom)\n        if (!proj || !proj.tree) return []\n        return proj.tree.leaves.filter(\n            ({ layerType, layerPath, nodeExists }) =>\n                ProjectTreeLayerTileTypes.indexOf(layerType) > -1 && nodeExists && layerPath && layerPath.length > 0\n        )\n    }\n})\n\n/**\n * Get all the unique layer paths in a project\n * Use to initilize project-level downloader\n */\nexport const projectLayerPathsSelector = selector<string[]>({\n    key: 'project/layerPaths',\n    get: ({ get }) => {\n        const mapLyrs = get(projectMapLayerLeafsSelector)\n        return mapLyrs.reduce<string[]>((acc, leaf) => {\n            const newPath = leaf.layerName ? `${leaf.layerPath}/${leaf.layerName}` : leaf.layerPath || 'unknown'\n            return !leaf.layerPath || acc.indexOf(newPath) > -1 ? acc : [...acc, newPath]\n        }, [])\n    }\n})\n","import { atom, selector, selectorFamily } from 'recoil'\nimport { appDefaults } from '../config'\nimport { ProjectTreeLeaf, TilingStatus, ProjectTreeBranch, ProjectTreeLayerTypes } from '@riverscapes/common'\nimport { treeNodeIDsParse, TreeNodeID, projectLeafSearchAncestry } from '../lib/util'\n// import log from 'loglevel'\n\nimport { projectAtom, activeIdsAtom } from './project'\nimport { layerStateSelectorFamily } from './layers'\n\nexport const treeFilterTextAtom = atom<string>({\n    key: 'treeFilterText',\n    default: ''\n})\n\nexport const projectLeafHierarchySelector = selector<Record<number, [number, string][]>>({\n    key: 'projectLeafHierarchy',\n    get: ({ get }) => {\n        const proj = get(projectAtom)\n        if (!proj || !proj.tree) return {}\n        const leafHier = proj.tree.leaves.reduce<Record<number, [number, string][]>>((acc, leaf) => {\n            return {\n                ...acc,\n                [leaf.id]: projectLeafSearchAncestry(proj, leaf)\n            }\n        }, {})\n        return leafHier\n    }\n})\n\nexport const treeInfoPaneIdAtom = atom<number | null>({\n    key: 'tree/treeInfoPaneId',\n    default: null\n})\nexport const treeInfoPaneOpenAtom = atom<boolean>({\n    key: 'tree/treeInfoPaneOpen',\n    default: false\n})\n\n/**\n * Keep track of all the ProjectTreeLeaf objects in the system\n */\nexport const treeLeafSelectorFamily = selectorFamily<ProjectTreeLeaf, number>({\n    key: 'treeLeafSelectorFamily',\n    get:\n        (ptid) =>\n        ({ get }) => {\n            const proj = get(projectAtom)\n            if (!proj) throw new Error('treeLeafSelectorFamily: No project found')\n\n            const leaf = proj.tree.leaves.find(({ id }) => id === ptid)\n            if (!leaf) throw new Error('treeLeafSelectorFamily: No leaf found')\n\n            return leaf\n        }\n})\n\n/**\n * Keep track of the selected tree item.\n * MAterial tree control uses strings for ids so we use the convention 'b-##' and 'l-##' to separate leaves and branches\n */\nexport const treeSelectedIdsAtom = atom<string[]>({\n    key: 'tree/selectedIds',\n    default: []\n})\n\n// This is a convenience selector because the above ids are hard to parse\nexport const treeSelectedSelector = selector<TreeNodeID>({\n    key: 'tree/selectedIdsSelect',\n    get: ({ get }) => {\n        const selectedIds = get(treeSelectedIdsAtom)\n        return treeNodeIDsParse(selectedIds)\n    }\n})\n\n/**\n * Precalc the hidden nodes every time the search text changes\n */\nexport type HiddenNodes = { branches: number[]; leaves: number[] }\nexport const projectHiddenNodesSelector = selector<HiddenNodes>({\n    key: 'projectHiddenNodes',\n    get: ({ get }) => {\n        const proj = get(projectAtom)\n        const retVal: HiddenNodes = { branches: [], leaves: [] }\n        if (!proj) return retVal\n        const hierarchy = get(projectLeafHierarchySelector)\n        const filterText = get(treeFilterTextAtom).toLowerCase().trim()\n\n        // Return nothing if the search text is less than (n) characters\n        if (filterText.length < appDefaults.minFilterTextLength) return retVal\n\n        // Split words by spaces and filter out anything empties\n        const filterTextArr = filterText.split(' ').filter((w) => w.length > 0)\n\n        // Return nothing if there aren't any words\n        if (filterTextArr.length < 1) return retVal\n\n        // First we figure out which leaves are left\n        const allowedLeaves = proj.tree.leaves\n            .filter((leaf) => {\n                const leafHierarchy = hierarchy[leaf.id]\n                // Figure out if all our search words are present somewhere in the leaf's ancestry\n                return filterTextArr.every((word) => {\n                    // Easy case: the leaf contains the word\n                    if (leaf.label.toLowerCase().indexOf(word) > -1) return true\n                    // Harder case: the branch contains the work\n                    return leafHierarchy.find(([, bText]) => bText.indexOf(word) > -1)\n                })\n            })\n            .map(({ id }) => id)\n\n        // Now we figure out which branches have children that re allowed\n        const allowedBranches = Array.from(\n            new Set(allowedLeaves.reduce<number[]>((acc, lid) => [...acc, ...hierarchy[lid].map(([bid]) => bid)], []))\n        )\n        // Then we remove everything else\n        retVal.leaves = proj.tree.leaves.map(({ id }) => id).filter((lid) => allowedLeaves.indexOf(lid) < 0)\n        retVal.branches = proj.tree.branches.map(({ bid }) => bid).filter((bid) => allowedBranches.indexOf(bid) < 0)\n        return retVal\n    }\n})\n\nexport type TreeLeafState = {\n    leaf: ProjectTreeLeaf\n    reportUrl?: string\n    tilesState: TilingStatus\n    treeAllowed: boolean\n    renderable: boolean\n    hidden: boolean\n    active: boolean\n}\n\nexport const treeLeafStateSelector = selectorFamily<TreeLeafState, number>({\n    key: 'treeLeafStateFamily',\n    get:\n        (ptid) =>\n        ({ get }) => {\n            const layer = get(layerStateSelectorFamily(ptid))\n            const hidden = get(projectHiddenNodesSelector).leaves.indexOf(ptid) > -1\n            const active = get(activeIdsAtom).indexOf(ptid) > -1\n            const reportUrl =\n                layer.leaf.layerType === ProjectTreeLayerTypes.REPORT &&\n                layer.tileStatus === TilingStatus.SUCCESS &&\n                layer.tiles?.url + 'index.html'\n            return {\n                leaf: layer.leaf,\n                tilesState: layer.tileStatus,\n                treeAllowed: true,\n                reportUrl: reportUrl || undefined,\n                renderable: layer.renderable,\n                hidden,\n                active\n            }\n        }\n})\n\nexport const treeRootBranchId = selector<number | null>({\n    key: 'tree/rootBranchId',\n    get: ({ get }) => {\n        const proj = get(projectAtom)\n        if (!proj || !proj.tree) return null\n        const branch = proj?.tree.branches.find((br) => br.pid === -1) as ProjectTreeBranch\n        if (!branch) return null\n        return branch.bid\n    }\n})\n\n/**\n * This is going to let us build a tree in a lazy-loading way\n */\n/**\n * This is just the raw, static treebranch\n */\nexport type TreeBranchSelectorReturn = {\n    branch: ProjectTreeBranch\n    children: {\n        // We store these as ids to keep the memory footprint small\n        branches: number[]\n        leaves: number[]\n    }\n}\n\nexport const treeBranchSelectorFamily = selectorFamily<TreeBranchSelectorReturn, number>({\n    key: 'tree/branches',\n    get:\n        (bid) =>\n        ({ get }) => {\n            const proj = get(projectAtom)\n            const branch = proj?.tree.branches.find((br) => br.bid === bid) as ProjectTreeBranch\n\n            if (!proj) throw new Error('treeBranchSelectorFamily: No project found')\n            if (!branch) throw new Error('treeBranchSelectorFamily: No branch found')\n\n            return {\n                branch,\n                children: {\n                    branches: proj.tree.branches.filter((br) => br.pid === bid).map((br) => br.bid),\n                    leaves: proj.tree.leaves.filter((lf) => lf.pid === bid).map(({ id }) => id)\n                }\n            }\n        }\n})\n\n/**\n * Branch state is things like collapsed and selected. We keep that separete so we don't need to worry about re-recursing the tree\n */\nexport type TreeBranchStateReturn = {\n    branch: TreeBranchSelectorReturn\n    hidden: boolean\n    selected: boolean\n    collapsed: boolean\n}\nexport const treeBranchStateSelectorFamily = selectorFamily<TreeBranchStateReturn, number>({\n    key: 'tree/branchState',\n    get:\n        (bid) =>\n        ({ get }) => {\n            const selectedIds = get(treeSelectedSelector)\n            const branch = get(treeBranchSelectorFamily(bid))\n            const hiddenNodes = get(projectHiddenNodesSelector)\n\n            const collapsed = Boolean(get(treeExpandedSelector).indexOf(bid) > -1)\n\n            const selected = Boolean(selectedIds.branches.indexOf(bid) > -1)\n\n            // Testing to see if this tree node should be hidden\n            const hidden = hiddenNodes.branches.indexOf(bid) > -1\n\n            return {\n                branch,\n                hidden,\n                selected,\n                collapsed\n            }\n        }\n})\n\n/****************************************\n * Misc Tree State\n ****************************************/\n\nexport type TreeCtxState = { leafId: number; position: { top: number; left: number } }\n\nexport const treeContextMenuAtom = atom<TreeCtxState | null>({\n    key: 'tree/contextMenu',\n    default: null\n})\n\n/**\n * Keep track of which branches are expanded\n * NOTE: We use 'collapsed' in the xml so this is inverted and a little messy\n * TODO: Not sure this needs to be externalized. Might be a good case for useState\n */\nexport const treeExpandedIdsAtom = atom<string[]>({\n    key: 'tree/expandedIds',\n    default: []\n})\n// This is a convenience selector because the above ids are hard to parse\nexport const treeExpandedSelector = selector<number[]>({\n    key: 'tree/expandedIdsSelect',\n    get: ({ get }) => {\n        return get(treeExpandedIdsAtom)\n            .filter((ids) => ids.indexOf('b-') > -1)\n            .map((ids) => parseInt(ids.replace('b-', ''), 10))\n    }\n})\n// Just get all ids in the project\nexport const treeAllIdsSelector = selector<string[]>({\n    key: 'tree/treeAllIds',\n    get: ({ get }) => {\n        const proj = get(projectAtom)\n        if (!proj || !proj.tree) return []\n        return [...proj.tree.branches.map(({ bid }) => `b-${bid}`), ...proj.tree.leaves.map(({ id }) => `l-${id}`)]\n    }\n})\n","import Bottleneck from 'bottleneck'\n\nconst QUEUE = new Bottleneck({\n    maxConcurrent: 5\n})\n\nexport default QUEUE\n","import { atom, atomFamily, selectorFamily } from 'recoil'\nimport { endpoints, appDefaults } from '../config'\n// import { orange } from '@material-ui/core/colors'\nimport { TileService, TilingStatus, getLayerTiles, TilingStatusFinished } from '@riverscapes/common'\nimport downloadQueue from '../lib/downloadQueue'\nimport log from 'loglevel'\nimport { LocalForageCache } from '@riverscapes/react-common'\n\nimport { authAtom, projectAtom } from './project'\n\nconst LOCAL_CACHE = new LocalForageCache('TILES', 60 * 60) // 1 hour ttl since tiles almost never change\nLOCAL_CACHE.prune() // prune once on load\n\n/****************************************\n * Tile Service Library\n ****************************************/\n// This is using the requestId pattern found here: https://recoiljs.org/docs/guides/asynchronous-data-queries/\n// This atom does nothign but track the requests made\nexport const tilesRequestIdAtomFamily = atomFamily<number, string>({\n    key: 'tiles/tileReq',\n    default: 0\n})\n// Request and retry are subtly different. Requests can be used as a generic way to refresh data (valid or not)\n// Retries get incremented only when there's an error\nexport const tilesRetriesAtomFamily = atomFamily<number, string>({\n    key: 'tiles/tileRetries',\n    default: 0\n})\n\nexport const usableIdsAtom = atom<number[]>({\n    key: 'tiles/usableIds',\n    default: []\n})\n\nexport const tilesSelectorFamily = selectorFamily<TileService, string>({\n    key: 'tiles/tiles',\n    get:\n        (layerPath) =>\n        async ({ get }) => {\n            // By just including this here (even if we don't assign it) we add tilesRequestIdAtomFamily\n            // as a rippling dependency so updating tilesRequestIdAtomFamily will cause this query to refresh\n            get(tilesRequestIdAtomFamily(layerPath))\n            // Retries are for errors\n            get(tilesRetriesAtomFamily(layerPath))\n\n            const auth = get(authAtom)\n            const proj = get(projectAtom)\n\n            // TODO: Set Priority here\n            // ATOM LOOKUP PRIORITY\n            let retVal: TileService = {\n                status: TilingStatus.UNKNOWN\n            }\n            if (!proj || !auth || !layerPath) return retVal\n\n            // Localstorage cache check\n            const cacheKey = `${proj.projType}/${proj?.program}/${proj?.id}/${layerPath}`\n            const cacheVal = await LOCAL_CACHE.get<TileService>(cacheKey)\n\n            if (cacheVal) return cacheVal\n\n            // Make the Asynchronous call to the API here\n            // A priority between 0 and 9. A job with a priority of 4 will be queued ahead of a job with a priority of 5\n            // Default is 5\n            try {\n                const apiRes = await downloadQueue.schedule({ priority: 5 }, () =>\n                    auth\n                        .getCurrentToken()\n                        .then((jwt) =>\n                            getLayerTiles(\n                                endpoints.graphql,\n                                jwt,\n                                proj.projType,\n                                proj?.program,\n                                proj?.id,\n                                layerPath,\n                                appDefaults.apiTimeout\n                            )\n                        )\n                )\n                if (!apiRes || apiRes.errors || !apiRes.data) {\n                    // Tiling errors don't get retried. We reached the server correctly so\n                    // Any further request will likely be met with a similar result\n                    retVal.status = TilingStatus.FETCH_ERROR\n                    if (apiRes.errors && apiRes.errors.length > 0) {\n                        retVal.error = apiRes.errors.map((e) => JSON.stringify(e)).join(', \\n')\n                    }\n                }\n                retVal = {\n                    ...retVal,\n                    ...apiRes.data?.getLayerTiles\n                }\n            } catch (err) {\n                log.error('Tile fetch error', err)\n                retVal.status = TilingStatus.FETCH_ERROR\n                retVal.error = String(err)\n            }\n\n            // Write anything that's finished to the localstorage\n            if (TilingStatusFinished.indexOf(retVal.status as TilingStatus) > -1) {\n                LOCAL_CACHE.set<TileService>(cacheKey, retVal)\n            }\n\n            return retVal\n        }\n})\n","import { selector, selectorFamily } from 'recoil'\nimport { endpoints, appDefaults } from '../config'\n// import { orange } from '@material-ui/core/colors'\nimport {\n    Symbology,\n    SymbologyStatus,\n    getWebSymbology,\n    ProjectTreeLayerTypes,\n    ProjectTreeLeaf\n} from '@riverscapes/common'\nimport { LocalForageCache } from '@riverscapes/react-common'\nimport downloadQueue from '../lib/downloadQueue'\nimport { authAtom, projectAtom, activeTreeLeavesSelector, projectMapLayerLeafsSelector } from './project'\nimport log from 'loglevel'\nimport { isEqual } from 'lodash'\n\nconst LOCAL_CACHE = new LocalForageCache('SYMB', 6 * 60 * 60) // 6 hour ttl since symbologies almost never change\nLOCAL_CACHE.prune() // prune once on load\n\n/****************************************\n * Tile Vector Symbology Library\n ****************************************/\n/**\n * Selector for all the unique symbologies currently on the map\n */\nexport type SymbologyKey = [string, boolean]\n\nconst createSymbologyKeys = (leaves: ProjectTreeLeaf[]): SymbologyKey[] => {\n    return leaves.reduce<SymbologyKey[]>((acc, leaf) => {\n        if (!leaf.symbology) return acc\n        const symbKey: SymbologyKey = [leaf.symbology, leaf.layerType === ProjectTreeLayerTypes.RASTER]\n        if (!acc.find((sk) => isEqual(sk, symbKey))) return [...acc, symbKey]\n        else return acc\n    }, [])\n}\n\n/**\n * Selector for all the unique symbologies in the whole project\n * Use to initilize project-level downloader\n */\nexport const projectSymbologiesSelector = selector<SymbologyKey[]>({\n    key: 'symbology/uniqueSymb',\n    get: ({ get }) => {\n        const mapLyrs = get(projectMapLayerLeafsSelector)\n        return createSymbologyKeys(mapLyrs)\n    }\n})\n\n// A unique symbology key consists of a string name and whether or not it is a raster\nexport const activeMapSymbologiesSelector = selector<SymbologyKey[]>({\n    key: 'symbology/activeSymbologies',\n    get: ({ get }) => {\n        const activeSymb = get(activeTreeLeavesSelector)\n        return createSymbologyKeys(activeSymb)\n    }\n})\n\nexport const symbologySelectorFamily = selectorFamily<Symbology | null, SymbologyKey>({\n    key: 'symbology/symbology',\n    get:\n        ([name, isRaster]) =>\n        async ({ get }) => {\n            const proj = get(projectAtom)\n            const auth = get(authAtom)\n            if (!proj || !auth || !name) return null\n            const retVal: Symbology = {\n                name,\n                status: SymbologyStatus.UNKNOWN\n            }\n\n            // Localstorage cache check\n            const cacheKey = `${proj.projType}/${name}`\n            const cacheVal = await LOCAL_CACHE.get<Symbology>(cacheKey)\n\n            if (cacheVal) return cacheVal\n\n            // Make the Asynchronous call to the API here\n            // A priority between 0 and 9. A job with a priority of 4 will be queued ahead of a job with a priority of 5\n            // Default is 5\n            const apiRes = await downloadQueue.schedule({ priority: 5 }, () =>\n                auth\n                    .getCurrentToken()\n                    .then((jwt) =>\n                        getWebSymbology(endpoints.graphql, jwt, proj.projType, name, isRaster, appDefaults.apiTimeout)\n                    )\n                    .catch((err) => {\n                        log.debug('symbologySelectorFamily', err)\n                    })\n            )\n\n            if (!apiRes || apiRes.errors) {\n                retVal.status = SymbologyStatus.ERROR\n                retVal.error = 'Error downloading symbology'\n                return retVal\n            }\n\n            const finalVal = apiRes.data?.getWebSymbology\n                ? {\n                      ...apiRes.data?.getWebSymbology,\n                      status: SymbologyStatus.FOUND\n                  }\n                : retVal\n            if (finalVal.status === SymbologyStatus.FOUND) {\n                await LOCAL_CACHE.set<Symbology>(cacheKey, finalVal)\n            }\n            return finalVal\n        }\n})\n","import { atom, atomFamily, selector, selectorFamily, noWait } from 'recoil'\nimport {\n    ProjectTreeLeaf,\n    TileService,\n    Symbology,\n    SymbologyStatus,\n    TilingStatus,\n    ProjectTreeLayerTileTypes,\n    ProjectTreeLayerTypes\n} from '@riverscapes/common'\n// import log from 'loglevel'\nimport { projectAtom, activeIdsAtom } from './project'\nimport { treeLeafSelectorFamily, treeSelectedSelector } from './tree'\nimport { tilesSelectorFamily } from './tiles'\nimport { symbologySelectorFamily } from './symbology'\nimport { legendColors } from '../config'\n\nexport const assignedRandomColorsAtom = atom<number[]>({\n    key: 'map/assignedColors',\n    default: []\n})\nexport const leafRandomColAtomFamily = atomFamily<number | null, number>({\n    key: 'map/leafRandomCol',\n    default: null\n})\nexport const selectNextColor = selector<number>({\n    key: 'map/selectNextColor',\n    get: ({ get }) => {\n        const current = get(assignedRandomColorsAtom)\n        // Little sloppy here but after all the colours are used up we just get the same color over and over\n        // This shouldn't be an issue because we can't have more than 5 map layers active at a time usually.\n        for (let idx = 0; idx < legendColors.length; idx++) {\n            if (current.indexOf(idx) < 0) return idx\n        }\n        return 0\n    }\n})\n\n/**\n * Layers are derivative state objects with things that are commonly grouped together\n * THis is used PRETTY MUCH EVERYWHERE\n */\n\nexport type MapLayerState = {\n    leaf: ProjectTreeLeaf\n    tiles?: TileService\n    // Symbology can be null for rasters\n    symbology?: Symbology | null\n    treeSelected: boolean\n    legendActive: boolean\n    renderable: boolean\n    symbologyStatus: SymbologyStatus\n    tileStatus: TilingStatus\n}\nexport const layerStateSelectorFamily = selectorFamily<MapLayerState, number>({\n    key: 'map/layers',\n    get:\n        (leafid) =>\n        ({ get }): MapLayerState => {\n            const leaf = get(treeLeafSelectorFamily(leafid)) as ProjectTreeLeaf\n            const selectedIds = get(treeSelectedSelector)\n\n            const isMapAddable = ProjectTreeLayerTileTypes.indexOf(leaf.layerType) > -1\n            const isOnTileServer = isMapAddable || leaf.layerType === ProjectTreeLayerTypes.REPORT\n\n            // It can be active on the legend without being renderable\n            const legendActive = get(activeIdsAtom).indexOf(leafid) > -1\n\n            const treeSelected = Boolean(selectedIds.leaves && selectedIds.leaves.indexOf(leafid) > -1)\n\n            const retVal: MapLayerState = {\n                leaf,\n                treeSelected,\n                legendActive,\n                renderable: false,\n                tileStatus: TilingStatus.NOT_APPLICABLE,\n                symbologyStatus: SymbologyStatus.NOT_APPLICABLE\n            }\n\n            if (isOnTileServer) {\n                const tileServLoadable = get(noWait(tilesSelectorFamily(leaf.layerPath as string)))\n                if (isMapAddable) {\n                    const symbologyLoadable = get(\n                        noWait(\n                            symbologySelectorFamily([\n                                leaf.symbology as string,\n                                leaf.layerType === ProjectTreeLayerTypes.RASTER\n                            ])\n                        )\n                    )\n                    retVal.symbologyStatus =\n                        symbologyLoadable.state !== 'hasValue'\n                            ? SymbologyStatus.FETCHING\n                            : symbologyLoadable.contents?.status || SymbologyStatus.NOT_APPLICABLE\n                    if (symbologyLoadable.state === 'hasValue') retVal.symbology = symbologyLoadable.contents\n                }\n\n                retVal.tileStatus =\n                    tileServLoadable.state !== 'hasValue' ? TilingStatus.FETCHING : tileServLoadable.contents.status\n                // Files are a direct download so they just get an automatic pass because there's nothing to tile\n                // NOTE: THis is not true for TilingStatus.REPORT that still needs to be copied\n                if (leaf.layerType === ProjectTreeLayerTypes.FILE) retVal.tileStatus === TilingStatus.SUCCESS\n\n                retVal.renderable =\n                    retVal.tileStatus === TilingStatus.SUCCESS && retVal.symbologyStatus !== SymbologyStatus.FETCHING\n                if (tileServLoadable.state === 'hasValue') retVal.tiles = tileServLoadable.contents\n            }\n\n            return retVal\n        }\n})\n\n/**\n * Pull out the map leaf ids for a given view\n */\nexport const viewProjLeafIdsSelector = selector<Record<string, number[]>>({\n    key: 'map/viewProjLeafIds',\n    get: ({ get }): Record<string, number[]> => {\n        const proj = get(projectAtom)\n        if (!proj || !proj.tree || !proj.tree.views) return {}\n        const retVal = proj.tree.views.reduce<Record<string, number[]>>((acc, view) => {\n            const viewIds = view.layers.reduce<number[]>((acc, vl) => {\n                const ptl = proj.tree.leaves.find(({ blLayerId }) => blLayerId && blLayerId === vl.id)\n                if (!ptl) return acc\n                else return [...acc, ptl.id]\n            }, [])\n            return {\n                ...acc,\n                [view.id]: viewIds\n            }\n        }, {})\n\n        return retVal\n    }\n})\n","import { TilingStatus } from '@riverscapes/common'\nimport { atom, selector } from 'recoil'\nimport { appDefaults } from '../config'\nimport { BaseLayer } from '../types'\nimport { ViewportProps } from 'react-map-gl'\nimport { newBounds } from '../lib/util'\nimport { layerStateSelectorFamily, leafRandomColAtomFamily, MapLayerState } from './layers'\nimport { activeLeavesSortedSelector } from './project'\nimport { MapSize } from '../types'\n// import log from 'loglevel'\n\n/****************************************\n * Misc Map State\n ****************************************/\n\nexport const baseLayerAtom = atom<BaseLayer>({\n    key: 'map/baseLayer',\n    default: appDefaults.baseLayer\n})\n\n/**\n * What state the viewport is currently in. I'd like this to be ZOOM and LAT/LNG so we can code it into the url\n */\nexport const viewportAtom = atom<ViewportProps>({\n    key: 'map/viewport',\n    default: appDefaults.defaultViewport\n})\n\nexport const mapSizeAtom = atom<MapSize | null>({\n    key: 'map/mapSize',\n    default: null\n})\n\nexport const mapErrorAtom = atom<string>({\n    key: 'map/mapError',\n    default: ''\n})\n\nexport const mapLoadedAtom = atom<boolean>({\n    key: 'map/mapLoaded',\n    default: false\n})\n\nexport interface RenderableMapLayer extends MapLayerState {\n    randomColor: number | null\n    lid: number\n}\n\nexport const activeBoundsSelector = selector<[number, number, number, number] | null>({\n    key: 'map/activeBoundsSelector',\n    get: ({ get }) => {\n        // TODO: If we want to allow layer re-ordering we need to not sort like this\n        const renderableLayers = get(renderableMapLayersSelector)\n        let bounds: [number, number, number, number] | null = null\n        for (let idx = 0; idx < renderableLayers.length; idx++) {\n            const lyr = renderableLayers[idx]\n            if (lyr.tiles?.bounds) {\n                bounds = newBounds(appDefaults.worldBounds, bounds, lyr.tiles?.bounds)\n            }\n        }\n        return bounds\n    }\n})\n\n/**\n * This selector aims to find the difference between what's requested on the map and return only\n * what's actually renderable. This is important because if 'beforeId' references a dud layer\n * there can be problems so it's important that Mapbox only try to render layers we can actually show\n */\nexport const renderableMapLayersSelector = selector<RenderableMapLayer[]>({\n    key: 'map/renderableMapLayers',\n    get: ({ get }) => {\n        // TODO: If we want to allow layer re-ordering we need to not sort like this\n\n        const activeLeavesSorted = get(activeLeavesSortedSelector)\n        const usableLayers = activeLeavesSorted\n            .map(({ id }) => get(layerStateSelectorFamily(id)))\n            .filter(({ tileStatus }) => tileStatus === TilingStatus.SUCCESS)\n        const rndCols = usableLayers.map(({ leaf: { id } }) => get(leafRandomColAtomFamily(id)))\n\n        const retVal = usableLayers.reduce<RenderableMapLayer[]>((acc, lyr, idx) => {\n            const id = lyr.leaf.id\n            const retVal: RenderableMapLayer = {\n                ...lyr,\n                randomColor: rndCols[idx],\n                lid: id\n            }\n            return [...acc, retVal]\n        }, [])\n        return retVal\n    }\n})\n\n/**\n * Which view is currently active.\\\n */\nexport const activeViewAtom = atom<string | null>({\n    key: 'map/view',\n    default: null\n})\n\n/**\n * The bound fence of the map (all layers including innactive ones)\n * [minx, miny, maxx, maxy]\n */\nexport const boundsAtom = atom<[number, number, number, number] | null>({\n    key: 'map/bounds',\n    default: null\n})\n\n/**\n * The zoom bound limits [minz, maxz]\n */\nexport const zoomBoundsAtom = atom<[number, number]>({\n    key: 'map/zoomBounds',\n    default: [appDefaults.zoomRange[0], appDefaults.zoomRange[1]]\n})\n/**\n * THis selector is what the map will use to read the bounds. It has two functions\n * 1. It will always return something valid (even though bounds can be null)\n * 2. it groups bounds and zoombounds together since we use them that way a lot\n */\nexport const boundsSelector = selector<{ zoom: [number, number]; bounds: [number, number, number, number] }>({\n    key: 'bounds',\n    get: ({ get }) => {\n        return {\n            zoom: get(zoomBoundsAtom),\n            bounds: get(boundsAtom) || appDefaults.worldBounds\n        }\n    }\n})\n","import { googleAnalytics } from '@riverscapes/react-common'\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil'\nimport { viewProjLeafIdsSelector, activeViewAtom, activeIdsAtom, projectAtom } from '../recoil'\n\nexport interface UseViewsReturn {\n    setView: (viewId: string) => void\n    resetView: () => void\n}\n\nconst useViews = (): UseViewsReturn => {\n    const [currView, setCurrView] = useRecoilState(activeViewAtom)\n    const viewLeafIds = useRecoilValue(viewProjLeafIdsSelector)\n    const proj = useRecoilValue(projectAtom)\n    const setActiveMapIds = useSetRecoilState(activeIdsAtom)\n\n    const setView = (viewId: string) => {\n        if (viewId === null || currView === viewId || !viewLeafIds[viewId]) return\n        googleAnalytics.event('webrave', 'set_view')\n        setCurrView(viewId)\n        setActiveMapIds(viewLeafIds[viewId])\n    }\n    const resetView = () => {\n        googleAnalytics.event('webrave', 'set_default_view')\n        if (proj && proj.tree.defaultView) setView(proj.tree.defaultView)\n    }\n\n    return { setView, resetView }\n}\n\nexport default useViews\n","import { selector } from 'recoil'\nimport { viewportAtom, renderableMapLayersSelector, activeViewAtom, baseLayerAtom } from './map'\nimport { drawerOpenAtom } from './project'\nimport { AppUrlState } from '../types'\nimport { appDefaults } from '../config'\nimport log from 'loglevel'\n/**\n * This is the selector for divining the URL params we use in our share\n */\nexport const urlParamsSelector = selector<AppUrlState>({\n    key: 'url/params',\n    get: ({ get }) => {\n        const viewport = get(viewportAtom)\n        const baseLayer = get(baseLayerAtom)\n        const currentView = get(activeViewAtom)\n        const drawerOpen = get(drawerOpenAtom)\n        const layers = get(renderableMapLayersSelector)\n\n        const retVal: AppUrlState = {}\n        if (!drawerOpen) retVal.d = 0\n        if (viewport)\n            retVal.c = [viewport.longitude, viewport.latitude, viewport.zoom, viewport.bearing, viewport.pitch]\n        if (baseLayer && baseLayer.id !== appDefaults.baseLayer.id) retVal.b = baseLayer.id\n        if (currentView) {\n            retVal.v = currentView\n        } else {\n            // if this is not a view then we need to enumerate the layers and their order\n            retVal.l = layers.map((lyr) => lyr.leaf.id)\n        }\n        log.debug('URLPARAMS:: urlParamsSelector fire', retVal)\n        return retVal\n    }\n})\n","import { useCallback, useEffect } from 'react'\nimport { useRecoilCallback, useRecoilValue, useSetRecoilState, useRecoilState } from 'recoil'\nimport { UseHostedReturn } from '@northarrowresearch/react-auth'\nimport useViews from './useViews'\nimport {\n    authAtom,\n    projectAtom,\n    activeIdsAtom,\n    tilesSelectorFamily,\n    symbologySelectorFamily,\n    projectLayerPathsSelector,\n    projectSymbologiesSelector,\n    treeExpandedIdsAtom,\n    SymbologyKey\n} from '../recoil'\nimport { Project } from '@riverscapes/common'\nimport log from 'loglevel'\n\n/**\n * This custom hook does all the state setup we need to initialize the project once it is loaded\n */\nconst useAppStateInit = (initAuth?: UseHostedReturn, initProj?: Project): void => {\n    const [project, setProjectTree] = useRecoilState(projectAtom)\n    const setActiveIds = useSetRecoilState(activeIdsAtom)\n    const setAuth = useSetRecoilState(authAtom)\n    const projectSymbologies = useRecoilValue(projectSymbologiesSelector)\n    const projectLayerPaths = useRecoilValue(projectLayerPathsSelector)\n\n    const setExpanded = useSetRecoilState(treeExpandedIdsAtom)\n    const { resetView } = useViews()\n\n    const resetApp = useCallback(() => {\n        log.debug('RESETTING THE APP')\n    }, [])\n\n    // This just basically stuffs our project into Recoil\n    // TODO: This may not be needed later when the common library uses recoil too\n    useEffect(() => {\n        if ((!initProj && project) || (initProj && project && initProj.id !== project.id)) {\n            resetApp()\n        }\n        setProjectTree(initProj || null)\n    }, [initProj])\n    useEffect(() => {\n        // if (!initAuth || initAuth.isAuthenticated) resetApp()\n        setAuth(initAuth || null)\n    }, [initAuth])\n    // If the project or the auth changes we reset everything\n\n    const preFetchLayerTile = useRecoilCallback(({ snapshot }) => (layerPath: string) => {\n        snapshot.getLoadable(tilesSelectorFamily(layerPath)) // pre-fetch user info\n    })\n\n    const preFetchSymbology = useRecoilCallback(({ snapshot }) => (sKey: SymbologyKey) => {\n        snapshot.getLoadable(symbologySelectorFamily(sKey)) // pre-fetch symbology\n    })\n\n    // TODO:\n    // - load url params\n\n    // Here we set the default expanded nodes when the project loads\n    useEffect(() => {\n        if (!project || !project.tree) {\n            setExpanded([])\n            document.title = 'RAVE'\n        } else {\n            if (project.name) {\n                document.title = project.name\n            }\n            setActiveIds([])\n            resetView() // reset to the default view\n            setExpanded(project.tree.branches.filter((br) => !br.collapsed).map((br) => `b-${br.bid}`))\n        }\n    }, [project])\n\n    // When the symbologies change, preload them\n    useEffect(() => {\n        projectSymbologies.map(preFetchSymbology)\n    }, [projectSymbologies])\n    // When the unique layer paths change preload them\n    useEffect(() => {\n        projectLayerPaths.map(preFetchLayerTile)\n    }, [projectLayerPaths])\n}\n\nexport default useAppStateInit\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Container from '@material-ui/core/Container'\nimport Link from '@material-ui/core/Link'\nimport { warehouseUrl } from '../config'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { WarehouseButton } from '@riverscapes/react-common'\n\nconst useStyles = makeStyles((theme) => ({\n    rootContainer: {\n        // maxWidth: '50em',\n        // margin: '0 auto',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    root: {\n        padding: theme.spacing(2, 4, 4, 4)\n    },\n    buttonContainer: {\n        textAlign: 'center'\n    },\n    logoContainer: {\n        padding: theme.spacing(2),\n        textAlign: 'center'\n    },\n    logo: {}\n}))\n\n// interface Props {\n//     title: string\n// }\n\nconst ProjectNotFound: React.FC = () => {\n    const classes = useStyles()\n\n    return (\n        <Container className={classes.rootContainer} maxWidth=\"sm\">\n            <div className={classes.spacer} />\n            <Paper className={classes.root}>\n                <div className={classes.logoContainer}>\n                    <img className={classes.logo} src={process.env.PUBLIC_URL + '/RiverscapesLogo.png'} alt=\"logo\" />\n                </div>\n                <Typography paragraph variant=\"body1\">\n                    The project you are looking for could not be found.\n                </Typography>\n                <Typography paragraph variant=\"body1\">\n                    Please go back to the <Link href={`${warehouseUrl}/#/`}>Riverscapes Data Warehouse</Link> and choose\n                    a new project\n                </Typography>\n                <div className={classes.buttonContainer}>\n                    <WarehouseButton title={`Warehouse`} href={`${warehouseUrl}/#/`} stay />\n                </div>\n            </Paper>\n            <div className={classes.spacer} />\n        </Container>\n    )\n}\nexport default ProjectNotFound\n","import React, { useMemo } from 'react'\nimport SplitPane, { Size } from 'react-split-pane'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        height: '100%',\n        position: 'relative'\n        // marginLeft: theme.spacing(1)\n    },\n    splitPane: {},\n    resizer: {\n        background: '#000',\n        opacity: 0.2,\n        zIndex: 1,\n        boxSizing: 'border-box',\n        backgroundClip: 'padding-box',\n        '&:hover': {\n            transition: 'all 2s ease'\n        },\n        '&.horizontal': {\n            height: 11,\n            margin: '-5px 0',\n            borderTop: '5px solid rgba(255, 255, 255, 0)',\n            borderBottom: '5px solid rgba(255, 255, 255, 0)',\n            cursor: 'row-resize',\n            width: '100%',\n            '&:hover': {\n                borderTop: '5px solid rgba(0, 0, 0, 0.5)',\n                borderBottom: '5px solid rgba(0, 0, 0, 0.5)'\n            }\n        },\n        '&.vertical': {\n            width: 11,\n            margin: '0 -5px',\n            borderLeft: '5px solid rgba(255, 255, 255, 0)',\n            borderRight: '5px solid rgba(255, 255, 255, 0)',\n            cursor: 'col-resize',\n            height: '100%',\n            '&:hover': {\n                borderLeft: '5px solid rgba(0, 0, 0, 0.5)',\n                borderRight: '5px solid rgba(0, 0, 0, 0.5)'\n            }\n        },\n        '&.disabled': {\n            cursor: 'not-allowed',\n            '&:hover': {\n                borderColor: 'transparent'\n            }\n        }\n    }\n}))\n\nexport interface AppSplitterProps {\n    open: boolean\n    child1: React.ReactChild\n    child2: React.ReactChild\n    split?: 'horizontal' | 'vertical'\n    primary?: 'first' | 'second'\n    defaultSize?: Size\n    minSize?: Size\n    maxSize?: Size\n}\n\nconst AppSplitter: React.FC<AppSplitterProps> = ({\n    open,\n    child1,\n    child2,\n    split,\n    primary,\n    defaultSize,\n    minSize,\n    maxSize\n}: AppSplitterProps) => {\n    const classes = useStyles()\n    const child1Memoized = useMemo(() => child1, [child1])\n    const child2Memoized = useMemo(() => child2, [child2])\n    if (!open)\n        return <div className={classes.root}>{!primary || primary === 'first' ? child1Memoized : child2Memoized}</div>\n    else {\n        return (\n            <div className={classes.root}>\n                <SplitPane\n                    className={classes.splitPane}\n                    resizerClassName={classes.resizer}\n                    split={split}\n                    primary={primary}\n                    defaultSize={defaultSize}\n                    minSize={minSize}\n                    maxSize={maxSize}\n                    pane1Style={{ overflow: 'hidden' }}\n                    pane2Style={{ overflow: 'hidden' }}\n                >\n                    {child1Memoized}\n                    {child2Memoized}\n                </SplitPane>\n            </div>\n        )\n    }\n}\n\nexport default AppSplitter\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport { WarehouseButton } from '@riverscapes/react-common'\nimport { warehouseUrl } from '../config'\nimport Container from '@material-ui/core/Container'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    rootContainer: {\n        // maxWidth: '50em',\n        // margin: '0 auto',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    root: {\n        padding: theme.spacing(2, 4, 4, 4)\n    },\n    logoContainer: {\n        padding: theme.spacing(2),\n        textAlign: 'center'\n    },\n    logo: {}\n}))\n\ninterface Props {\n    machineName: string | null\n    message: string\n    noWHButton?: boolean\n}\n\nconst WebRaveError: React.FC<Props> = ({ machineName, message, noWHButton }: Props) => {\n    const classes = useStyles()\n\n    return (\n        <Container className={classes.rootContainer} maxWidth=\"xs\">\n            <div className={classes.spacer} />\n            <Paper className={classes.root}>\n                <div className={classes.logoContainer}>\n                    <img className={classes.logo} src={process.env.PUBLIC_URL + '/RiverscapesLogo.png'} alt=\"logo\" />\n                </div>\n                <Typography paragraph variant=\"body1\">\n                    {message}\n                </Typography>\n                {!noWHButton && (\n                    <div style={{ textAlign: 'center' }}>\n                        <WarehouseButton title={`Warehouse`} href={`${warehouseUrl}/#/${machineName || ''}`} />\n                    </div>\n                )}\n            </Paper>\n            <div className={classes.spacer} />\n        </Container>\n    )\n}\nexport default WebRaveError\n","import React, { useState } from 'react'\n\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden'\n    },\n    appBar: {\n        flex: '0 0'\n    },\n    tabs: {},\n    tabContents: {\n        position: 'relative',\n        overflow: 'hidden',\n        flexGrow: 1\n    },\n    closeButton: {\n        zIndex: 1000,\n        background: theme.palette.secondary.main,\n        color: theme.palette.secondary.contrastText,\n        position: 'absolute',\n        top: 0,\n        right: 0\n    }\n}))\n\ninterface TreeDrawerProps {\n    tabs: { label: string; value: React.ReactChild }[]\n}\n\nconst TreeDrawer: React.FC<TreeDrawerProps> = ({ tabs }: TreeDrawerProps) => {\n    const classes = useStyles()\n    const [activeTab, setValue] = useState<number>(0)\n\n    const handleChange = (event: React.ChangeEvent<Record<string, unknown>>, newValue: number) => {\n        setValue(newValue)\n    }\n    return (\n        <div className={classes.root}>\n            <Tabs\n                value={activeTab}\n                className={classes.tabs}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant=\"fullWidth\"\n                aria-label=\"full width tabs example\"\n            >\n                {tabs.map((tab, idx) => (\n                    <Tab key={`tab-${idx}`} label={tab.label} value={idx} />\n                ))}\n            </Tabs>\n            {tabs.map(({ value }, tid) => (\n                <div\n                    key={`tab-${tid}`}\n                    className={classes.tabContents}\n                    style={{ display: tid === activeTab ? 'block' : 'none' }}\n                >\n                    {value}\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default TreeDrawer\n","import { useRecoilState } from 'recoil'\nimport { activeIdsAtom, activeViewAtom, mapErrorAtom } from '../recoil'\nimport { appDefaults } from '../config'\nimport { googleAnalytics } from '@riverscapes/react-common'\n\ninterface UseMapLayersReturn {\n    removeLayer: (lid: number) => void\n    addLayer: (lid: number) => void\n    toggleLayer: (lid: number) => void\n}\n\n/**\n * This is everything you'd ever want to do to manipulate layers on the map\n * @returns\n */\nconst useMapLayers = (): UseMapLayersReturn => {\n    const [currView, setCurrView] = useRecoilState(activeViewAtom)\n    const [activeIds, setActiveIds] = useRecoilState(activeIdsAtom)\n    const [error, setError] = useRecoilState(mapErrorAtom)\n\n    const removeLayer = (lid: number): void => {\n        googleAnalytics.event('webrave', 'remove_layer')\n        if (error) setError('')\n        if (currView !== null) setCurrView(null)\n        setActiveIds(activeIds.filter((id) => id !== lid))\n    }\n    const addLayer = (lid: number): void => {\n        googleAnalytics.event('webrave', 'add_layer')\n        if (activeIds.length === appDefaults.maxMapLayers) {\n            googleAnalytics.event('error', 'too_many_layers')\n            setError(`Only ${appDefaults.maxMapLayers} layers are allowed at a time.`)\n            return\n        }\n\n        if (error) setError('')\n        if (currView !== null) setCurrView(null)\n        setActiveIds(Array.from(new Set([...activeIds, lid])))\n    }\n    const toggleLayer = (lid: number): void => {\n        if (activeIds.indexOf(lid) > -1) removeLayer(lid)\n        else addLayer(lid)\n    }\n\n    return { removeLayer, addLayer, toggleLayer }\n}\n\nexport default useMapLayers\n","import React from 'react'\nimport highlightWords from 'highlight-words'\nimport { makeStyles } from '@material-ui/core/styles'\n\ninterface TreeNodeLabelProps {\n    text: string\n    query?: string\n}\n\nconst useStyles = makeStyles(() => ({\n    normal: {\n        fontStyle: 'italic',\n        opacity: 0.8\n    },\n    highlighted: {\n        fontWeight: 'bold'\n    }\n}))\n\nexport const TreeNodeLabel: React.FC<TreeNodeLabelProps> = ({ text, query }: TreeNodeLabelProps) => {\n    const classes = useStyles()\n    if (!query || query.length === 0) return <span>{text}</span>\n    const sanitized = query\n        .split(' ')\n        .map((t) => t.trim())\n        .filter((t) => t && t.length > 0)\n        .join(' ')\n    const chunks = highlightWords({ text, query: sanitized })\n\n    return (\n        <span>\n            {chunks.map((c, idx) => (\n                <span key={`textMatch-${idx}`} className={c.match ? classes.highlighted : classes.normal}>\n                    {c.text}\n                </span>\n            ))}\n        </span>\n    )\n}\n\nexport default TreeNodeLabel\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport createSvgIcon from '@material-ui/icons/utils/createSvgIcon';\nexport default createSvgIcon(_jsxs(React.Fragment, { children: [_jsx(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"5.5\", cy: \"5.5\", r: \"2.5\" }), _jsx(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"5.5\", cy: \"18.5\", r: \"2.5\" }), _jsx(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"12\", cy: \"12\", r: \"2.5\" }), _jsx(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"18.5\", cy: \"10\", r: \"2.5\" }), _jsx(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"17.5\", cy: \"16.5\", r: \"2.5\" })] }), 'Multidot');\n//# sourceMappingURL=Multidot.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport createSvgIcon from '@material-ui/icons/utils/createSvgIcon';\nexport default createSvgIcon(_jsx(React.Fragment, { children: _jsx(\"path\", { d: \" M 5.932 4.519 C 5.976 4.353 6 4.179 6 4 C 6 2.896 5.104 2 4 2 C 2.896 2 2 2.896 2 4 L 2 4 L 2 4 L 2 4 L 2 4 C 2 4.74 2.402 5.386 3 5.732 L 3 18.268 C 2.402 18.614 2 19.26 2 20 L 2 20 L 2 20 L 2 20 L 2 20 C 2 21.104 2.896 22 4 22 C 4.74 22 5.386 21.598 5.732 21 L 18.268 21 L 18.268 21 C 18.614 21.598 19.26 22 20 22 C 21.104 22 22 21.104 22 20 C 22 19.26 21.598 18.614 21 18.268 L 21 9.732 L 21 9.732 C 21.598 9.386 22 8.74 22 8 C 22 6.896 21.104 6 20 6 C 18.937 6 18.067 6.831 18.004 7.878 L 13.1 10.33 C 12.784 10.121 12.406 10 12 10 C 11.822 10 11.65 10.023 11.486 10.067 L 5.932 4.519 Z  M 5 18.268 C 5.303 18.444 5.556 18.697 5.732 19 L 18.268 19 C 18.444 18.697 18.697 18.444 19 18.268 L 19 9.732 C 18.966 9.712 18.933 9.692 18.9 9.67 L 13.996 12.122 C 13.933 13.169 13.063 14 12 14 C 10.896 14 10 13.104 10 12 L 10 12 C 10 11.822 10.023 11.649 10.067 11.485 L 5 6.41 L 5 18.268 Z \", fillRule: \"evenodd\" }) }), 'Polygon');\n//# sourceMappingURL=Polygon.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport createSvgIcon from '@material-ui/icons/utils/createSvgIcon';\nexport default createSvgIcon(_jsxs(React.Fragment, { children: [_jsx(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"4\", cy: \"13\", r: \"2\" }), _jsx(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"12\", cy: \"9\", r: \"2\" }), _jsx(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"20\", cy: \"13\", r: \"2\" }), _jsx(\"path\", { d: \" M 4.45 13.89 L 3.55 14.34 L 2.66 12.55 L 3.55 12.11 L 12 7.88 L 20.45 12.11 L 21.34 12.55 L 20.45 14.34 L 19.55 13.89 L 12 10.12 L 4.45 13.89 Z \" })] }), 'Polyline');\n//# sourceMappingURL=Polyline.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport createSvgIcon from '@material-ui/icons/utils/createSvgIcon';\nexport default createSvgIcon(_jsxs(React.Fragment, { children: [_jsx(\"path\", { d: \"M22,2l0,20l-20,0l0,-20l20,0Zm-2,2l-16,0l0,16l16,0l0,-16Z\" }), _jsx(\"rect\", { x: \"5\", y: \"5\", width: \"4\", height: \"4\" }), _jsx(\"rect\", { x: \"15\", y: \"5\", width: \"4\", height: \"4\" }), _jsx(\"rect\", { x: \"5\", y: \"15\", width: \"4\", height: \"4\" }), _jsx(\"rect\", { x: \"10\", y: \"10\", width: \"1\", height: \"5\" }), _jsx(\"rect\", { x: \"11\", y: \"10\", width: \"6\", height: \"2\" }), _jsx(\"rect\", { x: \"11\", y: \"12\", width: \"2\", height: \"2\" }), _jsx(\"rect\", { x: \"13\", y: \"7\", width: \"1\", height: \"2\" }), _jsx(\"rect\", { x: \"14\", y: \"9\", width: \"1\", height: \"1\" }), _jsx(\"rect\", { x: \"8\", y: \"10\", width: \"1\", height: \"4\" }), _jsx(\"rect\", { x: \"7\", y: \"11\", width: \"1\", height: \"3\" }), _jsx(\"rect\", { x: \"9\", y: \"11\", width: \"1\", height: \"1\" }), _jsx(\"rect\", { x: \"10\", y: \"6\", width: \"2\", height: \"3\" }), _jsx(\"rect\", { x: \"12\", y: \"7\", width: \"1\", height: \"1\" }), _jsx(\"rect\", { x: \"15\", y: \"14\", width: \"2\", height: \"4\" }), _jsx(\"rect\", { x: \"14\", y: \"14\", width: \"1\", height: \"1\" }), _jsx(\"rect\", { x: \"17\", y: \"15\", width: \"2\", height: \"2\" }), _jsx(\"rect\", { x: \"11\", y: \"16\", width: \"1\", height: \"3\" }), _jsx(\"rect\", { x: \"12\", y: \"15\", width: \"2\", height: \"2\" }), _jsx(\"rect\", { x: \"10\", y: \"18\", width: \"1\", height: \"1\" })] }), 'QRCode');\n//# sourceMappingURL=QRCode.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport createSvgIcon from '@material-ui/icons/utils/createSvgIcon';\nexport default createSvgIcon(_jsxs(React.Fragment, { children: [_jsxs(\"g\", { children: [_jsx(\"g\", __assign({ transform: \"matrix(1,0,0,1,-1.77636e-15,3.97768)\" }, { children: _jsx(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" }) })), _jsx(\"g\", __assign({ transform: \"matrix(1,0,0,1,0,11.9777)\" }, { children: _jsx(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" }) })), _jsx(\"g\", __assign({ transform: \"matrix(1,0,0,1,8,4)\" }, { children: _jsx(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" }) })), _jsx(\"g\", __assign({ transform: \"matrix(1,0,0,1,8,12)\" }, { children: _jsx(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" }) })), _jsx(\"g\", __assign({ transform: \"matrix(1,0,0,1,4,-0.0223232)\" }, { children: _jsx(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" }) })), _jsx(\"g\", __assign({ transform: \"matrix(1,0,0,1,4,7.97768)\" }, { children: _jsx(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" }) })), _jsx(\"g\", __assign({ transform: \"matrix(1,0,0,1,12,0)\" }, { children: _jsx(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" }) })), _jsx(\"g\", __assign({ transform: \"matrix(1,0,0,1,12,8)\" }, { children: _jsx(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" }) }))] }), _jsxs(\"g\", __assign({ id: \"Raster\" }, { children: [_jsx(\"path\", { d: \"M21,5.432C21,4.09 19.91,3 18.568,3L5.432,3C4.09,3 3,4.09 3,5.432L3,18.568C3,19.91 4.09,21 5.432,21L18.568,21C19.91,21 21,19.91 21,18.568L21,5.432Z\", style: { fillOpacity: 0 } }), _jsx(\"path\", { d: \"M22,5.432C22,3.538 20.462,2 18.568,2L5.432,2C3.538,2 2,3.538 2,5.432L2,18.568C2,20.462 3.538,22 5.432,22L18.568,22C20.462,22 22,20.462 22,18.568L22,5.432ZM20,5.432L20,18.568C20,19.358 19.358,20 18.568,20C18.568,20 5.432,20 5.432,20C4.642,20 4,19.358 4,18.568C4,18.568 4,5.432 4,5.432C4,4.642 4.642,4 5.432,4C5.432,4 18.568,4 18.568,4C19.358,4 20,4.642 20,5.432Z\" })] }))] }), 'Multidot');\n//# sourceMappingURL=Raster.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { ProjectTreeLayerTypes } from '@riverscapes/common';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { Multidot, Polygon, Polyline, Raster } from './';\nvar useStyles = makeStyles(function () { return ({\n    root: {}\n}); });\nvar LayerIcon = function (_a) {\n    var layerType = _a.layerType, iconProps = _a.iconProps, className = _a.className;\n    var classes = useStyles();\n    var Icon = Multidot;\n    switch (layerType) {\n        case ProjectTreeLayerTypes.POINT:\n            Icon = Multidot;\n            break;\n        case ProjectTreeLayerTypes.LINE:\n            Icon = Polyline;\n            break;\n        case ProjectTreeLayerTypes.POLYGON:\n            Icon = Polygon;\n            break;\n        case ProjectTreeLayerTypes.RASTER:\n            Icon = Raster;\n            break;\n        case ProjectTreeLayerTypes.FILE:\n            Icon = InsertDriveFileIcon;\n            break;\n        case ProjectTreeLayerTypes.REPORT:\n            Icon = DescriptionIcon;\n            break;\n        default:\n            break;\n    }\n    return _jsx(Icon, __assign({ className: className || classes.root }, iconProps));\n};\nexport default LayerIcon;\n//# sourceMappingURL=LayerIcon.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport createSvgIcon from '@material-ui/icons/utils/createSvgIcon';\nexport default createSvgIcon(_jsx(\"path\", { d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\" }), 'Multidot');\n//# sourceMappingURL=ContentCopy.js.map","import React from 'react'\nimport { TilingStatus, ProjectTreeLayerTypes, ProjectTreeLayerTileTypes } from '@riverscapes/common'\n// import log from 'loglevel'\nimport TreeItem from '@material-ui/lab/TreeItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport TreeNodeLabel from './TreeNodeLabel'\n\nimport { LayerIcon } from '@riverscapes/react-icons'\nimport clsx from 'clsx'\n// import log from 'loglevel'\n\nexport interface TreeLeafProps {\n    id: number\n    layerType: ProjectTreeLayerTypes\n    label: string\n    tilesState: TilingStatus\n    active?: boolean\n    hidden?: boolean\n    searchText?: string\n    handleContext: (lid: number, mousex: number, mousey: number) => void\n    handleClick: (lid: number) => void\n    handleDoubleClick: (lid: number) => void\n}\n// const FADE_TIME = 500\n\nconst useLeafStyles = makeStyles((theme) => ({\n    leaf: {\n        cursor: 'context-menu',\n        marginLeft: theme.spacing(2)\n    },\n    active: {\n        fontWeight: 'bold'\n    },\n    treeLeafLabel: {\n        display: 'flex'\n    },\n    innerLabel: {\n        flexGrow: 0\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    metaIcon: {\n        margin: theme.spacing(0.25),\n        opacity: 0.2,\n        fontSize: theme.spacing(2),\n        lineHeight: '1rem'\n    },\n    loadingSpinner: {\n        color: theme.palette.text.secondary\n    },\n    tileStatus: {\n        flexGrow: 0,\n        fontStyle: 'italic'\n    },\n    leafQUEUED: {\n        color: '#999999',\n        fontStyle: 'italic'\n    },\n    leafNO_GEOMETRIES: {\n        color: '#666666'\n    },\n    leafCREATING: {\n        color: 'orange'\n    },\n    leafTILING_ERROR: {\n        color: 'red',\n        fontStyle: 'italic'\n    },\n    leafTIMEOUT: {\n        color: '#999999',\n        fontStyle: 'italic'\n    },\n    leafFETCH_ERROR: {\n        color: 'red',\n        fontStyle: 'italic'\n    },\n    leafNOT_FOUND: {\n        color: 'red',\n        fontStyle: 'italic'\n    },\n    leafINDEX_NOT_FOUND: {\n        color: 'red',\n        fontStyle: 'italic'\n    },\n    leafLAYER_NOT_FOUND: {\n        color: 'red',\n        fontStyle: 'italic'\n    },\n    leafUNKNOWN: {\n        color: theme.palette.text.secondary,\n        fontStyle: 'italic'\n    },\n    leafFETCHING: {\n        color: theme.palette.text.secondary,\n        fontStyle: 'italic'\n    },\n    leafSUCCESS: {}\n}))\n\nexport const TreeLeaf: React.FC<TreeLeafProps> = ({\n    id,\n    layerType,\n    label,\n    active,\n    hidden,\n    searchText,\n    tilesState,\n    handleContext,\n    handleClick,\n    handleDoubleClick\n}: TreeLeafProps) => {\n    const classes = useLeafStyles()\n\n    const onCtxMenu = (event) => {\n        event.preventDefault()\n        handleContext(id, event.clientX - 2, event.clientY - 4)\n    }\n    let tileStatusStr: React.ReactElement | string | null = null\n    if (ProjectTreeLayerTileTypes.indexOf(layerType) > -1 || layerType === ProjectTreeLayerTypes.REPORT) {\n        switch (tilesState) {\n            case TilingStatus.SUCCESS:\n                // tileStatusStr = 'Available'\n                break\n            case TilingStatus.QUEUED:\n                tileStatusStr = 'Queued for tiling...'\n                break\n            case TilingStatus.CREATING:\n                tileStatusStr = 'Building tiles...'\n                break\n            case TilingStatus.TILING_ERROR:\n                tileStatusStr = 'Tiling error'\n                break\n            case TilingStatus.TIMEOUT:\n                tileStatusStr = 'Tile timeout'\n                break\n            case TilingStatus.INDEX_NOT_FOUND:\n                tileStatusStr = 'Missing tiles'\n                break\n            case TilingStatus.NO_GEOMETRIES:\n                tileStatusStr = 'Empty geometry'\n                break\n            case TilingStatus.LAYER_NOT_FOUND:\n                tileStatusStr = 'Layer missing'\n                break\n            case TilingStatus.FETCH_ERROR:\n                tileStatusStr = 'Fetch error'\n                break\n            case TilingStatus.UNKNOWN:\n                tileStatusStr = (\n                    <CircularProgress className={classes.loadingSpinner} color=\"inherit\" thickness={3} size={15} />\n                )\n                break\n            case TilingStatus.FETCHING:\n                tileStatusStr = (\n                    <CircularProgress className={classes.loadingSpinner} color=\"inherit\" thickness={3} size={15} />\n                )\n                break\n            default:\n                break\n        }\n    }\n\n    return (\n        <TreeItem\n            // this is IMPORTANT! 'l-##' denotes a branch\n            nodeId={`l-${id}`}\n            className={clsx(classes.leaf, tilesState && classes[`leaf${tilesState}`])}\n            // TODO: Temproarily hide layers\n            hidden={hidden}\n            onClick={() => handleClick(id)}\n            onDoubleClick={() => handleDoubleClick(id)}\n            label={\n                <div className={classes.treeLeafLabel}>\n                    <Typography\n                        variant=\"body2\"\n                        color=\"inherit\"\n                        className={clsx(classes.innerLabel, active && classes.active)}\n                    >\n                        <TreeNodeLabel text={label} query={searchText} />\n                    </Typography>\n                    <div className={classes.spacer} />\n                    {tileStatusStr && (\n                        <Typography\n                            variant=\"caption\"\n                            color=\"inherit\"\n                            className={clsx(classes.innerLabel, active && classes.active)}\n                        >\n                            {tileStatusStr}\n                        </Typography>\n                    )}\n                </div>\n            }\n            onContextMenu={onCtxMenu}\n            icon={<LayerIcon layerType={layerType} />}\n        />\n    )\n}\n\nexport default TreeLeaf\n","import React from 'react'\n\nimport TreeItem from '@material-ui/lab/TreeItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport TreeNodeLabel from './TreeNodeLabel'\nimport clsx from 'clsx'\n\nexport interface TreeBranchProps {\n    id: number\n    label: string\n    hidden?: boolean\n    searchText?: string\n    children?: React.ReactChild[]\n}\n\nconst useBranchStyles = makeStyles((theme) => ({\n    branch: {\n        marginTop: theme.spacing(0.5)\n    },\n    iconContainer: {\n        width: theme.spacing(4)\n    },\n    label: {\n        // paddingLeft: theme.spacing(1.5)\n    }\n}))\n\nexport const TreeBranch: React.FC<TreeBranchProps> = ({ id, hidden, label, searchText, children }: TreeBranchProps) => {\n    const classes = useBranchStyles()\n    return (\n        <TreeItem\n            // this is IMPORTANT! 'b-##' denotes a branch\n            nodeId={`b-${id}`}\n            className={clsx(classes.branch)}\n            classes={{\n                label: classes.label,\n                iconContainer: classes.iconContainer\n            }}\n            onDoubleClick={(e) => {\n                e.preventDefault()\n                e.stopPropagation()\n            }}\n            onContextMenu={(e) => {\n                e.preventDefault()\n                e.stopPropagation()\n            }}\n            hidden={hidden}\n            label={\n                <Typography variant=\"body1\">\n                    <TreeNodeLabel text={label} query={searchText} />\n                </Typography>\n            }\n        >\n            {children}\n        </TreeItem>\n    )\n}\n\nexport default TreeBranch\n","import React from 'react'\n\nimport TreeView from '@material-ui/lab/TreeView'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport FolderIcon from '@material-ui/icons/Folder'\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen'\nimport SearchIcon from '@material-ui/icons/Search'\n\nimport AppSplitter from '../AppSplitter'\nimport { debounce } from 'lodash'\n// import log from 'loglevel'\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    folderIcon: {\n        color: theme.palette.secondary.main\n    },\n    tree: {\n        flexGrow: 1,\n        overflow: 'scroll',\n        paddingBottom: theme.spacing(5)\n    },\n    searchBox: {\n        flexGrow: 0,\n        padding: theme.spacing(0.5)\n    },\n    searchBoxInput: {\n        padding: theme.spacing(0.75, 0.5)\n    }\n}))\n\ninterface TreeControlProps {\n    lyrInfoOpen: boolean\n    setSearchText: (text: string) => void\n    expanded: string[]\n    ctxMenu: React.ReactElement | null\n    lyrInfo: React.ReactElement | null\n    selected: string[]\n    setExpanded: (ids: string[]) => void\n    setSelected: (id: string[]) => void\n    children: React.ReactChild | React.ReactChild[]\n}\n\nconst TreeControl: React.FC<TreeControlProps> = ({\n    lyrInfoOpen,\n    setSearchText,\n    expanded,\n    ctxMenu,\n    lyrInfo,\n    selected,\n    setExpanded,\n    setSelected,\n    children\n}: TreeControlProps) => {\n    const classes = useStyles()\n\n    const onNodeToggle = (event: React.ChangeEvent<Record<string, unknown>>, nodeIds: string[]) => {\n        setExpanded(nodeIds)\n    }\n\n    const onNodeSelect = (event: React.ChangeEvent<Record<string, unknown>>, nodeIds: string | string[]) => {\n        setSelected(Array.isArray(nodeIds) ? nodeIds : [nodeIds])\n    }\n    const setSearchDebounced = debounce((stext: string) => setSearchText(stext), 100)\n\n    return (\n        <AppSplitter\n            open={lyrInfoOpen}\n            split=\"horizontal\"\n            primary=\"first\"\n            defaultSize=\"60%\"\n            maxSize=\"80%\"\n            minSize=\"30%\"\n            child1={\n                <div className={classes.container}>\n                    <TextField\n                        fullWidth\n                        className={classes.searchBox}\n                        placeholder=\"Filter Project Layers...\"\n                        variant=\"outlined\"\n                        onChange={(event) => {\n                            setSearchDebounced((event.target.value as string).toLowerCase().trim())\n                        }}\n                        InputProps={{\n                            classes: { input: classes.searchBoxInput },\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <SearchIcon />\n                                </InputAdornment>\n                            )\n                        }}\n                    />\n                    <TreeView\n                        className={classes.tree}\n                        defaultCollapseIcon={\n                            <>\n                                <ExpandMoreIcon />\n                                <FolderOpenIcon className={classes.folderIcon} />\n                            </>\n                        }\n                        defaultExpandIcon={\n                            <>\n                                <ChevronRightIcon />\n                                <FolderIcon className={classes.folderIcon} />\n                            </>\n                        }\n                        onNodeToggle={onNodeToggle}\n                        onNodeSelect={onNodeSelect}\n                        selected={selected}\n                        expanded={expanded}\n                    >\n                        {children}\n                    </TreeView>\n                    {ctxMenu}\n                </div>\n            }\n            child2={lyrInfo || <div />}\n        />\n    )\n}\n\nexport default TreeControl\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { SvgIconComponent } from '@material-ui/icons'\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    item: {},\n    menuItemIcon: {\n        marginRight: theme.spacing(1)\n    },\n    error: {\n        color: theme.palette.error.main\n    }\n}))\n\nexport type CtxMenuItemType = {\n    label: string\n    error?: boolean\n    Icon?: SvgIconComponent\n    handleClick?: () => void\n    disabled?: boolean\n}[]\n\nexport interface TreeControlProps {\n    position?: { top: number; left: number }\n    open: boolean\n    onClose: () => void\n    menuItems: CtxMenuItemType\n}\n\nconst TreeContextMenu: React.FC<TreeControlProps> = ({ open, position, onClose, menuItems }: TreeControlProps) => {\n    const classes = useStyles()\n    return (\n        <Menu\n            keepMounted\n            open={open}\n            onClose={onClose}\n            anchorReference=\"anchorPosition\"\n            anchorPosition={position}\n            className={classes.root}\n        >\n            {menuItems.map(({ label, Icon, handleClick, disabled, error }, idx) => (\n                <MenuItem\n                    key={`ctxMenuIt-${idx}`}\n                    onClick={handleClick}\n                    disabled={disabled}\n                    className={clsx(classes.item, error && classes.error)}\n                >\n                    {Icon && <Icon className={classes.menuItemIcon} color=\"inherit\" />}\n                    {label}\n                </MenuItem>\n            ))}\n        </Menu>\n    )\n}\n\nexport default TreeContextMenu\n","import { useRecoilCallback } from 'recoil'\nimport { mapSizeAtom, viewportAtom } from '../recoil'\nimport { zoomExtents } from '../lib/util'\n\nexport type UseZoomExtentsReturn = (lyrBounds?: [number, number, number, number]) => Promise<boolean>\n\nconst useZoomExtents = (): UseZoomExtentsReturn => {\n    const zoomLayerExtent = useRecoilCallback(\n        ({ snapshot, set }) =>\n            async (lyrBounds?: [number, number, number, number]): Promise<boolean> => {\n                const mapSize = await snapshot.getPromise(mapSizeAtom)\n                const viewport = await snapshot.getPromise(viewportAtom)\n                if (mapSize && lyrBounds) {\n                    const zoomView = zoomExtents(lyrBounds, mapSize.width, mapSize.height)\n                    set(viewportAtom, { ...viewport, ...zoomView })\n                    return true\n                } else return false\n            }\n    )\n    return zoomLayerExtent\n}\n\nexport default useZoomExtents\n","import React from 'react'\nimport TreeContextMenu, { CtxMenuItemType } from '../components/tree/TreeContextMenu'\nimport { useRecoilValue, useSetRecoilState } from 'recoil'\nimport { layerStateSelectorFamily, TreeCtxState, treeInfoPaneIdAtom, treeInfoPaneOpenAtom } from '../recoil'\nimport { ProjectTreeLayerTypes, SymbologyStatus, TilingStatus } from '@riverscapes/common'\nimport useMapLayers from '../hooks/useMapLayers'\nimport useZoomExtents from '../hooks/useZoomExtents'\n\n// Icons for our menu items\nimport ZoomOutMapIcon from '@material-ui/icons/ZoomOutMap'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle'\nimport DownloadIcon from '@material-ui/icons/CloudDownload'\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty'\nimport AssessmentIcon from '@material-ui/icons/Assessment'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport InfoIcon from '@material-ui/icons/Info'\n\ninterface Props {\n    ctxState: TreeCtxState\n    downloadFile: (fkey: string) => Promise<void>\n    onClose: () => void\n}\n\nconst TreeContextMenuConnect: React.FC<Props> = ({ ctxState, onClose, downloadFile }: Props) => {\n    const layer = useRecoilValue(layerStateSelectorFamily(ctxState.leafId))\n    const setTreeInfoPaneId = useSetRecoilState(treeInfoPaneIdAtom)\n    const setTreeeInfoPaneOpen = useSetRecoilState(treeInfoPaneOpenAtom)\n    const { addLayer, removeLayer } = useMapLayers()\n    const zoomLayerExtent = useZoomExtents()\n    const menuItems: CtxMenuItemType = []\n\n    if (layer.leaf.layerType === ProjectTreeLayerTypes.REPORT) {\n        if (layer.tileStatus === TilingStatus.FETCHING || layer.tileStatus === TilingStatus.QUEUED) {\n            menuItems.push({\n                label: 'Report queued for upload...',\n                Icon: HourglassEmptyIcon,\n                disabled: true\n            })\n        } else {\n            menuItems.push({\n                label: 'Open Report',\n                Icon: AssessmentIcon,\n                disabled: !(layer.tiles?.url && layer.tileStatus === TilingStatus.SUCCESS),\n                handleClick: (): void => {\n                    const newWindow = window.open(layer.tiles?.url + 'index.html', '_blank', 'noopener,noreferrer')\n                    if (newWindow) newWindow.opener = null\n                    onClose()\n                }\n            })\n        }\n    } else if (layer.leaf.layerType === ProjectTreeLayerTypes.FILE) {\n        menuItems.push({\n            label: 'Download file',\n            Icon: DownloadIcon,\n            handleClick: (): void => {\n                if (layer.leaf.layerPath) downloadFile(layer.leaf.layerPath)\n                onClose()\n            }\n        })\n    } else if (layer.tileStatus === TilingStatus.FETCHING || layer.symbologyStatus === SymbologyStatus.FETCHING) {\n        menuItems.push({\n            label: 'Loading tile data...',\n            Icon: HourglassEmptyIcon,\n            disabled: true\n        })\n    } else {\n        // Now we add some layers\n        if (layer.tileStatus === TilingStatus.SUCCESS) {\n            if (layer.legendActive) {\n                menuItems.push(\n                    {\n                        label: 'Remove from map',\n                        Icon: RemoveCircleIcon,\n                        handleClick: (): void => {\n                            removeLayer(layer.leaf.id)\n                            onClose()\n                        }\n                    },\n                    {\n                        label: 'Zoom layer extents',\n                        Icon: ZoomOutMapIcon,\n                        // disabled: Boolean(layer.tiles?.bounds),\n                        handleClick: (): void => {\n                            zoomLayerExtent(layer.tiles?.bounds)\n                            onClose()\n                        }\n                    }\n                )\n            } else if (!layer.legendActive && layer.renderable) {\n                menuItems.push(\n                    {\n                        label: 'Add to map',\n                        Icon: AddCircleIcon,\n                        handleClick: (): void => {\n                            addLayer(layer.leaf.id)\n                            onClose()\n                        }\n                    },\n                    {\n                        label: 'Zoom layer extents (add to map first)',\n                        Icon: ZoomOutMapIcon,\n                        disabled: true\n                    }\n                )\n            }\n        } else if (layer.tileStatus === TilingStatus.QUEUED) {\n            menuItems.push({\n                label: 'Queued for tiling...',\n                Icon: HourglassEmptyIcon,\n                disabled: true\n            })\n        } else if (layer.tileStatus === TilingStatus.NOT_APPLICABLE) {\n            menuItems.push({\n                label: 'Tiling is not applicable to this layer',\n                Icon: ErrorIcon,\n                disabled: true\n            })\n        } else if (layer.tileStatus === TilingStatus.NO_GEOMETRIES) {\n            menuItems.push({\n                label: 'No Geometries were found',\n                Icon: ErrorIcon,\n                disabled: true\n            })\n        } else if (layer.tileStatus === TilingStatus.CREATING) {\n            menuItems.push({\n                label: 'Currently building tiles...',\n                Icon: HourglassEmptyIcon,\n                disabled: true\n            })\n        } else if (layer.tileStatus === TilingStatus.TILING_ERROR) {\n            menuItems.push({\n                label: 'Tiles did not build',\n                Icon: ErrorIcon,\n                disabled: true,\n                error: true\n            })\n        } else if (layer.tileStatus === TilingStatus.TIMEOUT) {\n            menuItems.push({\n                label: 'Tiling timed out',\n                Icon: ErrorIcon,\n                disabled: true,\n                error: true\n            })\n        } else if (layer.tileStatus === TilingStatus.INDEX_NOT_FOUND) {\n            menuItems.push({\n                label: 'Error fetching tile info',\n                Icon: ErrorIcon,\n                disabled: true,\n                error: true\n            })\n        } else if (layer.tileStatus === TilingStatus.LAYER_NOT_FOUND) {\n            menuItems.push({\n                label: 'The original GIS layer is missing',\n                Icon: ErrorIcon,\n                disabled: true,\n                error: true\n            })\n        } else if (layer.tileStatus === TilingStatus.FETCH_ERROR) {\n            menuItems.push({\n                label: 'Error fetching tile info',\n                Icon: ErrorIcon,\n                disabled: true,\n                error: true\n            })\n        }\n        menuItems.push({\n            label: 'Layer Information',\n            Icon: InfoIcon,\n            handleClick: (): void => {\n                setTreeInfoPaneId(ctxState.leafId)\n                setTreeeInfoPaneOpen(true)\n                onClose()\n            }\n        })\n    }\n\n    return (\n        <TreeContextMenu\n            open={Boolean(ctxState)}\n            position={ctxState.position}\n            onClose={onClose}\n            menuItems={menuItems}\n        />\n    )\n}\n\nexport default TreeContextMenuConnect\n","import React from 'react'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableRow from '@material-ui/core/TableRow'\nimport { dates } from '@northarrowresearch/common'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography, Link } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1)\n    },\n    table: {},\n    section: {\n        marginBottom: theme.spacing(3)\n    },\n    sectionHeader: {\n        borderBottom: '1px solid'\n    },\n    metaKey: { fontWeight: 'bold' },\n    metaValue: {\n        color: theme.palette.text.secondary,\n        overflowWrap: 'anywhere',\n        textAlign: 'left'\n    }\n}))\n\ninterface MetaDataProps {\n    title: string\n    meta: Record<string, string>\n}\n\nconst SPECIAL_FORMATS: Record<string, (val: string) => string> = {\n    datecreated: (val) => {\n        const valDate = dates.HTML5InputToTimestamp(val)\n        return valDate > 0 ? `${dates.formatDate(valDate, 'lll')} (${dates.formatDateAgo(valDate)})` : 'unknown'\n    }\n}\nconst formatString = (key: string, val: string): React.ReactNode => {\n    const lwrKey = key.toLowerCase()\n    if (Object.keys(SPECIAL_FORMATS).indexOf(lwrKey) > -1) {\n        return SPECIAL_FORMATS[lwrKey](val)\n    } else if (\n        val &&\n        val.match(/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/)\n    ) {\n        return (\n            <Link href={val} target=\"_blank\">\n                {val}\n            </Link>\n        )\n    } else return val\n}\n\nconst MetaData: React.FC<MetaDataProps> = ({ title, meta }: MetaDataProps) => {\n    const classes = useStyles()\n    if (Object.keys(meta).length === 0) return null\n    return (\n        <div className={classes.section}>\n            <Typography variant=\"subtitle1\" className={classes.sectionHeader}>\n                {title}\n            </Typography>\n            <TableContainer>\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                    <TableBody>\n                        {Object.keys(meta).map((rowKey) => (\n                            <TableRow key={rowKey}>\n                                <TableCell component=\"th\" scope=\"row\" className={classes.metaKey}>\n                                    {rowKey}\n                                </TableCell>\n                                <TableCell align=\"right\" className={classes.metaValue}>\n                                    {formatString(rowKey, meta[rowKey])}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    )\n}\n\nexport default MetaData\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\nimport { WarehouseButton } from '@riverscapes/react-common'\nimport { ProjectTreeLeaf } from '@riverscapes/common'\n\nimport MetaData from './MetaData'\n\n// TODO: Maybe this isn't the best but I don't want to pass it through the whole system\n// Maybe a connector for WarehouseButton????\nimport { warehouseUrl } from '../../config'\n\nconst DONTSHOW = ['_rs_lyr_origin_url']\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1)\n    },\n    minimal: {\n        // background:\n    },\n    whNote: {\n        padding: theme.spacing(2, 1)\n    }\n}))\n\ninterface LayerMetaProps {\n    leaf: ProjectTreeLeaf\n    minimal?: boolean\n}\n\nfunction makeSections(meta: Record<string, string>): Record<string, Record<string, string>> {\n    const keys = Object.keys(meta).filter((k) => DONTSHOW.indexOf(k) < 0)\n\n    const distill = (key) =>\n        keys.filter((k) => k.indexOf(key) === 0).reduce((acc, rk) => ({ ...acc, [rk.replace(key, '')]: meta[rk] }), {})\n\n    return {\n        upstreamWarehouse: distill('_rs_wh_'),\n        upstreamProject: distill('_rs_prj_'),\n        upstreamLayer: distill('_rs_lyr_'),\n        Layer: keys.filter((k) => k.indexOf('_rs') !== 0).reduce((acc, rk) => ({ ...acc, [rk]: meta[rk] }), {})\n    }\n}\n\nconst LayerMeta: React.FC<LayerMetaProps> = ({ leaf, minimal }: LayerMetaProps) => {\n    const classes = useStyles()\n    const meta = leaf.meta || {}\n    const sections = makeSections(meta)\n    return (\n        <Paper className={minimal ? classes.minimal : classes.root}>\n            {Object.keys(sections.Layer).length > 0 && <MetaData title=\"Layer Metadata\" meta={sections.Layer} />}\n            {!minimal && Object.keys(sections.upstreamWarehouse).length > 0 && (\n                <div className={classes.whNote}>\n                    <Typography variant=\"caption\" component=\"div\">\n                        This layer was imported from a {meta._rs_prj_projType} project in the Riverscapes warehouse. You\n                        can visit the original project using the button below.\n                    </Typography>\n                    <WarehouseButton\n                        title={`Original ${meta._rs_prj_projType} Project`}\n                        href={`${warehouseUrl}#/${meta['_rs_wh_program']}/${meta['_rs_wh_id']}`}\n                    />\n                </div>\n            )}\n            {Object.keys(sections.upstreamProject).length > 0 && (\n                <MetaData title=\"Original Project Metadata\" meta={sections.upstreamProject} />\n            )}\n            {Object.keys(sections.upstreamLayer).length > 0 && (\n                <MetaData title=\"Original Layer Metadata\" meta={sections.upstreamLayer} />\n            )}\n            <MetaData\n                title=\"Other\"\n                meta={{\n                    Symbology: leaf.symbology || 'None',\n                    'Layer Name': leaf.layerName || 'None',\n                    'Layer Id': leaf.layerId || 'None',\n                    'Default Transparency': `${leaf.transparency || 'None'}`\n                }}\n            />\n        </Paper>\n    )\n}\n\nexport default LayerMeta\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { dates } from '@northarrowresearch/common'\nimport { TileService } from '@riverscapes/common'\n\nimport numeral from 'numeral'\nimport MetaData from './MetaData'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1)\n    },\n    sectionHeader: {\n        borderBottom: '1px solid'\n    },\n    table: {},\n    metaKey: { fontWeight: 'bold' },\n    metaValue: {\n        color: theme.palette.text.secondary\n    }\n}))\n\ninterface LayerTileInfoProps {\n    tiles: TileService\n}\n\nconst LayerTileInfo: React.FC<LayerTileInfoProps> = ({ tiles }: LayerTileInfoProps) => {\n    const classes = useStyles()\n    const meta: Record<string, string> = {\n        Status: tiles.status as string,\n        Error: tiles.error as string,\n        Started: tiles\n            ? `${dates.formatDate(tiles.started, 'lll')} (${dates.formatDateAgo(tiles.started)})`\n            : 'unknown',\n        'Last status': tiles\n            ? `${dates.formatDate(tiles.lastStatus, 'lll')} (${dates.formatDateAgo(tiles.lastStatus)})`\n            : 'unknown',\n        'Creation time': tiles ? `${((tiles.duration || 0) / 60).toFixed(0)} minutes` : 'unknown',\n        'Original Size': tiles && tiles.originFile ? numeral(tiles.originFile.size).format('0.0 b') : 'unknown',\n        Files: tiles && tiles.numFiles ? numeral(tiles.numFiles).format('0,0') : 'unknown',\n        'Relative path': tiles.rsLayer?.path || 'unknown',\n        'Physical path': tiles ? (tiles.originFile?.key as string) : 'unknown',\n        'Modified (origin)': tiles\n            ? `${dates.formatDate(tiles.originFile?.lastModified, 'lll')} (${dates.formatDateAgo(\n                  tiles.originFile?.lastModified\n              )})`\n            : 'unknown'\n    }\n    return (\n        <Paper className={classes.root}>\n            <MetaData title=\"Webtile information\" meta={meta} />\n        </Paper>\n    )\n}\n\nexport default LayerTileInfo\n","import React from 'react'\n\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { ProjectTreeLeaf, TileService } from '@riverscapes/common'\nimport { LayerIcon } from '@riverscapes/react-icons'\n\nimport LayerMeta from './LayerMeta'\nimport LayerTileInfo from './LayerTileInfo'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100%',\n        overflow: 'hidden',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    toolbar: {\n        flex: '0 0 ',\n        padding: theme.spacing(0, 1),\n        minHeight: theme.spacing(6),\n        background: theme.palette.primary.dark,\n        color: theme.palette.primary.contrastText\n    },\n    spacer: { flexGrow: 1 },\n    layerTitle: {},\n    layerIcon: {},\n    layerMeta: {\n        flexGrow: 1,\n        overflowY: 'scroll',\n        userSelect: 'text',\n        '& *': {\n            userSelect: 'text'\n        }\n    },\n    typeContainer: {\n        // borderRadius: theme.spacing(1),\n        // background: '#FFFFFF22',\n        // margin: theme.spacing(1),\n        // padding: theme.spacing(0, 1),\n        // border: '1px solid #FFFFFF22'\n    },\n    closeButton: {\n        // marginLeft: theme.spacing(2)\n    }\n}))\n\ninterface LayerInfoProps {\n    leaf: ProjectTreeLeaf\n    tiles?: TileService\n    handleClose: () => void\n}\n\nconst LayerInfo: React.FC<LayerInfoProps> = ({ leaf, tiles, handleClose }: LayerInfoProps) => {\n    const classes = useStyles()\n    return (\n        <div className={classes.root}>\n            <Toolbar className={classes.toolbar}>\n                <Tooltip title={`This is a ${leaf.layerType} layer`}>\n                    <IconButton edge=\"start\" className={classes.layerIcon} color=\"inherit\" aria-label=\"menu\">\n                        <LayerIcon layerType={leaf.layerType} />\n                    </IconButton>\n                </Tooltip>\n                <Typography variant=\"body2\" className={classes.layerTitle}>\n                    {leaf.label}\n                </Typography>\n                <div className={classes.spacer} />\n                {/* <div className={classes.typeContainer}>\n                    </div> */}\n                <IconButton\n                    edge=\"start\"\n                    className={classes.closeButton}\n                    color=\"inherit\"\n                    aria-label=\"menu\"\n                    onClick={handleClose}\n                >\n                    <CloseIcon />\n                </IconButton>\n            </Toolbar>\n            <div className={classes.layerMeta}>\n                {leaf && <LayerMeta leaf={leaf} />}\n                {tiles && <LayerTileInfo tiles={tiles} />}\n            </div>\n        </div>\n    )\n}\n\nexport default LayerInfo\n","import React from 'react'\nimport { useRecoilValue } from 'recoil'\nimport { layerStateSelectorFamily } from '../recoil'\nimport LayerInfo from '../components/meta/LayerInfo'\n\ninterface Props {\n    leafID: number\n    handleClose: () => void\n}\n\nconst TreeLayerInfo: React.FC<Props> = ({ leafID, handleClose }: Props) => {\n    const layer = useRecoilValue(layerStateSelectorFamily(leafID))\n    return <LayerInfo leaf={layer.leaf} tiles={layer.tiles} handleClose={handleClose} />\n}\n\nexport default TreeLayerInfo\n","import React from 'react'\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil'\nimport {\n    projectHiddenNodesSelector,\n    treeAllIdsSelector,\n    treeContextMenuAtom,\n    treeSelectedIdsAtom,\n    treeExpandedIdsAtom,\n    treeFilterTextAtom,\n    treeBranchStateSelectorFamily,\n    treeLeafStateSelector,\n    treeInfoPaneIdAtom,\n    treeInfoPaneOpenAtom,\n    treeRootBranchId\n} from '../recoil'\nimport useMapLayers from '../hooks/useMapLayers'\nimport TreeLeaf from '../components/tree/TreeLeaf'\nimport TreeBranch from '../components/tree/TreeBranch'\nimport TreeControl from '../components/tree/TreeControl'\nimport { isEqual } from 'lodash'\n\nimport TreeContextMenuConnect from './TreeContextMenu.connect'\nimport TreeLayerInfoConnect from './TreeLayerInfo.connect'\nimport log from 'loglevel'\nimport { ProjectTreeLayerTypes } from '@riverscapes/common'\nimport { googleAnalytics } from '@riverscapes/react-common'\ninterface TreeBranchProps {\n    downloadFile: (fkey: string) => Promise<void>\n    branchId: number\n    depth: number\n}\n\nconst TreeBranchConnector: React.FC<TreeBranchProps> = ({ branchId, depth, downloadFile }: TreeBranchProps) => {\n    const branchState = useRecoilValue(treeBranchStateSelectorFamily(branchId))\n    const filterText = useRecoilValue(treeFilterTextAtom)\n    if (!branchState || !branchState.branch) return null\n\n    const branches = branchState?.branch.children.branches\n        .map((bid, idx) => (\n            <TreeBranchConnector\n                key={`${branchState?.branch.branch.label}-${bid}-${idx}`}\n                downloadFile={downloadFile}\n                branchId={bid}\n                depth={depth + 1}\n            />\n        ))\n        .filter((d) => d)\n\n    const leaves = branchState?.branch.children.leaves\n        .map((lid, idx) => (\n            <TreeLeafConnector\n                key={`${branchState?.branch.branch.label}-${lid}-${idx}`}\n                downloadFile={downloadFile}\n                leafId={lid}\n                depth={depth + 1}\n            />\n        ))\n        .filter((d) => d)\n\n    // Clean up any dead ends with no leaves\n    if (leaves.length === 0 && branches.length === 0) return null\n\n    return (\n        <TreeBranch\n            id={branchId}\n            label={branchState?.branch.branch.label}\n            hidden={branchState?.hidden}\n            searchText={filterText}\n        >\n            {[...branches, ...leaves]}\n        </TreeBranch>\n    )\n}\n\ninterface TreeLeafProps {\n    downloadFile: (fkey: string) => Promise<void>\n    leafId: number\n    depth: number\n}\n\nconst TreeLeafConnector: React.FC<TreeLeafProps> = ({ leafId, downloadFile }: TreeLeafProps) => {\n    const treeLeafState = useRecoilValue(treeLeafStateSelector(leafId))\n    const filterText = useRecoilValue(treeFilterTextAtom)\n    const setCtxState = useSetRecoilState(treeContextMenuAtom)\n    const setInfoPaneId = useSetRecoilState(treeInfoPaneIdAtom)\n    const { toggleLayer } = useMapLayers()\n\n    const handleContext = (leafId: number, left: number, top: number) => {\n        googleAnalytics.event('webrave', 'open_context_menu')\n        setCtxState({ leafId, position: { left, top } })\n    }\n\n    const doubleClick = () => {\n        googleAnalytics.event('webrave', 'double_click')\n        if (treeLeafState.leaf.layerType === ProjectTreeLayerTypes.REPORT && treeLeafState.renderable) {\n            const newWindow = window.open(treeLeafState.reportUrl, '_blank', 'noopener,noreferrer')\n            if (newWindow) newWindow.opener = null\n        } else if (treeLeafState.leaf.layerType === ProjectTreeLayerTypes.FILE) {\n            if (treeLeafState.leaf.layerPath) downloadFile(treeLeafState.leaf.layerPath)\n        } else if (treeLeafState.renderable) toggleLayer(treeLeafState.leaf.id)\n    }\n\n    if (!treeLeafState || !treeLeafState.leaf || !treeLeafState.leaf.nodeExists) return null\n    const { id, layerType, label } = treeLeafState.leaf\n    return (\n        <TreeLeaf\n            id={id}\n            layerType={layerType}\n            label={label}\n            active={treeLeafState.active}\n            hidden={treeLeafState.hidden}\n            tilesState={treeLeafState.tilesState}\n            searchText={filterText}\n            handleClick={setInfoPaneId}\n            handleDoubleClick={doubleClick}\n            handleContext={handleContext}\n        />\n    )\n}\ninterface TreeControlConnectProps {\n    downloadFile: (fkey: string) => Promise<void>\n}\n\nconst TreeControlConnect: React.FC<TreeControlConnectProps> = ({ downloadFile }: TreeControlConnectProps) => {\n    const setFilterText = useSetRecoilState(treeFilterTextAtom)\n    const rootBranchId = useRecoilValue(treeRootBranchId)\n    const [expandedIds, setExpandedIds] = useRecoilState(treeExpandedIdsAtom)\n    const [selectedIds, setSelectedIds] = useRecoilState(treeSelectedIdsAtom)\n    const [ctxState, setCtxState] = useRecoilState(treeContextMenuAtom)\n    const infoPaneId = useRecoilValue(treeInfoPaneIdAtom)\n    const allIds = useRecoilValue(treeAllIdsSelector)\n\n    const hiddenNodes = useRecoilValue(projectHiddenNodesSelector)\n    const [infoPaneOpen, setInfoPaneOpen] = useRecoilState(treeInfoPaneOpenAtom)\n\n    const setSelected = (ids) => {\n        if (!isEqual(ids, selectedIds)) setSelectedIds(ids)\n    }\n\n    // If there's a search query on then everything is expanded\n    const realExpanded = hiddenNodes.branches.length > 0 ? allIds : expandedIds\n    const realSetExpanded =\n        hiddenNodes.branches.length > 0\n            ? () => {\n                  log.debug('collapsing turned off')\n              }\n            : setExpandedIds\n\n    const lyrInfo =\n        infoPaneOpen && infoPaneId !== null ? (\n            <TreeLayerInfoConnect leafID={infoPaneId} handleClose={() => setInfoPaneOpen(false)} />\n        ) : null\n\n    const treeContrextMenu = ctxState && (\n        <TreeContextMenuConnect ctxState={ctxState} onClose={() => setCtxState(null)} downloadFile={downloadFile} />\n    )\n    const rootBranch =\n        rootBranchId !== null ? (\n            <TreeBranchConnector branchId={rootBranchId} depth={0} downloadFile={downloadFile} />\n        ) : (\n            <div />\n        )\n\n    return (\n        <TreeControl\n            lyrInfoOpen={infoPaneOpen}\n            setSearchText={setFilterText}\n            expanded={realExpanded}\n            ctxMenu={treeContrextMenu}\n            lyrInfo={lyrInfo}\n            selected={selectedIds}\n            setExpanded={realSetExpanded}\n            setSelected={setSelected}\n        >\n            {rootBranch}\n        </TreeControl>\n    )\n}\n\nexport default TreeControlConnect\n","import React, { useEffect } from 'react'\nimport { useRecoilCallback, useRecoilValueLoadable } from 'recoil'\nimport {\n    tilesRequestIdAtomFamily,\n    tilesRetriesAtomFamily,\n    boundsAtom,\n    zoomBoundsAtom,\n    tilesSelectorFamily\n} from '../recoil'\nimport { appDefaults } from '../config'\nimport { newBounds, newZoomBounds } from '../lib/util'\nimport { TileService, TilingStatus } from '@riverscapes/common'\n// import log from 'loglevel'\nimport { isEqual } from 'lodash'\n\ninterface MPDProps {\n    layerPath: string\n}\n\nconst MapTilesConnect: React.FC<MPDProps> = ({ layerPath }: MPDProps) => {\n    const tLoad = useRecoilValueLoadable(tilesSelectorFamily(layerPath))\n\n    const updateBoundsState = useRecoilCallback(({ snapshot, set }) => async () => {\n        const tLoad = snapshot.getLoadable(tilesSelectorFamily(layerPath))\n        if (tLoad.state !== 'hasValue') return\n        const tiles = tLoad.contents as TileService\n        // Now we have to carefully decide whether to queue up another fetch or give up\n        const reqId = await snapshot.getPromise(tilesRequestIdAtomFamily(layerPath))\n        const retryId = await snapshot.getPromise(tilesRetriesAtomFamily(layerPath))\n        const bounds = await snapshot.getPromise(boundsAtom)\n        const zoomBounds = await snapshot.getPromise(zoomBoundsAtom)\n\n        // If we failed to fetch then retry the network call\n        if (tiles.status === TilingStatus.FETCH_ERROR) {\n            if (retryId < 5)\n                setTimeout(() => set(tilesRetriesAtomFamily(layerPath), retryId + 1), appDefaults.retryDelayS * 1000)\n        }\n        // If the tile status is on a transitory state (QUEUED, UNKNOWN, CREATING) then try again in (n) seconds\n        else if (\n            tiles.status === TilingStatus.QUEUED ||\n            tiles.status === TilingStatus.UNKNOWN ||\n            tiles.status === TilingStatus.CREATING\n        ) {\n            setTimeout(() => set(tilesRequestIdAtomFamily(layerPath), reqId + 1), appDefaults.refreshDelayS * 1000)\n        } else if (tiles.status === TilingStatus.SUCCESS) {\n            // Here's where the bounds gets calculated. The actual geofencing happens separately.\n            const newBoundsCalc = newBounds(appDefaults.worldBounds, bounds, tiles.bounds || null)\n            const newZoomBoundsCalc = newZoomBounds(zoomBounds, [tiles.minZoom, tiles.maxZoom])\n\n            if (!isEqual(bounds, newBoundsCalc)) {\n                set(boundsAtom, newBoundsCalc)\n            }\n            if (!isEqual(zoomBounds, newZoomBoundsCalc)) {\n                set(zoomBoundsAtom, newZoomBoundsCalc)\n            }\n        }\n        // Otherwise there's nothing left to do:\n        // (SUCCESS, NOT_APPLICABLE, NO_GEOMETRIES, TILING_ERROR, INDEX_NOT_FOUND, TIMEOUT)\n    })\n    useEffect(() => {\n        updateBoundsState()\n    }, [tLoad])\n\n    return null\n}\n\nexport default MapTilesConnect\n","import React, { useMemo } from 'react'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { ProjectTreeView } from '@riverscapes/common'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        // margin: theme.spacing(1, 0)\n    }\n}))\nconst EMPTY_VID = 'custom'\nexport interface ViewListProps {\n    activeView: string | null\n    defaultView?: string\n    projectViews: ProjectTreeView[]\n    handleChange: (viewId: string) => void\n}\nconst ViewList: React.FC<ViewListProps> = ({ activeView, defaultView, projectViews, handleChange }: ViewListProps) => {\n    const classes = useStyles()\n    const realView = activeView === null ? EMPTY_VID : activeView\n    const viewOptions = useMemo(() => {\n        if (!projectViews || projectViews.length === 0)\n            return [\n                <MenuItem key={EMPTY_VID} value=\"custom\" disabled>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        <em>No custom views</em>\n                    </Typography>\n                </MenuItem>\n            ]\n        const viewOpts =\n            projectViews.map((v, idx) => {\n                const isDefault = v.id === defaultView\n                const defaultString = isDefault ? '(default)' : ''\n                return (\n                    <MenuItem key={`view-${idx}`} value={v.id}>\n                        {v.name} {defaultString}\n                    </MenuItem>\n                )\n            }) || []\n        return [\n            ...viewOpts,\n            activeView === null && (\n                <MenuItem key={EMPTY_VID} value=\"custom\">\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        <em>Custom View</em>\n                    </Typography>\n                </MenuItem>\n            )\n        ]\n    }, [projectViews, activeView])\n\n    return (\n        <FormControl className={classes.root} fullWidth size=\"small\">\n            <InputLabel htmlFor=\"grouped-native-select\">Curated Views</InputLabel>\n            <Select\n                id=\"view\"\n                value={realView}\n                disabled={!projectViews || projectViews.length === 0}\n                variant=\"filled\"\n                onChange={(event) => event.target.value !== EMPTY_VID && handleChange(event.target.value as string)}\n            >\n                {viewOptions}\n            </Select>\n        </FormControl>\n    )\n}\n\nexport default ViewList\n","import React from 'react'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport { BaseLayer } from '../../types'\n\ninterface BaseLayerPickerProps {\n    baseLayer: BaseLayer\n    baseLayers: BaseLayer[]\n    setBaseLayer: (baseLyr: BaseLayer) => void\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // margin: theme.spacing(1, 0)\n    },\n    menuIcon: {\n        marginRight: theme.spacing(1)\n    },\n    menuItem: {\n        display: 'flex'\n    }\n}))\n\nconst BaseLayerPicker: React.FC<BaseLayerPickerProps> = ({\n    baseLayer,\n    baseLayers,\n    setBaseLayer\n}: BaseLayerPickerProps) => {\n    const classes = useStyles()\n\n    const viewOptions = baseLayers.map((v, idx) => {\n        const Icon = v.Icon\n        return (\n            <MenuItem key={`view-${idx}`} value={v.id} className={classes.menuItem}>\n                <Icon className={classes.menuIcon} />\n                <Typography>{v.title}</Typography>\n            </MenuItem>\n        )\n    })\n\n    return (\n        <FormControl className={classes.root} fullWidth size=\"small\">\n            <InputLabel>Basemap</InputLabel>\n            <Select\n                id=\"baselayer\"\n                value={baseLayer.id}\n                variant=\"filled\"\n                classes={{\n                    selectMenu: classes.menuItem\n                }}\n                onChange={(event) => {\n                    const newBl = baseLayers.find((bl) => bl.id === event.target.value)\n                    if (newBl) setBaseLayer(newBl)\n                }}\n            >\n                {viewOptions}\n            </Select>\n        </FormControl>\n    )\n}\n\nexport default BaseLayerPicker\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\ninterface Props {\n    error?: string\n}\n\nconst LegendError: React.FC<Props> = ({ error }: Props) => {\n    return <Typography color=\"error\">{error || ' '}</Typography>\n}\n\nexport default LegendError\n","import React from 'react'\nimport { ProjectTreeView } from '@riverscapes/common'\nimport ViewList from './ViewList'\nimport BaseLayerPicker from './BaseLayerPicker'\nimport { List } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport LegendError from './LegendError'\nimport { BaseLayer } from '../../types'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        zIndex: 1000,\n        padding: theme.spacing(0),\n        border: '1px solid #EEEEEE',\n        borderRadius: 5,\n        position: 'absolute',\n        background: 'white',\n        width: 270,\n        maxHeight: '90%',\n        overflow: 'hidden',\n        boxShadow: '3px 3px 3px #00000066',\n        top: 15,\n        right: 15,\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    subheaders: {\n        background: 'white'\n    },\n    legendList: {\n        height: '100%',\n        flex: '1 1',\n        overflow: 'scroll'\n    }\n}))\n\nexport interface LegendProps {\n    defaultView: string\n    views: ProjectTreeView[]\n    error?: string\n    viewId: string | null\n    setViewId: (viewId: string) => void\n    baseLayer: BaseLayer\n    baseLayers: BaseLayer[]\n    setBaseLayer: (baselayer: BaseLayer) => void\n    children: React.ReactElement[]\n}\n\nconst Legend: React.FC<LegendProps> = ({\n    views,\n    defaultView,\n    children,\n    baseLayer,\n    baseLayers,\n    setBaseLayer,\n    error,\n    viewId,\n    setViewId\n}: LegendProps) => {\n    const classes = useStyles()\n    return (\n        <div className={classes.root}>\n            <BaseLayerPicker baseLayer={baseLayer} baseLayers={baseLayers} setBaseLayer={setBaseLayer} />\n            <ViewList activeView={viewId} defaultView={defaultView} handleChange={setViewId} projectViews={views} />\n            <List dense disablePadding className={classes.legendList}>\n                {children}\n            </List>\n            <LegendError error={error} />\n        </div>\n    )\n}\n\nexport default Legend\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport Typography from '@material-ui/core/Typography'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { RampType } from '@riverscapes/common'\n// import log from 'loglevel'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexDirection: 'column',\n        paddingLeft: theme.spacing(5)\n    },\n    tooltip: {\n        display: 'flex',\n        '&>div': {\n            marginRight: theme.spacing(1)\n        }\n    },\n    row: {\n        width: '100%',\n        display: 'flex'\n    },\n    colorBox: {\n        flexGrow: 0,\n        flexShrink: 0,\n        border: '1px solid #eaeaea',\n        overflow: 'hidden',\n        color: '#FFFFFF00',\n        width: theme.spacing(2),\n        height: theme.spacing(2)\n    },\n    value: {\n        color: theme.palette.text.secondary,\n        paddingLeft: theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    }\n}))\n\nexport interface ColorRampProps {\n    max?: number\n    min?: number\n    rampType?: RampType\n    legend: [string, string][]\n}\nconst ColorRamp: React.FC<ColorRampProps> = ({ max, min, rampType, legend }: ColorRampProps) => {\n    const classes = useStyles()\n    const pRamp = parseRamp(legend, max, min, rampType)\n    return (\n        <ListItem divider dense disableGutters className={classes.root}>\n            {pRamp.map((row, idr) => (\n                <div key={`cr-${idr}`} className={classes.row}>\n                    <div className={classes.colorBox} style={{ background: row[0] }}>\n                        color\n                    </div>\n                    <Tooltip\n                        enterDelay={2000}\n                        title={\n                            <div className={classes.tooltip}>\n                                <div className={classes.colorBox} style={{ background: row[0] }}>\n                                    color\n                                </div>\n                                {row[1]}\n                            </div>\n                        }\n                    >\n                        <Typography variant=\"caption\" component=\"div\" className={classes.value}>\n                            {row[1]}\n                        </Typography>\n                    </Tooltip>\n                </div>\n            ))}\n        </ListItem>\n    )\n}\n\nexport default ColorRamp\n\nfunction parseRamp(ramp: [string, string][], max?: number, min?: number, rampType?: RampType): [string, string][] {\n    let newRamp: [string, string][] = []\n    if (!max || !min || rampType !== RampType.INTERPOLATED) newRamp = [...ramp]\n    else {\n        newRamp = ramp.map(([color, value]) => {\n            const regMatch = value.match(/^([0-9.]+)%$/)\n            if (regMatch) {\n                const percent = parseFloat(regMatch[1])\n                const interp = (min + ((max - min) * percent) / 100).toFixed(2)\n                return [color, interp]\n            } else return [color, value]\n        })\n    }\n    const newRampDict = newRamp.reduce((acc, r) => ({ ...acc, [`${r[0]}${r[1]}`]: r }), {})\n    return Object.values(newRampDict)\n}\n","import React, { useState } from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport ListItem from '@material-ui/core/ListItem'\nimport Typography from '@material-ui/core/Typography'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport ColorRamp from './ColorRamp'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport ZoomOutMapIcon from '@material-ui/icons/ZoomOutMap'\n\nimport { LayerIcon } from '@riverscapes/react-icons'\nimport { ProjectTreeLayerTypes, Symbology } from '@riverscapes/common'\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\n\nimport { ListItemIcon, Color } from '@material-ui/core'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles((theme) => ({\n    container: {},\n    listItem: {\n        paddingTop: 0,\n        paddingBottom: 0,\n        paddingLeft: 0,\n        paddingRight: 26\n    },\n    listItemActive: {\n        '& *': {\n            cursor: 'pointer'\n        }\n    },\n    listItemAvatar: {\n        minWidth: theme.spacing(3.5)\n    },\n    expandIcon: {\n        minWidth: theme.spacing(1)\n    },\n    avatar: {\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n        '& svg': {\n            height: '0.7em',\n            width: '0.7em'\n        }\n    },\n    expandIconButton: {\n        padding: 0,\n        '& svg': {\n            width: '0.7em',\n            height: '0.7em'\n        }\n    },\n    expandDisabled: {\n        color: 'rgba(0,0,0,0.05)!important'\n    },\n    textPrimary: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    },\n    textSecondary: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    },\n    secondary: {\n        right: 0\n    },\n    root: {\n        marginTop: theme.spacing(2)\n    },\n    heading: {\n        marginTop: theme.spacing(1)\n    },\n    loadingSpinner: {\n        color: theme.palette.text.secondary\n    },\n    layerItem: {\n        display: 'flex'\n    },\n    legendName: {\n        flexGrow: 1\n    },\n    deleteButtonHover: {},\n    legendColor: {\n        border: '1px solid black',\n        width: '20px',\n        display: 'inline-block',\n        height: '14px',\n        marginRight: '5px'\n    },\n    deleteButton: {\n        flexGrow: 0,\n        color: '#CCCCCC',\n        padding: 0,\n        marginRight: 0,\n        '& < svg': {\n            width: '0.8em',\n            height: '0.8em'\n        }\n    },\n    zoomButton: {\n        flexGrow: 0,\n        color: '#CCCCCC',\n        padding: 0,\n        marginRight: 0,\n        '& < svg': {\n            width: '0.8em',\n            height: '0.8em'\n        }\n    }\n}))\n\nexport interface LegendLayerItemProps {\n    label: string\n    leafId: number\n    layerType: ProjectTreeLayerTypes\n    subLabel?: string\n    overZoomed?: boolean\n    max?: number\n    min?: number\n    fallbackColor?: Color\n    loading?: boolean\n    zoomLayerExtent?: () => void\n    symbology?: Symbology | null\n    removeLayer: (lid: number) => void\n}\n\nconst LegendLayerItem: React.FC<LegendLayerItemProps> = ({\n    label,\n    leafId,\n    loading,\n    max,\n    min,\n    subLabel,\n    fallbackColor,\n    zoomLayerExtent,\n    symbology,\n    layerType,\n    removeLayer\n}: LegendLayerItemProps) => {\n    const classes = useStyles()\n    const theme = useTheme()\n    const [open, setOpen] = useState<boolean>(true)\n\n    const hasLegend = Boolean(symbology && symbology.legend && symbology.legend.length > 1)\n    const hasOneItemLegend = Boolean(symbology && symbology.legend && symbology.legend.length === 1)\n\n    let fgColor = theme.palette.text.primary\n    let bgColor = theme.palette.background.default\n    if (hasOneItemLegend && symbology?.legend) {\n        if (layerType === ProjectTreeLayerTypes.POLYGON || layerType === ProjectTreeLayerTypes.RASTER) {\n            bgColor = symbology.legend[0][0]\n            fgColor = theme.palette.getContrastText(bgColor)\n        } else {\n            fgColor = symbology.legend[0][0]\n            bgColor = theme.palette.background.default\n        }\n        // fgColor = symbology?.legend?[0][0]\n    } else if (fallbackColor) {\n        if (layerType === ProjectTreeLayerTypes.POLYGON || layerType === ProjectTreeLayerTypes.RASTER) {\n            fgColor = fallbackColor[500]\n            bgColor = fallbackColor[100]\n        } else {\n            fgColor = fallbackColor[500]\n            bgColor = theme.palette.background.default\n        }\n    }\n\n    const toggle = (): void => (hasLegend ? setOpen(!open) : undefined)\n\n    return (\n        <React.Fragment>\n            <ListItem dense className={clsx(classes.listItem, hasLegend && classes.listItemActive)}>\n                <ListItemIcon className={classes.expandIcon}>\n                    <IconButton\n                        size=\"small\"\n                        onClick={toggle}\n                        disabled={!hasLegend}\n                        classes={{ root: classes.expandIconButton, disabled: classes.expandDisabled }}\n                    >\n                        {hasLegend && open ? <ExpandMoreIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </ListItemIcon>\n                <ListItemAvatar className={classes.listItemAvatar}>\n                    <Avatar className={classes.avatar} style={{ background: bgColor }} onClick={toggle}>\n                        <LayerIcon\n                            layerType={layerType}\n                            iconProps={{\n                                style: { color: fgColor }\n                            }}\n                        />\n                    </Avatar>\n                </ListItemAvatar>\n                <Tooltip\n                    enterDelay={1500}\n                    title={\n                        <React.Fragment>\n                            <Typography color=\"inherit\">{label}</Typography>\n                            {subLabel && <Typography variant=\"caption\">{subLabel}</Typography>}\n                        </React.Fragment>\n                    }\n                >\n                    <ListItemText\n                        primary={label}\n                        secondary={subLabel}\n                        onClick={toggle}\n                        classes={{ primary: classes.textPrimary, secondary: classes.textSecondary }}\n                    />\n                </Tooltip>\n                <ListItemSecondaryAction className={classes.secondary}>\n                    {loading && (\n                        <CircularProgress className={classes.loadingSpinner} color=\"inherit\" thickness={3} size={15} />\n                    )}\n                    {!loading && (\n                        <>\n                            {zoomLayerExtent && (\n                                <Tooltip enterDelay={1500} title=\"Zoom layer extents\">\n                                    <IconButton\n                                        edge=\"end\"\n                                        className={classes.zoomButton}\n                                        aria-label=\"zoomExtent\"\n                                        onClick={(event) => {\n                                            event.stopPropagation()\n                                            zoomLayerExtent()\n                                        }}\n                                    >\n                                        <ZoomOutMapIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            )}\n                            <Tooltip enterDelay={1500} title=\"Remove map layer\">\n                                <IconButton\n                                    edge=\"end\"\n                                    className={classes.deleteButton}\n                                    aria-label=\"delete\"\n                                    onClick={(event) => {\n                                        event.stopPropagation()\n                                        removeLayer(leafId)\n                                    }}\n                                >\n                                    <CancelIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </>\n                    )}\n                </ListItemSecondaryAction>\n            </ListItem>\n            {hasLegend && open && (\n                <ColorRamp\n                    max={max}\n                    min={min}\n                    rampType={symbology?.rampType}\n                    legend={symbology?.legend as [string, string][]}\n                />\n            )}\n        </React.Fragment>\n    )\n}\n\nexport default LegendLayerItem\n","import React, { useEffect } from 'react'\nimport Legend from '../components/legend/Legend'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport useMapLayers from '../hooks/useMapLayers'\nimport {\n    baseLayerAtom,\n    activeViewAtom,\n    projectAtom,\n    layerStateSelectorFamily,\n    activeLeavesSortedSelector,\n    leafRandomColAtomFamily,\n    treeLeafSelectorFamily,\n    mapErrorAtom\n} from '../recoil'\nimport useZoomExtents from '../hooks/useZoomExtents'\nimport { legendColors } from '../config'\nimport baseLayers from '../mapStyles'\nimport { ProjectTreeView, SymbologyStatus, TilingStatus } from '@riverscapes/common'\nimport LegendLayerItem from '../components/legend/LegendLayerItem'\nimport useViews from '../hooks/useViews'\nimport { googleAnalytics } from '@riverscapes/react-common'\nimport { BaseLayer } from '../types'\nimport { useSnackbar } from 'notistack'\nimport log from 'loglevel'\n\nconst LegendConnect: React.FC = () => {\n    const proj = useRecoilValue(projectAtom)\n    const [mapError, setMapError] = useRecoilState(mapErrorAtom)\n    const { enqueueSnackbar } = useSnackbar()\n    const activeLeaves = useRecoilValue(activeLeavesSortedSelector)\n    const [baseLayer, _setBaseLayer] = useRecoilState(baseLayerAtom)\n    const currentView = useRecoilValue(activeViewAtom)\n\n    const { setView } = useViews()\n\n    const setBaseLayer = (bl: BaseLayer): void => {\n        googleAnalytics.event('webrave', 'set_base_layer', bl.id)\n        _setBaseLayer(bl)\n    }\n\n    useEffect(() => {\n        if (mapError && mapError.length > 0) {\n            enqueueSnackbar(mapError, { variant: 'error', autoHideDuration: 3000 })\n            setMapError('')\n        }\n    }, [mapError])\n\n    if (!proj) return null\n\n    const views: ProjectTreeView[] = proj.tree.views ? proj.tree.views : []\n    const defaultView = views.length > 0 && proj.tree.defaultView ? proj.tree.defaultView : ''\n    return (\n        <Legend\n            views={views}\n            defaultView={defaultView}\n            baseLayer={baseLayer}\n            baseLayers={baseLayers}\n            setBaseLayer={setBaseLayer}\n            viewId={currentView}\n            setViewId={setView}\n        >\n            {activeLeaves.map(({ id }, idx) => (\n                <LegendItemConnect key={`lgdLyr-${idx}`} lid={id} />\n            ))}\n        </Legend>\n    )\n}\n\nexport default LegendConnect\n\ninterface ItemProps {\n    lid: number\n}\n\nconst LegendItemConnect: React.FC<ItemProps> = ({ lid }: ItemProps) => {\n    const leaf = useRecoilValue(treeLeafSelectorFamily(lid))\n    const layer = useRecoilValue(layerStateSelectorFamily(lid))\n    const rndColIdx = useRecoilValue(leafRandomColAtomFamily(lid))\n    const zoomLayerExtent = useZoomExtents()\n    const { removeLayer } = useMapLayers()\n\n    const stats = layer.tiles?.rasterStats?.stats as Record<string, unknown>\n    const { id, layerType, label } = leaf\n\n    let max: number | undefined = undefined\n    let min: number | undefined = undefined\n    let subLabel: string | undefined = undefined\n\n    if (stats) {\n        try {\n            max = (stats.max as number) || (stats.maximum as number) || undefined\n            min = (stats.min as number) || (stats.minimum as number) || undefined\n            if (max && max > 0 && min && min > 0) subLabel = `min: ${min?.toFixed(2)} max: ${max?.toFixed(2)}`\n        } catch {\n            log.error(`Could not get stats using object: ${JSON.stringify(stats)}`)\n        }\n    }\n    const overZoomed = true\n    return (\n        <LegendLayerItem\n            leafId={id}\n            layerType={layerType}\n            symbology={layer.symbology}\n            max={max}\n            min={min}\n            label={label}\n            subLabel={subLabel}\n            overZoomed={overZoomed}\n            zoomLayerExtent={() => zoomLayerExtent(layer.tiles?.bounds)}\n            fallbackColor={rndColIdx !== null ? legendColors[rndColIdx] : undefined}\n            loading={layer.tileStatus === TilingStatus.FETCHING || layer.symbologyStatus === SymbologyStatus.FETCHING}\n            removeLayer={removeLayer}\n        />\n    )\n}\n","import React, { useState } from 'react'\nimport Chip from '@material-ui/core/Chip'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { ViewportProps } from 'react-map-gl'\nimport clsx from 'clsx'\nimport WarningOutlineIcon from '@material-ui/icons/WarningOutlined'\nimport { ContentCopy } from '@riverscapes/react-icons'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    normalBG: {\n        color: theme.palette.primary.contrastText,\n        background: theme.palette.primary.light,\n        '&:hover,&.focus': {\n            color: theme.palette.primary.contrastText,\n            background: theme.palette.primary.dark\n        }\n    },\n    '@keyframes overzoomFade': {\n        '0%': {\n            backgroundColor: theme.palette.warning.dark\n        },\n        '50%': {\n            backgroundColor: theme.palette.warning.light\n        },\n        '100%': {\n            backgroundColor: theme.palette.warning.dark\n        }\n    },\n    normalButtons: {\n        color: theme.palette.primary.contrastText,\n        background: theme.palette.primary.dark\n    },\n    overZBG: {\n        color: theme.palette.warning.contrastText,\n        background: theme.palette.warning.main,\n        '&:hover,&.focus': {\n            color: theme.palette.warning.contrastText,\n            background: theme.palette.warning.dark\n        },\n        animation: '$overzoomFade 2s infinite'\n    },\n    overZButtons: {\n        color: theme.palette.warning.contrastText,\n        background: theme.palette.warning.dark\n    },\n    labelIcon: {\n        background: 'transparent',\n        '&:hover,&.focus': {\n            background: 'transparent'\n        }\n    },\n    warnText: {\n        color: theme.palette.warning.light\n    },\n    label: {\n        display: 'flex'\n    },\n    chipIcon: {\n        height: theme.spacing(2),\n        width: theme.spacing(2),\n        fontSize: theme.typography.caption.fontSize,\n        padding: 0,\n        '& svg': {\n            fontSize: theme.typography.caption.fontSize\n        }\n    },\n    coordsTxt: {\n        marginRight: theme.spacing(1),\n        marginLeft: theme.spacing(1)\n    },\n    avatar: {},\n    expanded: {},\n    helpIcon: { marginLeft: theme.spacing(1) },\n    overZoomed: {\n        color: theme.palette.warning.contrastText,\n        background: theme.palette.warning.main\n    }\n}))\n\ninterface ZoomIndicatorProps {\n    className?: string\n    viewport: ViewportProps\n    overZoomed?: boolean\n    onHelpClick: () => void\n    onCopyClick: () => void\n}\n\nconst ZoomIndicator: React.FC<ZoomIndicatorProps> = ({\n    className,\n    viewport,\n    overZoomed,\n    onHelpClick,\n    onCopyClick\n}: ZoomIndicatorProps) => {\n    const classes = useStyles()\n    const [expanded, setExpanded] = useState<boolean>(false)\n    const cc = {\n        bg: overZoomed ? classes.overZBG : classes.normalBG,\n        btn: overZoomed ? classes.overZButtons : classes.normalButtons\n    }\n    const preventDefault = (cb?: () => unknown) => (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        if (cb) cb()\n    }\n    return (\n        <Chip\n            size=\"small\"\n            onClick={() => setExpanded(!expanded)}\n            className={clsx(classes.root, cc.bg, className)}\n            clickable={false}\n            classes={{\n                icon: clsx(cc.bg, classes.labelIcon),\n                labelSmall: classes.label\n            }}\n            label={\n                <>\n                    <Tooltip\n                        title={\n                            <>\n                                <div>{!expanded ? 'Map zoom (click to expand)' : 'Map zoom & coords'}</div>\n                                {overZoomed && (\n                                    <div className={classes.warnText}>\n                                        Warning: Map Zoom exceeds raster tile resolution\n                                    </div>\n                                )}\n                            </>\n                        }\n                    >\n                        <span>\n                            {expanded && `Zoom: `}\n                            {viewport.zoom ? viewport.zoom.toFixed(1) : '?'}\n                            {expanded && (\n                                <span className={classes.coordsTxt}>\n                                    {' Center: '}( {viewport.longitude?.toFixed(5)}, {viewport.latitude?.toFixed(5)} ){' '}\n                                </span>\n                            )}\n                        </span>\n                    </Tooltip>\n                    {expanded && (\n                        <Tooltip title=\"Copy map coordinates to clipboard\">\n                            <IconButton\n                                onMouseOver={preventDefault()}\n                                className={clsx(classes.chipIcon, cc.btn, classes.helpIcon)}\n                                onClick={preventDefault(onCopyClick)}\n                            >\n                                <ContentCopy />\n                            </IconButton>\n                        </Tooltip>\n                    )}\n                    {overZoomed && (\n                        <Tooltip title=\"Click to learn more about this warning.\">\n                            <IconButton\n                                onMouseOver={preventDefault()}\n                                className={clsx(classes.chipIcon, cc.btn, classes.helpIcon)}\n                                onClick={preventDefault(onHelpClick)}\n                            >\n                                <WarningOutlineIcon />\n                            </IconButton>\n                        </Tooltip>\n                    )}\n                </>\n            }\n        />\n    )\n}\n\nexport default ZoomIndicator\n","import React from 'react'\nimport Link from '@material-ui/core/Link'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport { imagesUrl } from '../../config'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    title: {\n        margin: 0,\n        padding: theme.spacing(2),\n        background: theme.palette.warning.main,\n        color: theme.palette.warning.contrastText\n    },\n    actions: {\n        margin: 0,\n        padding: theme.spacing(1)\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    rasterImgsContainer: {\n        display: 'flex',\n        width: '100%',\n        overflow: 'hidden'\n    },\n    rasterImgsContainerCol: {},\n    rasterImgs: {\n        width: '100%',\n        height: 'auto'\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1)\n    }\n}))\nexport interface OverZoomedHelpProps {\n    open: boolean\n    onClose: () => void\n}\n\nconst OverZoomedHelp: React.FC<OverZoomedHelpProps> = ({ onClose, open }: OverZoomedHelpProps) => {\n    const classes = useStyles()\n    return (\n        <Dialog aria-labelledby=\"customized-dialog-title\" open={open} maxWidth=\"sm\" onClose={onClose}>\n            <DialogTitle disableTypography className={classes.title}>\n                <Typography variant=\"h6\">Map Zoom exceeds raster tile resolution</Typography>\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose} color=\"inherit\">\n                    <CloseIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent dividers>\n                <Typography paragraph>\n                    {\"For a smoother web experience we've capped the maximum zoom level for rasters \"}\n                    {'we serve on the web. As a result you may notice some rasters get a little blurry '}\n                    {'at higher zoom levels.'}\n                </Typography>\n                <div className={classes.rasterImgsContainer}>\n                    <div className={classes.rasterImgsContainerCol}>\n                        <Typography variant=\"h6\">Original</Typography>\n                        <img src={`${imagesUrl}/desktop_raster.png`} className={classes.rasterImgs} />\n                    </div>\n                    <div className={classes.rasterImgsContainerCol}>\n                        <Typography variant=\"h6\">Web</Typography>\n                        <img src={`${imagesUrl}/web_raster.png`} className={classes.rasterImgs} />\n                    </div>\n                </div>\n                <Typography paragraph>\n                    {\n                        'If you find that you need the extra clarity at high zoom levels please consider downloading this project from the '\n                    }\n                    {'\"Project Info\" tab on the left.'}\n                </Typography>\n                <Typography paragraph>\n                    {'You can then use one of our '}\n                    <Link href=\"http://rave.riverscapes.net/\" target=\"_blank\">\n                        desktop plugins\n                    </Link>\n                    {' (QRAVE for QGIS, ArcRAVE for ESRI ArcGIS) '}\n                    {'to view these datasets at their maximum resolution.'}\n                </Typography>\n            </DialogContent>\n        </Dialog>\n    )\n}\n\nexport default OverZoomedHelp\n","import React, { useState } from 'react'\nimport { viewportAtom, renderableMapLayersSelector } from '../recoil'\nimport { useRecoilValue } from 'recoil'\nimport { ProjectTreeLayerTypes } from '@riverscapes/common'\nimport ZoomIndicator from '../components/map/ZoomIndicator'\nimport OverzoomedHelp from '../components/map/OverzoomedHelp'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useSnackbar } from 'notistack'\n// import log from 'loglevel'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        left: theme.spacing(2)\n    }\n}))\n\nconst TreeToggleConnect: React.FC = () => {\n    const [overZoomDlg, setOverZoomDlg] = useState<boolean>(false)\n    const { enqueueSnackbar } = useSnackbar()\n    const classes = useStyles()\n    const viewport = useRecoilValue(viewportAtom)\n    const mapLayers = useRecoilValue(renderableMapLayersSelector)\n    const minMaxRasterZoom: number = mapLayers\n        .filter((lyr) => lyr.leaf.layerType === ProjectTreeLayerTypes.RASTER)\n        .reduce<number>((acc, lyr) => {\n            const lyrMaxZoom = lyr.tiles && lyr.tiles.maxZoom && lyr.tiles.maxZoom > 0 ? lyr.tiles.maxZoom : 100\n            return Math.min(lyrMaxZoom, acc)\n        }, 100)\n\n    const overZoomed = Boolean(viewport && viewport.zoom && minMaxRasterZoom && viewport.zoom > minMaxRasterZoom)\n\n    const cbCopy = () => {\n        const { zoom, width, height, latitude, longitude, bearing, pitch } = viewport\n        navigator.clipboard.writeText(\n            JSON.stringify({ zoom, width, height, latitude, longitude, bearing, pitch }, null, 2)\n        )\n        enqueueSnackbar('Coordinates copied to clipboard!', { variant: 'info', autoHideDuration: 1000 })\n    }\n\n    return (\n        <>\n            <ZoomIndicator\n                className={classes.root}\n                viewport={viewport}\n                onCopyClick={cbCopy}\n                onHelpClick={() => setOverZoomDlg(true)}\n                overZoomed={overZoomed}\n            />\n            <OverzoomedHelp open={overZoomDlg} onClose={() => setOverZoomDlg(false)} />\n        </>\n    )\n}\n\nexport default TreeToggleConnect\n","import React from 'react'\n// import { makeStyles } from '@material-ui/core/styles'\nimport { Typography, CircularProgress } from '@material-ui/core'\nimport { Loading } from '@northarrowresearch/react-common'\n\nconst MapLoading: React.FC = () => {\n    return (\n        <Loading\n            logoSVG={<CircularProgress size=\"3rem\" thickness={4} />}\n            status={\n                <Typography variant=\"h5\" component=\"div\">\n                    Loading Map...\n                </Typography>\n            }\n            containerProps={{\n                maxWidth: 'xl',\n                style: {\n                    position: 'absolute',\n                    zIndex: 1000,\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    background: '#FFFFFF33'\n                }\n            }}\n        />\n    )\n}\n\nexport default MapLoading\n","import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react'\nimport { config } from '@riverscapes/react-common'\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil'\nimport MapGL, { ViewportProps, NavigationControl } from 'react-map-gl'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CircularProgress } from '@material-ui/core'\nimport MapLoading from './MapLoading'\nimport { geoFence } from '../../lib/util'\nimport { createInitialStyle } from '../../lib/MapManager'\nimport { appDefaults } from '../../config'\nimport { viewportAtom, mapLoadedAtom, boundsAtom, mapSizeAtom } from '../../recoil/map'\nimport { BaseLayer } from '../../types'\n\nimport 'mapbox-gl/dist/mapbox-gl.css'\n\nimport _ from 'lodash'\nimport log from 'loglevel'\n\ninterface MapProps {\n    baseLayer: BaseLayer\n    styleLoading?: boolean\n    bounds?: [minx: number, miny: number, maxx: number, maxy: number]\n    zoomBounds: [minZoom: number, maxZoom: number]\n    children?: React.ReactChild | React.ReactChildren | React.ReactElement[]\n}\n\nconst navControlStyle = {\n    left: 15,\n    top: 60\n}\n\nconst useStyles = makeStyles((theme) => ({\n    '@global': {\n        '.mapboxgl-ctrl-bottom-left': {\n            zIndex: '0 !important', // This is 1000 by default\n            position: 'absolute',\n            pointerEvents: 'none',\n            left: 'initial',\n            right: theme.spacing(2),\n            bottom: theme.spacing(3)\n        }\n    },\n    root: {\n        marginLeft: theme.spacing(1)\n    },\n    container: {\n        display: 'flex',\n        height: '100%'\n    },\n    mapContainer: {\n        position: 'relative',\n        background: '#CCCCCC',\n        height: '100%',\n        width: '100%',\n        '&>h1': {\n            color: '#9999FF',\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)'\n        }\n    },\n    drawerContents: {\n        // border: '1px solid green',\n        height: '100%',\n        display: 'flex'\n    },\n    drawerSpacer: {\n        flex: '0 0 0%'\n    },\n    drawerSpacerOpen: {\n        // flex: `0 0 ${DRAWER_WIDTH}`\n    },\n    dialogContainer: {\n        alignItems: 'left',\n        justifyContent: 'left'\n    },\n    loaderSpinner: {\n        position: 'absolute',\n        bottom: 10,\n        right: 10,\n        color: theme.palette.secondary.main\n    },\n    dialog: {\n        position: 'absolute',\n        margin: 0,\n        left: '20px',\n        top: '20px'\n    },\n    subheaders: {\n        background: 'white'\n    },\n    dummyText: {}\n}))\n\nconst debounceConsoleLog = _.debounce((...vals) => log.debug(...vals), 1500)\n\nconst Map: React.FC<MapProps> = ({ children, baseLayer, styleLoading, bounds, zoomBounds }: MapProps) => {\n    const classes = useStyles()\n    const [viewport, _setViewport] = useRecoilState(viewportAtom)\n    const [boundsSet, setBoundsSet] = useState<boolean>(false)\n    const rawBounds = useRecoilValue(boundsAtom)\n    const setMapSize = useSetRecoilState(mapSizeAtom)\n    const [mapLoaded, setMapLoaded] = useRecoilState(mapLoadedAtom)\n\n    const viewportRef = useRef<ViewportProps>()\n    viewportRef.current = viewport\n\n    const loadHandler = useCallback(\n        (e) => {\n            const styleLoaded = e.target.isStyleLoaded()\n            if (mapLoaded !== styleLoaded) setMapLoaded(styleLoaded)\n        },\n        [mapLoaded]\n    )\n\n    const handleResize = ({ width, height }) => {\n        log.debug('resize map', width, height)\n        setMapSize(width > 0 && height > 0 ? { width, height } : null)\n    }\n\n    // Constrain the Bounds and zoom\n    const setViewport = useCallback(\n        (inV: ViewportProps) => {\n            const outV = { ...viewportRef.current, ...inV }\n            // Constrict bounds\n            if (zoomBounds && outV.zoom) {\n                if (outV.zoom > zoomBounds[1]) outV.zoom = zoomBounds[1]\n                else if (outV.zoom < zoomBounds[0]) outV.zoom = zoomBounds[0]\n            }\n            const geoFenceCorrect = geoFence(\n                [outV.longitude, outV.latitude] as [number, number],\n                // Bounds is an object or fall back to the world fence\n                bounds || appDefaults.worldBounds,\n                // We center the world if we need to\n                Boolean(rawBounds && !boundsSet)\n            )\n\n            // If we're out of bounds then bring us back\n            if (Array.isArray(geoFenceCorrect)) {\n                outV.longitude = geoFenceCorrect[0]\n                outV.latitude = geoFenceCorrect[1]\n            }\n\n            if (rawBounds && !boundsSet) setBoundsSet(true)\n\n            debounceConsoleLog('setViewport DEBOUNCED', { inV, outV, bounds, center: bounds && !boundsSet })\n            _setViewport(outV)\n        },\n        [bounds, zoomBounds, boundsSet, rawBounds]\n    )\n\n    // Just the first time we offer a default style\n    const baseStyle = useMemo(() => createInitialStyle(baseLayer), [])\n\n    // When loading we may get an initial zoom and/or bounds value\n    useEffect(() => {\n        debounceConsoleLog('setViewport useEffect', { bounds, zoomBounds, boundsSet, rawBounds })\n        setViewport({ ...viewportRef.current })\n    }, [bounds, zoomBounds, boundsSet, rawBounds])\n\n    const mapLoader = styleLoading && <CircularProgress size=\"2rem\" thickness={6} className={classes.loaderSpinner} />\n\n    const onError = (e) => {\n        // Hide those annoying non-error errors. Cloudfront hides 404 errors behind 403\n        if (!e.error || !e.error.status || e.error.status < 400 || e.error.status > 500) {\n            console.error('MAP ERROR', e)\n        }\n    }\n\n    // NO HOOKS BELOW HERE\n    if (!baseStyle || !bounds) return <MapLoading />\n\n    return (\n        <div className={classes.mapContainer}>\n            <MapGL\n                {...viewport}\n                width=\"100%\"\n                height=\"100%\"\n                minZoom={zoomBounds[0] || 4}\n                maxZoom={zoomBounds[1] || 20}\n                clickRadius={2}\n                onLoad={loadHandler}\n                onResize={handleResize}\n                mapStyle={baseStyle}\n                onViewportChange={setViewport}\n                onError={onError}\n                mapboxApiAccessToken={config.mapConfig.mapBoxToken}\n            >\n                <NavigationControl style={navControlStyle} />\n                {mapLoader}\n                {children}\n            </MapGL>\n        </div>\n    )\n}\n\nexport default Map\n","import React from 'react'\nimport { Fab, Tooltip } from '@material-ui/core'\nimport LayersClearIcon from '@material-ui/icons/LayersClear'\nimport { makeStyles } from '@material-ui/core/styles'\nimport LayersIcon from '@material-ui/icons/Layers'\nimport ZoomOutMapIcon from '@material-ui/icons/ZoomOutMap'\n\ninterface Props {\n    drawerOpen?: boolean\n    toggleDrawer: () => void\n    bounds: [number, number, number, number] | null\n    zoomExtents: () => void\n}\n\nconst useStyles = makeStyles((theme) => ({\n    toggleTree: {\n        position: 'absolute',\n        top: theme.spacing(1),\n        left: theme.spacing(1)\n    },\n    zoomExtent: {\n        position: 'absolute',\n        top: theme.spacing(1),\n        left: theme.spacing(7)\n    }\n}))\n\nconst ProjectLoading: React.FC<Props> = ({ drawerOpen, toggleDrawer, zoomExtents, bounds }: Props) => {\n    const classes = useStyles()\n    return (\n        <>\n            <Tooltip title=\"Toggle the tree sidebar\">\n                <Fab\n                    color=\"primary\"\n                    aria-label=\"add\"\n                    onClick={toggleDrawer}\n                    size=\"small\"\n                    className={classes.toggleTree}\n                >\n                    {drawerOpen ? <LayersClearIcon /> : <LayersIcon />}\n                </Fab>\n            </Tooltip>\n            <Tooltip\n                title={!bounds ? 'Cannot zoom to map extent. No bounding box found' : 'Zoom to active layer extent'}\n            >\n                <Fab\n                    color=\"secondary\"\n                    aria-label=\"zoomOut\"\n                    onClick={() => zoomExtents()}\n                    size=\"small\"\n                    disabled={!bounds}\n                    className={classes.zoomExtent}\n                >\n                    <ZoomOutMapIcon />\n                </Fab>\n            </Tooltip>\n        </>\n    )\n}\n\nexport default ProjectLoading\n","import React from 'react'\nimport { useRecoilState } from 'recoil'\nimport { googleAnalytics } from '@riverscapes/react-common'\nimport { drawerOpenAtom } from '../recoil'\nimport TreeToggleBtn from '../components/TreeToggleBtn'\nimport useZoomExtents from '../hooks/useZoomExtents'\nimport { activeBoundsSelector } from '../recoil'\nimport { useRecoilValue } from 'recoil'\n// import log from 'loglevel'\n\nconst TreeToggleConnect: React.FC = () => {\n    const [drawerOpen, toggleDrawer] = useRecoilState(drawerOpenAtom)\n    const zoomLayerExtent = useZoomExtents()\n    const bounds = useRecoilValue(activeBoundsSelector)\n    return (\n        <TreeToggleBtn\n            key=\"treeToggleBtn\"\n            drawerOpen={drawerOpen}\n            bounds={bounds}\n            zoomExtents={() => {\n                if (bounds) zoomLayerExtent(bounds)\n            }}\n            toggleDrawer={() => {\n                googleAnalytics.event('webrave', 'set_map_drawer', !drawerOpen ? 'closed' : 'open')\n                toggleDrawer(!drawerOpen)\n            }}\n        />\n    )\n}\n\nexport default TreeToggleConnect\n","import React, { useEffect, useRef, useState } from 'react'\nimport { MapContext } from 'react-map-gl'\nimport { useRecoilValue } from 'recoil'\nimport { baseLayerAtom, renderableMapLayersSelector } from '../recoil'\nimport { changeBaseLayer, userLayerRecalc, verifyLayerOrder } from '../lib/MapManager'\nimport { isEqual } from 'lodash'\nimport log from 'loglevel'\n\nconst MapLayers: React.FC = () => {\n    const { map } = React.useContext(MapContext)\n    const baseLayer = useRecoilValue(baseLayerAtom)\n    const renderableMapLayers = useRecoilValue(renderableMapLayersSelector)\n    const mapRef = useRef(map)\n    const [refreshNeeded, setRefreshNeeded] = useState<{ check: number; base: number; layers: number }>({\n        check: 0,\n        base: 0,\n        layers: 0\n    })\n\n    useEffect(() => {\n        if (!mapRef.current) return\n        const { check, base, layers } = refreshNeeded\n        const newState = { check, base, layers }\n        if (base > 0) {\n            const c_success = changeBaseLayer(mapRef.current, baseLayer)\n            log.debug(`MapLayers::changeBaseLayer: ${c_success}`)\n            if (c_success) {\n                newState.base = 0\n                newState.check += 1 // If we succeeded then we immediately queue up a check\n            } else newState.base += 1\n        }\n        if (layers > 0) {\n            const l_success = userLayerRecalc(mapRef.current, renderableMapLayers)\n            log.debug(`MapLayers::userLayerRecalc: ${l_success}`)\n            if (l_success) {\n                newState.layers = 0\n                newState.check += 1\n            } else newState.layers += 1\n        }\n        if (check > 0) {\n            const v_success = verifyLayerOrder(mapRef.current, renderableMapLayers)\n            log.debug(`MapLayers::verifyLayerOrder: ${v_success}`)\n            if (v_success) newState.check = 0\n            else newState.check += 1\n        }\n        if (!isEqual(newState, refreshNeeded)) {\n            setTimeout(() => {\n                log.debug(`MapLayers::setRefreshNeeded`, refreshNeeded, newState)\n                setRefreshNeeded(newState)\n            }, 500)\n        }\n    }, [refreshNeeded, baseLayer, renderableMapLayers])\n\n    // Every 3 seconds we refresh the map based on what should be there. This is a bit hack-ey but it\n    // prevents a lot of de-sync issues with the map and the tree getting out of date\n    useEffect(() => {\n        const refreshInterval = setInterval(() => {\n            setRefreshNeeded({ ...refreshNeeded, check: refreshNeeded.check + 1 })\n        }, 3000)\n        return () => clearInterval(refreshInterval)\n    }, [])\n\n    useEffect(() => {\n        setRefreshNeeded({ ...refreshNeeded, base: refreshNeeded.base + 1 })\n    }, [baseLayer])\n    useEffect(() => {\n        setRefreshNeeded({ ...refreshNeeded, layers: refreshNeeded.layers + 1 })\n    }, [renderableMapLayers])\n\n    // This is kind of a bogus react component. We need it though in order\n    // to execute rebuilding of layers inside the MapContext\n    return null\n}\n\nexport default MapLayers\n","import React, { useEffect, useState } from 'react'\nimport LegendConnect from './Legend.connect'\nimport ZoomIndicatorConnect from './ZoomIndicator.connect'\n// import MapLayerConnect from './MapLayer.connect'\nimport { useRecoilValue } from 'recoil'\nimport { baseLayerAtom, boundsSelector, mapLoadedAtom, activeBoundsSelector } from '../recoil'\nimport Map from '../components/map/Map'\nimport TreeToggleConnect from '../connectors/TreeToggle.connect'\nimport MapLayerConnect from './MapLayer.connect'\nimport useZoomExtents from '../hooks/useZoomExtents'\n\n// We're letting notistack handle all our snackbars\n// https://v4.mui.com/components/snackbars/#complementary-projects\nimport { SnackbarProvider } from 'notistack'\n\nimport log from 'loglevel'\n\nconst MapConnect: React.FC = () => {\n    const zoomLayerExtent = useZoomExtents()\n    const bounds = useRecoilValue(boundsSelector)\n    const mapLoaded = useRecoilValue(mapLoadedAtom)\n    const baseLayer = useRecoilValue(baseLayerAtom)\n    const activeBounds = useRecoilValue(activeBoundsSelector)\n\n    const [boundsSet, setBoundsSet] = useState<boolean>(false)\n    // log.debug('RENDER MapConnect')\n    useEffect(() => {\n        const run = async () => {\n            if (!boundsSet && activeBounds) {\n                const success = await zoomLayerExtent(activeBounds)\n                log.info('MapConnect: Trying to center map the first time', success)\n                if (success) setBoundsSet(true)\n            }\n        }\n        run()\n    }, [activeBounds, boundsSet])\n\n    return (\n        <SnackbarProvider\n            maxSnack={3}\n            dense\n            preventDuplicate\n            autoHideDuration={2000}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center'\n            }}\n        >\n            <LegendConnect />\n            <Map baseLayer={baseLayer} zoomBounds={bounds.zoom} bounds={bounds.bounds} styleLoading={!mapLoaded}>\n                {[\n                    // This is the button that turns off the tree\n                    <TreeToggleConnect key=\"toggleBtn\" />,\n                    <MapLayerConnect key=\"mapLayers\" />\n                ]}\n            </Map>\n            <ZoomIndicatorConnect />\n        </SnackbarProvider>\n    )\n}\n\nexport default MapConnect\n","import React from 'react'\nimport { dates } from '@northarrowresearch/common'\nimport { DownloadZipBtn, PendingZips } from '@riverscapes/react-common'\nimport Paper from '@material-ui/core/Paper'\nimport Divider from '@material-ui/core/Divider'\nimport { warehouseUrl } from '../config'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\nimport { Project } from '@riverscapes/common'\nimport MetaData from './meta/MetaData'\nimport { WarehouseButton } from '@riverscapes/react-common'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1),\n        height: '100%',\n        overflowY: 'scroll',\n        userSelect: 'text',\n        '& *': {\n            userSelect: 'text'\n        }\n    },\n    btnGroup: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n        '&>*': {\n            flex: '0 0 calc(50% - 0.5em)'\n        },\n        margin: theme.spacing(1, 1, 3, 1)\n    },\n    divider: {\n        marginTop: theme.spacing(3)\n    },\n    footerLogo: {}\n}))\n\ninterface ProjectInfoTabProps {\n    project: Project\n    downloadZipFile: (project: Project) => Promise<void>\n    pendingZips: PendingZips\n}\n\nconst ProjectInfoTab: React.FC<ProjectInfoTabProps> = ({\n    project,\n    downloadZipFile,\n    pendingZips\n}: ProjectInfoTabProps) => {\n    const classes = useStyles()\n\n    const projectInfo = {\n        Title: project.name,\n        Type: project.projType,\n        'Warehouse ID': project.id,\n        'Warehouse Tags': Array.isArray(project.tags) ? project.tags.join(', ') : '<None>',\n        'Project Created': `${dates.formatDate(project.createdOn, 'lll')} (${dates.formatDateAgo(project.createdOn)})`,\n        'Project Updated': `${dates.formatDate(project.updatedOn, 'lll')} (${dates.formatDateAgo(project.updatedOn)})`\n    }\n    const pendingSince = project && pendingZips[project.id]\n    return (\n        <Paper className={classes.root}>\n            <Typography variant=\"h4\" paragraph color=\"textPrimary\">\n                {project.projType} Project\n            </Typography>\n            <Divider />\n            <Typography component=\"div\" paragraph>\n                This project exists within the Riverscapes Data Warehouse. You can download this project and view it\n                using free{' '}\n                <a href=\"https://rave.riverscapes.net\" target=\"_blank\" rel=\"noreferrer\">\n                    RAVE plugins for ArcGIS and QGIS\n                </a>\n                .\n            </Typography>\n            <div className={classes.btnGroup}>\n                <WarehouseButton title={`Warehouse`} href={`${warehouseUrl}/#/${project.program}/${project.id}`} />\n                <DownloadZipBtn\n                    downloadZipFile={downloadZipFile}\n                    pendingSince={pendingSince}\n                    project={project}\n                    // btnProps={{}}\n                    title=\"Download\"\n                />\n            </div>\n            <MetaData title=\"Project Information\" meta={projectInfo} />\n            <MetaData title=\"Project Metadata\" meta={project.meta} />\n\n            <Divider className={classes.divider} />\n            <a href=\"http://riverscapes.net\" target=\"_blank\" rel=\"noreferrer\">\n                <img\n                    className={classes.footerLogo}\n                    alt=\"footer\"\n                    src={`${process.env.PUBLIC_URL}/cc-watermarks-riverscapes_orig.png`}\n                />\n            </a>\n        </Paper>\n    )\n}\n\nexport default ProjectInfoTab\n","import { ProjectTreeLayerTypes, SymbologyStatus } from '@riverscapes/common'\nimport { useEffect } from 'react'\nimport { useRecoilValue, useRecoilCallback } from 'recoil'\nimport {\n    assignedRandomColorsAtom,\n    selectNextColor,\n    layerStateSelectorFamily,\n    leafRandomColAtomFamily,\n    activeTreeLeavesSelector\n} from '../recoil'\n// import log from 'loglevel'\n\nconst useColourFallback = (): void => {\n    const activeTreeLeaves = useRecoilValue(activeTreeLeavesSelector)\n    /**\n     * We can use a Recoil Callback here to make sure we don't overfetch any state while we're assigning a color\n     */\n    const assignRndCol = useRecoilCallback(({ snapshot, set }) => async (lid: number) => {\n        const colIds = await snapshot.getPromise(assignedRandomColorsAtom) // pre-fetch user info\n        const currRndCol = await snapshot.getPromise(leafRandomColAtomFamily(lid)) // pre-fetch user info\n        const layer = await snapshot.getPromise(layerStateSelectorFamily(lid))\n        const nextCol = await snapshot.getPromise(selectNextColor) // pre-fetch user info\n\n        let needRndCol = false\n        // Symbology and tiles are loaded asynchronously so we might need a loading state here\n        if (!layer.symbology || layer.symbology.status !== SymbologyStatus.FOUND) {\n            needRndCol = true\n        }\n\n        // Only do this if we haven't already assigned a color. Should save on churn\n        if (needRndCol && currRndCol === null) {\n            set(assignedRandomColorsAtom, [...colIds, nextCol])\n            set(leafRandomColAtomFamily(lid), nextCol)\n        }\n        // Unsetting isn't exactly just an Else case\n        else if (!needRndCol && currRndCol !== null) {\n            set(\n                assignedRandomColorsAtom,\n                colIds.filter((cid) => cid === currRndCol)\n            )\n            set(leafRandomColAtomFamily(lid), null)\n        }\n    })\n\n    useEffect(() => {\n        const exFunc = async () => {\n            for (let idx = 0; idx < activeTreeLeaves.length; idx++) {\n                if (activeTreeLeaves[idx].layerType !== ProjectTreeLayerTypes.RASTER)\n                    await assignRndCol(activeTreeLeaves[idx].id)\n            }\n        }\n        exFunc()\n    }, [activeTreeLeaves])\n}\n\nexport default useColourFallback\n","import React, { useMemo } from 'react'\nimport { History } from 'react-router-dom'\nimport AppWrapper from '../components/AppWrapper'\n// import { useHosted } from '@northarrowresearch/react-auth'\nimport { UseHostedReturn } from '@northarrowresearch/react-auth'\nimport ProjectLoading from '../components/ProjectLoading'\nimport { useDownloads, useProject, googleAnalytics } from '@riverscapes/react-common'\nimport { Program, WarehouseRoleEnum, Project } from '@riverscapes/common'\n\nimport useAppStateInit from '../hooks/useAppStateInit'\nimport { drawerOpenAtom, projectLayerPathsSelector } from '../recoil'\nimport { useRecoilValue } from 'recoil'\nimport ProjectNotFound from '../components/ProjectNotFound'\nimport AppSplitter from '../components/AppSplitter'\nimport WebRaveError from '../components/WebRaveError'\nimport TreeDrawer from '../components/TreeDrawer'\nimport TreeControlConnect from './Treecontrol.connect'\nimport MapTilesConnect from './MapTiles.connect'\nimport MapConnect from './Map.connect'\nimport ProjectInfoTab from '../components/ProjectInfoTab'\nimport useColourFallback from '../hooks/useColourFallback'\n// import { appRouterPath } from '../config'\n// import { AppUrlState } from '../types'\n\n/**\n * This is the over-arching wrapper for the app. It combines all the\n * same place. Time will tell if that's a good strategy.\n * This is also where we carry the bulk of the state and the hooks for the app\n */\ninterface Props {\n    auth: UseHostedReturn\n    history: History\n    program: Program\n}\n\nconst AppConnect: React.FC<Props> = ({ history, auth, program }: Props) => {\n    // Here we make the graphql call to retrieve the project and program from the API\n    const drawerOpen = useRecoilValue(drawerOpenAtom)\n    const projectLayerPaths = useRecoilValue(projectLayerPathsSelector)\n\n    // Init state won't change unless I reload this component\n    const hasViewAccess = program && Object.values(WarehouseRoleEnum).indexOf(program.role) > -1\n    // const urlParams = useRecoilValue(urlParamsSelector)\n    const onProjectChange = (proj: Project | null): Promise<void> => {\n        if (proj) {\n            googleAnalytics.currentPageView(`webRAVE/${program.machineName}/${proj.id}`)\n        }\n        return Promise.resolve()\n    }\n    const { project, loading: isProjLoading, initialized } = useProject(auth, program, false, true, onProjectChange)\n    const { downloadZipFile, downloadFileFn, pendingZips } = useDownloads(auth, program as Program)\n\n    const downloadFile = (fkey: string) => (project ? downloadFileFn(project, fkey) : Promise.resolve())\n\n    // Set up a link between our map state and the URL bar so we can share things well\n    // const { query, setQuery } = useQueryParams<AppUrlState>(appRouterPath, history)\n    // useEffect(() => {\n    //     setQuery(urlParams)\n    //     log.debug('App:DEBUG::useQueryParams', query)\n    // }, [urlParams])\n\n    // This is where we initialize all the recoil pre-fetch stuff\n    useAppStateInit(auth, project)\n    useColourFallback()\n\n    // 1. If we don's have access then tell the user that\n    const mapComponent = useMemo(() => <MapConnect />, [])\n    const treeComponent = useMemo(\n        () => (\n            <TreeDrawer\n                tabs={[\n                    {\n                        label: 'Project Tree',\n                        value: <TreeControlConnect downloadFile={downloadFile} />\n                    },\n                    {\n                        label: 'Project Info',\n                        value: project ? (\n                            <ProjectInfoTab\n                                project={project}\n                                downloadZipFile={downloadZipFile}\n                                pendingZips={pendingZips}\n                            />\n                        ) : (\n                            <div />\n                        )\n                    }\n                ]}\n            />\n        ),\n        [project, downloadFile, downloadZipFile, pendingZips]\n    )\n    if (!hasViewAccess) {\n        googleAnalytics.event('error', 'access_denied', window.location.hash)\n        return (\n            <AppWrapper title={'Access Denied'} history={history} signOut={auth.signOut}>\n                <WebRaveError machineName={null} message=\"You do not have viewing access to this program.\" />\n            </AppWrapper>\n        )\n    }\n    // 2. If we haven't made the query yet then this is in LOADING state\n    else if (!initialized || isProjLoading) {\n        return (\n            <AppWrapper title={'Loading'} history={history} signOut={auth.signOut}>\n                <ProjectLoading title={isProjLoading ? 'Loading Project...' : 'Initializing...'} />\n            </AppWrapper>\n        )\n    }\n\n    // 4. Default to project not found otherwise\n    else if (!project || !project.tree) {\n        return (\n            <AppWrapper title={'Project not found'} history={history} signOut={auth.signOut}>\n                <ProjectNotFound />\n            </AppWrapper>\n        )\n    }\n    // Send a 404 to analytics if necessary\n    if (!project && !isProjLoading) googleAnalytics.event('error', 'project_not_found', window.location.hash)\n\n    return (\n        <>\n            {projectLayerPaths.map((plp) => (\n                // This is maybe a little bit of a hack and a small concession. Usually I don't like dummy\n                // React components that return nothing but in this case I can't figure out a way to do this nicely\n                <MapTilesConnect key={plp} layerPath={plp} />\n            ))}\n            <AppWrapper title={project.name} history={history} signOut={auth.signOut}>\n                <AppSplitter\n                    open={drawerOpen}\n                    split=\"vertical\"\n                    primary=\"second\"\n                    minSize={500}\n                    maxSize=\"85%\"\n                    defaultSize=\"75%\"\n                    child1={treeComponent}\n                    child2={mapComponent}\n                />\n            </AppWrapper>\n        </>\n    )\n}\nexport default AppConnect\n","import React, { useState, useEffect, useCallback } from 'react'\nimport AppConnect from './App.connect'\nimport { LoginScreen, config, googleAnalytics, LocalForageCache } from '@riverscapes/react-common'\nimport { Route, Switch, History, useHistory } from 'react-router-dom'\nimport { Loading } from '@northarrowresearch/react-common'\nimport { useHosted, UseHostedReturn } from '@northarrowresearch/react-auth'\nimport { warehouseIconUrl, appDefaults, appRouterPath } from '../config'\nimport { authCheck } from '@riverscapes/common'\nimport AppWrapper from '../components/AppWrapper'\nimport WebRaveError from '../components/WebRaveError'\nimport ProjectNotFound from '../components/ProjectNotFound'\nimport { Program, Project, getProgramAuth } from '@riverscapes/common'\nimport log from 'loglevel'\n\ngoogleAnalytics.init()\n\nconst LOCAL_CACHE = new LocalForageCache('AppAuth', 5 * 60) // We only need 5 minutes tops on this one\nLOCAL_CACHE.prune() // prune once on load\n\nenum ProgramErrors {\n    NOT_FOUND = 'Program \"{TOKEN}\" not found. Please return to the warehouse to choose another.',\n    NO_ACCESS = 'You do not have access to the program {TOKEN}. Please return to the warehouse choose another.'\n}\n\nconst getProgramMachineName = (): string | null => {\n    // If we just get the program from the hash it makes a lot less API calls\n    const locationHash = window.location.hash.split('/')\n    return locationHash.length > 1 && locationHash[1].match(/[A-Za-z0-9-_]{3,25}/g) ? locationHash[1] : null\n}\n\nconst validUrl = (): boolean => {\n    // If we just get the program from the hash it makes a lot less API calls\n    const locationHash = window.location.hash.split('/')\n    // Check that the program and project ID are roughly valid to see if this is a good url\n    const hashCheck = locationHash.length > 0 && locationHash[0] === '#'\n    const programStringCheck = locationHash.length > 1 && locationHash[1].match(/[A-Za-z0-9-_]{3,25}/g)\n    const projectIdCheck = locationHash.length > 2 && locationHash[2].match(/[A-Za-z0-9-_]{3,25}/g)\n    if (hashCheck && Boolean(programStringCheck) && Boolean(projectIdCheck)) return true\n    else {\n        log.error('URL Failed check', {\n            hashCheck,\n            programStringCheck,\n            projectIdCheck\n        })\n        return false\n    }\n}\n\nconst AppAuthConnect: React.FC = () => {\n    const [authInfo, setAuthInfo] = useState<Record<string, unknown>>()\n    const [networkError, setNetworkError] = useState<string | null>(null)\n    const [programState, setProgramState] = useState<{\n        program: Program | null\n        loading: boolean\n        machineName: string | null\n        error: ProgramErrors | null\n        validUrl: boolean\n    }>({\n        program: null,\n        loading: true,\n        error: null,\n        machineName: getProgramMachineName(),\n        validUrl: validUrl()\n    })\n    const [isAppPreLoading, setIsAppPreLoading] = useState(true)\n    const auth: UseHostedReturn = useHosted(authInfo as Record<string, unknown>, false, false) //config.isDev\n    const history = useHistory()\n\n    // Go get all the startup info we need to start logging in\n    // Initial fetch gets us all the program objects\n    useEffect(() => {\n        authCheck(config.endpoints.graphql as string, '', appDefaults.apiTimeout)\n            .then((authResp) => {\n                log.debug('authResp', authResp)\n                const authVals = authResp.data?.auth\n                if (authVals && authVals.region) {\n                    setAuthInfo({\n                        region: authVals.region,\n                        userPoolId: authVals.userPool,\n                        userPoolWebClientId: authVals.clientId,\n                        mandatorySignIn: true,\n                        oauth: {\n                            domain: authVals.domain,\n                            scope: ['email', 'profile', 'openid'],\n                            redirectSignIn: config.redirectUrl.toString(),\n                            redirectSignOut: config.redirectUrl.toString(),\n                            responseType: 'code'\n                        }\n                    })\n                    setIsAppPreLoading(false)\n                }\n            })\n            .catch((err) => {\n                log.error('authCheck error', err)\n                setNetworkError(err)\n            })\n    }, [])\n\n    // This lets us do a redirect after login using localstorage\n    useEffect(() => {\n        if (!history) return\n\n        const check = async () => {\n            const cacheKey = `RSUrl`\n            const storageUrl = await LOCAL_CACHE.get<string>(cacheKey)\n\n            const localUrl = history.location.pathname\n            log.debug(`[${cacheKey}] Cache:::REDIRECT checking ${storageUrl} === ${localUrl}`)\n\n            if (validUrl() && !auth.isAuthenticated && !auth.error && auth.isAuthComplete) {\n                log.debug(`[${cacheKey}] Cache:::REDIRECT:::SET ${localUrl}`)\n                LOCAL_CACHE.set(cacheKey, localUrl)\n            }\n            if (storageUrl && auth.isAuthenticated && auth.isAuthComplete && !auth.error) {\n                if (localUrl !== storageUrl) {\n                    log.debug(`[${cacheKey}] Cache:::REDIRECT Needed! ${localUrl} !== ${storageUrl}`)\n                    history.push(storageUrl)\n                    // Now we need to trigger a re-fetch of the program\n                    if (!programState.machineName) {\n                        const machineName = getProgramMachineName()\n                        log.debug('Setting program machine name', machineName)\n                        setProgramState({ ...programState, machineName })\n                    }\n                }\n                // Delete once we're done to stop strange behaviour later\n                LOCAL_CACHE.del(cacheKey)\n            }\n        }\n        check()\n    }, [history, auth])\n\n    const navigate = useCallback((history: History, program: Program, project?: Project): void => {\n        let address\n\n        if (project) address = '/' + program.machineName + '/' + project.id\n        else address = '/' + program.machineName\n\n        googleAnalytics.event('webrave', 'navigate', address)\n        history.push(address)\n    }, [])\n\n    // Initial fetch gets us all the program objects\n    useEffect(() => {\n        if (\n            !auth.isAuthenticated ||\n            programState?.program ||\n            !programState.machineName ||\n            programState.loading === false\n        )\n            return\n\n        auth.getCurrentToken()\n            .then((jwt) =>\n                getProgramAuth(config.endpoints.graphql as string, jwt, programState.machineName || 'UNKNOWN')\n            )\n            .then((apiReturn) => {\n                log.debug('API GetProgram', apiReturn)\n                if (apiReturn.data && apiReturn.data.program) {\n                    setProgramState({\n                        program: apiReturn.data.program,\n                        loading: false,\n                        error: null,\n                        machineName: apiReturn.data.program.machineName,\n                        validUrl: validUrl()\n                    })\n                } else {\n                    let error: ProgramErrors | null = null\n                    if (apiReturn.errors && apiReturn.errors.length > 0) {\n                        if ((apiReturn.errors[0] as any).message.indexOf('Program not found') === 0)\n                            error = ProgramErrors.NOT_FOUND\n                    }\n                    googleAnalytics.event('error', 'navigate', error || '')\n                    setProgramState({\n                        program: null,\n                        loading: false,\n                        error,\n                        machineName: programState.machineName,\n                        validUrl: validUrl()\n                    })\n                }\n            })\n            .catch((err) => {\n                log.error('api.getPrograms error', err)\n                googleAnalytics.event('error', 'navigate', 'api.getPrograms error')\n                // setIsAppPreLoading(false)\n            })\n    }, [auth, programState])\n\n    const logoSVG = <img src={warehouseIconUrl} alt=\"logo\" />\n\n    // render the login helper screen if that's called for\n    if (networkError !== null) {\n        return (\n            <AppWrapper title=\"Network Error\">\n                <WebRaveError\n                    machineName={programState.machineName}\n                    message=\"Something has prevented this application from contacting its corresponding API. Please wait a few seconds and try reloading this page.\"\n                    noWHButton\n                />\n            </AppWrapper>\n        )\n    } else if (isAppPreLoading) {\n        return (\n            <AppWrapper title=\"Loading authentication info\">\n                <Loading\n                    logoSVG={logoSVG}\n                    title={appDefaults.appName}\n                    message={'Loading authentication info'}\n                    version={config.version}\n                />\n            </AppWrapper>\n        )\n    } else if (!programState.validUrl) {\n        return (\n            <AppWrapper title=\"Error\">\n                <WebRaveError\n                    machineName={programState.machineName}\n                    message=\"This is not a valid WebRAVE URL. Please return to the Data Warehouse and try again.\"\n                />\n            </AppWrapper>\n        )\n    } else if (programState.error !== null) {\n        return (\n            <AppWrapper title=\"Error\">\n                <WebRaveError\n                    machineName={programState.machineName}\n                    message={programState.error.replace('{TOKEN}', programState.machineName || '<Not Specified>')}\n                />\n            </AppWrapper>\n        )\n    } else {\n        if (!auth.isAuthenticated) {\n            if (!auth.isAuthComplete) {\n                return (\n                    <AppWrapper title=\"webRAVE\">\n                        <Loading\n                            logoSVG={logoSVG}\n                            title=\"Authenticating\"\n                            message={'Authenticating'}\n                            version={config.version}\n                        />\n                    </AppWrapper>\n                )\n            }\n            return (\n                <AppWrapper title=\"Sign in\">\n                    <LoginScreen signIn={auth.signIn} title={'Riverscapes Map Viewer'} />\n                </AppWrapper>\n            )\n        } else if (!programState || programState?.loading) {\n            return (\n                <AppWrapper title=\"Loading Program\">\n                    <Loading\n                        logoSVG={logoSVG}\n                        title={'WebRave'}\n                        message={`Loading Program: ${programState.machineName || 'NULL'}`}\n                        version={config.version}\n                    />\n                </AppWrapper>\n            )\n        } else {\n            const appWrapProps = { navigate, signOut: auth.signOut }\n            return (\n                <Switch>\n                    <Route\n                        path={appRouterPath}\n                        render={(props): React.ReactElement => (\n                            <AppConnect {...props} auth={auth} program={programState?.program} />\n                        )}\n                    />\n                    <Route\n                        path=\"*\"\n                        render={(props): React.ReactElement => (\n                            <AppWrapper {...props} {...appWrapProps}>\n                                <ProjectNotFound />\n                            </AppWrapper>\n                        )}\n                    />\n                </Switch>\n            )\n        }\n    }\n}\nexport default AppAuthConnect\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport AppAuthConnect from './connectors/AppAuth.connect'\nimport { Router } from 'react-router-dom'\nimport { hashHistory } from '@riverscapes/react-common'\nimport log from 'loglevel'\nimport { devSetup } from '@northarrowresearch/react-common'\n// Here's our global overrides css\nimport './base.css'\nimport { RecoilRoot } from 'recoil'\n\n// THIS FIX IS NECESSARY FOR PRODUCTION AND WEBPACK!!!!\n// https://docs.mapbox.com/mapbox-gl-js/api/#transpiling-v2\n// https://github.com/mapbox/mapbox-gl-js/issues/10173\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nmapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default\n\n// This does its own process.env.NODE_ENV check\n// In production it only presents a minimal set of tools\ndevSetup()\n\n// This is the font we need\nrequire('typeface-roboto')\n\nReactDOM.render(\n    <RecoilRoot>\n        <Router basename=\"/\" history={hashHistory}>\n            <AppAuthConnect />\n        </Router>\n    </RecoilRoot>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register()\n\n// On android this will trick the back button into not closing the app\nwindow.addEventListener('load', () => {\n    window.history.pushState({}, '')\n})\n\n// In Chrome > 52 we need to explicitly request persistent storage to make sure our\n// stuff isn't cleaned up automatically.\nif (navigator.storage && navigator.storage.persist) {\n    navigator.storage.persist().then((granted) => {\n        if (granted) {\n            log.debug('Storage will not be cleared except by explicit user action')\n        } else {\n            log.warn('Storage may be cleared by the UA under storage pressure.')\n        }\n    })\n} else {\n    log.warn('navigator.storage API not implemented.')\n}\n"],"sourceRoot":""}