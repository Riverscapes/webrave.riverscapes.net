(this["webpackJsonp@riverscapes/app-webrave"]=this["webpackJsonp@riverscapes/app-webrave"]||[]).push([[0],{15:function(e,t,a){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,a,r){void 0===r&&(r=a);var o=Object.getOwnPropertyDescriptor(t,a);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[a]}}),Object.defineProperty(e,r,o)}:function(e,t,a,r){void 0===r&&(r=a),e[r]=t[a]}),o=this&&this.__exportStar||function(e,t){for(var a in e)"default"===a||Object.prototype.hasOwnProperty.call(t,a)||r(t,e,a)},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.typeDefs=void 0,o(a(420),t),o(a(468),t),o(a(301),t);var i=a(469);Object.defineProperty(t,"typeDefs",{enumerable:!0,get:function(){return n(i).default}}),o(a(470),t),o(a(471),t),o(a(473),t),o(a(474),t)},301:function(e,t,a){"use strict";var r,o;Object.defineProperty(t,"__esModule",{value:!0}),t.ProjectTreeLayerTileTypes=t.ProjectTreeLayerTypes=t.TileTypes=t.SymbologyStatus=t.TilingStatusFinished=t.TilingStatus=t.RampType=t.AccessEnum=t.WarehouseRoleEnum=t.FieldTypeEnum=void 0,function(e){e.string="S",e.number="N",e.boolean="BOOL",e.stringArr="SARR",e.numberArr="NARR"}(t.FieldTypeEnum||(t.FieldTypeEnum={})),function(e){e.SuperUser="SUPER",e.Admin="ADMIN",e.Observer="OBSERVER",e.Participant="PARTICIPANT"}(t.WarehouseRoleEnum||(t.WarehouseRoleEnum={})),function(e){e.Public="PUBLIC",e.Private="PRIVATE",e.Secret="SECRET"}(t.AccessEnum||(t.AccessEnum={})),function(e){e.INTERPOLATED="INTERPOLATED",e.DISCRETE="DISCRETE",e.EXACT="EXACT"}(t.RampType||(t.RampType={})),function(e){e.UNKNOWN="UNKNOWN",e.QUEUED="QUEUED",e.FETCHING="FETCHING",e.NOT_APPLICABLE="NOT_APPLICABLE",e.CREATING="CREATING",e.NO_GEOMETRIES="NO_GEOMETRIES",e.TIMEOUT="TIMEOUT",e.TILING_ERROR="TILING_ERROR",e.INDEX_NOT_FOUND="INDEX_NOT_FOUND",e.LAYER_NOT_FOUND="LAYER_NOT_FOUND",e.FETCH_ERROR="FETCH_ERROR",e.SUCCESS="SUCCESS"}(r=t.TilingStatus||(t.TilingStatus={})),t.TilingStatusFinished=[r.NOT_APPLICABLE,r.NO_GEOMETRIES,r.TIMEOUT,r.TILING_ERROR,r.SUCCESS],function(e){e.UNKNOWN="UNKNOWN",e.FETCHING="FETCHING",e.MISSING="MISSING",e.NOT_APPLICABLE="NOT_APPLICABLE",e.FOUND="FOUND",e.ERROR="ERROR"}(t.SymbologyStatus||(t.SymbologyStatus={})),function(e){e.RASTER="RASTER",e.HTML="HTML",e.VECTOR_SHP="VECTOR_SHP",e.VECTOR_GPKG="VECTOR_GPKG"}(t.TileTypes||(t.TileTypes={})),function(e){e.REPORT="report",e.RASTER="raster",e.LINE="line",e.POLYGON="polygon",e.POINT="point",e.FILE="file",e.TIN="tin"}(o=t.ProjectTreeLayerTypes||(t.ProjectTreeLayerTypes={})),t.ProjectTreeLayerTileTypes=[o.RASTER,o.POLYGON,o.LINE,o.POINT]},353:function(e){e.exports=JSON.parse('{"version":8,"name":"Satellite Streets","metadata":{"mapbox:type":"default","mapbox:origin":"satellite-streets-v11","mapbox:sdk-support":{"android":"9.3.0","ios":"5.10.0","js":"2.0.0"},"mapbox:autocomposite":true,"mapbox:groups":{"Satellite imagery, land":{"name":"Satellite imagery, land","collapsed":false},"Road network, tunnels-case":{"name":"Road network, tunnels-case","collapsed":false},"Walking, cycling, etc., tunnels":{"name":"Walking, cycling, etc., tunnels","collapsed":false},"Road network, tunnels":{"name":"Road network, tunnels","collapsed":false},"Walking, cycling, etc., surface":{"name":"Walking, cycling, etc., surface","collapsed":false},"Road network, surface":{"name":"Road network, surface","collapsed":false},"Road network, surface-icons":{"name":"Road network, surface-icons","collapsed":false},"Walking, cycling, etc., barriers-bridges":{"name":"Walking, cycling, etc., barriers-bridges","collapsed":false},"Road network, bridges":{"name":"Road network, bridges","collapsed":false},"Transit, elevated":{"name":"Transit, elevated","collapsed":false},"Administrative boundaries, admin":{"name":"Administrative boundaries, admin","collapsed":false},"Road network, road-labels":{"name":"Road network, road-labels","collapsed":false},"Transit, ferry-aerialway-labels":{"name":"Transit, ferry-aerialway-labels","collapsed":false},"Natural features, natural-labels":{"name":"Natural features, natural-labels","collapsed":false},"Point of interest labels, poi-labels":{"name":"Point of interest labels, poi-labels","collapsed":false},"Transit, transit-labels":{"name":"Transit, transit-labels","collapsed":false},"Place labels, place-labels":{"name":"Place labels, place-labels","collapsed":false}},"mapbox:decompiler":{"id":"satellite-streets-v11","componentVersion":"9.0.0","strata":[{"id":"satellite-streets-v11","order":[["transit","built"],["satellite","land"],["road-network","tunnels-case"],["walking-cycling","tunnels"],["road-network","tunnels"],["transit","ferries"],["walking-cycling","surface"],["road-network","surface"],["transit","surface"],["road-network","surface-icons"],["walking-cycling","barriers-bridges"],["road-network","bridges"],["transit","bridges"],["road-network","traffic-and-closures"],["transit","elevated"],["admin-boundaries","admin"],["road-network","road-labels"],["walking-cycling","walking-cycling-labels"],["transit","ferry-aerialway-labels"],["natural-features","natural-labels"],["point-of-interest-labels","poi-labels"],["transit","transit-labels"],["place-labels","place-labels"]]}],"components":{"satellite":"9.0.0","road-network":"9.0.0","walking-cycling":"9.0.0","admin-boundaries":"9.0.0","natural-features":"9.0.0","point-of-interest-labels":"9.0.0","transit":"9.0.0","place-labels":"9.0.0"},"propConfig":{"satellite":{},"road-network":{"roadsFont":["DIN Pro Medium","Arial Unicode MS Regular"],"color-road":"hsla(0, 0%, 90%, 0.5)","color-motorway-trunk":"hsla(36, 87%, 68%, 0.7)","construction":false,"color-road-label":"hsl(0, 0%, 100%)","fadeOutRoadsOnZoom":true,"railwayCrossings":false,"polygonFeatures":false,"color-base":"hsl(0, 0%, 0%)","minorRoads":false,"turningCircles":false,"color-road-outline":"hsla(0, 1%, 10%, 0.5)"},"walking-cycling":{"roadsFont":["DIN Pro Medium","Arial Unicode MS Regular"],"golfHoleLabelLine":false,"color-road":"hsla(0, 0%, 90%, 0.5)","color-greenspace":"hsl(94, 100%, 14%)","walkingCyclingPisteBackground":false,"color-road-label":"hsl(0, 0%, 100%)","color-greenspace-label":"hsl(94, 100%, 74%)","poiEtcFont":["DIN Pro Bold","Arial Unicode MS Bold"],"color-base":"hsl(0, 0%, 0%)","pedestrianPolygonFeatures":false,"color-road-outline":"hsla(0, 1%, 10%, 0.5)","labels":false},"admin-boundaries":{"admin0Width":1.5,"color-base":"hsl(0, 0%, 0%)","color-place-label":"hsl(0, 0%, 100%)","color-admin-boundary":"hsl(0, 0%, 0%)"},"natural-features":{"poiEtcFont":["DIN Pro Bold","Arial Unicode MS Bold"],"color-base":"hsl(0, 0%, 0%)","color-water":"hsl(196, 50%, 50%)","color-poi":"hsl(0, 0%, 100%)"},"point-of-interest-labels":{"poiEtcFont":["DIN Pro Bold","Arial Unicode MS Bold"],"color-base":"hsl(0, 0%, 0%)","color-poi":"hsl(0, 0%, 100%)","color-greenspace":"hsl(94, 100%, 14%)","color-greenspace-label":"hsl(94, 100%, 74%)","color-hospital":"hsl(0, 0%, 100%)","color-school":"hsl(0, 0%, 100%)"},"transit":{"color-airport":"hsl(0, 0%, 100%)","matchLabelAndIcon":false,"roadsFont":["DIN Pro Medium","Arial Unicode MS Regular"],"aeroways":false,"color-transit":"hsl(0, 0%, 100%)","color-road":"hsla(0, 0%, 90%, 0.5)","color-water":"hsl(196, 50%, 50%)","color-road-label":"hsl(0, 0%, 100%)","railways":false,"ferries":false,"poiEtcFont":["DIN Pro Bold","Arial Unicode MS Bold"],"color-base":"hsl(0, 0%, 0%)","color-road-outline":"hsla(0, 1%, 10%, 0.5)"},"place-labels":{"settlementsMinorFont":["DIN Pro Medium","Arial Unicode MS Regular"],"settlementSubdivisionsFont":["DIN Pro Medium","Arial Unicode MS Regular"],"color-base":"hsl(0, 0%, 0%)","color-place-label":"hsl(0, 0%, 100%)"}}}},"center":[-118.4106,33.750013],"zoom":13,"sources":{"mapbox://mapbox.satellite":{"url":"mapbox://mapbox.satellite","type":"raster","tileSize":256},"mapbox://mapbox.mapbox-traffic-v1":{"url":"mapbox://mapbox.mapbox-traffic-v1","type":"vector"},"composite":{"url":"mapbox://mapbox.mapbox-streets-v8","type":"vector"}},"sprite":"mapbox://sprites/northarrowresearch/ckmuw9x2e5f0417pe3vy7y0cz/55jsegcrpjhdm8ibxtin56tly","glyphs":"mapbox://fonts/northarrowresearch/{fontstack}/{range}.pbf","layers":[{"id":"background","type":"background","metadata":{"mapbox:featureComponent":"satellite","mapbox:group":"Satellite imagery, land"},"layout":{},"paint":{"background-color":"hsl(222, 56%, 4%)"}},{"id":"satellite","type":"raster","metadata":{"mapbox:featureComponent":"satellite","mapbox:group":"Satellite imagery, land"},"source":"mapbox://mapbox.satellite","layout":{},"paint":{}},{"id":"tunnel-street-minor-low","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels-case"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link"],true,false],14,["match",["get","class"],["street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"tunnel-street-minor-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels-case"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link"],true,false],14,["match",["get","class"],["street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 0%, 0%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0],"line-dasharray":[3,3]}},{"id":"tunnel-primary-secondary-tertiary-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels-case"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["primary","secondary","tertiary"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,["match",["get","class"],"primary",1,0.75],18,2],"line-color":"hsla(0, 0%, 0%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,["match",["get","class"],"primary",0.75,0.1],18,["match",["get","class"],"primary",32,26]],"line-dasharray":[3,3],"line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"tunnel-major-link-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels-case"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["motorway_link","trunk_link"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 0%, 90%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-dasharray":[3,3],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"tunnel-motorway-trunk-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels-case"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["motorway","trunk"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,1,18,2],"line-color":"hsla(0, 1%, 22%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-dasharray":[3,3],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"tunnel-path","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","class"],"path"],["!=",["get","type"],"steps"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,18,4],"line-color":"hsl(0, 0%, 10%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[1,0.5]]]}},{"id":"tunnel-steps","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","type"],"steps"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,16,1.6,18,6],"line-color":"hsl(0, 0%, 10%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[0.3,0.3]]]}},{"id":"tunnel-pedestrian","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","class"],"pedestrian"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,18,12],"line-color":"hsl(0, 0%, 10%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.5,0.4]],16,["literal",[1,0.2]]]}},{"id":"tunnel-major-link","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["motorway_link","trunk_link"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":["match",["get","class"],"motorway_link","hsla(26, 100%, 78%, 0.7)","hsla(46, 77%, 78%, 0.7)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"tunnel-street-minor","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link"],true,false],14,["match",["get","class"],["street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-color":["match",["get","class"],"street_limited","hsl(0, 2%, 22%)","hsla(0, 0%, 90%, 0.5)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"tunnel-primary-secondary-tertiary","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["primary","secondary","tertiary"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,["match",["get","class"],"primary",0.75,0.1],18,["match",["get","class"],"primary",32,26]],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"tunnel-oneway-arrow-blue","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":15,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","oneway"],"true"],["step",["zoom"],["match",["get","class"],["primary","secondary","street","street_limited","tertiary"],true,false],16,["match",["get","class"],["primary","secondary","tertiary","street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-small",17,["match",["get","class"],["primary","secondary","tertiary","street","street_limited"],"oneway-large","oneway-small"],18,"oneway-large"],"symbol-spacing":200,"icon-rotation-alignment":"map"},"paint":{}},{"id":"tunnel-motorway-trunk","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["motorway","trunk"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-color":["match",["get","class"],"motorway","hsla(26, 100%, 78%, 0.7)","hsla(46, 77%, 78%, 0.7)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"tunnel-oneway-arrow-white","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":16,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["motorway","motorway_link","trunk","trunk_link"],true,false],["==",["get","oneway"],"true"]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-white-small",17,"oneway-white-large"],"symbol-spacing":200},"paint":{}},{"id":"road-path","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":12,"filter":["all",["==",["get","class"],"path"],["step",["zoom"],["!",["match",["get","type"],["steps","sidewalk","crossing"],true,false]],16,["!=",["get","type"],"steps"]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],13,0.5,14,1,15,1,18,4],"line-color":"hsl(0, 0%, 22%)","line-dasharray":["step",["zoom"],["literal",[4,0.3]],15,["literal",[1.75,0.3]],16,["literal",[1,0.3]],17,["literal",[1,0.25]]]}},{"id":"road-steps","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","type"],"steps"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,16,1.6,18,6],"line-color":"hsl(0, 0%, 22%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[0.3,0.3]]]}},{"id":"road-pedestrian","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":12,"filter":["all",["==",["get","class"],"pedestrian"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,18,12],"line-color":"hsl(0, 0%, 22%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.5,0.4]],16,["literal",[1,0.2]]]}},{"id":"road-minor-low","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["step",["zoom"],false,14,["match",["get","class"],["secondary_link","tertiary_link"],true,false]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,["match",["get","class"],"track",1,0.5],18,12],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-minor-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["step",["zoom"],false,14,["match",["get","class"],["secondary_link","tertiary_link"],true,false]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 1%, 10%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],14,["match",["get","class"],"track",1,0.5],18,12],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-street-low","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":11,"filter":["all",["match",["get","class"],["street","street_limited","primary_link"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"road-street-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":11,"filter":["all",["match",["get","class"],["street","street_limited","primary_link"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 1%, 10%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"road-secondary-tertiary-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":8,"filter":["all",["match",["get","class"],["secondary","tertiary"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,0.75,18,2],"line-color":"hsla(0, 1%, 10%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.1,18,26],"line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"road-primary-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":7,"filter":["all",["==",["get","class"],"primary"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,1,18,2],"line-color":"hsla(0, 1%, 10%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-major-link-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":10,"filter":["all",["match",["get","class"],["motorway_link","trunk_link"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 1%, 22%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-motorway-trunk-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":5,"filter":["all",["match",["get","class"],["motorway","trunk"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,1,18,2],"line-color":"hsla(0, 1%, 22%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-major-link","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":10,"filter":["all",["match",["get","class"],["motorway_link","trunk_link"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",13,"round"],"line-join":["step",["zoom"],"miter",13,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":["match",["get","class"],"motorway_link","hsla(26, 100%, 68%, 0.7)","hsla(46, 87%, 68%, 0.7)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-minor","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["step",["zoom"],false,14,["match",["get","class"],["secondary_link","tertiary_link"],true,false]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,["match",["get","class"],"track",1,0.5],18,12],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-street","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":11,"filter":["all",["match",["get","class"],["street","street_limited","primary_link"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":["match",["get","class"],"street_limited","hsl(0, 2%, 22%)","hsla(0, 0%, 90%, 0.5)"],"line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"road-secondary-tertiary","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":8,"filter":["all",["match",["get","class"],["secondary","tertiary"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.1,18,26],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"road-primary","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":6,"filter":["all",["==",["get","class"],"primary"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-oneway-arrow-blue","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":15,"filter":["all",["==",["get","oneway"],"true"],["step",["zoom"],["match",["get","class"],["primary","secondary","tertiary","street","street_limited"],true,false],16,["match",["get","class"],["primary","secondary","tertiary","street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]],["match",["get","structure"],["none","ford"],true,false]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-small",17,["match",["get","class"],["primary","secondary","tertiary","street","street_limited"],"oneway-large","oneway-small"],18,"oneway-large"],"symbol-spacing":200,"icon-rotation-alignment":"map"},"paint":{}},{"id":"road-motorway-trunk","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","filter":["all",["match",["get","class"],["motorway","trunk"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",13,"round"],"line-join":["step",["zoom"],"miter",13,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-color":["step",["zoom"],["match",["get","class"],"motorway","hsla(26, 87%, 62%, 0.7)","hsla(0, 0%, 90%, 0.5)"],6,["match",["get","class"],"motorway","hsla(26, 87%, 62%, 0.7)","hsla(46, 80%, 60%, 0.7)"],9,["match",["get","class"],"motorway","hsla(26, 100%, 68%, 0.7)","hsla(46, 87%, 68%, 0.7)"]],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-oneway-arrow-white","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface-icons"},"source":"composite","source-layer":"road","minzoom":16,"filter":["all",["==",["get","oneway"],"true"],["match",["get","class"],["motorway","trunk","motorway_link","trunk_link"],true,false],["match",["get","structure"],["none","ford"],true,false]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-white-small",17,"oneway-white-large"],"symbol-spacing":200},"paint":{}},{"id":"bridge-path","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","class"],"path"],["==",["geometry-type"],"LineString"],["!=",["get","type"],"steps"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,18,4],"line-color":"hsl(0, 0%, 22%)","line-dasharray":["step",["zoom"],["literal",[4,0.3]],15,["literal",[1.75,0.3]],16,["literal",[1,0.3]],17,["literal",[1,0.25]]]}},{"id":"bridge-steps","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","type"],"steps"],["==",["get","structure"],"bridge"],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,16,1.6,18,6],"line-color":"hsl(0, 0%, 22%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[0.3,0.3]]]}},{"id":"bridge-pedestrian","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","class"],"pedestrian"],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,18,12],"line-color":"hsl(0, 0%, 22%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.5,0.4]],16,["literal",[1,0.2]]]}},{"id":"bridge-street-minor-low","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link"],true,false],14,["match",["get","class"],["street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-street-minor-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link"],true,false],14,["match",["get","class"],["street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 1%, 10%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-primary-secondary-tertiary-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["primary","secondary","tertiary"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,["match",["get","class"],"primary",1,0.75],18,2],"line-color":"hsla(0, 1%, 10%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,["match",["get","class"],"primary",0.75,0.1],18,["match",["get","class"],"primary",32,26]],"line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"bridge-major-link-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["motorway_link","trunk_link"],true,false],["<=",["get","layer"],1],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 1%, 22%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-motorway-trunk-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["motorway","trunk"],true,false],["<=",["get","layer"],1],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,1,18,2],"line-color":"hsla(0, 1%, 22%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-major-link","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["motorway_link","trunk_link"],true,false],["<=",["get","layer"],1],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":"round","line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":["match",["get","class"],"motorway_link","hsla(26, 100%, 68%, 0.7)","hsla(46, 87%, 68%, 0.7)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-street-minor","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link"],true,false],14,["match",["get","class"],["street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-color":["match",["get","class"],"street_limited","hsl(0, 2%, 22%)","hsla(0, 0%, 90%, 0.5)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-primary-secondary-tertiary","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["primary","secondary","tertiary"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,["match",["get","class"],"primary",0.75,0.1],18,["match",["get","class"],"primary",32,26]],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"bridge-oneway-arrow-blue","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":15,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","oneway"],"true"],["step",["zoom"],["match",["get","class"],["primary","secondary","tertiary","street","street_limited"],true,false],16,["match",["get","class"],["primary","secondary","tertiary","street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-small",17,["match",["get","class"],["primary","secondary","tertiary","street","street_limited"],"oneway-large","oneway-small"],18,"oneway-large"],"symbol-spacing":200,"icon-rotation-alignment":"map"},"paint":{}},{"id":"bridge-motorway-trunk","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["motorway","trunk"],true,false],["<=",["get","layer"],1],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":"round","line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-color":["match",["get","class"],"motorway","hsla(26, 100%, 68%, 0.7)","hsla(46, 87%, 68%, 0.7)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-major-link-2-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],[">=",["get","layer"],2],["match",["get","class"],["motorway_link","trunk_link"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 1%, 22%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-motorway-trunk-2-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],[">=",["get","layer"],2],["match",["get","class"],["motorway","trunk"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,1,18,2],"line-color":"hsla(0, 1%, 22%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-major-link-2","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],[">=",["get","layer"],2],["match",["get","class"],["motorway_link","trunk_link"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":"round","line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":["match",["get","class"],"motorway_link","hsla(26, 100%, 68%, 0.7)","hsla(46, 87%, 68%, 0.7)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-motorway-trunk-2","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],[">=",["get","layer"],2],["match",["get","class"],["motorway","trunk"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-color":["match",["get","class"],"motorway","hsla(26, 100%, 68%, 0.7)","hsla(46, 87%, 68%, 0.7)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-oneway-arrow-white","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":16,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["motorway","trunk","motorway_link","trunk_link"],true,false],["==",["get","oneway"],"true"]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-white-small",17,"oneway-white-large"],"symbol-spacing":200},"paint":{}},{"id":"aerialway","type":"line","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, elevated"},"source":"composite","source-layer":"road","minzoom":12,"filter":["==",["get","class"],"aerialway"],"layout":{"line-join":"round"},"paint":{"line-color":"hsla(0, 0%, 25%, 0.5)","line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,20,1]}},{"id":"admin-1-boundary-bg","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":7,"filter":["all",["==",["get","admin_level"],1],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"bevel"},"paint":{"line-color":["interpolate",["linear"],["zoom"],8,"hsl(0, 0%, 14%)",16,"hsl(0, 0%, 30%)"],"line-width":["interpolate",["linear"],["zoom"],7,3.75,12,5.5],"line-opacity":["interpolate",["linear"],["zoom"],7,0,8,0.75],"line-dasharray":[1,0],"line-blur":["interpolate",["linear"],["zoom"],3,0,8,3]}},{"id":"admin-0-boundary-bg","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":1,"filter":["all",["==",["get","admin_level"],0],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{},"paint":{"line-width":["interpolate",["linear"],["zoom"],3,5.25,10,12],"line-color":["interpolate",["linear"],["zoom"],6,"hsl(0, 0%, 14%)",8,"hsl(0, 0%, 30%)"],"line-opacity":["interpolate",["linear"],["zoom"],3,0,4,0.5],"line-blur":["interpolate",["linear"],["zoom"],3,0,10,3]}},{"id":"admin-1-boundary","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":2,"filter":["all",["==",["get","admin_level"],1],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"round","line-cap":"round"},"paint":{"line-dasharray":["step",["zoom"],["literal",[2,0]],7,["literal",[2,2,6,2]]],"line-width":["interpolate",["linear"],["zoom"],7,0.75,12,1.5],"line-opacity":["interpolate",["linear"],["zoom"],2,0,3,1],"line-color":["interpolate",["linear"],["zoom"],3,"hsl(0, 0%, 0%)",7,"hsl(0, 0%, 5%)"]}},{"id":"admin-0-boundary","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":1,"filter":["all",["==",["get","admin_level"],0],["==",["get","disputed"],"false"],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"round","line-cap":"round"},"paint":{"line-color":"hsl(0, 0%, 0%)","line-width":["interpolate",["linear"],["zoom"],3,0.75,10,3],"line-dasharray":[10,0]}},{"id":"admin-0-boundary-disputed","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":1,"filter":["all",["==",["get","disputed"],"true"],["==",["get","admin_level"],0],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"round"},"paint":{"line-color":"hsl(0, 0%, 0%)","line-width":["interpolate",["linear"],["zoom"],3,0.75,10,3],"line-dasharray":["step",["zoom"],["literal",[3.25,3.25]],6,["literal",[2.5,2.5]],7,["literal",[2,2.25]],8,["literal",[1.75,2]]]}},{"id":"road-label","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, road-labels"},"source":"composite","source-layer":"road","minzoom":10,"filter":["step",["zoom"],["match",["get","class"],["motorway","trunk","primary","secondary","tertiary"],true,false],12,["match",["get","class"],["motorway","trunk","primary","secondary","tertiary","street","street_limited"],true,false],15,["match",["get","class"],["path","pedestrian","golf","ferry","aerialway","track","service"],false,true]],"layout":{"text-size":["interpolate",["linear"],["zoom"],10,["match",["get","class"],["motorway","trunk","primary","secondary","tertiary"],10,["motorway_link","trunk_link","primary_link","secondary_link","tertiary_link","street","street_limited"],9,6.5],18,["match",["get","class"],["motorway","trunk","primary","secondary","tertiary"],16,["motorway_link","trunk_link","primary_link","secondary_link","tertiary_link","street","street_limited"],14,13]],"text-max-angle":30,"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"line","text-padding":1,"text-rotation-alignment":"map","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":0.01},"paint":{"text-color":"hsl(0, 0%, 100%)","text-halo-color":["match",["get","class"],["motorway","trunk"],"hsla(0, 5%, 0%, 0.75)","hsl(0, 5%, 0%)"],"text-halo-width":1,"text-halo-blur":1}},{"id":"road-intersection","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, road-labels"},"source":"composite","source-layer":"road","minzoom":15,"filter":["all",["==",["get","class"],"intersection"],["has","name"]],"layout":{"text-field":["coalesce",["get","name_en"],["get","name"]],"icon-image":"intersection","icon-text-fit":"both","icon-text-fit-padding":[1,2,1,2],"text-size":["interpolate",["exponential",1.2],["zoom"],15,9,18,12],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"]},"paint":{"text-color":"hsl(230, 57%, 64%)"}},{"id":"road-number-shield","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, road-labels"},"source":"composite","source-layer":"road","minzoom":6,"filter":["all",["has","reflen"],["<=",["get","reflen"],6],["step",["zoom"],["==",["geometry-type"],"Point"],11,[">",["get","len"],5000],12,[">",["get","len"],2500],13,[">",["get","len"],1000],14,true]],"layout":{"text-size":9,"icon-image":["concat",["get","shield"],"-",["to-string",["get","reflen"]]],"icon-rotation-alignment":"viewport","text-max-angle":38,"symbol-spacing":["interpolate",["linear"],["zoom"],11,150,14,200],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"symbol-placement":["step",["zoom"],"point",11,"line"],"text-rotation-alignment":"viewport","text-field":["get","ref"],"text-letter-spacing":0.05},"paint":{"text-color":["match",["get","shield_text_color"],"white","hsl(0, 0%, 100%)","yellow","hsl(50, 100%, 70%)","orange","hsl(25, 100%, 75%)","blue","hsl(230, 57%, 44%)","hsl(230, 18%, 13%)"]}},{"id":"road-exit-shield","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, road-labels"},"source":"composite","source-layer":"motorway_junction","minzoom":14,"filter":["all",["has","reflen"],["<=",["get","reflen"],9]],"layout":{"text-field":["get","ref"],"text-size":9,"icon-image":["concat","motorway-exit-",["to-string",["get","reflen"]]],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"]},"paint":{"text-color":"hsl(0, 0%, 100%)","text-translate":[0,0]}},{"id":"ferry-aerialway-label","type":"symbol","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, ferry-aerialway-labels"},"source":"composite","source-layer":"road","minzoom":15,"filter":["match",["get","class"],"aerialway",true,false],"layout":{"text-size":["interpolate",["linear"],["zoom"],10,6.5,18,13],"text-max-angle":30,"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"line","text-padding":1,"text-rotation-alignment":"map","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":0.01},"paint":{"text-color":["match",["get","class"],"ferry","hsl(196, 18%, 86%)","hsl(0, 0%, 100%)"],"text-halo-color":["match",["get","class"],"ferry","hsl(196, 50%, 50%)","hsl(0, 5%, 0%)"],"text-halo-width":1,"text-halo-blur":1}},{"id":"waterway-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","minzoom":13,"filter":["all",["match",["get","class"],["canal","river","stream"],["match",["get","worldview"],["all","US"],true,false],["disputed_canal","disputed_river","disputed_stream"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"LineString"]],"layout":{"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"text-max-angle":30,"symbol-spacing":["interpolate",["linear",1],["zoom"],15,250,17,400],"text-size":["interpolate",["linear"],["zoom"],13,12,18,16],"symbol-placement":"line","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"text-color":"hsl(196, 18%, 90%)"}},{"id":"natural-line-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","minzoom":4,"filter":["all",["match",["get","class"],["glacier","landform"],["match",["get","worldview"],["all","US"],true,false],["disputed_glacier","disputed_landform"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"LineString"],["<=",["get","filterrank"],2]],"layout":{"text-size":["step",["zoom"],["step",["get","sizerank"],18,5,12],17,["step",["get","sizerank"],18,13,12]],"text-max-angle":30,"text-field":["coalesce",["get","name_en"],["get","name"]],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"symbol-placement":"line-center","text-pitch-alignment":"viewport"},"paint":{"text-halo-width":0.5,"text-halo-color":"hsl(0, 5%, 0%)","text-halo-blur":0.5,"text-color":["step",["zoom"],["step",["get","sizerank"],"hsl(0, 0%, 100%)",5,"hsl(0, 0%, 100%)"],17,["step",["get","sizerank"],"hsl(0, 0%, 100%)",13,"hsl(0, 0%, 100%)"]]}},{"id":"natural-point-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","minzoom":4,"filter":["all",["match",["get","class"],["dock","glacier","landform","water_feature","wetland"],["match",["get","worldview"],["all","US"],true,false],["disputed_dock","disputed_glacier","disputed_landform","disputed_water_feature","disputed_wetland"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"Point"],["<=",["get","filterrank"],2]],"layout":{"text-size":["step",["zoom"],["step",["get","sizerank"],18,5,12],17,["step",["get","sizerank"],18,13,12]],"icon-image":["step",["zoom"],["concat",["get","maki"],"-11"],15,["concat",["get","maki"],"-15"]],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"text-offset":["step",["zoom"],["step",["get","sizerank"],["literal",[0,0]],5,["literal",[0,0.75]]],17,["step",["get","sizerank"],["literal",[0,0]],13,["literal",[0,0.75]]]],"text-anchor":["step",["zoom"],["step",["get","sizerank"],"center",5,"top"],17,["step",["get","sizerank"],"center",13,"top"]],"text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"icon-opacity":["step",["zoom"],["step",["get","sizerank"],0,5,1],17,["step",["get","sizerank"],0,13,1]],"text-halo-color":"hsl(0, 5%, 0%)","text-halo-width":0.5,"text-halo-blur":0.5,"text-color":["step",["zoom"],["step",["get","sizerank"],"hsl(0, 0%, 100%)",5,"hsl(0, 0%, 100%)"],17,["step",["get","sizerank"],"hsl(0, 0%, 100%)",13,"hsl(0, 0%, 100%)"]]}},{"id":"water-line-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","filter":["all",["match",["get","class"],["bay","ocean","reservoir","sea","water"],["match",["get","worldview"],["all","US"],true,false],["disputed_bay","disputed_ocean","disputed_reservoir","disputed_sea","disputed_water"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"LineString"]],"layout":{"text-size":["interpolate",["linear"],["zoom"],7,["step",["get","sizerank"],20,6,18,12,12],10,["step",["get","sizerank"],15,9,12],18,["step",["get","sizerank"],15,9,14]],"text-max-angle":30,"text-letter-spacing":["match",["get","class"],"ocean",0.25,["sea","bay"],0.15,0],"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"symbol-placement":"line-center","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"text-color":["match",["get","class"],["bay","ocean","sea"],"hsl(196, 46%, 70%)","hsl(196, 18%, 90%)"]}},{"id":"water-point-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","filter":["all",["match",["get","class"],["bay","ocean","reservoir","sea","water"],["match",["get","worldview"],["all","US"],true,false],["disputed_bay","disputed_ocean","disputed_reservoir","disputed_sea","disputed_water"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"Point"]],"layout":{"text-line-height":1.3,"text-size":["interpolate",["linear"],["zoom"],7,["step",["get","sizerank"],20,6,15,12,12],10,["step",["get","sizerank"],15,9,12]],"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":["match",["get","class"],"ocean",0.25,["bay","sea"],0.15,0.01],"text-max-width":["match",["get","class"],"ocean",4,"sea",5,["bay","water"],7,10]},"paint":{"text-color":["match",["get","class"],["bay","ocean","sea"],"hsl(196, 46%, 70%)","hsl(196, 18%, 90%)"]}},{"id":"poi-label","type":"symbol","metadata":{"mapbox:featureComponent":"point-of-interest-labels","mapbox:group":"Point of interest labels, poi-labels"},"source":"composite","source-layer":"poi_label","minzoom":6,"filter":["<=",["get","filterrank"],["+",["step",["zoom"],0,16,1,17,2],3]],"layout":{"text-size":["step",["zoom"],["step",["get","sizerank"],18,5,12],17,["step",["get","sizerank"],18,13,12]],"icon-image":["step",["zoom"],["case",["has","maki_beta"],["image",["concat",["get","maki_beta"],"-11"]],["image",["concat",["get","maki"],"-11"]]],15,["case",["has","maki_beta"],["image",["concat",["get","maki_beta"],"-15"]],["image",["concat",["get","maki"],"-15"]]]],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"text-offset":["step",["zoom"],["step",["get","sizerank"],["literal",[0,0]],5,["literal",[0,0.75]]],17,["step",["get","sizerank"],["literal",[0,0]],13,["literal",[0,0.75]]]],"text-anchor":["step",["zoom"],["step",["get","sizerank"],"center",5,"top"],17,["step",["get","sizerank"],"center",13,"top"]],"text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"icon-opacity":["step",["zoom"],["step",["get","sizerank"],0,5,1],17,["step",["get","sizerank"],0,13,1]],"text-halo-color":["match",["get","class"],"park_like","hsl(94, 100%, 0%)","medical","hsl(0, 5%, 3%)","hsl(0, 5%, 0%)"],"text-halo-width":0.5,"text-halo-blur":0.5,"text-color":["step",["zoom"],["step",["get","sizerank"],["match",["get","class"],"food_and_drink","hsl(356, 0%, 100%)","park_like","hsl(94, 100%, 84%)","hsl(0, 0%, 100%)"],5,["match",["get","class"],"food_and_drink","hsl(356, 0%, 100%)","park_like","hsl(94, 100%, 73%)","hsl(0, 0%, 100%)"]],17,["step",["get","sizerank"],["match",["get","class"],"food_and_drink","hsl(356, 0%, 100%)","park_like","hsl(94, 100%, 84%)","hsl(0, 0%, 100%)"],13,["match",["get","class"],"food_and_drink","hsl(356, 0%, 100%)","park_like","hsl(94, 100%, 73%)","hsl(0, 0%, 100%)"]]]}},{"id":"transit-label","type":"symbol","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, transit-labels"},"source":"composite","source-layer":"transit_stop_label","minzoom":12,"filter":["step",["zoom"],["all",["match",["get","mode"],"rail",true,"metro_rail",true,false],["!=",["get","stop_type"],"entrance"]],15,["all",["match",["get","mode"],"rail",true,"metro_rail",true,"light_rail",true,false],["!=",["get","stop_type"],"entrance"]],16,["all",["match",["get","mode"],"ferry",false,"bus",false,true],["!=",["get","stop_type"],"entrance"]],17,["all",["match",["get","mode"],"ferry",false,true],["!=",["get","stop_type"],"entrance"]],19,["match",["get","mode"],"ferry",false,true]],"layout":{"text-size":12,"icon-image":["get","network"],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"text-justify":["match",["get","stop_type"],"entrance","left","center"],"text-offset":["match",["get","stop_type"],"entrance",["literal",[1,0]],["literal",[0,0.8]]],"text-anchor":["match",["get","stop_type"],"entrance","left","top"],"text-field":["step",["zoom"],"",14,["match",["get","mode"],["rail","metro_rail"],["coalesce",["get","name_en"],["get","name"]],""],16,["match",["get","mode"],["bus","bicycle"],"",["coalesce",["get","name_en"],["get","name"]]],18,["coalesce",["get","name_en"],["get","name"]]],"text-letter-spacing":0.01,"text-max-width":["match",["get","stop_type"],"entrance",15,9]},"paint":{"text-halo-color":"hsl(0, 5%, 0%)","text-color":"hsl(0, 0%, 100%)","text-halo-blur":0.5,"text-halo-width":0.5}},{"id":"airport-label","type":"symbol","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, transit-labels"},"source":"composite","source-layer":"airport_label","minzoom":8,"filter":["match",["get","class"],["military","civil"],["match",["get","worldview"],["all","US"],true,false],["disputed_military","disputed_civil"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],"layout":{"text-line-height":1.1,"text-size":["step",["get","sizerank"],18,9,12],"icon-image":["step",["get","sizerank"],["concat",["get","maki"],"-15"],9,["concat",["get","maki"],"-11"]],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"text-offset":[0,0.75],"text-rotation-alignment":"viewport","text-anchor":"top","text-field":["step",["get","sizerank"],["coalesce",["get","name_en"],["get","name"]],15,["get","ref"]],"text-letter-spacing":0.01,"text-max-width":9},"paint":{"text-color":"hsl(0, 0%, 100%)","text-halo-color":"hsl(0, 20%, 3%)","text-halo-width":1}},{"id":"settlement-subdivision-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":10,"maxzoom":15,"filter":["all",["match",["get","class"],"settlement_subdivision",["match",["get","worldview"],["all","US"],true,false],"disputed_settlement_subdivision",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["<=",["get","filterrank"],4]],"layout":{"text-field":["coalesce",["get","name_en"],["get","name"]],"text-transform":"uppercase","text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-letter-spacing":["match",["get","type"],"suburb",0.15,0.1],"text-max-width":7,"text-padding":3,"text-size":["interpolate",["cubic-bezier",0.5,0,1,1],["zoom"],11,["match",["get","type"],"suburb",11,10.5],15,["match",["get","type"],"suburb",15,14]]},"paint":{"text-halo-color":"hsla(0, 5%, 0%, 0.75)","text-halo-width":1,"text-color":"hsl(0, 0%, 100%)","text-halo-blur":0.5}},{"id":"settlement-minor-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","maxzoom":15,"filter":["all",["<=",["get","filterrank"],3],["match",["get","class"],"settlement",["match",["get","worldview"],["all","US"],true,false],"disputed_settlement",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["step",["zoom"],true,8,[">=",["get","symbolrank"],11],10,[">=",["get","symbolrank"],12],11,[">=",["get","symbolrank"],13],12,[">=",["get","symbolrank"],15],13,[">=",["get","symbolrank"],11],14,[">=",["get","symbolrank"],13]]],"layout":{"text-line-height":1.1,"text-size":["interpolate",["cubic-bezier",0.2,0,0.9,1],["zoom"],3,["step",["get","symbolrank"],12,9,11,10,10.5,12,9.5,14,8.5,16,6.5,17,4],13,["step",["get","symbolrank"],23,9,21,10,19,11,17,12,16,13,15,15,13]],"icon-image":["step",["zoom"],["case",["==",["get","capital"],2],"border-dot-13",["step",["get","symbolrank"],"dot-11",9,"dot-10",11,"dot-9"]],8,""],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-justify":["step",["zoom"],["match",["get","text_anchor"],["left","bottom-left","top-left"],"left",["right","bottom-right","top-right"],"right","center"],8,"center"],"text-offset":["step",["zoom"],["match",["get","capital"],2,["match",["get","text_anchor"],"bottom",["literal",[0,-0.3]],"bottom-left",["literal",[0.3,-0.1]],"left",["literal",[0.45,0.1]],"top-left",["literal",[0.3,0.1]],"top",["literal",[0,0.3]],"top-right",["literal",[-0.3,0.1]],"right",["literal",[-0.45,0]],"bottom-right",["literal",[-0.3,-0.1]],["literal",[0,-0.3]]],["match",["get","text_anchor"],"bottom",["literal",[0,-0.25]],"bottom-left",["literal",[0.2,-0.05]],"left",["literal",[0.4,0.05]],"top-left",["literal",[0.2,0.05]],"top",["literal",[0,0.25]],"top-right",["literal",[-0.2,0.05]],"right",["literal",[-0.4,0.05]],"bottom-right",["literal",[-0.2,-0.05]],["literal",[0,-0.25]]]],8,["literal",[0,0]]],"text-anchor":["step",["zoom"],["get","text_anchor"],8,"center"],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-max-width":7},"paint":{"text-color":"hsl(0, 0%, 95%)","text-halo-color":"hsl(0, 5%, 0%)","text-halo-width":1,"text-halo-blur":1}},{"id":"settlement-major-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","maxzoom":15,"filter":["all",["<=",["get","filterrank"],3],["match",["get","class"],"settlement",["match",["get","worldview"],["all","US"],true,false],"disputed_settlement",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["step",["zoom"],false,8,["<",["get","symbolrank"],11],10,["<",["get","symbolrank"],12],11,["<",["get","symbolrank"],13],12,["<",["get","symbolrank"],15],13,[">=",["get","symbolrank"],11],14,[">=",["get","symbolrank"],13]]],"layout":{"text-line-height":1.1,"text-size":["interpolate",["cubic-bezier",0.2,0,0.9,1],["zoom"],8,["step",["get","symbolrank"],18,9,17,10,15],15,["step",["get","symbolrank"],23,9,22,10,20,11,18,12,16,13,15,15,13]],"icon-image":["step",["zoom"],["case",["==",["get","capital"],2],"border-dot-13",["step",["get","symbolrank"],"dot-11",9,"dot-10",11,"dot-9"]],8,""],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-justify":["step",["zoom"],["match",["get","text_anchor"],["left","bottom-left","top-left"],"left",["right","bottom-right","top-right"],"right","center"],8,"center"],"text-offset":["step",["zoom"],["match",["get","capital"],2,["match",["get","text_anchor"],"bottom",["literal",[0,-0.3]],"bottom-left",["literal",[0.3,-0.1]],"left",["literal",[0.45,0.1]],"top-left",["literal",[0.3,0.1]],"top",["literal",[0,0.3]],"top-right",["literal",[-0.3,0.1]],"right",["literal",[-0.45,0]],"bottom-right",["literal",[-0.3,-0.1]],["literal",[0,-0.3]]],["match",["get","text_anchor"],"bottom",["literal",[0,-0.25]],"bottom-left",["literal",[0.2,-0.05]],"left",["literal",[0.4,0.05]],"top-left",["literal",[0.2,0.05]],"top",["literal",[0,0.25]],"top-right",["literal",[-0.2,0.05]],"right",["literal",[-0.4,0.05]],"bottom-right",["literal",[-0.2,-0.05]],["literal",[0,-0.25]]]],8,["literal",[0,0]]],"text-anchor":["step",["zoom"],["get","text_anchor"],8,"center"],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-max-width":7},"paint":{"text-color":"hsl(0, 0%, 95%)","text-halo-color":"hsl(0, 5%, 0%)","text-halo-width":1,"text-halo-blur":1}},{"id":"state-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":3,"maxzoom":9,"filter":["match",["get","class"],"state",["match",["get","worldview"],["all","US"],true,false],"disputed_state",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],"layout":{"text-size":["interpolate",["cubic-bezier",0.85,0.7,0.65,1],["zoom"],4,["step",["get","symbolrank"],10,6,9.5,7,9],9,["step",["get","symbolrank"],21,6,16,7,13]],"text-transform":"uppercase","text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"text-field":["step",["zoom"],["step",["get","symbolrank"],["coalesce",["get","name_en"],["get","name"]],5,["coalesce",["get","abbr"],["get","name_en"],["get","name"]]],5,["coalesce",["get","name_en"],["get","name"]]],"text-letter-spacing":0.15,"text-max-width":6},"paint":{"text-color":"hsl(0, 0%, 95%)","text-halo-color":"hsl(0, 5%, 0%)","text-halo-width":1}},{"id":"country-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":1,"maxzoom":10,"filter":["match",["get","class"],"country",["match",["get","worldview"],["all","US"],true,false],"disputed_country",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],"layout":{"text-line-height":1.1,"text-size":["interpolate",["cubic-bezier",0.2,0,0.7,1],["zoom"],1,["step",["get","symbolrank"],11,4,9,5,8],9,["step",["get","symbolrank"],22,4,19,5,17]],"icon-image":"","text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-justify":["step",["zoom"],["match",["get","text_anchor"],["left","bottom-left","top-left"],"left",["right","bottom-right","top-right"],"right","center"],7,"center"],"text-offset":["literal",[0,0]],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-max-width":6},"paint":{"icon-opacity":["step",["zoom"],["case",["has","text_anchor"],1,0],7,0],"text-color":"hsl(0, 0%, 95%)","text-halo-color":["interpolate",["linear"],["zoom"],2,"hsla(0, 5%, 0%, 0.75)",3,"hsl(0, 5%, 0%)"],"text-halo-width":1.25}}],"created":"2021-03-29T17:58:09.569Z","modified":"2021-03-29T17:58:21.965Z","id":"ckmuw9x2e5f0417pe3vy7y0cz","owner":"northarrowresearch","visibility":"private","draft":false}')},354:function(e){e.exports=JSON.parse('{"version":8,"name":"Basic","metadata":{"mapbox:type":"default","mapbox:origin":"basic-v1","mapbox:sdk-support":{"android":"9.3.0","ios":"5.10.0","js":"2.0.0"},"mapbox:autocomposite":true,"mapbox:groups":{"Land, water, & sky, land":{"name":"Land, water, & sky, land","collapsed":false},"Land, water, & sky, water":{"name":"Land, water, & sky, water","collapsed":false},"Land, water, & sky, built":{"name":"Land, water, & sky, built","collapsed":false},"Transit, built":{"name":"Transit, built","collapsed":false},"Buildings, built":{"name":"Buildings, built","collapsed":false},"Walking, cycling, etc., tunnels":{"name":"Walking, cycling, etc., tunnels","collapsed":false},"Road network, tunnels":{"name":"Road network, tunnels","collapsed":false},"Walking, cycling, etc., surface":{"name":"Walking, cycling, etc., surface","collapsed":false},"Road network, surface":{"name":"Road network, surface","collapsed":false},"Walking, cycling, etc., barriers-bridges":{"name":"Walking, cycling, etc., barriers-bridges","collapsed":false},"Road network, bridges":{"name":"Road network, bridges","collapsed":false},"Administrative boundaries, admin":{"name":"Administrative boundaries, admin","collapsed":false},"Road network, road-labels":{"name":"Road network, road-labels","collapsed":false},"Walking, cycling, etc., walking-cycling-labels":{"name":"Walking, cycling, etc., walking-cycling-labels","collapsed":false},"Natural features, natural-labels":{"name":"Natural features, natural-labels","collapsed":false},"Point of interest labels, poi-labels":{"name":"Point of interest labels, poi-labels","collapsed":false},"Transit, transit-labels":{"name":"Transit, transit-labels","collapsed":false},"Place labels, place-labels":{"name":"Place labels, place-labels","collapsed":false}},"mapbox:decompiler":{"id":"basic-v1","componentVersion":"9.0.0","strata":[{"id":"basic-v1","order":[["land-and-water","land"],["land-and-water","water"],["land-and-water","built"],["transit","built"],["buildings","built"],["road-network","tunnels-case"],["walking-cycling","tunnels"],["road-network","tunnels"],["transit","ferries"],["walking-cycling","surface"],["road-network","surface"],["transit","surface"],["road-network","surface-icons"],["walking-cycling","barriers-bridges"],["road-network","bridges"],["transit","bridges"],["road-network","traffic-and-closures"],["buildings","extruded"],["transit","elevated"],["admin-boundaries","admin"],["buildings","building-labels"],["road-network","road-labels"],["walking-cycling","walking-cycling-labels"],["transit","ferry-aerialway-labels"],["natural-features","natural-labels"],["point-of-interest-labels","poi-labels"],["transit","transit-labels"],["place-labels","place-labels"],["land-and-water","sky"]]}],"components":{"road-network":"9.0.0","natural-features":"9.0.0","place-labels":"9.0.0","admin-boundaries":"9.0.0","point-of-interest-labels":"9.0.0","walking-cycling":"9.0.0","transit":"9.0.0","land-and-water":"9.0.0","buildings":"9.0.0"},"propConfig":{"road-network":{"color-base":"hsl(40, 48%, 92%)","color-road":"hsl(38, 55%, 100%)","roadNetwork":"Simple"},"natural-features":{"color-base":"hsl(40, 48%, 92%)","color-water":"hsl(205, 76%, 70%)","color-poi":"hsl(26, 20%, 38%)"},"place-labels":{"color-base":"hsl(40, 48%, 92%)","color-place-label":"hsl(0, 0%, 15%)","settlementSubdivisionsDensity":3,"settlementLabelStyle":"Text only"},"admin-boundaries":{"color-base":"hsl(40, 48%, 92%)","color-place-label":"hsl(0, 0%, 15%)"},"point-of-interest-labels":{"color-base":"hsl(40, 48%, 92%)","color-greenspace":"hsl(78, 50%, 73%)","color-greenspace-label":"hsl(76, 50%, 16%)","color-hospital":"hsl(3, 45%, 55%)","color-school":"hsl(40, 45%, 45%)","color-poi":"hsl(26, 20%, 38%)","density":2},"walking-cycling":{"color-base":"hsl(40, 48%, 92%)","color-road":"hsl(38, 55%, 100%)","color-greenspace":"hsl(78, 50%, 73%)","color-greenspace-label":"hsl(76, 50%, 16%)","walkingCyclingPisteBackground":false,"golfHoleLabelLine":false,"pedestrianPolygonFeatures":false},"transit":{"color-airport":"hsl(225, 4%, 40%)","color-transit":"hsl(345, 6%, 40%)","aerialways":false,"color-road":"hsl(38, 55%, 100%)","color-water":"hsl(205, 76%, 70%)","transitLabels":false,"railways":false,"ferries":false,"color-base":"hsl(40, 48%, 92%)"},"land-and-water":{"color-airport":"hsl(225, 4%, 40%)","color-hospital":"hsl(3, 45%, 55%)","landType":"Landuse only","color-greenspace":"hsl(78, 50%, 73%)","color-water":"hsl(205, 76%, 70%)","transitionLandOnZoom":false,"waterStyle":"Simple","color-base":"hsl(40, 48%, 92%)","color-school":"hsl(40, 45%, 45%)"},"buildings":{"color-base":"hsl(40, 48%, 92%)","houseNumbers":false}}}},"center":[2.3176,48.8665],"zoom":12,"sources":{"mapbox://mapbox.mapbox-traffic-v1":{"url":"mapbox://mapbox.mapbox-traffic-v1","type":"vector"},"composite":{"url":"mapbox://mapbox.mapbox-streets-v8,mapbox.mapbox-terrain-v2","type":"vector"}},"sprite":"mapbox://sprites/northarrowresearch/ckmuv21s85dd317s3sii3rhg7/5aimie0s459ihq4jyhsfvi0wl","glyphs":"mapbox://fonts/northarrowresearch/{fontstack}/{range}.pbf","layers":[{"id":"land","type":"background","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, land"},"layout":{},"paint":{"background-color":"hsl(40, 46%, 86%)"}},{"id":"national-park","type":"fill","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, land"},"source":"composite","source-layer":"landuse_overlay","minzoom":5,"filter":["==",["get","class"],"national_park"],"layout":{},"paint":{"fill-color":"hsl(78, 50%, 73%)","fill-opacity":["interpolate",["linear"],["zoom"],5,0,6,0.5,10,0.5]}},{"id":"landuse","type":"fill","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, land"},"source":"composite","source-layer":"landuse","minzoom":5,"filter":["match",["get","class"],["park","airport","glacier","pitch","sand","facility"],true,"cemetery",true,"school",true,"hospital",true,false],"layout":{},"paint":{"fill-color":["interpolate",["linear"],["zoom"],15,["match",["get","class"],"park","hsl(78, 50%, 73%)","airport","hsl(225, 49%, 88%)","cemetery","hsl(60, 49%, 79%)","glacier","hsl(205, 66%, 90%)","hospital","hsl(3, 47%, 84%)","pitch","hsl(78, 51%, 68%)","sand","hsl(43, 50%, 83%)","school","hsl(40, 47%, 78%)","hsl(40, 49%, 82%)"],16,["match",["get","class"],"park","hsl(78, 50%, 73%)","airport","hsl(225, 63%, 86%)","cemetery","hsl(60, 49%, 79%)","glacier","hsl(205, 66%, 90%)","hospital","hsl(3, 46%, 86%)","pitch","hsl(78, 51%, 68%)","sand","hsl(43, 50%, 83%)","school","hsl(40, 47%, 78%)","hsl(40, 49%, 82%)"]],"fill-opacity":["interpolate",["linear"],["zoom"],5,0,6,["match",["get","class"],"glacier",0.5,1]]}},{"id":"pitch-outline","type":"line","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, land"},"source":"composite","source-layer":"landuse","minzoom":15,"filter":["==",["get","class"],"pitch"],"layout":{},"paint":{"line-color":"hsl(60, 29%, 81%)"}},{"id":"waterway","type":"line","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, water"},"source":"composite","source-layer":"waterway","minzoom":8,"layout":{"line-cap":["step",["zoom"],"butt",11,"round"],"line-join":"round"},"paint":{"line-color":"hsl(205, 76%, 70%)","line-width":["interpolate",["exponential",1.3],["zoom"],9,["match",["get","class"],["canal","river"],0.1,0],20,["match",["get","class"],["canal","river"],8,3]],"line-opacity":["interpolate",["linear"],["zoom"],8,0,8.5,1]}},{"id":"water","type":"fill","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, water"},"source":"composite","source-layer":"water","layout":{},"paint":{"fill-color":"hsl(205, 76%, 70%)"}},{"id":"land-structure-polygon","type":"fill","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, built"},"source":"composite","source-layer":"structure","minzoom":13,"filter":["all",["==",["geometry-type"],"Polygon"],["==",["get","class"],"land"]],"layout":{},"paint":{"fill-color":"hsl(40, 46%, 86%)"}},{"id":"land-structure-line","type":"line","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, built"},"source":"composite","source-layer":"structure","minzoom":13,"filter":["all",["==",["geometry-type"],"LineString"],["==",["get","class"],"land"]],"layout":{"line-cap":"round"},"paint":{"line-width":["interpolate",["exponential",1.99],["zoom"],14,0.75,20,40],"line-color":"hsl(40, 46%, 86%)"}},{"id":"aeroway-polygon","type":"fill","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, built"},"source":"composite","source-layer":"aeroway","minzoom":11,"filter":["all",["==",["geometry-type"],"Polygon"],["match",["get","type"],["runway","taxiway","helipad"],true,false]],"layout":{},"paint":{"fill-color":["interpolate",["linear"],["zoom"],15,"hsl(225, 37%, 79%)",16,"hsl(225, 19%, 81%)"],"fill-opacity":["interpolate",["linear"],["zoom"],11,0,11.5,1]}},{"id":"aeroway-line","type":"line","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, built"},"source":"composite","source-layer":"aeroway","minzoom":9,"filter":["==",["geometry-type"],"LineString"],"layout":{},"paint":{"line-color":["interpolate",["linear"],["zoom"],15,"hsl(225, 37%, 79%)",16,"hsl(225, 19%, 81%)"],"line-width":["interpolate",["exponential",1.5],["zoom"],9,["match",["get","type"],"runway",1,0.5],18,["match",["get","type"],"runway",80,20]]}},{"id":"building-outline","type":"line","metadata":{"mapbox:featureComponent":"buildings","mapbox:group":"Buildings, built"},"source":"composite","source-layer":"building","minzoom":15,"filter":["all",["!=",["get","type"],"building:part"],["==",["get","underground"],"false"]],"layout":{},"paint":{"line-color":"hsl(40, 42%, 77%)","line-width":["interpolate",["exponential",1.5],["zoom"],15,0.75,20,3],"line-opacity":["interpolate",["linear"],["zoom"],15,0,16,1]}},{"id":"building","type":"fill","metadata":{"mapbox:featureComponent":"buildings","mapbox:group":"Buildings, built"},"source":"composite","source-layer":"building","minzoom":15,"filter":["all",["!=",["get","type"],"building:part"],["==",["get","underground"],"false"]],"layout":{},"paint":{"fill-color":["interpolate",["linear"],["zoom"],15,"hsl(40, 45%, 83%)",16,"hsl(40, 41%, 82%)"],"fill-opacity":["interpolate",["linear"],["zoom"],15,0,16,1],"fill-outline-color":"hsl(40, 42%, 77%)"}},{"id":"tunnel-path","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","class"],"path"],["!=",["get","type"],"steps"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,18,4],"line-color":"hsl(40, 42%, 77%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[1,0.5]]]}},{"id":"tunnel-steps","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","type"],"steps"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,16,1.6,18,6],"line-color":"hsl(40, 42%, 77%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[0.3,0.3]]]}},{"id":"tunnel-pedestrian","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","class"],"pedestrian"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,18,12],"line-color":"hsl(40, 42%, 77%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.5,0.4]],16,["literal",[1,0.2]]]}},{"id":"tunnel-simple","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["step",["zoom"],["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","secondary","tertiary","street","street_limited","primary_link","track"],true,false],14,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","primary_link","secondary","secondary_link","tertiary","tertiary_link","street","street_limited","service","track"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],13,["match",["get","class"],["motorway","trunk","primary"],4,["secondary","tertiary"],2.5,["motorway_link","trunk_link","street","street_limited","primary_link"],1,0.5],18,["match",["get","class"],["motorway","trunk","primary"],32,["secondary","tertiary"],26,["motorway_link","trunk_link","street","street_limited","primary_link"],18,12]],"line-color":"hsl(38, 55%, 93%)"}},{"id":"road-path","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":12,"filter":["all",["==",["get","class"],"path"],["step",["zoom"],["!",["match",["get","type"],["steps","sidewalk","crossing"],true,false]],16,["!=",["get","type"],"steps"]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],13,0.5,14,1,15,1,18,4],"line-color":"hsl(40, 47%, 96%)","line-dasharray":["step",["zoom"],["literal",[4,0.3]],15,["literal",[1.75,0.3]],16,["literal",[1,0.3]],17,["literal",[1,0.25]]]}},{"id":"road-steps","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","type"],"steps"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,16,1.6,18,6],"line-color":"hsl(40, 47%, 96%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[0.3,0.3]]]}},{"id":"road-pedestrian","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":12,"filter":["all",["==",["get","class"],"pedestrian"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,18,12],"line-color":"hsl(40, 47%, 96%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.5,0.4]],16,["literal",[1,0.2]]]}},{"id":"road-simple","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":5,"filter":["all",["step",["zoom"],["match",["get","class"],["motorway","trunk"],true,false],6,["match",["get","class"],["motorway","trunk","primary"],true,false],8,["match",["get","class"],["motorway","trunk","primary","secondary"],true,false],10,["match",["get","class"],["motorway","trunk","primary","secondary","tertiary","motorway_link","trunk_link"],true,false],11,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","secondary","tertiary","street"],true,false],12,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","secondary","tertiary","street","street_limited","primary_link"],true,false],13,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","secondary","tertiary","street","street_limited","primary_link","track"],true,false],14,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","primary_link","secondary","secondary_link","tertiary","tertiary_link","street","street_limited","service","track"],true,false]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,["match",["get","class"],["motorway","trunk","primary"],0.75,["secondary","tertiary"],0.1,0],13,["match",["get","class"],["motorway","trunk","primary"],4,["secondary","tertiary"],2.5,["motorway_link","trunk_link","primary_link","street","street_limited"],1,0.5],18,["match",["get","class"],["motorway","trunk","primary"],32,["secondary","tertiary"],26,["motorway_link","trunk_link","primary_link","street","street_limited"],18,10]],"line-color":["match",["get","class"],["primary_link","secondary_link","tertiary_link","street","street_limited","service","track"],"hsl(38, 55%, 95%)","hsl(38, 55%, 100%)"]}},{"id":"bridge-path","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","class"],"path"],["==",["geometry-type"],"LineString"],["!=",["get","type"],"steps"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,18,4],"line-color":"hsl(40, 47%, 96%)","line-dasharray":["step",["zoom"],["literal",[4,0.3]],15,["literal",[1.75,0.3]],16,["literal",[1,0.3]],17,["literal",[1,0.25]]]}},{"id":"bridge-steps","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","type"],"steps"],["==",["get","structure"],"bridge"],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,16,1.6,18,6],"line-color":"hsl(40, 47%, 96%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[0.3,0.3]]]}},{"id":"bridge-pedestrian","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","class"],"pedestrian"],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,18,12],"line-color":"hsl(40, 47%, 96%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.5,0.4]],16,["literal",[1,0.2]]]}},{"id":"bridge-case-simple","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["step",["zoom"],["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","secondary","tertiary","street","street_limited","primary_link","track"],true,false],14,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","primary_link","secondary","secondary_link","tertiary","tertiary_link","street","street_limited","service","track"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],13,["match",["get","class"],["motorway","trunk","primary"],6,["secondary","tertiary"],4,["motorway_link","trunk_link","street","street_limited","primary_link"],2.5,1.25],18,["match",["get","class"],["motorway","trunk","primary"],36,["secondary","tertiary"],30,["motorway_link","trunk_link","street","street_limited","primary_link"],22,16]],"line-color":"hsl(40, 46%, 86%)"}},{"id":"bridge-simple","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["step",["zoom"],["match",["get","class"],["motorway","trunk"],true,false],13,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","secondary","tertiary","street","street_limited","primary_link","track"],true,false],14,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","primary_link","secondary","secondary_link","tertiary","tertiary_link","street","street_limited","service","track"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],13,["match",["get","class"],["motorway","trunk","primary"],4,["secondary","tertiary"],2.5,["motorway_link","trunk_link","street","street_limited","primary_link"],1,0.5],18,["match",["get","class"],["motorway","trunk","primary"],32,["secondary","tertiary"],26,["motorway_link","trunk_link","street","street_limited","primary_link"],18,12]],"line-color":["match",["get","class"],["primary_link","secondary_link","tertiary_link","street","street_limited","service","track"],"hsl(38, 55%, 95%)","hsl(38, 55%, 100%)"]}},{"id":"admin-1-boundary-bg","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":7,"filter":["all",["==",["get","admin_level"],1],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"bevel"},"paint":{"line-color":["interpolate",["linear"],["zoom"],8,"hsl(40, 46%, 86%)",16,"hsl(0, 0%, 87%)"],"line-width":["interpolate",["linear"],["zoom"],7,3.75,12,5.5],"line-opacity":["interpolate",["linear"],["zoom"],7,0,8,0.75],"line-dasharray":[1,0],"line-blur":["interpolate",["linear"],["zoom"],3,0,8,3]}},{"id":"admin-0-boundary-bg","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":1,"filter":["all",["==",["get","admin_level"],0],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{},"paint":{"line-width":["interpolate",["linear"],["zoom"],3,3.5,10,8],"line-color":["interpolate",["linear"],["zoom"],6,"hsl(40, 46%, 86%)",8,"hsl(0, 0%, 87%)"],"line-opacity":["interpolate",["linear"],["zoom"],3,0,4,0.5],"line-blur":["interpolate",["linear"],["zoom"],3,0,10,2]}},{"id":"admin-1-boundary","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":2,"filter":["all",["==",["get","admin_level"],1],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"round","line-cap":"round"},"paint":{"line-dasharray":["step",["zoom"],["literal",[2,0]],7,["literal",[2,2,6,2]]],"line-width":["interpolate",["linear"],["zoom"],7,0.75,12,1.5],"line-opacity":["interpolate",["linear"],["zoom"],2,0,3,1],"line-color":["interpolate",["linear"],["zoom"],3,"hsl(0, 0%, 77%)",7,"hsl(0, 0%, 62%)"]}},{"id":"admin-0-boundary","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":1,"filter":["all",["==",["get","admin_level"],0],["==",["get","disputed"],"false"],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"round","line-cap":"round"},"paint":{"line-color":"hsl(0, 0%, 51%)","line-width":["interpolate",["linear"],["zoom"],3,0.5,10,2],"line-dasharray":[10,0]}},{"id":"admin-0-boundary-disputed","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":1,"filter":["all",["==",["get","disputed"],"true"],["==",["get","admin_level"],0],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"round"},"paint":{"line-color":"hsl(0, 0%, 51%)","line-width":["interpolate",["linear"],["zoom"],3,0.5,10,2],"line-dasharray":["step",["zoom"],["literal",[3.25,3.25]],6,["literal",[2.5,2.5]],7,["literal",[2,2.25]],8,["literal",[1.75,2]]]}},{"id":"road-label-simple","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, road-labels"},"source":"composite","source-layer":"road","minzoom":12,"filter":["match",["get","class"],["motorway","trunk","primary","secondary","tertiary","street","street_limited"],true,false],"layout":{"text-size":["interpolate",["linear"],["zoom"],10,["match",["get","class"],["motorway","trunk","primary","secondary","tertiary"],10,9],18,["match",["get","class"],["motorway","trunk","primary","secondary","tertiary"],16,14]],"text-max-angle":30,"text-font":["DIN Pro Regular","Arial Unicode MS Regular"],"symbol-placement":"line","text-padding":1,"text-rotation-alignment":"map","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":0.01},"paint":{"text-color":"hsl(40, 47%, 41%)","text-halo-color":"hsl(38, 55%, 100%)","text-halo-width":1}},{"id":"path-pedestrian-label","type":"symbol","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., walking-cycling-labels"},"source":"composite","source-layer":"road","minzoom":12,"filter":["step",["zoom"],["match",["get","class"],["pedestrian"],true,false],15,["match",["get","class"],["path","pedestrian"],true,false]],"layout":{"text-size":["interpolate",["linear"],["zoom"],10,["match",["get","class"],"pedestrian",9,6.5],18,["match",["get","class"],"pedestrian",14,13]],"text-max-angle":30,"text-font":["DIN Pro Regular","Arial Unicode MS Regular"],"symbol-placement":"line","text-padding":1,"text-rotation-alignment":"map","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":0.01},"paint":{"text-color":"hsl(40, 47%, 41%)","text-halo-color":"hsl(40, 46%, 95%)","text-halo-width":1,"text-halo-blur":1}},{"id":"waterway-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","minzoom":13,"filter":["all",["match",["get","class"],["canal","river","stream"],["match",["get","worldview"],["all","US"],true,false],["disputed_canal","disputed_river","disputed_stream"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"LineString"]],"layout":{"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"text-max-angle":30,"symbol-spacing":["interpolate",["linear",1],["zoom"],15,250,17,400],"text-size":["interpolate",["linear"],["zoom"],13,12,18,16],"symbol-placement":"line","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"text-color":"hsl(205, 44%, 90%)"}},{"id":"natural-line-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","minzoom":4,"filter":["all",["match",["get","class"],["glacier","landform"],["match",["get","worldview"],["all","US"],true,false],["disputed_glacier","disputed_landform"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"LineString"],["<=",["get","filterrank"],2]],"layout":{"text-size":["step",["zoom"],["step",["get","sizerank"],18,5,12],17,["step",["get","sizerank"],18,13,12]],"text-max-angle":30,"text-field":["coalesce",["get","name_en"],["get","name"]],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"line-center","text-pitch-alignment":"viewport"},"paint":{"text-halo-width":0.5,"text-halo-color":"hsl(40, 53%, 100%)","text-halo-blur":0.5,"text-color":["step",["zoom"],["step",["get","sizerank"],"hsl(26, 15%, 48%)",5,"hsl(26, 20%, 38%)"],17,["step",["get","sizerank"],"hsl(26, 15%, 48%)",13,"hsl(26, 20%, 38%)"]]}},{"id":"natural-point-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","minzoom":4,"filter":["all",["match",["get","class"],["dock","glacier","landform","water_feature","wetland"],["match",["get","worldview"],["all","US"],true,false],["disputed_dock","disputed_glacier","disputed_landform","disputed_water_feature","disputed_wetland"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"Point"],["<=",["get","filterrank"],2]],"layout":{"text-size":["step",["zoom"],["step",["get","sizerank"],18,5,12],17,["step",["get","sizerank"],18,13,12]],"icon-image":["step",["zoom"],["concat",["get","maki"],"-11"],15,["concat",["get","maki"],"-15"]],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-offset":["step",["zoom"],["step",["get","sizerank"],["literal",[0,0]],5,["literal",[0,0.75]]],17,["step",["get","sizerank"],["literal",[0,0]],13,["literal",[0,0.75]]]],"text-anchor":["step",["zoom"],["step",["get","sizerank"],"center",5,"top"],17,["step",["get","sizerank"],"center",13,"top"]],"text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"icon-opacity":["step",["zoom"],["step",["get","sizerank"],0,5,1],17,["step",["get","sizerank"],0,13,1]],"text-halo-color":"hsl(40, 53%, 100%)","text-halo-width":0.5,"text-halo-blur":0.5,"text-color":["step",["zoom"],["step",["get","sizerank"],"hsl(26, 15%, 48%)",5,"hsl(26, 20%, 38%)"],17,["step",["get","sizerank"],"hsl(26, 15%, 48%)",13,"hsl(26, 20%, 38%)"]]}},{"id":"water-line-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","filter":["all",["match",["get","class"],["bay","ocean","reservoir","sea","water"],["match",["get","worldview"],["all","US"],true,false],["disputed_bay","disputed_ocean","disputed_reservoir","disputed_sea","disputed_water"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"LineString"]],"layout":{"text-size":["interpolate",["linear"],["zoom"],7,["step",["get","sizerank"],20,6,18,12,12],10,["step",["get","sizerank"],15,9,12],18,["step",["get","sizerank"],15,9,14]],"text-max-angle":30,"text-letter-spacing":["match",["get","class"],"ocean",0.25,["sea","bay"],0.15,0],"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"symbol-placement":"line-center","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"text-color":["match",["get","class"],["bay","ocean","sea"],"hsl(205, 72%, 90%)","hsl(205, 44%, 90%)"]}},{"id":"water-point-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","filter":["all",["match",["get","class"],["bay","ocean","reservoir","sea","water"],["match",["get","worldview"],["all","US"],true,false],["disputed_bay","disputed_ocean","disputed_reservoir","disputed_sea","disputed_water"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"Point"]],"layout":{"text-line-height":1.3,"text-size":["interpolate",["linear"],["zoom"],7,["step",["get","sizerank"],20,6,15,12,12],10,["step",["get","sizerank"],15,9,12]],"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":["match",["get","class"],"ocean",0.25,["bay","sea"],0.15,0.01],"text-max-width":["match",["get","class"],"ocean",4,"sea",5,["bay","water"],7,10]},"paint":{"text-color":["match",["get","class"],["bay","ocean","sea"],"hsl(205, 72%, 90%)","hsl(205, 44%, 90%)"]}},{"id":"poi-label","type":"symbol","metadata":{"mapbox:featureComponent":"point-of-interest-labels","mapbox:group":"Point of interest labels, poi-labels"},"source":"composite","source-layer":"poi_label","minzoom":6,"filter":["<=",["get","filterrank"],["+",["step",["zoom"],0,16,1,17,2],2]],"layout":{"text-size":["step",["zoom"],["step",["get","sizerank"],18,5,12],17,["step",["get","sizerank"],18,13,12]],"icon-image":["step",["zoom"],["case",["has","maki_beta"],["image",["concat",["get","maki_beta"],"-11"]],["image",["concat",["get","maki"],"-11"]]],15,["case",["has","maki_beta"],["image",["concat",["get","maki_beta"],"-15"]],["image",["concat",["get","maki"],"-15"]]]],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-offset":["step",["zoom"],["step",["get","sizerank"],["literal",[0,0]],5,["literal",[0,0.75]]],17,["step",["get","sizerank"],["literal",[0,0]],13,["literal",[0,0.75]]]],"text-anchor":["step",["zoom"],["step",["get","sizerank"],"center",5,"top"],17,["step",["get","sizerank"],"center",13,"top"]],"text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"icon-opacity":["step",["zoom"],["step",["get","sizerank"],0,5,1],17,["step",["get","sizerank"],0,13,1]],"text-halo-color":["match",["get","class"],"park_like","hsl(78, 55%, 100%)","education","hsl(40, 52%, 100%)","medical","hsl(3, 51%, 100%)","hsl(40, 53%, 100%)"],"text-halo-width":0.5,"text-halo-blur":0.5,"text-color":["step",["zoom"],["step",["get","sizerank"],["match",["get","class"],"food_and_drink","hsl(22, 44%, 61%)","park_like","hsl(76, 51%, 26%)","education","hsl(40, 18%, 45%)","medical","hsl(3, 18%, 55%)","hsl(26, 15%, 48%)"],5,["match",["get","class"],"food_and_drink","hsl(22, 68%, 44%)","park_like","hsl(76, 50%, 15%)","education","hsl(40, 45%, 25%)","medical","hsl(3, 24%, 45%)","hsl(26, 20%, 38%)"]],17,["step",["get","sizerank"],["match",["get","class"],"food_and_drink","hsl(22, 44%, 61%)","park_like","hsl(76, 51%, 26%)","education","hsl(40, 18%, 45%)","medical","hsl(3, 18%, 55%)","hsl(26, 15%, 48%)"],13,["match",["get","class"],"food_and_drink","hsl(22, 68%, 44%)","park_like","hsl(76, 50%, 15%)","education","hsl(40, 45%, 25%)","medical","hsl(3, 24%, 45%)","hsl(26, 20%, 38%)"]]]}},{"id":"airport-label","type":"symbol","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, transit-labels"},"source":"composite","source-layer":"airport_label","minzoom":8,"filter":["match",["get","class"],["military","civil"],["match",["get","worldview"],["all","US"],true,false],["disputed_military","disputed_civil"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],"layout":{"text-line-height":1.1,"text-size":["step",["get","sizerank"],18,9,12],"icon-image":["step",["get","sizerank"],["concat",["get","maki"],"-15"],9,["concat",["get","maki"],"-11"]],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-offset":[0,0.75],"text-rotation-alignment":"viewport","text-anchor":"top","text-field":["step",["get","sizerank"],["coalesce",["get","name_en"],["get","name"]],15,["get","ref"]],"text-letter-spacing":0.01,"text-max-width":9},"paint":{"text-color":"hsl(225, 4%, 40%)","text-halo-color":"hsl(225, 68%, 100%)","text-halo-width":1}},{"id":"settlement-subdivision-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":10,"maxzoom":15,"filter":["all",["match",["get","class"],"settlement_subdivision",["match",["get","worldview"],["all","US"],true,false],"disputed_settlement_subdivision",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["<=",["get","filterrank"],3]],"layout":{"text-field":["coalesce",["get","name_en"],["get","name"]],"text-transform":"uppercase","text-font":["DIN Pro Regular","Arial Unicode MS Regular"],"text-letter-spacing":["match",["get","type"],"suburb",0.15,0.1],"text-max-width":7,"text-padding":3,"text-size":["interpolate",["cubic-bezier",0.5,0,1,1],["zoom"],11,["match",["get","type"],"suburb",11,10.5],15,["match",["get","type"],"suburb",15,14]]},"paint":{"text-halo-color":"hsla(40, 53%, 100%, 0.75)","text-halo-width":1,"text-color":"hsl(0, 0%, 27%)","text-halo-blur":0.5}},{"id":"settlement-minor-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","maxzoom":15,"filter":["all",["<=",["get","filterrank"],3],["match",["get","class"],"settlement",["match",["get","worldview"],["all","US"],true,false],"disputed_settlement",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["step",["zoom"],true,8,[">=",["get","symbolrank"],11],10,[">=",["get","symbolrank"],12],11,[">=",["get","symbolrank"],13],12,[">=",["get","symbolrank"],15],13,[">=",["get","symbolrank"],11],14,[">=",["get","symbolrank"],13]]],"layout":{"text-line-height":1.1,"text-size":["interpolate",["cubic-bezier",0.2,0,0.9,1],["zoom"],3,["step",["get","symbolrank"],12,9,11,10,10.5,12,9.5,14,8.5,16,6.5,17,4],13,["step",["get","symbolrank"],23,9,21,10,19,11,17,12,16,13,15,15,13]],"icon-image":"","text-font":["DIN Pro Regular","Arial Unicode MS Regular"],"text-offset":["step",["zoom"],["literal",[0,0]],8,["literal",[0,0]]],"text-anchor":["step",["zoom"],"center",8,"center"],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-max-width":7},"paint":{"text-color":"hsl(0, 0%, 0%)","text-halo-color":"hsl(40, 53%, 100%)","text-halo-width":1,"icon-opacity":["step",["zoom"],1,8,0],"text-halo-blur":1}},{"id":"settlement-major-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","maxzoom":15,"filter":["all",["<=",["get","filterrank"],3],["match",["get","class"],"settlement",["match",["get","worldview"],["all","US"],true,false],"disputed_settlement",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["step",["zoom"],false,8,["<",["get","symbolrank"],11],10,["<",["get","symbolrank"],12],11,["<",["get","symbolrank"],13],12,["<",["get","symbolrank"],15],13,[">=",["get","symbolrank"],11],14,[">=",["get","symbolrank"],13]]],"layout":{"text-line-height":1.1,"text-size":["interpolate",["cubic-bezier",0.2,0,0.9,1],["zoom"],8,["step",["get","symbolrank"],18,9,17,10,15],15,["step",["get","symbolrank"],23,9,22,10,20,11,18,12,16,13,15,15,13]],"icon-image":"","text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-offset":["step",["zoom"],["literal",[0,0]],8,["literal",[0,0]]],"text-anchor":["step",["zoom"],"center",8,"center"],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-max-width":7},"paint":{"text-color":"hsl(0, 0%, 0%)","text-halo-color":"hsl(40, 53%, 100%)","text-halo-width":1,"icon-opacity":["step",["zoom"],1,8,0],"text-halo-blur":1}},{"id":"state-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":3,"maxzoom":9,"filter":["match",["get","class"],"state",["match",["get","worldview"],["all","US"],true,false],"disputed_state",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],"layout":{"text-size":["interpolate",["cubic-bezier",0.85,0.7,0.65,1],["zoom"],4,["step",["get","symbolrank"],10,6,9.5,7,9],9,["step",["get","symbolrank"],21,6,16,7,13]],"text-transform":"uppercase","text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"text-field":["step",["zoom"],["step",["get","symbolrank"],["coalesce",["get","name_en"],["get","name"]],5,["coalesce",["get","abbr"],["get","name_en"],["get","name"]]],5,["coalesce",["get","name_en"],["get","name"]]],"text-letter-spacing":0.15,"text-max-width":6},"paint":{"text-color":"hsl(0, 0%, 0%)","text-halo-color":"hsl(40, 53%, 100%)","text-halo-width":1}},{"id":"country-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":1,"maxzoom":10,"filter":["match",["get","class"],"country",["match",["get","worldview"],["all","US"],true,false],"disputed_country",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],"layout":{"text-line-height":1.1,"text-size":["interpolate",["cubic-bezier",0.2,0,0.7,1],["zoom"],1,["step",["get","symbolrank"],11,4,9,5,8],9,["step",["get","symbolrank"],22,4,19,5,17]],"icon-image":"","text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-offset":["literal",[0,0]],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-max-width":6},"paint":{"icon-opacity":["step",["zoom"],["case",["has","text_anchor"],1,0],7,0],"text-color":"hsl(0, 0%, 0%)","text-halo-color":["interpolate",["linear"],["zoom"],2,"hsla(40, 53%, 100%, 0.75)",3,"hsl(40, 53%, 100%)"],"text-halo-width":1.25}}],"created":"2021-03-29T17:24:02.794Z","modified":"2021-03-29T17:24:12.872Z","id":"ckmuv21s85dd317s3sii3rhg7","owner":"northarrowresearch","visibility":"private","draft":false}')},355:function(e){e.exports=JSON.parse('{"version":8,"name":"RiverscapesTopo","metadata":{"mapbox:type":"default","mapbox:origin":"outdoors-v11","mapbox:sdk-support":{"android":"10.0.0","ios":"10.0.0","js":"2.3.0"},"mapbox:autocomposite":true,"mapbox:groups":{"Terrain, terrain-labels":{"name":"Terrain, terrain-labels","collapsed":true},"Transit, transit-labels":{"name":"Transit, transit-labels","collapsed":true},"Administrative boundaries, admin":{"name":"Administrative boundaries, admin","collapsed":true},"Transit, bridges":{"name":"Transit, bridges","collapsed":true},"Terrain, surface":{"name":"Terrain, surface","collapsed":true},"Buildings, building-labels":{"name":"Buildings, building-labels","collapsed":true},"Transit, surface":{"name":"Transit, surface","collapsed":true},"Road network, bridges":{"name":"Road network, bridges","collapsed":true},"Land, water, & sky, water":{"name":"Land, water, & sky, water","collapsed":true},"Road network, tunnels":{"name":"Road network, tunnels","collapsed":true},"Road network, road-labels":{"name":"Road network, road-labels","collapsed":true},"Buildings, built":{"name":"Buildings, built","collapsed":true},"Natural features, natural-labels":{"name":"Natural features, natural-labels","collapsed":true},"Road network, surface":{"name":"Road network, surface","collapsed":true},"Land, water, & sky, built":{"name":"Land, water, & sky, built","collapsed":true},"Walking, cycling, etc., barriers-bridges":{"name":"Walking, cycling, etc., barriers-bridges","collapsed":true},"Place labels, place-labels":{"name":"Place labels, place-labels","collapsed":true},"Transit, ferries":{"name":"Transit, ferries","collapsed":true},"Transit, elevated":{"name":"Transit, elevated","collapsed":true},"Point of interest labels, poi-labels":{"name":"Point of interest labels, poi-labels","collapsed":true},"Walking, cycling, etc., tunnels":{"name":"Walking, cycling, etc., tunnels","collapsed":true},"Terrain, land":{"name":"Terrain, land","collapsed":false},"Road network, tunnels-case":{"name":"Road network, tunnels-case","collapsed":true},"Walking, cycling, etc., walking-cycling-labels":{"name":"Walking, cycling, etc., walking-cycling-labels","collapsed":true},"Walking, cycling, etc., surface":{"name":"Walking, cycling, etc., surface","collapsed":true},"Transit, built":{"name":"Transit, built","collapsed":true},"Road network, surface-icons":{"name":"Road network, surface-icons","collapsed":true},"Land, water, & sky, land":{"name":"Land, water, & sky, land","collapsed":true},"Transit, ferry-aerialway-labels":{"name":"Transit, ferry-aerialway-labels","collapsed":true}},"mapbox:decompiler":{"id":"ckusifw413fsi17rl383dxxl1","componentVersion":"11.1.1","strata":[{"id":"outdoors-v11","order":[["land-and-water","land"],["land-and-water","water"],"mapbox-mapbox-terrain-dem-v1",["terrain","land"],["land-and-water","built"],["transit","built"],["buildings","built"],["road-network","tunnels-case"],["walking-cycling","tunnels"],["road-network","tunnels"],["terrain","surface"],["transit","ferries"],["walking-cycling","surface"],["road-network","surface"],["transit","surface"],["road-network","surface-icons"],["walking-cycling","barriers-bridges"],["road-network","bridges"],["transit","bridges"],["road-network","traffic-and-closures"],["buildings","extruded"],["transit","elevated"],["admin-boundaries","admin"],["terrain","terrain-labels"],["buildings","building-labels"],["road-network","road-labels"],["walking-cycling","walking-cycling-labels"],["transit","ferry-aerialway-labels"],["natural-features","natural-labels"],["point-of-interest-labels","poi-labels"],["transit","transit-labels"],["place-labels","place-labels"],["land-and-water","sky"]]}],"overrides":{"terrain":{"contour-line":{"paint":{"line-color":"hsla(30, 43%, 45%, 0.57)"}}}},"components":{"road-network":"11.1.1","natural-features":"11.1.1","place-labels":"11.1.1","admin-boundaries":"11.1.1","point-of-interest-labels":"11.1.1","walking-cycling":"11.1.1","transit":"11.1.1","terrain":"11.1.1","land-and-water":"11.1.1","buildings":"11.1.1"},"propConfig":{"road-network":{"colorBase":"hsl(35, 11%, 95%)","colorRoad":"hsl(0, 0%, 100%)","colorRoadOutline":"hsl(230, 26%, 88%)","colorMotorwayTrunk":"hsl(36, 54%, 68%)","colorRoadLabel":"hsl(0,0%, 0%)","colorPathOutline":"hsl(50, 100%, 40%)","labelStyle":"Outdoors","iconSaturation":-0.5},"natural-features":{"colorBase":"hsl(35, 11%, 95%)","colorWater":"hsl(196, 80%, 70%)","colorPoi":"hsl(26, 35%, 35%)","density":4},"place-labels":{"colorBase":"hsl(35, 11%, 95%)","colorPlaceLabel":"hsl(230, 29%, 25%)"},"admin-boundaries":{"colorBase":"hsl(35, 11%, 95%)","colorPlaceLabel":"hsl(230, 29%, 25%)"},"point-of-interest-labels":{"educationDensity":2,"commercialServicesDensity":2,"generalDensity":2,"sportAndLeisureDensity":4,"colorGreenspace":"hsl(99, 57%, 75%)","artsAndEntertainmentDensity":2,"parkLikeDensity":4,"colorPoi":"hsl(26, 35%, 35%)","foodAndDrinkDensity":2,"historicDensity":3,"placeLikeDensity":2,"lodgingDensity":2,"colorGreenspaceLabel":"hsl(100, 99%, 20%)","industrialDensity":2,"storeLikeDensity":2,"landmarkDensity":3,"motoristDensity":3,"colorBase":"hsl(35, 11%, 95%)","buildingDensity":2,"controlDensityByClass":true,"colorSchool":"hsl(50, 100%, 43%)","medicalDensity":3,"religionDensity":2,"foodAndDrinkStoresDensity":3,"colorHospital":"hsl(340, 37%, 52%)","publicFacilitiesDensity":2,"visitorAmenitiesDensity":4},"walking-cycling":{"walkingPathDashPattern":"Long dash","controlDashStyle":true,"colorRoad":"hsl(0, 0%, 100%)","colorGreenspace":"hsl(99, 57%, 75%)","colorGreenspaceLabel":"hsl(100, 99%, 20%)","colorRoadLabel":"hsl(0,0%, 0%)","colorBase":"hsl(35, 11%, 95%)","gatesFencesHedges":true,"trailDashPattern":"Short dash","colorPathOutline":"hsl(50, 100%, 40%)","cyclewayPisteDashPattern":"Solid","colorRoadOutline":"hsl(230, 26%, 88%)"},"transit":{"colorRoad":"hsl(0, 0%, 100%)","aerialwayStyle":true,"colorAirport":"hsl(230, 48%, 44%)","iconSaturation":-0.5,"colorTransit":"hsl(230, 48%, 50%)","colorRoadLabel":"hsl(0,0%, 0%)","colorBase":"hsl(35, 11%, 95%)","colorWater":"hsl(196, 80%, 70%)","colorRoadOutline":"hsl(230, 26%, 88%)"},"terrain":{"colorBase":"hsl(35, 11%, 95%)","colorGreenspace":"hsl(99, 57%, 75%)","colorGreenspaceLabel":"hsl(100, 99%, 20%)","colorPoi":"hsl(26, 35%, 35%)","contours":true,"cliffs":true,"hillshadeStyle":"Outdoors","hillshade":false},"land-and-water":{"colorBase":"hsl(35, 11%, 95%)","colorWater":"hsl(196, 80%, 70%)","colorGreenspace":"hsl(99, 57%, 75%)","colorHospital":"hsl(340, 37%, 52%)","colorSchool":"hsl(50, 100%, 43%)","colorAirport":"hsl(230, 48%, 44%)","transitionLandOnZoom":true,"landStyle":"Outdoors"},"buildings":{"colorBase":"hsl(35, 11%, 95%)","colorUnderground":"hsl(260, 67%, 80%)","underground":true}}},"mapbox:uiParadigm":"layers"},"center":[-113.70234541580527,37.21165015031157],"zoom":14.497954352167346,"bearing":0,"pitch":0,"sources":{"mapbox://mapbox.mapbox-terrain-dem-v1":{"url":"mapbox://mapbox.mapbox-terrain-dem-v1","type":"raster-dem","tileSize":256},"composite":{"url":"mapbox://mapbox.mapbox-streets-v8,mapbox.mapbox-terrain-v2","type":"vector"}},"sprite":"mapbox://sprites/northarrowresearch/ckusifw413fsi17rl383dxxl1/b63t50jtam7g6j1ltm44d6op0","glyphs":"mapbox://fonts/mapbox/{fontstack}/{range}.pbf","layers":[{"id":"land","type":"background","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, land"},"layout":{},"paint":{"background-color":["interpolate",["linear"],["zoom"],11,"hsl(35, 25%, 93%)",13,"hsl(35, 9%, 91%)"]}},{"id":"landcover-outdoors","type":"fill","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, land"},"source":"composite","source-layer":"landcover","maxzoom":12,"layout":{},"paint":{"fill-color":["match",["get","class"],"snow","hsl(35, 11%, 100%)","hsl(81, 37%, 83%)"],"fill-opacity":["interpolate",["exponential",1.5],["zoom"],2,0.3,12,0],"fill-antialias":false}},{"id":"national-park","type":"fill","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, land"},"source":"composite","source-layer":"landuse_overlay","minzoom":5,"filter":["==",["get","class"],"national_park"],"layout":{},"paint":{"fill-color":"hsl(99, 57%, 75%)","fill-opacity":["interpolate",["linear"],["zoom"],5,0,6,0.75,10,0.35]}},{"id":"national-park_tint-band","type":"line","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, land"},"source":"composite","source-layer":"landuse_overlay","minzoom":9,"filter":["==",["get","class"],"national_park"],"layout":{"line-cap":"round"},"paint":{"line-color":"hsl(99, 58%, 70%)","line-width":["interpolate",["exponential",1.4],["zoom"],9,1,14,8],"line-offset":["interpolate",["exponential",1.4],["zoom"],9,0,14,-2.5],"line-opacity":["interpolate",["linear"],["zoom"],9,0,10,0.75],"line-blur":3}},{"id":"landuse","type":"fill","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, land"},"source":"composite","source-layer":"landuse","minzoom":5,"filter":["match",["get","class"],["park","airport","glacier","pitch","sand","facility"],true,["agriculture","wood","grass","scrub"],true,"cemetery",true,"school",true,"hospital",true,false],"layout":{},"paint":{"fill-color":["interpolate",["linear"],["zoom"],15,["match",["get","class"],"park",["match",["get","type"],["garden","playground","zoo"],"hsl(99, 35%, 73%)","hsl(99, 57%, 75%)"],"airport","hsl(230, 12%, 92%)","cemetery","hsl(81, 26%, 81%)","glacier","hsl(196, 60%, 85%)","hospital","hsl(340, 21%, 88%)","pitch","hsl(99, 58%, 70%)","sand","hsl(65, 46%, 89%)","school","hsl(50, 46%, 82%)","agriculture","hsl(81, 26%, 81%)",["wood","grass","scrub"],"hsl(81, 25%, 66%)","hsl(35, 13%, 86%)"],16,["match",["get","class"],"park",["match",["get","type"],["garden","playground","zoo"],"hsl(99, 35%, 73%)","hsl(99, 57%, 75%)"],"airport","hsl(230, 26%, 90%)","cemetery","hsl(81, 26%, 81%)","glacier","hsl(196, 60%, 85%)","hospital","hsl(340, 32%, 90%)","pitch","hsl(99, 58%, 70%)","sand","hsl(65, 46%, 89%)","school","hsl(50, 46%, 82%)","agriculture","hsl(81, 26%, 81%)",["wood","grass","scrub"],"hsl(81, 25%, 66%)","hsl(35, 13%, 86%)"]],"fill-opacity":["interpolate",["linear"],["zoom"],5,0,6,["match",["get","class"],["agriculture","wood","grass","scrub"],0,"glacier",0.5,1],15,["match",["get","class"],"agriculture",0.75,["wood","glacier"],0.5,"grass",0.4,"scrub",0.2,1]]}},{"id":"pitch-outline","type":"line","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, land"},"source":"composite","source-layer":"landuse","minzoom":15,"filter":["==",["get","class"],"pitch"],"layout":{},"paint":{"line-color":"hsl(81, 33%, 86%)"}},{"id":"waterway-shadow","type":"line","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, water"},"source":"composite","source-layer":"waterway","minzoom":8,"layout":{"line-cap":["step",["zoom"],"butt",11,"round"],"line-join":"round"},"paint":{"line-color":"hsl(215, 84%, 69%)","line-width":["interpolate",["exponential",1.3],["zoom"],9,["match",["get","class"],["canal","river"],0.1,0],20,["match",["get","class"],["canal","river"],8,3]],"line-translate":["interpolate",["exponential",1.2],["zoom"],7,["literal",[0,0]],16,["literal",[-1,-1]]],"line-translate-anchor":"viewport","line-opacity":["interpolate",["linear"],["zoom"],8,0,8.5,1]}},{"id":"water-shadow","type":"fill","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, water"},"source":"composite","source-layer":"water","layout":{},"paint":{"fill-color":"hsl(215, 84%, 69%)","fill-translate":["interpolate",["exponential",1.2],["zoom"],7,["literal",[0,0]],16,["literal",[-1,-1]]],"fill-translate-anchor":"viewport"}},{"id":"waterway","type":"line","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, water"},"source":"composite","source-layer":"waterway","minzoom":8,"layout":{"line-cap":["step",["zoom"],"butt",11,"round"],"line-join":"round"},"paint":{"line-color":"hsl(196, 80%, 70%)","line-width":["interpolate",["exponential",1.3],["zoom"],9,["match",["get","class"],["canal","river"],0.1,0],20,["match",["get","class"],["canal","river"],8,3]],"line-opacity":["interpolate",["linear"],["zoom"],8,0,8.5,1]}},{"id":"water","type":"fill","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, water"},"source":"composite","source-layer":"water","layout":{},"paint":{"fill-color":"hsl(196, 80%, 70%)"}},{"id":"wetland","type":"fill","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, water"},"source":"composite","source-layer":"landuse_overlay","minzoom":5,"filter":["match",["get","class"],["wetland","wetland_noveg"],true,false],"paint":{"fill-color":"hsl(185, 43%, 74%)","fill-opacity":["interpolate",["linear"],["zoom"],10,0.25,10.5,0.15]}},{"id":"wetland-pattern","type":"fill","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, water"},"source":"composite","source-layer":"landuse_overlay","minzoom":5,"filter":["match",["get","class"],["wetland","wetland_noveg"],true,false],"paint":{"fill-color":"hsl(185, 43%, 74%)","fill-opacity":["interpolate",["linear"],["zoom"],10,0,10.5,1],"fill-pattern":"wetland","fill-translate-anchor":"viewport"}},{"id":"mapbox-mapbox-terrain-dem-v1","type":"hillshade","source":"mapbox://mapbox.mapbox-terrain-dem-v1","layout":{},"paint":{"hillshade-shadow-color":"hsla(0, 0%, 0%, 0.5)","hillshade-highlight-color":"hsl(0, 0%, 100%)","hillshade-accent-color":"hsla(0, 0%, 0%, 0.73)"}},{"id":"contour-line","type":"line","metadata":{"mapbox:featureComponent":"terrain","mapbox:group":"Terrain, land"},"source":"composite","source-layer":"contour","minzoom":11,"filter":["!=",["get","index"],-1],"layout":{},"paint":{"line-opacity":["interpolate",["linear"],["zoom"],11,["match",["get","index"],[1,2],0.15,0.25],12,["match",["get","index"],[1,2],0.3,0.5]],"line-color":"hsla(30, 43%, 45%, 0.7)","line-width":["interpolate",["linear"],["zoom"],13,["match",["get","index"],[1,2],0.5,0.6],16,["match",["get","index"],[1,2],0.8,1.2]],"line-offset":["interpolate",["linear"],["zoom"],13,["match",["get","index"],[1,2],1,0.6],16,["match",["get","index"],[1,2],1.6,1.2]]}},{"id":"land-structure-polygon","type":"fill","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, built"},"source":"composite","source-layer":"structure","minzoom":13,"filter":["all",["==",["geometry-type"],"Polygon"],["==",["get","class"],"land"]],"layout":{},"paint":{"fill-color":"hsl(35, 9%, 91%)"}},{"id":"land-structure-line","type":"line","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, built"},"source":"composite","source-layer":"structure","minzoom":13,"filter":["all",["==",["geometry-type"],"LineString"],["==",["get","class"],"land"]],"layout":{"line-cap":"round"},"paint":{"line-width":["interpolate",["exponential",1.99],["zoom"],14,0.75,20,40],"line-color":"hsl(35, 9%, 91%)"}},{"id":"aeroway-polygon","type":"fill","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, built"},"source":"composite","source-layer":"aeroway","minzoom":11,"filter":["all",["==",["geometry-type"],"Polygon"],["match",["get","type"],["runway","taxiway","helipad"],true,false]],"layout":{},"paint":{"fill-color":["interpolate",["linear"],["zoom"],15,"hsl(230, 20%, 83%)",16,"hsl(230, 36%, 85%)"],"fill-opacity":["interpolate",["linear"],["zoom"],11,0,11.5,1]}},{"id":"aeroway-line","type":"line","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, built"},"source":"composite","source-layer":"aeroway","minzoom":9,"filter":["==",["geometry-type"],"LineString"],"layout":{},"paint":{"line-color":["interpolate",["linear"],["zoom"],15,"hsl(230, 20%, 83%)",16,"hsl(230, 36%, 85%)"],"line-width":["interpolate",["exponential",1.5],["zoom"],9,["match",["get","type"],"runway",1,0.5],18,["match",["get","type"],"runway",80,20]]}},{"id":"building-outline","type":"line","metadata":{"mapbox:featureComponent":"buildings","mapbox:group":"Buildings, built"},"source":"composite","source-layer":"building","minzoom":15,"filter":["all",["!=",["get","type"],"building:part"],["==",["get","underground"],"false"]],"layout":{},"paint":{"line-color":"hsl(35, 5%, 81%)","line-width":["interpolate",["exponential",1.5],["zoom"],15,0.75,20,3],"line-opacity":["interpolate",["linear"],["zoom"],15,0,16,1]}},{"id":"building","type":"fill","metadata":{"mapbox:featureComponent":"buildings","mapbox:group":"Buildings, built"},"source":"composite","source-layer":"building","minzoom":15,"filter":["all",["!=",["get","type"],"building:part"],["==",["get","underground"],"false"]],"layout":{},"paint":{"fill-color":["interpolate",["linear"],["zoom"],15,"hsl(35, 8%, 87%)",16,"hsl(35, 4%, 87%)"],"fill-opacity":["interpolate",["linear"],["zoom"],15,0,16,1],"fill-outline-color":"hsl(35, 5%, 81%)"}},{"id":"building-underground","type":"fill","metadata":{"mapbox:featureComponent":"buildings","mapbox:group":"Buildings, built"},"source":"composite","source-layer":"building","minzoom":15,"filter":["all",["==",["get","underground"],"true"],["==",["geometry-type"],"Polygon"]],"layout":{},"paint":{"fill-color":"hsl(260, 67%, 80%)","fill-opacity":["interpolate",["linear"],["zoom"],15,0,16,0.5]}},{"id":"tunnel-street-minor-low","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels-case"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link","track"],true,false],14,["match",["get","class"],["street","street_limited","track","primary_link","secondary_link","tertiary_link","service"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-color":"hsl(0, 0%, 100%)","line-opacity":["step",["zoom"],1,14,0]}},{"id":"tunnel-street-minor-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels-case"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link","track"],true,false],14,["match",["get","class"],["street","street_limited","track","primary_link","secondary_link","tertiary_link","service"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsl(230, 19%, 75%)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-opacity":["step",["zoom"],0,14,1],"line-dasharray":[3,3]}},{"id":"tunnel-primary-secondary-tertiary-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels-case"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["primary","secondary","tertiary"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,["match",["get","class"],"primary",1,0.75],18,2],"line-color":"hsl(230, 19%, 75%)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,["match",["get","class"],"primary",0.75,0.1],18,["match",["get","class"],"primary",32,26]],"line-dasharray":[3,3]}},{"id":"tunnel-major-link-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels-case"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["motorway_link","trunk_link"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsl(0, 0%, 100%)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-dasharray":[3,3]}},{"id":"tunnel-motorway-trunk-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels-case"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["motorway","trunk"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,1,18,2],"line-color":"hsl(230, 26%, 100%)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-dasharray":[3,3]}},{"id":"tunnel-construction","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels-case"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","class"],"construction"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,2,18,18],"line-color":"hsl(230, 26%, 88%)","line-dasharray":["step",["zoom"],["literal",[0.4,0.8]],15,["literal",[0.3,0.6]],16,["literal",[0.2,0.3]],17,["literal",[0.2,0.25]],18,["literal",[0.15,0.15]]]}},{"id":"tunnel-path-trail","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","class"],"path"],["match",["get","type"],["hiking","mountain_bike","trail"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,18,4],"line-color":"hsl(35, 23%, 95%)","line-dasharray":["step",["zoom"],["literal",[4,0.3]],15,["literal",[1.75,0.3]],16,["literal",[1,0.3]],17,["literal",[1,0.25]]]}},{"id":"tunnel-path-cycleway-piste","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":12,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","class"],"path"],["match",["get","type"],["cycleway","piste"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,18,4],"line-color":"hsl(35, 23%, 95%)","line-dasharray":[10,0]}},{"id":"tunnel-path","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","class"],"path"],["!=",["get","type"],"steps"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,18,4],"line-color":"hsl(35, 23%, 95%)","line-dasharray":["step",["zoom"],["literal",[5,0.5]],15,["literal",[4,0.5]],16,["literal",[4,0.45]]]}},{"id":"tunnel-steps","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","type"],"steps"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,16,1.6,18,6],"line-color":"hsl(35, 23%, 95%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[0.3,0.3]]]}},{"id":"tunnel-pedestrian","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","class"],"pedestrian"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,18,12],"line-color":"hsl(0, 0%, 100%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.5,0.4]],16,["literal",[1,0.2]]]}},{"id":"tunnel-major-link","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["motorway_link","trunk_link"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":["match",["get","class"],"motorway_link","hsl(26, 74%, 78%)","hsl(46, 64%, 78%)"]}},{"id":"tunnel-street-minor","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link","track"],true,false],14,["match",["get","class"],["street","street_limited","track","primary_link","secondary_link","tertiary_link","service"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-color":["match",["get","class"],"street_limited","hsl(35, 13%, 94%)","hsl(0, 0%, 100%)"],"line-opacity":["step",["zoom"],0,14,1]}},{"id":"tunnel-primary-secondary-tertiary","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["primary","secondary","tertiary"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,["match",["get","class"],"primary",0.75,0.1],18,["match",["get","class"],"primary",32,26]],"line-color":"hsl(0, 0%, 100%)"}},{"id":"tunnel-oneway-arrow-blue","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":15,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","oneway"],"true"],["step",["zoom"],["match",["get","class"],["primary","secondary","street","street_limited","tertiary"],true,false],16,["match",["get","class"],["primary","secondary","tertiary","street","street_limited","primary_link","secondary_link","tertiary_link","service","track"],true,false]]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-small",18,"oneway-large"],"symbol-spacing":200,"icon-rotation-alignment":"map"},"paint":{}},{"id":"tunnel-motorway-trunk","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["motorway","trunk"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-color":["match",["get","class"],"motorway","hsl(26, 74%, 78%)","hsl(46, 64%, 78%)"]}},{"id":"tunnel-oneway-arrow-white","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":16,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["motorway","motorway_link","trunk","trunk_link"],true,false],["==",["get","oneway"],"true"]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-white-small",18,"oneway-white-large"],"symbol-spacing":200},"paint":{}},{"id":"cliff","type":"line","metadata":{"mapbox:featureComponent":"terrain","mapbox:group":"Terrain, surface"},"source":"composite","source-layer":"structure","minzoom":15,"filter":["==",["get","class"],"cliff"],"layout":{"line-cap":"round","line-join":"round"},"paint":{"line-opacity":["interpolate",["linear"],["zoom"],15,0,15.25,1],"line-width":10,"line-pattern":"cliff"}},{"id":"ferry","type":"line","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, ferries"},"source":"composite","source-layer":"road","minzoom":8,"filter":["==",["get","type"],"ferry"],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-color":["interpolate",["linear"],["zoom"],15,"hsl(205, 73%, 63%)",17,"hsl(230, 73%, 63%)"],"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,20,1],"line-dasharray":["step",["zoom"],["literal",[1,0]],13,["literal",[12,4]]]}},{"id":"ferry-auto","type":"line","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, ferries"},"source":"composite","source-layer":"road","filter":["==",["get","type"],"ferry_auto"],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-color":["interpolate",["linear"],["zoom"],15,"hsl(205, 73%, 63%)",17,"hsl(230, 73%, 63%)"],"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,20,1]}},{"id":"road-path-bg","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":12,"filter":["all",["==",["get","class"],"path"],["step",["zoom"],["!",["match",["get","type"],["steps","sidewalk","crossing"],true,false]],16,["!=",["get","type"],"steps"]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,2,18,7],"line-color":["match",["get","type"],"piste","hsl(230, 100%, 60%)",["mountain_bike","hiking","trail","cycleway","footway","path","bridleway"],"hsl(50, 100%, 40%)","hsl(230, 17%, 82%)"]}},{"id":"road-steps-bg","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","type"],"steps"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,2,17,4.6,18,7],"line-opacity":0.75,"line-color":"hsl(50, 100%, 40%)"}},{"id":"road-pedestrian-case","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","class"],"pedestrian"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,2,18,14.5],"line-color":"hsl(230, 26%, 88%)"}},{"id":"road-path-trail","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":12,"filter":["all",["==",["get","class"],"path"],["match",["get","type"],["hiking","mountain_bike","trail"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,18,4],"line-color":"hsl(0, 0%, 100%)","line-dasharray":["step",["zoom"],["literal",[4,0.3]],15,["literal",[1.75,0.3]],16,["literal",[1,0.3]],17,["literal",[1,0.25]]]}},{"id":"road-path-cycleway-piste","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":12,"filter":["all",["==",["get","class"],"path"],["match",["get","type"],["cycleway","piste"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":"round","line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,18,4],"line-color":"hsl(0, 0%, 100%)","line-dasharray":[10,0]}},{"id":"road-path","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":12,"filter":["all",["==",["get","class"],"path"],["step",["zoom"],["!",["match",["get","type"],["steps","sidewalk","crossing"],true,false]],16,["!=",["get","type"],"steps"]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],13,0.5,14,1,15,1,18,4],"line-color":"hsl(0, 0%, 100%)","line-dasharray":["step",["zoom"],["literal",[5,0.5]],15,["literal",[4,0.5]],16,["literal",[4,0.45]]]}},{"id":"road-steps","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","type"],"steps"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,16,1.6,18,6],"line-color":"hsl(0, 0%, 100%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[0.3,0.3]]]}},{"id":"road-pedestrian","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":12,"filter":["all",["==",["get","class"],"pedestrian"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,18,12],"line-color":"hsl(0, 0%, 100%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.5,0.4]],16,["literal",[1,0.2]]]}},{"id":"road-pedestrian-polygon-fill","type":"fill","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":12,"filter":["all",["==",["geometry-type"],"Polygon"],["match",["get","class"],["path","pedestrian"],true,false],["match",["get","structure"],["none","ford"],true,false],["case",["has","layer"],[">=",["get","layer"],0],true]],"layout":{},"paint":{"fill-color":["interpolate",["linear"],["zoom"],16,"hsl(230, 16%, 94%)",16.25,"hsl(230, 52%, 98%)"],"fill-outline-color":"hsl(230, 26%, 88%)"}},{"id":"road-pedestrian-polygon-pattern","type":"fill","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":16,"filter":["all",["==",["geometry-type"],"Polygon"],["match",["get","class"],["path","pedestrian"],true,false],["match",["get","structure"],["none","ford"],true,false],["case",["has","layer"],[">=",["get","layer"],0],true]],"layout":{},"paint":{"fill-pattern":"pedestrian-polygon","fill-opacity":["interpolate",["linear"],["zoom"],16,0,16.25,1]}},{"id":"golf-hole-line","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":16,"filter":["==",["get","class"],"golf"],"layout":{},"paint":{"line-color":"hsl(99, 27%, 70%)"}},{"id":"turning-feature-outline","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":15,"filter":["all",["==",["geometry-type"],"Point"],["match",["get","class"],["turning_circle","turning_loop"],true,false]],"layout":{"icon-image":"turning-circle-outline","icon-size":["interpolate",["exponential",1.5],["zoom"],14,0.122,18,0.969,20,1],"icon-allow-overlap":true,"icon-ignore-placement":true,"icon-padding":0,"icon-rotation-alignment":"map"},"paint":{}},{"id":"road-minor-low","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["step",["zoom"],["==",["get","class"],"track"],14,["match",["get","class"],["track","secondary_link","tertiary_link","service"],true,false]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,["match",["get","class"],"track",1,0.5],18,12],"line-color":"hsl(0, 0%, 100%)","line-opacity":["step",["zoom"],1,14,0]}},{"id":"road-minor-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["step",["zoom"],["==",["get","class"],"track"],14,["match",["get","class"],["track","secondary_link","tertiary_link","service"],true,false]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":["match",["get","class"],"track","hsl(50, 100%, 40%)","hsl(230, 26%, 88%)"],"line-gap-width":["interpolate",["exponential",1.5],["zoom"],14,["match",["get","class"],"track",1,0.5],18,12],"line-opacity":["step",["zoom"],0,14,1]}},{"id":"road-street-low","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":11,"filter":["all",["match",["get","class"],["street","street_limited","primary_link"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":"hsl(0, 0%, 100%)","line-opacity":["step",["zoom"],1,14,0]}},{"id":"road-street-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":11,"filter":["all",["match",["get","class"],["street","street_limited","primary_link"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsl(230, 26%, 88%)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-opacity":["step",["zoom"],0,14,1]}},{"id":"road-secondary-tertiary-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":8,"filter":["all",["match",["get","class"],["secondary","tertiary"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,0.75,18,2],"line-color":"hsl(230, 26%, 88%)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.1,18,26],"line-opacity":["step",["zoom"],0,10,1]}},{"id":"road-primary-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":7,"filter":["all",["==",["get","class"],"primary"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,1,18,2],"line-color":"hsl(230, 26%, 88%)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-opacity":["step",["zoom"],0,10,1]}},{"id":"road-major-link-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":10,"filter":["all",["match",["get","class"],["motorway_link","trunk_link"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsl(230, 26%, 100%)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-opacity":["step",["zoom"],0,11,1]}},{"id":"road-motorway-trunk-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":5,"filter":["all",["match",["get","class"],["motorway","trunk"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,1,18,2],"line-color":"hsl(230, 26%, 100%)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-opacity":["step",["zoom"],["match",["get","class"],"motorway",1,0],6,1]}},{"id":"road-construction","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","class"],"construction"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,2,18,18],"line-color":"hsl(0, 0%, 100%)","line-dasharray":["step",["zoom"],["literal",[0.4,0.8]],15,["literal",[0.3,0.6]],16,["literal",[0.2,0.3]],17,["literal",[0.2,0.25]],18,["literal",[0.15,0.15]]]}},{"id":"road-major-link","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":10,"filter":["all",["match",["get","class"],["motorway_link","trunk_link"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",13,"round"],"line-join":["step",["zoom"],"miter",13,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":["match",["get","class"],"motorway_link","hsl(26, 67%, 68%)","hsl(46, 69%, 68%)"]}},{"id":"road-polygon","type":"fill","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":12,"filter":["all",["==",["geometry-type"],"Polygon"],["match",["get","class"],["primary","secondary","tertiary","primary_link","secondary_link","tertiary_link","trunk","trunk_link","street","street_limited","track","service"],true,false],["match",["get","structure"],["none","ford"],true,false]],"layout":{},"paint":{"fill-color":"hsl(0, 0%, 100%)","fill-outline-color":"hsl(230, 26%, 88%)"}},{"id":"road-minor","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["step",["zoom"],["==",["get","class"],"track"],14,["match",["get","class"],["track","secondary_link","tertiary_link","service"],true,false]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,["match",["get","class"],"track",1,0.5],18,12],"line-color":"hsl(0, 0%, 100%)","line-opacity":["step",["zoom"],0,14,1]}},{"id":"road-street","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":11,"filter":["all",["match",["get","class"],["street","street_limited","primary_link"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":["match",["get","class"],"street_limited","hsl(35, 13%, 94%)","hsl(0, 0%, 100%)"],"line-opacity":["step",["zoom"],0,14,1]}},{"id":"road-secondary-tertiary","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":8,"filter":["all",["match",["get","class"],["secondary","tertiary"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.1,18,26],"line-color":"hsl(0, 0%, 100%)"}},{"id":"road-primary","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":6,"filter":["all",["==",["get","class"],"primary"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-color":"hsl(0, 0%, 100%)"}},{"id":"road-oneway-arrow-blue","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":15,"filter":["all",["==",["get","oneway"],"true"],["step",["zoom"],["match",["get","class"],["primary","secondary","tertiary","street","street_limited"],true,false],16,["match",["get","class"],["primary","secondary","tertiary","street","street_limited","primary_link","secondary_link","tertiary_link","service","track"],true,false]],["match",["get","structure"],["none","ford"],true,false]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-small",18,"oneway-large"],"symbol-spacing":200,"icon-rotation-alignment":"map"},"paint":{}},{"id":"road-motorway-trunk","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","filter":["all",["match",["get","class"],["motorway","trunk"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",13,"round"],"line-join":["step",["zoom"],"miter",13,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-color":["step",["zoom"],["match",["get","class"],"motorway","hsl(26, 74%, 62%)","hsl(0, 0%, 100%)"],6,["match",["get","class"],"motorway","hsl(26, 74%, 62%)","hsl(46, 67%, 60%)"],9,["match",["get","class"],"motorway","hsl(26, 67%, 68%)","hsl(46, 69%, 68%)"]]}},{"id":"road-rail","type":"line","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, surface"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["match",["get","class"],["major_rail","minor_rail"],true,false],["match",["get","structure"],["none","ford"],true,false]],"layout":{"line-join":"round"},"paint":{"line-color":["interpolate",["linear"],["zoom"],13,"hsl(50, 16%, 82%)",16,"hsl(230, 10%, 74%)"],"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,20,1]}},{"id":"road-rail-tracks","type":"line","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, surface"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["match",["get","class"],["major_rail","minor_rail"],true,false],["match",["get","structure"],["none","ford"],true,false]],"layout":{"line-join":"round"},"paint":{"line-color":["interpolate",["linear"],["zoom"],13,"hsl(50, 16%, 82%)",16,"hsl(230, 10%, 74%)"],"line-width":["interpolate",["exponential",1.5],["zoom"],14,4,20,8],"line-dasharray":[0.1,15],"line-opacity":["interpolate",["linear"],["zoom"],13.75,0,14,1]}},{"id":"level-crossing","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface-icons"},"source":"composite","source-layer":"road","minzoom":16,"filter":["==",["get","class"],"level_crossing"],"layout":{"icon-image":"level-crossing","icon-allow-overlap":true},"paint":{}},{"id":"road-oneway-arrow-white","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface-icons"},"source":"composite","source-layer":"road","minzoom":16,"filter":["all",["==",["get","oneway"],"true"],["match",["get","class"],["motorway","trunk","motorway_link","trunk_link"],true,false],["match",["get","structure"],["none","ford"],true,false]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-white-small",18,"oneway-white-large"],"symbol-spacing":200},"paint":{}},{"id":"turning-feature","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface-icons"},"source":"composite","source-layer":"road","minzoom":15,"filter":["all",["==",["geometry-type"],"Point"],["match",["get","class"],["turning_circle","turning_loop"],true,false]],"layout":{"icon-image":"turning-circle","icon-size":["interpolate",["exponential",1.5],["zoom"],14,0.095,18,1],"icon-allow-overlap":true,"icon-ignore-placement":true,"icon-padding":0,"icon-rotation-alignment":"map"},"paint":{}},{"id":"gate-fence-hedge","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"structure","minzoom":16,"filter":["match",["get","class"],["gate","fence","hedge"],true,false],"layout":{"line-cap":"round","line-join":"round"},"paint":{"line-color":["match",["get","class"],"hedge","hsl(99, 34%, 70%)","hsl(35, 16%, 77%)"],"line-width":["interpolate",["linear"],["zoom"],16,1,20,3],"line-opacity":["match",["get","class"],"gate",0.5,1],"line-dasharray":[1,2,5,2,1,2]}},{"id":"bridge-path-bg","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","class"],"path"],["step",["zoom"],["!",["match",["get","type"],["steps","sidewalk","crossing"],true,false]],16,["!=",["get","type"],"steps"]],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,2,18,7],"line-color":["match",["get","type"],"piste","hsl(230, 100%, 60%)",["mountain_bike","hiking","trail","cycleway","footway","path","bridleway"],"hsl(50, 100%, 40%)","hsl(230, 17%, 82%)"]}},{"id":"bridge-steps-bg","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","type"],"steps"],["==",["get","structure"],"bridge"],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,2,17,4.6,18,7],"line-opacity":0.75,"line-color":"hsl(50, 100%, 40%)"}},{"id":"bridge-pedestrian-case","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","class"],"pedestrian"],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,2,18,14.5],"line-color":"hsl(230, 26%, 88%)"}},{"id":"bridge-path-trail","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","class"],"path"],["match",["get","type"],["hiking","mountain_bike","trail"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,18,4],"line-color":"hsl(0, 0%, 100%)","line-dasharray":["step",["zoom"],["literal",[4,0.3]],15,["literal",[1.75,0.3]],16,["literal",[1,0.3]],17,["literal",[1,0.25]]]}},{"id":"bridge-path-cycleway-piste","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","class"],"path"],["match",["get","type"],["cycleway","piste"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":"round","line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,18,4],"line-color":"hsl(0, 0%, 100%)","line-dasharray":[10,0]}},{"id":"bridge-path","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","class"],"path"],["==",["geometry-type"],"LineString"],["!=",["get","type"],"steps"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,18,4],"line-color":"hsl(0, 0%, 100%)","line-dasharray":["step",["zoom"],["literal",[5,0.5]],15,["literal",[4,0.5]],16,["literal",[4,0.45]]]}},{"id":"bridge-steps","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","type"],"steps"],["==",["get","structure"],"bridge"],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,16,1.6,18,6],"line-color":"hsl(0, 0%, 100%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[0.3,0.3]]]}},{"id":"bridge-pedestrian","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","class"],"pedestrian"],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,18,12],"line-color":"hsl(0, 0%, 100%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.5,0.4]],16,["literal",[1,0.2]]]}},{"id":"bridge-street-minor-low","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link","track"],true,false],14,["match",["get","class"],["street","street_limited","track","primary_link","secondary_link","tertiary_link","service"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-color":"hsl(0, 0%, 100%)","line-opacity":["step",["zoom"],1,14,0]}},{"id":"bridge-street-minor-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link","track"],true,false],14,["match",["get","class"],["street","street_limited","track","primary_link","secondary_link","tertiary_link","service"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":["match",["get","class"],"track","hsl(50, 100%, 40%)","hsl(230, 26%, 88%)"],"line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-opacity":["step",["zoom"],0,14,1]}},{"id":"bridge-primary-secondary-tertiary-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["primary","secondary","tertiary"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,["match",["get","class"],"primary",1,0.75],18,2],"line-color":"hsl(230, 26%, 88%)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,["match",["get","class"],"primary",0.75,0.1],18,["match",["get","class"],"primary",32,26]],"line-opacity":["step",["zoom"],0,10,1]}},{"id":"bridge-major-link-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["motorway_link","trunk_link"],true,false],["<=",["get","layer"],1],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsl(230, 26%, 100%)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18]}},{"id":"bridge-motorway-trunk-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["motorway","trunk"],true,false],["<=",["get","layer"],1],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,1,18,2],"line-color":"hsl(230, 26%, 100%)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32]}},{"id":"bridge-construction","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","class"],"construction"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,2,18,18],"line-color":"hsl(230, 26%, 88%)","line-dasharray":["step",["zoom"],["literal",[0.4,0.8]],15,["literal",[0.3,0.6]],16,["literal",[0.2,0.3]],17,["literal",[0.2,0.25]],18,["literal",[0.15,0.15]]]}},{"id":"bridge-major-link","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["motorway_link","trunk_link"],true,false],["<=",["get","layer"],1],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":"round","line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":["match",["get","class"],"motorway_link","hsl(26, 67%, 68%)","hsl(46, 69%, 68%)"]}},{"id":"bridge-street-minor","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link","track"],true,false],14,["match",["get","class"],["street","street_limited","track","primary_link","secondary_link","tertiary_link","service"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-color":["match",["get","class"],"street_limited","hsl(35, 13%, 94%)","hsl(0, 0%, 100%)"],"line-opacity":["step",["zoom"],0,14,1]}},{"id":"bridge-primary-secondary-tertiary","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["primary","secondary","tertiary"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,["match",["get","class"],"primary",0.75,0.1],18,["match",["get","class"],"primary",32,26]],"line-color":"hsl(0, 0%, 100%)"}},{"id":"bridge-oneway-arrow-blue","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":15,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","oneway"],"true"],["step",["zoom"],["match",["get","class"],["primary","secondary","tertiary","street","street_limited"],true,false],16,["match",["get","class"],["primary","secondary","tertiary","street","street_limited","primary_link","secondary_link","tertiary_link","service","track"],true,false]]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-small",18,"oneway-large"],"symbol-spacing":200,"icon-rotation-alignment":"map"},"paint":{}},{"id":"bridge-motorway-trunk","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["motorway","trunk"],true,false],["<=",["get","layer"],1],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":"round","line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-color":["match",["get","class"],"motorway","hsl(26, 67%, 68%)","hsl(46, 69%, 68%)"]}},{"id":"bridge-major-link-2-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],[">=",["get","layer"],2],["match",["get","class"],["motorway_link","trunk_link"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsl(230, 26%, 100%)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18]}},{"id":"bridge-motorway-trunk-2-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],[">=",["get","layer"],2],["match",["get","class"],["motorway","trunk"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,1,18,2],"line-color":"hsl(230, 26%, 100%)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32]}},{"id":"bridge-major-link-2","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],[">=",["get","layer"],2],["match",["get","class"],["motorway_link","trunk_link"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":"round","line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":["match",["get","class"],"motorway_link","hsl(26, 67%, 68%)","hsl(46, 69%, 68%)"]}},{"id":"bridge-motorway-trunk-2","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],[">=",["get","layer"],2],["match",["get","class"],["motorway","trunk"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-color":["match",["get","class"],"motorway","hsl(26, 67%, 68%)","hsl(46, 69%, 68%)"]}},{"id":"bridge-oneway-arrow-white","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":16,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["motorway","trunk","motorway_link","trunk_link"],true,false],["==",["get","oneway"],"true"]],"layout":{"symbol-placement":"line","icon-image":"oneway-white-small","symbol-spacing":200},"paint":{}},{"id":"bridge-rail","type":"line","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["major_rail","minor_rail"],true,false]],"layout":{"line-join":"round"},"paint":{"line-color":["interpolate",["linear"],["zoom"],13,"hsl(50, 16%, 82%)",16,"hsl(230, 10%, 74%)"],"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,20,1]}},{"id":"bridge-rail-tracks","type":"line","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["major_rail","minor_rail"],true,false]],"layout":{"line-join":"round"},"paint":{"line-color":["interpolate",["linear"],["zoom"],13,"hsl(50, 16%, 82%)",16,"hsl(230, 10%, 74%)"],"line-width":["interpolate",["exponential",1.5],["zoom"],14,4,20,8],"line-dasharray":[0.1,15],"line-opacity":["interpolate",["linear"],["zoom"],13.75,0,14,1]}},{"id":"aerialway-bg","type":"line","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, elevated"},"source":"composite","source-layer":"road","minzoom":12,"filter":["==",["get","class"],"aerialway"],"layout":{"line-join":"round"},"paint":{"line-color":"hsl(0, 0%, 100%)","line-width":["interpolate",["exponential",1.5],["zoom"],14,2.5,20,3],"line-blur":0.5}},{"id":"aerialway","type":"line","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, elevated"},"source":"composite","source-layer":"road","minzoom":12,"filter":["==",["get","class"],"aerialway"],"layout":{"line-join":"round"},"paint":{"line-color":"hsl(230, 4%, 29%)","line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,20,1]}},{"id":"admin-1-boundary-bg","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":7,"filter":["all",["==",["get","admin_level"],1],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"bevel"},"paint":{"line-color":["interpolate",["linear"],["zoom"],8,"hsl(35, 9%, 91%)",16,"hsl(230, 49%, 91%)"],"line-width":["interpolate",["linear"],["zoom"],7,3.75,12,5.5],"line-opacity":["interpolate",["linear"],["zoom"],7,0,8,0.75],"line-dasharray":[1,0],"line-blur":["interpolate",["linear"],["zoom"],3,0,8,3]}},{"id":"admin-0-boundary-bg","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":1,"filter":["all",["==",["get","admin_level"],0],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{},"paint":{"line-width":["interpolate",["linear"],["zoom"],3,3.5,10,8],"line-color":["interpolate",["linear"],["zoom"],6,"hsl(35, 9%, 91%)",8,"hsl(230, 49%, 91%)"],"line-opacity":["interpolate",["linear"],["zoom"],3,0,4,0.5],"line-blur":["interpolate",["linear"],["zoom"],3,0,10,2]}},{"id":"admin-1-boundary","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":2,"filter":["all",["==",["get","admin_level"],1],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"round","line-cap":"round"},"paint":{"line-dasharray":["step",["zoom"],["literal",[2,0]],7,["literal",[2,2,6,2]]],"line-width":["interpolate",["linear"],["zoom"],7,0.75,12,1.5],"line-opacity":["interpolate",["linear"],["zoom"],2,0,3,1],"line-color":["interpolate",["linear"],["zoom"],3,"hsl(230, 15%, 77%)",7,"hsl(230, 8%, 62%)"]}},{"id":"admin-0-boundary","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":1,"filter":["all",["==",["get","admin_level"],0],["==",["get","disputed"],"false"],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"round","line-cap":"round"},"paint":{"line-color":"hsl(230, 8%, 51%)","line-width":["interpolate",["linear"],["zoom"],3,0.5,10,2],"line-dasharray":[10,0]}},{"id":"admin-0-boundary-disputed","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":1,"filter":["all",["==",["get","disputed"],"true"],["==",["get","admin_level"],0],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"round"},"paint":{"line-color":"hsl(230, 8%, 51%)","line-width":["interpolate",["linear"],["zoom"],3,0.5,10,2],"line-dasharray":["step",["zoom"],["literal",[3.25,3.25]],6,["literal",[2.5,2.5]],7,["literal",[2,2.25]],8,["literal",[1.75,2]]]}},{"id":"contour-label","type":"symbol","metadata":{"mapbox:featureComponent":"terrain","mapbox:group":"Terrain, terrain-labels"},"source":"composite","source-layer":"contour","minzoom":11,"filter":["any",["==",["get","index"],10],["==",["get","index"],5]],"layout":{"text-field":["concat",["get","ele"]," m"],"symbol-placement":"line","text-pitch-alignment":"viewport","text-max-angle":25,"text-padding":5,"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-size":["interpolate",["linear"],["zoom"],15,9.5,20,12]},"paint":{"text-color":"hsl(100, 86%, 21%)","text-halo-width":1,"text-halo-color":"hsla(35, 16%, 100%, 0.5)"}},{"id":"building-number-label","type":"symbol","metadata":{"mapbox:featureComponent":"buildings","mapbox:group":"Buildings, building-labels"},"source":"composite","source-layer":"housenum_label","minzoom":17,"layout":{"text-field":["get","house_num"],"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"text-padding":4,"text-max-width":7,"text-size":9.5},"paint":{"text-color":"hsl(35, 0%, 70%)","text-halo-color":"hsl(35, 4%, 92%)","text-halo-width":0.5}},{"id":"block-number-label","type":"symbol","metadata":{"mapbox:featureComponent":"buildings","mapbox:group":"Buildings, building-labels"},"source":"composite","source-layer":"place_label","minzoom":16,"filter":["all",["==",["get","class"],"settlement_subdivision"],["==",["get","type"],"block"]],"layout":{"text-field":["get","name"],"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"text-max-width":7,"text-size":11},"paint":{"text-color":"hsl(35, 9%, 57%)","text-halo-color":"hsl(35, 7%, 100%)","text-halo-width":0.5,"text-halo-blur":0.5}},{"id":"road-label-outdoors","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, road-labels"},"source":"composite","source-layer":"road","minzoom":10,"filter":["step",["zoom"],["match",["get","class"],["motorway","trunk","primary","secondary","tertiary"],true,false],12,["match",["get","class"],["motorway","trunk","primary","secondary","tertiary","street","street_limited","track"],true,false],15,["match",["get","class"],["path","pedestrian","golf","ferry","aerialway"],false,true]],"layout":{"text-size":["interpolate",["linear"],["zoom"],10,["match",["get","class"],["motorway","trunk","primary","secondary","tertiary"],10,["motorway_link","trunk_link","primary_link","secondary_link","tertiary_link","street","street_limited","track"],9,6.5],18,["match",["get","class"],["motorway","trunk","primary","secondary","tertiary"],16,["motorway_link","trunk_link","primary_link","secondary_link","tertiary_link","street","street_limited"],14,13]],"text-max-angle":30,"text-font":["DIN Pro Regular","Arial Unicode MS Regular"],"symbol-placement":"line","text-padding":1,"text-rotation-alignment":"map","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":0.01},"paint":{"text-color":"hsl(0,0%, 0%)","text-halo-color":["match",["get","class"],["motorway","trunk"],"hsla(35, 16%, 100%, 0.75)","hsl(35, 16%, 100%)"],"text-halo-width":1,"text-halo-blur":1}},{"id":"road-intersection","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, road-labels"},"source":"composite","source-layer":"road","minzoom":15,"filter":["all",["==",["get","class"],"intersection"],["has","name"]],"layout":{"text-field":["coalesce",["get","name_en"],["get","name"]],"icon-image":"intersection","icon-text-fit":"both","icon-text-fit-padding":[1,2,1,2],"text-size":["interpolate",["exponential",1.2],["zoom"],15,9,18,12],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"]},"paint":{"text-color":"hsl(230, 36%, 64%)"}},{"id":"road-number-shield","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, road-labels"},"source":"composite","source-layer":"road","minzoom":6,"filter":["all",["has","reflen"],["<=",["get","reflen"],6],["step",["zoom"],["==",["geometry-type"],"Point"],11,[">",["get","len"],5000],12,[">",["get","len"],2500],13,[">",["get","len"],1000],14,true]],"layout":{"text-size":9,"icon-image":["concat",["get","shield"],"-",["to-string",["get","reflen"]]],"icon-rotation-alignment":"viewport","text-max-angle":38,"symbol-spacing":["interpolate",["linear"],["zoom"],11,400,14,600],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"symbol-placement":["step",["zoom"],"point",11,"line"],"text-rotation-alignment":"viewport","text-field":["get","ref"],"text-letter-spacing":0.05},"paint":{"text-color":["match",["get","shield_text_color"],"white","hsl(0, 0%, 100%)","yellow","hsl(50, 63%, 70%)","orange","hsl(25, 63%, 75%)","blue","hsl(230, 36%, 44%)","hsl(230, 11%, 13%)"]}},{"id":"road-exit-shield","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, road-labels"},"source":"composite","source-layer":"motorway_junction","minzoom":14,"filter":["all",["has","reflen"],["<=",["get","reflen"],9]],"layout":{"text-field":["get","ref"],"text-size":9,"icon-image":["concat","motorway-exit-",["to-string",["get","reflen"]]],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"]},"paint":{"text-color":"hsl(0, 0%, 100%)","text-translate":[0,0]}},{"id":"path-pedestrian-label","type":"symbol","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., walking-cycling-labels"},"source":"composite","source-layer":"road","minzoom":12,"filter":["step",["zoom"],["match",["get","class"],["pedestrian"],true,false],15,["match",["get","class"],["path","pedestrian"],true,false]],"layout":{"text-size":["interpolate",["linear"],["zoom"],10,["match",["get","class"],"pedestrian",9,6.5],18,["match",["get","class"],"pedestrian",14,13]],"text-max-angle":30,"text-font":["DIN Pro Regular","Arial Unicode MS Regular"],"symbol-placement":"line","text-padding":1,"text-rotation-alignment":"map","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":0.01},"paint":{"text-color":"hsl(0,0%, 0%)","text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":1,"text-halo-blur":1}},{"id":"golf-hole-label","type":"symbol","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., walking-cycling-labels"},"source":"composite","source-layer":"road","minzoom":16,"filter":["==",["get","class"],"golf"],"layout":{"text-field":["coalesce",["get","name_en"],["get","name"]],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-size":12},"paint":{"text-halo-color":"hsl(99, 62%, 100%)","text-halo-width":0.5,"text-halo-blur":0.5,"text-color":"hsl(100, 99%, 19%)"}},{"id":"ferry-aerialway-label","type":"symbol","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, ferry-aerialway-labels"},"source":"composite","source-layer":"road","minzoom":15,"filter":["match",["get","class"],"aerialway",true,"ferry",true,false],"layout":{"text-size":["interpolate",["linear"],["zoom"],10,6.5,18,13],"text-max-angle":30,"text-font":["DIN Pro Regular","Arial Unicode MS Regular"],"symbol-placement":"line","text-padding":1,"text-rotation-alignment":"map","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":0.01},"paint":{"text-color":["match",["get","class"],"ferry","hsl(196, 48%, 50%)","hsl(0,0%, 0%)"],"text-halo-color":["match",["get","class"],"ferry","hsl(196, 80%, 70%)","hsl(35, 16%, 100%)"],"text-halo-width":1,"text-halo-blur":1}},{"id":"waterway-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","minzoom":13,"filter":["all",["match",["get","class"],["canal","river","stream"],["match",["get","worldview"],["all","US"],true,false],["disputed_canal","disputed_river","disputed_stream"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"LineString"]],"layout":{"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"text-max-angle":30,"symbol-spacing":["interpolate",["linear",1],["zoom"],15,250,17,400],"text-size":["interpolate",["linear"],["zoom"],13,12,18,16],"symbol-placement":"line","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"text-color":"hsl(196, 48%, 57%)"}},{"id":"natural-line-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","minzoom":4,"filter":["all",["match",["get","class"],["glacier","landform"],["match",["get","worldview"],["all","US"],true,false],["disputed_glacier","disputed_landform"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"LineString"],["<=",["get","filterrank"],4]],"layout":{"text-size":["step",["zoom"],["step",["get","sizerank"],18,5,12],17,["step",["get","sizerank"],18,13,12]],"text-max-angle":30,"text-field":["coalesce",["get","name_en"],["get","name"]],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"line-center","text-pitch-alignment":"viewport"},"paint":{"text-halo-width":0.5,"text-halo-color":"hsl(35, 16%, 100%)","text-halo-blur":0.5,"text-color":["step",["zoom"],["step",["get","sizerank"],"hsl(26, 30%, 45%)",5,"hsl(26, 35%, 35%)"],17,["step",["get","sizerank"],"hsl(26, 30%, 45%)",13,"hsl(26, 35%, 35%)"]]}},{"id":"natural-point-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","minzoom":4,"filter":["all",["match",["get","class"],["dock","glacier","landform","water_feature","wetland"],["match",["get","worldview"],["all","US"],true,false],["disputed_dock","disputed_glacier","disputed_landform","disputed_water_feature","disputed_wetland"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"Point"],["<=",["get","filterrank"],4]],"layout":{"text-size":["step",["zoom"],["step",["get","sizerank"],18,5,12],17,["step",["get","sizerank"],18,13,12]],"icon-image":["get","maki"],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-offset":["step",["zoom"],["step",["get","sizerank"],["literal",[0,0]],5,["literal",[0,0.75]]],17,["step",["get","sizerank"],["literal",[0,0]],13,["literal",[0,0.75]]]],"text-anchor":["step",["zoom"],["step",["get","sizerank"],"center",5,"top"],17,["step",["get","sizerank"],"center",13,"top"]],"text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"icon-opacity":["step",["zoom"],["step",["get","sizerank"],0,5,1],17,["step",["get","sizerank"],0,13,1]],"text-halo-color":"hsl(35, 16%, 100%)","text-halo-width":0.5,"text-halo-blur":0.5,"text-color":["step",["zoom"],["step",["get","sizerank"],"hsl(26, 30%, 45%)",5,"hsl(26, 35%, 35%)"],17,["step",["get","sizerank"],"hsl(26, 30%, 45%)",13,"hsl(26, 35%, 35%)"]]}},{"id":"water-line-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","filter":["all",["match",["get","class"],["bay","ocean","reservoir","sea","water"],["match",["get","worldview"],["all","US"],true,false],["disputed_bay","disputed_ocean","disputed_reservoir","disputed_sea","disputed_water"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"LineString"]],"layout":{"text-size":["interpolate",["linear"],["zoom"],7,["step",["get","sizerank"],20,6,18,12,12],10,["step",["get","sizerank"],15,9,12],18,["step",["get","sizerank"],15,9,14]],"text-max-angle":30,"text-letter-spacing":["match",["get","class"],"ocean",0.25,["sea","bay"],0.15,0],"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"symbol-placement":"line-center","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"text-color":["match",["get","class"],["bay","ocean","sea"],"hsl(196, 76%, 50%)","hsl(196, 48%, 57%)"]}},{"id":"water-point-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","filter":["all",["match",["get","class"],["bay","ocean","reservoir","sea","water"],["match",["get","worldview"],["all","US"],true,false],["disputed_bay","disputed_ocean","disputed_reservoir","disputed_sea","disputed_water"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"Point"]],"layout":{"text-line-height":1.3,"text-size":["interpolate",["linear"],["zoom"],7,["step",["get","sizerank"],20,6,15,12,12],10,["step",["get","sizerank"],15,9,12]],"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":["match",["get","class"],"ocean",0.25,["bay","sea"],0.15,0.01],"text-max-width":["match",["get","class"],"ocean",4,"sea",5,["bay","water"],7,10]},"paint":{"text-color":["match",["get","class"],["bay","ocean","sea"],"hsl(196, 76%, 50%)","hsl(196, 48%, 57%)"]}},{"id":"poi-label","type":"symbol","metadata":{"mapbox:featureComponent":"point-of-interest-labels","mapbox:group":"Point of interest labels, poi-labels"},"source":"composite","source-layer":"poi_label","minzoom":6,"filter":["<=",["get","filterrank"],["+",["step",["zoom"],0,16,1,17,2],["match",["get","class"],"food_and_drink_stores",3,"historic",3,"landmark",3,"medical",3,"motorist",3,"park_like",4,"sport_and_leisure",4,"visitor_amenities",4,2]]],"layout":{"text-size":["step",["zoom"],["step",["get","sizerank"],18,5,12],17,["step",["get","sizerank"],18,13,12]],"icon-image":["case",["has","maki_beta"],["coalesce",["image",["get","maki_beta"]],["image",["get","maki"]]],["image",["get","maki"]]],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-offset":["step",["zoom"],["step",["get","sizerank"],["literal",[0,0]],5,["literal",[0,0.75]]],17,["step",["get","sizerank"],["literal",[0,0]],13,["literal",[0,0.75]]]],"text-anchor":["step",["zoom"],["step",["get","sizerank"],"center",5,"top"],17,["step",["get","sizerank"],"center",13,"top"]],"text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"icon-opacity":["step",["zoom"],["step",["get","sizerank"],0,5,1],17,["step",["get","sizerank"],0,13,1]],"text-halo-color":["match",["get","class"],"park_like","hsl(99, 62%, 100%)","education","hsl(50, 61%, 100%)","medical","hsl(340, 37%, 100%)","hsl(35, 16%, 100%)"],"text-halo-width":0.5,"text-halo-blur":0.5,"text-color":["step",["zoom"],["step",["get","sizerank"],["match",["get","class"],"food_and_drink","hsl(20, 42%, 58%)","park_like","hsl(100, 100%, 30%)","education","hsl(50, 40%, 43%)","medical","hsl(340, 15%, 52%)","hsl(26, 30%, 45%)"],5,["match",["get","class"],"food_and_drink","hsl(20, 74%, 41%)","park_like","hsl(100, 99%, 19%)","education","hsl(50, 100%, 23%)","medical","hsl(340, 19%, 42%)","hsl(26, 35%, 35%)"]],17,["step",["get","sizerank"],["match",["get","class"],"food_and_drink","hsl(20, 42%, 58%)","park_like","hsl(100, 100%, 30%)","education","hsl(50, 40%, 43%)","medical","hsl(340, 15%, 52%)","hsl(26, 30%, 45%)"],13,["match",["get","class"],"food_and_drink","hsl(20, 74%, 41%)","park_like","hsl(100, 99%, 19%)","education","hsl(50, 100%, 23%)","medical","hsl(340, 19%, 42%)","hsl(26, 35%, 35%)"]]]}},{"id":"transit-label","type":"symbol","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, transit-labels"},"source":"composite","source-layer":"transit_stop_label","minzoom":12,"filter":["step",["zoom"],["all",["match",["get","mode"],"rail",true,"metro_rail",true,false],["!=",["get","stop_type"],"entrance"]],15,["all",["match",["get","mode"],"rail",true,"metro_rail",true,"ferry",true,"light_rail",true,false],["!=",["get","stop_type"],"entrance"]],16,["all",["match",["get","mode"],"bus",false,true],["!=",["get","stop_type"],"entrance"]],17,["!=",["get","stop_type"],"entrance"],19,true],"layout":{"text-size":12,"icon-image":["get","network"],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-justify":["match",["get","stop_type"],"entrance","left","center"],"text-offset":["match",["get","stop_type"],"entrance",["literal",[1,0]],["literal",[0,0.8]]],"text-anchor":["match",["get","stop_type"],"entrance","left","top"],"text-field":["step",["zoom"],"",14,["match",["get","mode"],["rail","metro_rail"],["coalesce",["get","name_en"],["get","name"]],""],16,["match",["get","mode"],["bus","bicycle"],"",["coalesce",["get","name_en"],["get","name"]]],18,["coalesce",["get","name_en"],["get","name"]]],"text-letter-spacing":0.01,"text-max-width":["match",["get","stop_type"],"entrance",15,9]},"paint":{"text-halo-color":"hsl(35, 16%, 100%)","text-color":["match",["get","network"],"tokyo-metro","hsl(180, 30%, 30%)","mexico-city-metro","hsl(25, 63%, 63%)",["barcelona-metro","delhi-metro","hong-kong-mtr","milan-metro","osaka-subway"],"hsl(0, 57%, 47%)",["boston-t","washington-metro"],"hsl(230, 11%, 20%)",["chongqing-rail-transit","kiev-metro","singapore-mrt","taipei-metro"],"hsl(140, 56%, 25%)","hsl(230, 48%, 50%)"],"text-halo-blur":0.5,"text-halo-width":0.5}},{"id":"airport-label","type":"symbol","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, transit-labels"},"source":"composite","source-layer":"airport_label","minzoom":8,"filter":["match",["get","class"],["military","civil"],["match",["get","worldview"],["all","US"],true,false],["disputed_military","disputed_civil"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],"layout":{"text-line-height":1.1,"text-size":["step",["get","sizerank"],18,9,12],"icon-image":["get","maki"],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-offset":[0,0.75],"text-rotation-alignment":"viewport","text-anchor":"top","text-field":["step",["get","sizerank"],["coalesce",["get","name_en"],["get","name"]],15,["get","ref"]],"text-letter-spacing":0.01,"text-max-width":9},"paint":{"text-color":"hsl(230, 48%, 44%)","text-halo-color":"hsl(230, 31%, 100%)","text-halo-width":1}},{"id":"settlement-subdivision-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":10,"maxzoom":15,"filter":["all",["match",["get","class"],"settlement_subdivision",["match",["get","worldview"],["all","US"],true,false],"disputed_settlement_subdivision",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["<=",["get","filterrank"],4]],"layout":{"text-field":["coalesce",["get","name_en"],["get","name"]],"text-transform":"uppercase","text-font":["DIN Pro Regular","Arial Unicode MS Regular"],"text-letter-spacing":["match",["get","type"],"suburb",0.15,0.1],"text-max-width":7,"text-padding":3,"text-size":["interpolate",["cubic-bezier",0.5,0,1,1],["zoom"],11,["match",["get","type"],"suburb",11,10.5],15,["match",["get","type"],"suburb",15,14]]},"paint":{"text-halo-color":"hsla(35, 16%, 100%, 0.75)","text-halo-width":1,"text-color":"hsl(230, 29%, 36%)","text-halo-blur":0.5}},{"id":"settlement-minor-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":3,"maxzoom":13,"filter":["all",["<=",["get","filterrank"],3],["match",["get","class"],"settlement",["match",["get","worldview"],["all","US"],true,false],"disputed_settlement",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["step",["zoom"],[">",["get","symbolrank"],6],4,[">=",["get","symbolrank"],7],6,[">=",["get","symbolrank"],8],7,[">=",["get","symbolrank"],10],10,[">=",["get","symbolrank"],11],11,[">=",["get","symbolrank"],13],12,[">=",["get","symbolrank"],15]]],"layout":{"text-line-height":1.1,"text-size":["interpolate",["cubic-bezier",0.2,0,0.9,1],["zoom"],3,["step",["get","symbolrank"],12,9,11,10,10.5,12,9.5,14,8.5,16,6.5,17,4],13,["step",["get","symbolrank"],23,9,21,10,19,11,17,12,16,13,15,15,13]],"text-radial-offset":["step",["zoom"],["match",["get","capital"],2,0.6,0.55],8,0],"icon-image":["step",["zoom"],["case",["==",["get","capital"],2],"border-dot-13",["step",["get","symbolrank"],"dot-11",9,"dot-10",11,"dot-9"]],8,""],"text-font":["DIN Pro Regular","Arial Unicode MS Regular"],"text-justify":"auto","text-anchor":["step",["zoom"],["get","text_anchor"],8,"center"],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-max-width":7},"paint":{"text-color":"hsl(230, 29%, 0%)","text-halo-color":"hsl(35, 16%, 100%)","text-halo-width":1,"text-halo-blur":1}},{"id":"settlement-major-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":3,"maxzoom":15,"filter":["all",["<=",["get","filterrank"],3],["match",["get","class"],"settlement",["match",["get","worldview"],["all","US"],true,false],"disputed_settlement",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["step",["zoom"],false,3,["<=",["get","symbolrank"],6],4,["<",["get","symbolrank"],7],6,["<",["get","symbolrank"],8],7,["<",["get","symbolrank"],10],10,["<",["get","symbolrank"],11],11,["<",["get","symbolrank"],13],12,["<",["get","symbolrank"],15],13,[">=",["get","symbolrank"],11],14,[">=",["get","symbolrank"],15]]],"layout":{"text-line-height":1.1,"text-size":["interpolate",["cubic-bezier",0.2,0,0.9,1],["zoom"],3,["step",["get","symbolrank"],13,6,12],6,["step",["get","symbolrank"],16,6,15,7,14],8,["step",["get","symbolrank"],18,9,17,10,15],15,["step",["get","symbolrank"],23,9,22,10,20,11,18,12,16,13,15,15,13]],"text-radial-offset":["step",["zoom"],["match",["get","capital"],2,0.6,0.55],8,0],"icon-image":["step",["zoom"],["case",["==",["get","capital"],2],"border-dot-13",["step",["get","symbolrank"],"dot-11",9,"dot-10",11,"dot-9"]],8,""],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-justify":["step",["zoom"],["match",["get","text_anchor"],["left","bottom-left","top-left"],"left",["right","bottom-right","top-right"],"right","center"],8,"center"],"text-anchor":["step",["zoom"],["get","text_anchor"],8,"center"],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-max-width":7},"paint":{"text-color":"hsl(230, 29%, 0%)","text-halo-color":"hsl(35, 16%, 100%)","text-halo-width":1,"text-halo-blur":1}},{"id":"state-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":3,"maxzoom":9,"filter":["match",["get","class"],"state",["match",["get","worldview"],["all","US"],true,false],"disputed_state",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],"layout":{"text-size":["interpolate",["cubic-bezier",0.85,0.7,0.65,1],["zoom"],4,["step",["get","symbolrank"],10,6,9.5,7,9],9,["step",["get","symbolrank"],21,6,16,7,13]],"text-transform":"uppercase","text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"text-field":["step",["zoom"],["step",["get","symbolrank"],["coalesce",["get","name_en"],["get","name"]],5,["coalesce",["get","abbr"],["get","name_en"],["get","name"]]],5,["coalesce",["get","name_en"],["get","name"]]],"text-letter-spacing":0.15,"text-max-width":6},"paint":{"text-color":"hsl(230, 29%, 0%)","text-halo-color":"hsl(35, 16%, 100%)","text-halo-width":1}},{"id":"country-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":1,"maxzoom":10,"filter":["match",["get","class"],"country",["match",["get","worldview"],["all","US"],true,false],"disputed_country",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],"layout":{"icon-image":"","text-field":["coalesce",["get","name_en"],["get","name"]],"text-line-height":1.1,"text-max-width":6,"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-radial-offset":["step",["zoom"],0.6,8,0],"text-justify":["step",["zoom"],["match",["get","text_anchor"],["left","bottom-left","top-left"],"left",["right","bottom-right","top-right"],"right","center"],7,"auto"],"text-size":["interpolate",["cubic-bezier",0.2,0,0.7,1],["zoom"],1,["step",["get","symbolrank"],11,4,9,5,8],9,["step",["get","symbolrank"],22,4,19,5,17]]},"paint":{"icon-opacity":["step",["zoom"],["case",["has","text_anchor"],1,0],7,0],"text-color":"hsl(230, 29%, 0%)","text-halo-color":["interpolate",["linear"],["zoom"],2,"hsla(35, 16%, 100%, 0.75)",3,"hsl(35, 16%, 100%)"],"text-halo-width":1.25}}],"created":"2021-10-15T15:12:59.499Z","modified":"2021-10-15T15:25:46.022Z","id":"ckusifw413fsi17rl383dxxl1","owner":"northarrowresearch","visibility":"private","protected":false,"draft":false}')},420:function(e,t,a){"use strict";var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var o in t=arguments[a])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},r.apply(this,arguments)},o=this&&this.__awaiter||function(e,t,a,r){return new(a||(a=Promise))((function(o,n){function i(e){try{s(r.next(e))}catch(t){n(t)}}function l(e){try{s(r.throw(e))}catch(t){n(t)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(i,l)}s((r=r.apply(e,t||[])).next())}))},n=this&&this.__generator||function(e,t){var a,r,o,n,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return n={next:l(0),throw:l(1),return:l(2)},"function"===typeof Symbol&&(n[Symbol.iterator]=function(){return this}),n;function l(n){return function(l){return function(n){if(a)throw new TypeError("Generator is already executing.");for(;i;)try{if(a=1,r&&(o=2&n[0]?r.return:n[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,n[1])).done)return o;switch(r=0,o&&(n=[2&n[0],o.value]),n[0]){case 0:case 1:o=n;break;case 4:return i.label++,{value:n[1],done:!1};case 5:i.label++,r=n[1],n=[0];continue;case 7:n=i.ops.pop(),i.trys.pop();continue;default:if(!(o=(o=i.trys).length>0&&o[o.length-1])&&(6===n[0]||2===n[0])){i=0;continue}if(3===n[0]&&(!o||n[1]>o[0]&&n[1]<o[3])){i.label=n[1];break}if(6===n[0]&&i.label<o[1]){i.label=o[1],o=n;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(n);break}o[2]&&i.ops.pop(),i.trys.pop();continue}n=t.call(e,i)}catch(l){n=[6,l],r=0}finally{a=o=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,l])}}},i=this&&this.__rest||function(e,t){var a={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)t.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(a[r[o]]=e[r[o]])}return a},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.verifyMeta=t.augmentXML=t.parseProjectXML=t.parseProgramXML=t.parseXMLMeta=t.getXML=void 0;var s=a(421),c=l(a(291)),p=a(15),m=l(a(465)),u=l(a(19));function d(e){try{return e.reduce((function(e,t){var a,o=t.$,n=t._;return r(r({},e),((a={})[o.name]=n&&n.trim(),a))}),{})}catch(t){return{}}}t.getXML=function(e){return o(this,void 0,void 0,(function(){var t,a,r;return n(this,(function(o){switch(o.label){case 0:return t=Date.now(),[4,(0,c.default)({url:e,method:"get"})];case 1:if(a=o.sent(),(r=(Date.now()-t)/1e3)>10&&u.default.warn("getXML took ".concat(r.toFixed(1)," seconds")),!a.data)throw new Error("Error retrieving XML file");return[2,a.data]}}))}))},t.parseXMLMeta=d,t.parseProgramXML=function(e){return o(this,void 0,void 0,(function(){var t,a,o,l,c,u,g,y,h,b;return n(this,(function(n){switch(n.label){case 0:return[4,(0,s.parseStringPromise)(e).catch((function(e){throw new p.ValidationError("Error parsing XML file. This likely means a broken or unclosed tag.",[e.message])}))];case 1:return t=n.sent(),a=d(t.Program.MetaData[0].Meta),o=a.projectFile,l=a.projectXSDs,c=i(a,["projectFile","projectXSDs"]),u=t.Program.Definitions[0].Collections[0].Collection.map((function(e){var t=e.$,a=e.Allow,o=e.AllowRegex;return r(r({},t),{Allow:a?Array.isArray(a)?a.map((function(e){return e.$})):[a]:void 0,AllowRegex:o?Array.isArray(o)?o.map((function(e){return e.$.pattern})):[o.pattern]:void 0})})),g=[],t.Program.Definitions[0].Groups[0].Group&&(g=Array.isArray(t.Program.Definitions[0].Groups[0].Group)?t.Program.Definitions[0].Groups[0].Group.map((function(e){return e.$})):[t.Program.Definitions[0].Groups[0].Group]),y=[],t.Program.Definitions[0].Products[0].Product&&(y=Array.isArray(t.Program.Definitions[0].Products[0].Product)?t.Program.Definitions[0].Products[0].Product.map((function(e){return e.$})):[t.Program.Definitions[0].Products[0].Product]),h=(new m.default.DOMParser).parseFromString(e),b=function(e,t,a,o){var n=e.getElementsByTagName("Hierarchy")[0],i=Array.from(n.getElementsByTagName("Product")),l=[];return i.forEach((function(e){var n=[],i=e.getAttribute("ref"),s=t.find((function(e){return e.id===i}));if(!s)throw new Error("Product not found for ref='".concat(i,"'"));for(var c=e.parentNode,p=function(){var e=c.getAttribute("ref"),t=c.tagName,r="Group"===t?a.find((function(t){return t.id===e})):o.find((function(t){return t.id===e})),i=r.folder,l=r.name;n.push({type:t,id:e,folder:i,name:l}),c=c.parentNode};c&&c.parentNode&&"Hierarchy"!==c.tagName;)p();l.push(r(r({},s),{pathArr:n.reverse()}))})),l}(h,y,g,u),[2,Promise.resolve(new p.Program({name:t.Program.Name[0],machineName:t.Program.MachineName[0],projectXSDs:l,projectFile:o,meta:c,products:b,collections:u,groups:g}))]}}))}))},t.parseProjectXML=function(e){return o(this,void 0,void 0,(function(){var t,a,r,o;return n(this,(function(n){switch(n.label){case 0:return[4,(0,s.parseStringPromise)(e).catch((function(e){throw new p.ValidationError("Error parsing XML file. This likely means a broken or unclosed tag.",[e.message])}))];case 1:return t=n.sent(),a=t.Project,r={},a.Warehouse&&(r=d(a.Warehouse[0].Meta)),o={},a.MetaData&&(o=d(a.MetaData[0].Meta)),[2,Promise.resolve({id:r.id,name:a.Name[0],projType:a.ProjectType[0],Warehouse:r,program:r.program,meta:o,tags:p.Project.parseTagString(r.tags),xml:e,parsedProjectJSON:t,rawXML:e})]}}))}))},t.augmentXML=function(e,t){var a=(new m.default.DOMParser).parseFromString(t),r=a.getElementsByTagName("MetaData")[0];a.getElementsByTagName("Warehouse").length>0&&a.removeChild(a.getElementsByTagName("Warehouse")[0]);var o=a.createElement("Warehouse");return Object.keys(e).forEach((function(t){var r=a.createElement("Meta");r.setAttribute("name",t),r.appendChild(a.createTextNode(e[t])),o.appendChild(r)})),a.insertBefore(o,r),(new m.default.XMLSerializer).serializeToString(a)},t.verifyMeta=function(e,t,a){var r=a.products.find((function(t){return t.id===e}));if(!r)throw new Error("No project type '".concat(e,"' found in program '").concat(a.name,"'"));return r.pathArr.filter((function(e){return"Collection"===e.type})).map((function(e){return{name:e.name,value:t[e.name]}}))}},435:function(e,t){},437:function(e,t){},468:function(e,t,a){"use strict";var r=this&&this.__makeTemplateObject||function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e},o=this&&this.__assign||function(){return o=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var o in t=arguments[a])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},o.apply(this,arguments)},n=this&&this.__awaiter||function(e,t,a,r){return new(a||(a=Promise))((function(o,n){function i(e){try{s(r.next(e))}catch(t){n(t)}}function l(e){try{s(r.throw(e))}catch(t){n(t)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(i,l)}s((r=r.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var a,r,o,n,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return n={next:l(0),throw:l(1),return:l(2)},"function"===typeof Symbol&&(n[Symbol.iterator]=function(){return this}),n;function l(n){return function(l){return function(n){if(a)throw new TypeError("Generator is already executing.");for(;i;)try{if(a=1,r&&(o=2&n[0]?r.return:n[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,n[1])).done)return o;switch(r=0,o&&(n=[2&n[0],o.value]),n[0]){case 0:case 1:o=n;break;case 4:return i.label++,{value:n[1],done:!1};case 5:i.label++,r=n[1],n=[0];continue;case 7:n=i.ops.pop(),i.trys.pop();continue;default:if(!(o=(o=i.trys).length>0&&o[o.length-1])&&(6===n[0]||2===n[0])){i=0;continue}if(3===n[0]&&(!o||n[1]>o[0]&&n[1]<o[3])){i.label=n[1];break}if(6===n[0]&&i.label<o[1]){i.label=o[1],o=n;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(n);break}o[2]&&i.ops.pop(),i.trys.pop();continue}n=t.call(e,i)}catch(l){n=[6,l],r=0}finally{a=o=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,l])}}},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.adminGetUsers=t.adminUpdateUserPermissions=t.search=t.deleteProject=t.downloadZipFile=t.getWebSymbology=t.getLayerTiles=t.downloadFile=t.getUploadUrls=t.getProject=t.getProgram=t.getProgramAuth=t.getPrograms=t.validateProjectXML=t.authCheck=t.apiCall=void 0;var s,c,p,m,u,d,g,y,h,b,f,x,w,j,k,v=l(a(291)),O=a(340),S=l(a(341)),z=l(a(19)),_=a(15);t.apiCall=function(e,t,a,r,o){var n=Date.now();return(0,v.default)({url:e,method:"post",timeout:o,headers:{Authorization:t?"Bearer ".concat(t):"Bearer NONE"},data:{query:(0,O.print)(a),variables:r}}).then((function(e){var t=e.data,o=(Date.now()-n)/1e3;return o>10&&z.default.warn("Query took ".concat(o.toFixed(1)," seconds. ").concat((0,O.print)(a).replace(/\n/g,"").slice(0,50)," ").concat(JSON.stringify(r))),t})).catch((function(o){throw o.response&&404===o.response.status?new Error("API Url not found: ".concat(e)):o.code&&"ECONNREFUSED"===o.code?new Error("Connection refused. Could not contact: '".concat(e,"'")):(z.default.error("apiCall Error",{url:e,jwt:t,query:(0,O.print)(a),variables:r,err:o}),o)}))},t.authCheck=function(e,a,o){return(0,t.apiCall)(e,a,(0,S.default)(s||(s=r(["\n            query AuthCall {\n                auth {\n                    loggedIn\n                    userPool\n                    clientId\n                    region\n                    domain\n                }\n            }\n        "],["\n            query AuthCall {\n                auth {\n                    loggedIn\n                    userPool\n                    clientId\n                    region\n                    domain\n                }\n            }\n        "]))),{},o)},t.validateProjectXML=function(e,a,o,n,i,l){return(0,t.apiCall)(e,a,(0,S.default)(c||(c=r(["\n            query validateProject($xml: String!, $projType: String!, $program: String!) {\n                validate(xml: $xml, projType: $projType, program: $program) {\n                    result\n                    xmlErrors\n                }\n            }\n        "],["\n            query validateProject($xml: String!, $projType: String!, $program: String!) {\n                validate(xml: $xml, projType: $projType, program: $program) {\n                    result\n                    xmlErrors\n                }\n            }\n        "]))),{xml:o,program:i,projType:n},l)},t.getPrograms=function(e,a,l){return n(this,void 0,void 0,(function(){return i(this,(function(n){return[2,(0,t.apiCall)(e,a,(0,S.default)(p||(p=r(["\n            query programs {\n                auth {\n                    loggedIn\n                    userPool\n                    clientId\n                    region\n                    domain\n                }\n                programs {\n                    name\n                    machineName\n                    projectXSDs\n                    projectFile\n                    role\n                    groups {\n                        id\n                        name\n                        folder\n                    }\n                    collections {\n                        id\n                        name\n                        AllowRegex\n                        Allow {\n                            id\n                            name\n                            aliases\n                            folder\n                        }\n                    }\n                    products {\n                        id\n                        name\n                        folder\n                        pathArr\n                    }\n                    hierarchy\n                    meta\n                }\n            }\n        "],["\n            query programs {\n                auth {\n                    loggedIn\n                    userPool\n                    clientId\n                    region\n                    domain\n                }\n                programs {\n                    name\n                    machineName\n                    projectXSDs\n                    projectFile\n                    role\n                    groups {\n                        id\n                        name\n                        folder\n                    }\n                    collections {\n                        id\n                        name\n                        AllowRegex\n                        Allow {\n                            id\n                            name\n                            aliases\n                            folder\n                        }\n                    }\n                    products {\n                        id\n                        name\n                        folder\n                        pathArr\n                    }\n                    hierarchy\n                    meta\n                }\n            }\n        "]))),{},l).then((function(e){return o(o({},e),{data:{programs:e.data.programs.map(_.Program.fromGraphQL)}})}))]}))}))},t.getProgramAuth=function(e,a,o,l){return n(this,void 0,void 0,(function(){var n,s,c;return i(this,(function(i){switch(i.label){case 0:return[4,(0,t.apiCall)(e,a,(0,S.default)(m||(m=r(["\n            query program($program: String!) {\n                program(program: $program) {\n                    name\n                    machineName\n                    projectXSDs\n                    projectFile\n                    role\n                    groups {\n                        id\n                        name\n                        folder\n                    }\n                    collections {\n                        id\n                        name\n                        AllowRegex\n                        Allow {\n                            id\n                            name\n                            aliases\n                            folder\n                        }\n                    }\n                    products {\n                        id\n                        name\n                        folder\n                        pathArr\n                    }\n                    hierarchy\n                    meta\n                }\n            }\n        "],["\n            query program($program: String!) {\n                program(program: $program) {\n                    name\n                    machineName\n                    projectXSDs\n                    projectFile\n                    role\n                    groups {\n                        id\n                        name\n                        folder\n                    }\n                    collections {\n                        id\n                        name\n                        AllowRegex\n                        Allow {\n                            id\n                            name\n                            aliases\n                            folder\n                        }\n                    }\n                    products {\n                        id\n                        name\n                        folder\n                        pathArr\n                    }\n                    hierarchy\n                    meta\n                }\n            }\n        "]))),{program:o},l)];case 1:return n=i.sent(),s=n.data.program,c=n.errors,[2,{data:{program:_.Program.fromGraphQL(s)},errors:c}]}}))}))},t.getProgram=function(e,a,o,l){return n(this,void 0,void 0,(function(){var n,s,c;return i(this,(function(i){switch(i.label){case 0:return[4,(0,t.apiCall)(e,a,(0,S.default)(u||(u=r(["\n            query program($program: String!) {\n                program(program: $program) {\n                    name\n                    machineName\n                    projectXSDs\n                    projectFile\n                    role\n                    groups {\n                        id\n                        name\n                        folder\n                    }\n                    collections {\n                        id\n                        name\n                        AllowRegex\n                        Allow {\n                            id\n                            name\n                            aliases\n                            folder\n                        }\n                    }\n                    products {\n                        id\n                        name\n                        folder\n                        pathArr\n                    }\n                    hierarchy\n                    meta\n                }\n            }\n        "],["\n            query program($program: String!) {\n                program(program: $program) {\n                    name\n                    machineName\n                    projectXSDs\n                    projectFile\n                    role\n                    groups {\n                        id\n                        name\n                        folder\n                    }\n                    collections {\n                        id\n                        name\n                        AllowRegex\n                        Allow {\n                            id\n                            name\n                            aliases\n                            folder\n                        }\n                    }\n                    products {\n                        id\n                        name\n                        folder\n                        pathArr\n                    }\n                    hierarchy\n                    meta\n                }\n            }\n        "]))),{program:o},l)];case 1:return n=i.sent(),s=n.data.program,c=n.errors,[2,{data:{program:_.Program.fromGraphQL(s)},errors:c}]}}))}))},t.getProject=function(e,a,l,s,c,p,m){return void 0===c&&(c=!1),void 0===p&&(p=!1),n(this,void 0,void 0,(function(){return i(this,(function(n){return[2,(0,t.apiCall)(e,a,(0,S.default)(d||(d=r(["\n            query getProject($id: ID!, $program: String!) {\n                project(id: $id, program: $program) {\n                    id\n                    name\n                    projType\n                    totalSize\n                    program\n                    tags\n                    createdBy\n                    updatedBy\n                    createdOn\n                    updatedOn\n                    meta\n                    ","\n                    ","\n                }\n            }\n        "],["\n            query getProject($id: ID!, $program: String!) {\n                project(id: $id, program: $program) {\n                    id\n                    name\n                    projType\n                    totalSize\n                    program\n                    tags\n                    createdBy\n                    updatedBy\n                    createdOn\n                    updatedOn\n                    meta\n                    ","\n                    ","\n                }\n            }\n        "])),c?"\n                    files {\n                        key\n                        md5\n                        size\n                        downloadUrl\n                    }":"",p?"\n                        tree {\n                            name\n                            description\n                            projectType\n                            metaStr\n                            leaves {\n                                id\n                                pid\n                                label\n                                layerId\n                                blLayerId\n                                layerType\n                                layerPath\n                                layerName\n                                nodeExists\n                                metaStr\n                                symbology\n                                transparency\n                            }\n                            branches {\n                                label\n                                collapsed\n                                bid\n                                pid\n                            }\n                            defaultView\n                            views  {\n                                id\n                                name\n                                description\n                                layers{\n                                id\n                                visible\n                                }\n                            }\n                        }\n                    ":""),{id:l,program:s},m).then((function(e){return o(o({},e),{data:{project:_.Project.fromGraphQL(e.data.project)}})}))]}))}))},t.getUploadUrls=function(e,a,o,l,s,c,p){return n(this,void 0,void 0,(function(){return i(this,(function(n){switch(n.label){case 0:return[4,(0,t.apiCall)(e,a,(0,S.default)(g||(g=r(["\n            query requestUploadProject($id: ID, $files: [String!], $program: String!, $projectType: String!) {\n                requestUpload(id: $id, files: $files, program: $program, projectType: $projectType) {\n                    id\n                    uploadUrls {\n                        url\n                        fields\n                        origPath\n                    }\n                }\n            }\n        "],["\n            query requestUploadProject($id: ID, $files: [String!], $program: String!, $projectType: String!) {\n                requestUpload(id: $id, files: $files, program: $program, projectType: $projectType) {\n                    id\n                    uploadUrls {\n                        url\n                        fields\n                        origPath\n                    }\n                }\n            }\n        "]))),{id:o,files:l,projectType:s,program:c},p)];case 1:return[2,n.sent()]}}))}))},t.downloadFile=function(e,a,o,l,s,c,p){return n(this,void 0,void 0,(function(){return i(this,(function(n){switch(n.label){case 0:return[4,(0,t.apiCall)(e,a,(0,S.default)(y||(y=r(["\n            query downloadFileQuery($program: String!, $id: ID!, $projType: String!, $filePath: String!) {\n                downloadFile(program: $program, id: $id, projType: $projType, filePath: $filePath) {\n                    key\n                    md5\n                    contentType\n                    size\n                    downloadUrl\n                }\n            }\n        "],["\n            query downloadFileQuery($program: String!, $id: ID!, $projType: String!, $filePath: String!) {\n                downloadFile(program: $program, id: $id, projType: $projType, filePath: $filePath) {\n                    key\n                    md5\n                    contentType\n                    size\n                    downloadUrl\n                }\n            }\n        "]))),{projType:o,program:l,id:s,filePath:c},p)];case 1:return[2,n.sent()]}}))}))},t.getLayerTiles=function(e,a,l,s,c,p,m){return n(this,void 0,void 0,(function(){var n,u;return i(this,(function(i){switch(i.label){case 0:return[4,(0,t.apiCall)(e,a,(0,S.default)(h||(h=r(["\n            query getLayerTilesQuery($program: String!, $id: ID!, $projType: String!, $layerPath: String!) {\n                getLayerTiles(program: $program, id: $id, projType: $projType, layerPath: $layerPath) {\n                    url\n                    indexUrl\n                    status\n                    lastStatus\n                    error\n                    rsLayer\n                    rasterStats\n                    numFiles\n                    started\n                    duration\n                    format\n                    bounds\n                    maxZoom\n                    minZoom\n                    originFile {\n                        lastModified\n                        etag\n                        size\n                        key\n                    }\n                }\n            }\n        "],["\n            query getLayerTilesQuery($program: String!, $id: ID!, $projType: String!, $layerPath: String!) {\n                getLayerTiles(program: $program, id: $id, projType: $projType, layerPath: $layerPath) {\n                    url\n                    indexUrl\n                    status\n                    lastStatus\n                    error\n                    rsLayer\n                    rasterStats\n                    numFiles\n                    started\n                    duration\n                    format\n                    bounds\n                    maxZoom\n                    minZoom\n                    originFile {\n                        lastModified\n                        etag\n                        size\n                        key\n                    }\n                }\n            }\n        "]))),{projType:l,program:s,id:c,layerPath:p},m)];case 1:return(n=i.sent()).data?(u=n.data.getLayerTiles,[2,{errors:n.errors,data:{getLayerTiles:o(o({},u),{started:u&&u.started&&parseInt(u.started,10),lastStatus:u&&u.lastStatus&&parseInt(u.lastStatus,10),rasterStats:u&&u.rasterStats&&JSON.parse(u.rasterStats),rsLayer:u&&u.rsLayer&&JSON.parse(u.rsLayer),originFile:u&&u.originFile&&o(o({},u.originFile),{lastModified:parseInt(u.originFile.lastModified,10)})})}}]):[2,{errors:n.errors}]}}))}))},t.getWebSymbology=function(e,a,l,s,c,p){return n(this,void 0,void 0,(function(){var n;return i(this,(function(i){switch(i.label){case 0:return[4,(0,t.apiCall)(e,a,(0,S.default)(b||(b=r(["\n            query getWebSymbology($projType: String!, $name: String!, $isRaster: Boolean) {\n                getWebSymbology(projType: $projType, name: $name, isRaster: $isRaster) {\n                    name\n                    status\n                    legend\n                    rampType\n                    mapboxJson\n                    url\n                    error\n                }\n            }\n        "],["\n            query getWebSymbology($projType: String!, $name: String!, $isRaster: Boolean) {\n                getWebSymbology(projType: $projType, name: $name, isRaster: $isRaster) {\n                    name\n                    status\n                    legend\n                    rampType\n                    mapboxJson\n                    url\n                    error\n                }\n            }\n        "]))),{projType:l,name:s,isRaster:c},p)];case 1:return(n=i.sent()).data?[2,{errors:n.errors,data:{getWebSymbology:n.data.getWebSymbology&&o(o({},n.data.getWebSymbology),{mapboxJson:n.data.getWebSymbology.mapboxJson&&JSON.parse(n.data.getWebSymbology.mapboxJson)})}}]:[2,{errors:n.errors}]}}))}))},t.downloadZipFile=function(e,a,o,l,s,c){return n(this,void 0,void 0,(function(){return i(this,(function(n){switch(n.label){case 0:return[4,(0,t.apiCall)(e,a,(0,S.default)(f||(f=r(["\n            query downloadZipFileQuery($program: String!, $id: ID!, $projType: String!) {\n                downloadZip(program: $program, id: $id, projType: $projType) {\n                    key\n                    md5\n                    contentType\n                    size\n                    downloadUrl\n                    pendingSince\n                }\n            }\n        "],["\n            query downloadZipFileQuery($program: String!, $id: ID!, $projType: String!) {\n                downloadZip(program: $program, id: $id, projType: $projType) {\n                    key\n                    md5\n                    contentType\n                    size\n                    downloadUrl\n                    pendingSince\n                }\n            }\n        "]))),{projType:o,program:l,id:s},c)];case 1:return[2,n.sent()]}}))}))},t.deleteProject=function(e,a,o,l,s){return n(this,void 0,void 0,(function(){return i(this,(function(n){switch(n.label){case 0:return[4,(0,t.apiCall)(e,a,(0,S.default)(x||(x=r(["\n            mutation deleteProject($id: ID!, $program: String!) {\n                deleteProject(id: $id, program: $program)\n            }\n        "],["\n            mutation deleteProject($id: ID!, $program: String!) {\n                deleteProject(id: $id, program: $program)\n            }\n        "]))),{program:l,id:o},s)];case 1:return[2,n.sent()]}}))}))},t.search=function(e,a,l,s,c){return n(this,void 0,void 0,(function(){var n,p,m,u,d;return i(this,(function(i){switch(i.label){case 0:return[4,(0,t.apiCall)(e,a,(0,S.default)(w||(w=r(["\n            query searchQuery(\n                $program: String!\n                $projType: String\n                $nameStr: String\n                $metaStr: String\n                $metaArr: String\n                $tags: String\n                $noTags: Boolean\n                $limit: Int\n                $nextToken: Int\n            ) {\n                search(\n                    program: $program\n                    projType: $projType\n                    nameStr: $nameStr\n                    metaStr: $metaStr\n                    metaArr: $metaArr\n                    tags: $tags\n                    noTags: $noTags\n                    limit: $limit\n                    nextToken: $nextToken\n                ) {\n                    projects {\n                        id\n                        name\n                        projType\n                        program\n                        tags\n                        totalSize\n                        createdBy\n                        updatedBy\n                        createdOn\n                        updatedOn\n                        meta\n                        score\n                    }\n                    nextToken\n                    total\n                }\n            }\n        "],["\n            query searchQuery(\n                $program: String!\n                $projType: String\n                $nameStr: String\n                $metaStr: String\n                $metaArr: String\n                $tags: String\n                $noTags: Boolean\n                $limit: Int\n                $nextToken: Int\n            ) {\n                search(\n                    program: $program\n                    projType: $projType\n                    nameStr: $nameStr\n                    metaStr: $metaStr\n                    metaArr: $metaArr\n                    tags: $tags\n                    noTags: $noTags\n                    limit: $limit\n                    nextToken: $nextToken\n                ) {\n                    projects {\n                        id\n                        name\n                        projType\n                        program\n                        tags\n                        totalSize\n                        createdBy\n                        updatedBy\n                        createdOn\n                        updatedOn\n                        meta\n                        score\n                    }\n                    nextToken\n                    total\n                }\n            }\n        "]))),o(o({},s),{program:l}),c)];case 1:return(n=i.sent()).data?(p=n.data.search||{},m=p.nextToken,u=p.projects,d=p.total,[2,{errors:n.errors,data:{search:{projects:Array.isArray(u)?u.map(_.Project.fromGraphQL):u,nextToken:m,total:d}}}]):[2,{errors:n.errors}]}}))}))},t.adminUpdateUserPermissions=function(e,a,l,s,c,p){return n(this,void 0,void 0,(function(){var n;return i(this,(function(i){switch(i.label){case 0:return[4,(0,t.apiCall)(e,a,(0,S.default)(j||(j=r(["\n            mutation project($id: ID!, $program: String!, $permission: String) {\n                updateUser(id: $id, program: $program, permission: $permission) {\n                    email\n                    name\n                    picture\n                    username\n                    createdOn\n                    updatedOn\n                    role\n                }\n            }\n        "],["\n            mutation project($id: ID!, $program: String!, $permission: String) {\n                updateUser(id: $id, program: $program, permission: $permission) {\n                    email\n                    name\n                    picture\n                    username\n                    createdOn\n                    updatedOn\n                    role\n                }\n            }\n        "]))),{program:s,id:l,permission:c},p)];case 1:return(n=i.sent()).data?[2,{errors:n.errors,data:{updateUser:n.data.updateUser?o(o({},n.data.updateUser),{createdOn:parseInt(n.data.updateUser.createdOn,10),updatedOn:parseInt(n.data.updateUser.updatedOn,10)}):null}}]:[2,{errors:n.errors}]}}))}))},t.adminGetUsers=function(e,a,l,s,c,p){return n(this,void 0,void 0,(function(){var n,m,u,d;return i(this,(function(i){switch(i.label){case 0:return[4,(0,t.apiCall)(e,a,(0,S.default)(k||(k=r(["\n            query getUsers($program: String!, $limit: Int, $nextToken: String) {\n                getUsers(program: $program, limit: $limit, nextToken: $nextToken) {\n                    users {\n                        email\n                        name\n                        picture\n                        username\n                        createdOn\n                        updatedOn\n                        role\n                    }\n                    nextToken\n                }\n            }\n        "],["\n            query getUsers($program: String!, $limit: Int, $nextToken: String) {\n                getUsers(program: $program, limit: $limit, nextToken: $nextToken) {\n                    users {\n                        email\n                        name\n                        picture\n                        username\n                        createdOn\n                        updatedOn\n                        role\n                    }\n                    nextToken\n                }\n            }\n        "]))),{program:l,limit:s,nextToken:c},p)];case 1:return(n=i.sent()).data?(m=n.data.getUsers||{},u=m.nextToken,d=m.users,[2,{errors:n.errors,data:{getUsers:{users:Array.isArray(d)?d.map((function(e){return o(o({},e),{createdOn:parseInt(e.createdOn,10),updatedOn:parseInt(e.updatedOn,10)})})):d,nextToken:u}}}]):[2,{errors:n.errors}]}}))}))}},469:function(e,t,a){"use strict";var r=this&&this.__makeTemplateObject||function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var n,i=o(a(341)),l=a(301),s=(0,i.default)(n||(n=r(['\n    # Check out the cheat sheet:\n    # https://raw.githubusercontent.com/sogko/graphql-shorthand-notation-cheat-sheet/master/graphql-shorthand-notation-cheat-sheet.png\n\n    schema {\n        query: Query\n        mutation: Mutation\n    }\n\n    type Query {\n        # Get a project and associated metadata\n        auth: AuthParams\n\n        project(id: ID!, program: String!): Project\n        projects(program: String!, projType: String, limit: Int, nextToken: String): PaginatedProjects\n\n        program(program: String!): Program\n        programs: [Program]\n\n        downloadFile(program: String!, id: ID!, projType: String!, filePath: String!): FileDownloadMeta\n\n        downloadZip(program: String!, id: ID!, projType: String!): FileDownloadMeta\n\n        getWebSymbology(projType: String, name: String!, isRaster: Boolean): Symbology\n        getLayerTiles(program: String!, id: ID!, projType: String!, layerPath: String!): TileService\n\n\n        # Request an upload start. Writes a manifest file on the upload bucket\n        # and creates upload urls for everything\n        requestUpload(id: ID, files: [String!], program: String!, projectType: String!): FileUpload\n\n        search(\n            program: String!\n            projType: String\n            nameStr: String\n            metaStr: String\n            metaArr: String\n            tags: String\n            noTags: Boolean\n            limit: Int\n            nextToken: Int\n        ): PaginatedSearchResults\n\n        validate(xml: String!, projType: String!, program: String!): Validation\n\n        getUsers(program: String!, limit: Int, nextToken: String): PaginatedUsers\n\n        projectTree(id: ID!, program: String!, projType: String!): ProjectTree\n    }\n\n    # this schema allows the following mutation:\n    type Mutation {\n        # signal a deletion of a project\n        deleteProject(id: ID!, program: String!): ID!\n        updateUser(id: ID!, program: String!, permission: String): User\n        reIndexProject(id: ID!, program: String!, projType: String!): WatcherOutput\n        queueTileRebuild(id: ID!, program: String!, projType: String!, filePath: String, symbologies: [String]): String\n    }\n\n    type User {\n        email: String\n        name: String\n        picture: String\n        username: String!\n        createdOn: String\n        updatedOn: String\n        role: String\n    }\n\n    type PaginatedUsers {\n        users: [User]\n        nextToken: String\n    }\n\n    type Validation {\n        result: Boolean\n        xmlErrors: [String]\n    }\n\n    type AuthParams {\n        loggedIn: Boolean\n        userPool: String\n        clientId: String\n        region: String\n        domain: String\n    }\n\n    interface ProjectBase {\n        id: ID!\n        name: String\n        meta: String\n        tags: String\n        projType: String\n        program: String\n        createdBy: ID!\n        updatedBy: ID!\n        createdOn: String!\n        updatedOn: String!\n    }\n\n    type Project implements ProjectBase {\n        id: ID!\n        name: String\n        meta: String\n        tags: String\n        projType: String\n        totalSize: String\n        program: String\n        createdBy: ID!\n        updatedBy: ID!\n        createdOn: String!\n        updatedOn: String!\n        files: [FileDownloadMeta]\n        tree: ProjectTree\n    }\n\n    type ProjectSearchResult implements ProjectBase {\n        id: ID!\n        name: String\n        meta: String\n        tags: String\n        projType: String\n        totalSize: String\n        program: String\n        createdBy: ID!\n        updatedBy: ID!\n        createdOn: String!\n        updatedOn: String!\n        score: Float\n        files: [FileDownloadMeta]\n    }\n\n    # This is mostly just JSON that\'s stringified\n    type Product {\n        id: ID!\n        name: String!\n        folder: String\n        # Stringified JSON Array:\n        pathArr: String\n    }\n    type Group {\n        id: ID!\n        name: String!\n        folder: String\n    }\n    type NamedAllow {\n        id: ID!\n        name: String!\n        aliases: String\n        folder: String\n    }\n    type Collection {\n        id: ID!\n        name: String!\n        AllowRegex: [String]\n        Allow: [NamedAllow]\n    }\n    type Program {\n        name: String\n        machineName: String\n        projectXSDs: String\n        projectFile: String\n        meta: String\n        groups: [Group]\n        collections: [Collection]\n        products: [Product]\n        hierarchy: String\n        role: String\n    }\n\n    type FileDownloadMeta {\n        key: String!\n        md5: String!\n        size: String\n        contentType: String\n        downloadUrl: String!\n        pendingSince: String\n    }\n\n    type FileUpload {\n        id: ID!\n        uploadUrls: [UploadUrl]\n    }\n\n    type UploadUrl {\n        url: String\n        fields: String\n        origPath: String\n    }\n\n    type FileUploadMeta {\n        key: String!\n        downloadUrl: String!\n    }\n\n    # Series Connection allows us to implement pagination easily\n    type PaginatedProjects {\n        projects: [Project]\n        nextToken: String\n    }\n\n    type PaginatedSearchResults {\n        projects: [ProjectSearchResult]\n        nextToken: Int\n        total: Int\n    }\n\n    type NewProject {\n        id: ID!\n    }\n\n    """\n    ProjectTreeLayerTypes is an enumeration to help us display layers with the\n    correct icon and assign them to the right slot\n    """\n    enum ProjectTreeLayerTypes {\n        ',"\n    }\n    enum SymbologyStatus {\n        ","\n    }\n    enum TilingStatus {\n        ","\n    }\n    enum RampType {\n        ","\n    }\n\n    type ProjectTreeBranch {\n        label: String!\n        collapsed: Boolean\n        # Branch ID and parent ID\n        bid: Int\n        pid: Int\n    }\n    type ProjectTreeLeaf {\n        id: Int # This is a global ID not an id within a branch\n        pid: Int\n        label: String!\n        layerId: ID\n        blLayerId: ID\n        layerType: ProjectTreeLayerTypes!\n        layerPath: String\n        layerName: String\n        nodeExists: Boolean\n        # This is the path that helps u\n        metaStr: String\n        symbology: String\n        transparency: Int\n    }\n\n    # The project tree comes back as non-recursive list of layers.\n    # The ProjectTree class will need to parse this into a typescript \n    # Recursive type\n    type ProjectTreeViewLayer {\n        id: ID!\n        visible: Boolean\n    }\n\n    type ProjectTreeViews {\n        id: ID!\n        name: String!\n        description: String\n        layers: [ProjectTreeViewLayer]\n    }\n\n    type ProjectTree {\n        name: String\n        description: String\n        projectType: String\n        metaStr: String\n        leaves: [ProjectTreeLeaf]\n        branches: [ProjectTreeBranch]\n        defaultView: ID\n        views: [ProjectTreeViews]\n    }\n\n    type TileServiceOriginFile {\n        lastModified: String\n        etag: String\n        size: Int\n        key: String\n    }\n\n    type TileService {\n        url: String\n        indexUrl: String\n        status: TilingStatus!\n        lastStatus: String\n        error: String\n        rasterStats: String\n        numFiles: Int\n        rsLayer: String        # Arbitrary depth so stringify rsLayer\n        started: String\n        duration: Float\n        format: String\n        bounds: [Float]\n        maxZoom: Int\n        minZoom: Int\n        originFile: TileServiceOriginFile\n    }\n    type Symbology {\n        name: String!\n        status: SymbologyStatus\n        legend: [[String]]\n        rampType: RampType\n        mapboxJson: String\n        url: String\n        error: String\n    }\n\n    # Just a nice convenience type for our lambda invoke methods\n    type WatcherOutput {\n        message: String\n        results: [String]\n        errors: [String]\n    }\n"],['\n    # Check out the cheat sheet:\n    # https://raw.githubusercontent.com/sogko/graphql-shorthand-notation-cheat-sheet/master/graphql-shorthand-notation-cheat-sheet.png\n\n    schema {\n        query: Query\n        mutation: Mutation\n    }\n\n    type Query {\n        # Get a project and associated metadata\n        auth: AuthParams\n\n        project(id: ID!, program: String!): Project\n        projects(program: String!, projType: String, limit: Int, nextToken: String): PaginatedProjects\n\n        program(program: String!): Program\n        programs: [Program]\n\n        downloadFile(program: String!, id: ID!, projType: String!, filePath: String!): FileDownloadMeta\n\n        downloadZip(program: String!, id: ID!, projType: String!): FileDownloadMeta\n\n        getWebSymbology(projType: String, name: String!, isRaster: Boolean): Symbology\n        getLayerTiles(program: String!, id: ID!, projType: String!, layerPath: String!): TileService\n\n\n        # Request an upload start. Writes a manifest file on the upload bucket\n        # and creates upload urls for everything\n        requestUpload(id: ID, files: [String!], program: String!, projectType: String!): FileUpload\n\n        search(\n            program: String!\n            projType: String\n            nameStr: String\n            metaStr: String\n            metaArr: String\n            tags: String\n            noTags: Boolean\n            limit: Int\n            nextToken: Int\n        ): PaginatedSearchResults\n\n        validate(xml: String!, projType: String!, program: String!): Validation\n\n        getUsers(program: String!, limit: Int, nextToken: String): PaginatedUsers\n\n        projectTree(id: ID!, program: String!, projType: String!): ProjectTree\n    }\n\n    # this schema allows the following mutation:\n    type Mutation {\n        # signal a deletion of a project\n        deleteProject(id: ID!, program: String!): ID!\n        updateUser(id: ID!, program: String!, permission: String): User\n        reIndexProject(id: ID!, program: String!, projType: String!): WatcherOutput\n        queueTileRebuild(id: ID!, program: String!, projType: String!, filePath: String, symbologies: [String]): String\n    }\n\n    type User {\n        email: String\n        name: String\n        picture: String\n        username: String!\n        createdOn: String\n        updatedOn: String\n        role: String\n    }\n\n    type PaginatedUsers {\n        users: [User]\n        nextToken: String\n    }\n\n    type Validation {\n        result: Boolean\n        xmlErrors: [String]\n    }\n\n    type AuthParams {\n        loggedIn: Boolean\n        userPool: String\n        clientId: String\n        region: String\n        domain: String\n    }\n\n    interface ProjectBase {\n        id: ID!\n        name: String\n        meta: String\n        tags: String\n        projType: String\n        program: String\n        createdBy: ID!\n        updatedBy: ID!\n        createdOn: String!\n        updatedOn: String!\n    }\n\n    type Project implements ProjectBase {\n        id: ID!\n        name: String\n        meta: String\n        tags: String\n        projType: String\n        totalSize: String\n        program: String\n        createdBy: ID!\n        updatedBy: ID!\n        createdOn: String!\n        updatedOn: String!\n        files: [FileDownloadMeta]\n        tree: ProjectTree\n    }\n\n    type ProjectSearchResult implements ProjectBase {\n        id: ID!\n        name: String\n        meta: String\n        tags: String\n        projType: String\n        totalSize: String\n        program: String\n        createdBy: ID!\n        updatedBy: ID!\n        createdOn: String!\n        updatedOn: String!\n        score: Float\n        files: [FileDownloadMeta]\n    }\n\n    # This is mostly just JSON that\'s stringified\n    type Product {\n        id: ID!\n        name: String!\n        folder: String\n        # Stringified JSON Array:\n        pathArr: String\n    }\n    type Group {\n        id: ID!\n        name: String!\n        folder: String\n    }\n    type NamedAllow {\n        id: ID!\n        name: String!\n        aliases: String\n        folder: String\n    }\n    type Collection {\n        id: ID!\n        name: String!\n        AllowRegex: [String]\n        Allow: [NamedAllow]\n    }\n    type Program {\n        name: String\n        machineName: String\n        projectXSDs: String\n        projectFile: String\n        meta: String\n        groups: [Group]\n        collections: [Collection]\n        products: [Product]\n        hierarchy: String\n        role: String\n    }\n\n    type FileDownloadMeta {\n        key: String!\n        md5: String!\n        size: String\n        contentType: String\n        downloadUrl: String!\n        pendingSince: String\n    }\n\n    type FileUpload {\n        id: ID!\n        uploadUrls: [UploadUrl]\n    }\n\n    type UploadUrl {\n        url: String\n        fields: String\n        origPath: String\n    }\n\n    type FileUploadMeta {\n        key: String!\n        downloadUrl: String!\n    }\n\n    # Series Connection allows us to implement pagination easily\n    type PaginatedProjects {\n        projects: [Project]\n        nextToken: String\n    }\n\n    type PaginatedSearchResults {\n        projects: [ProjectSearchResult]\n        nextToken: Int\n        total: Int\n    }\n\n    type NewProject {\n        id: ID!\n    }\n\n    """\n    ProjectTreeLayerTypes is an enumeration to help us display layers with the\n    correct icon and assign them to the right slot\n    """\n    enum ProjectTreeLayerTypes {\n        ',"\n    }\n    enum SymbologyStatus {\n        ","\n    }\n    enum TilingStatus {\n        ","\n    }\n    enum RampType {\n        ","\n    }\n\n    type ProjectTreeBranch {\n        label: String!\n        collapsed: Boolean\n        # Branch ID and parent ID\n        bid: Int\n        pid: Int\n    }\n    type ProjectTreeLeaf {\n        id: Int # This is a global ID not an id within a branch\n        pid: Int\n        label: String!\n        layerId: ID\n        blLayerId: ID\n        layerType: ProjectTreeLayerTypes!\n        layerPath: String\n        layerName: String\n        nodeExists: Boolean\n        # This is the path that helps u\n        metaStr: String\n        symbology: String\n        transparency: Int\n    }\n\n    # The project tree comes back as non-recursive list of layers.\n    # The ProjectTree class will need to parse this into a typescript \n    # Recursive type\n    type ProjectTreeViewLayer {\n        id: ID!\n        visible: Boolean\n    }\n\n    type ProjectTreeViews {\n        id: ID!\n        name: String!\n        description: String\n        layers: [ProjectTreeViewLayer]\n    }\n\n    type ProjectTree {\n        name: String\n        description: String\n        projectType: String\n        metaStr: String\n        leaves: [ProjectTreeLeaf]\n        branches: [ProjectTreeBranch]\n        defaultView: ID\n        views: [ProjectTreeViews]\n    }\n\n    type TileServiceOriginFile {\n        lastModified: String\n        etag: String\n        size: Int\n        key: String\n    }\n\n    type TileService {\n        url: String\n        indexUrl: String\n        status: TilingStatus!\n        lastStatus: String\n        error: String\n        rasterStats: String\n        numFiles: Int\n        rsLayer: String        # Arbitrary depth so stringify rsLayer\n        started: String\n        duration: Float\n        format: String\n        bounds: [Float]\n        maxZoom: Int\n        minZoom: Int\n        originFile: TileServiceOriginFile\n    }\n    type Symbology {\n        name: String!\n        status: SymbologyStatus\n        legend: [[String]]\n        rampType: RampType\n        mapboxJson: String\n        url: String\n        error: String\n    }\n\n    # Just a nice convenience type for our lambda invoke methods\n    type WatcherOutput {\n        message: String\n        results: [String]\n        errors: [String]\n    }\n"])),Object.values(l.ProjectTreeLayerTypes).join("\n      "),Object.values(l.SymbologyStatus).join("\n      "),Object.values(l.TilingStatus).join("\n      "),Object.values(l.RampType).join("\n      "));t.default=s},470:function(e,t,a){"use strict";var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var o in t=arguments[a])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},r.apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Program=void 0;var o=function(){function e(e){Object.assign(this,e)}return e.fromGraphQL=function(t){if(!t)return null;var a=t.meta?JSON.parse(t.meta):{};return new e(r(r({},t),{meta:a,role:t.role,products:t.products?t.products.map((function(e){return r(r({},e),{pathArr:JSON.parse(e.pathArr)})})):[]}))},e}();t.Program=o},471:function(e,t,a){"use strict";var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var o in t=arguments[a])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},r.apply(this,arguments)},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Project=void 0;var n=o(a(472));function i(e){e.sort((function(e,t){return e.children&&!t.children?-1:!e.children&&t.children?1:e.name.toLowerCase()<t.name.toLowerCase()?-1:e.name.toLowerCase()>t.name.toLowerCase()?1:0}))}var l=function(){function e(e){var t=this;this.treeIzeFilePaths=function(){var e=[];return t.files.forEach((function(t){var a=t.key,r=a.split("/");1===r.length&&a.indexOf("\\")>-1&&(r=a.split("\\"));for(var o=e,n=function(){var e={name:r.shift(),children:[]},t=o.find((function(t){return t.name===e.name}));t&&t.children?o=t.children:(o.push(e),o=e.children),i(o)};r.length>1;)n();o.push({name:r[0],path:a})})),i(e),e},Object.assign(this,e),this.files||(this.files=[]),this.tree&&this.tree.leaves&&(this.tree.leaves=this.tree.leaves.map((function(e){return r(r({},e),{meta:e&&e.metaStr?JSON.parse(e.metaStr):{}})})))}return e.fromGraphQL=function(t){return t?new e(r(r({},t),{createdOn:parseInt(t.createdOn,10),updatedOn:parseInt(t.updatedOn,10),meta:t.meta?JSON.parse(t.meta):{},tags:t.tags?t.tags.split(","):[]})):null},e.fromDynamoDB=function(t){return new e(r(r({},t),{name:t.Name||t.name,meta:t.meta?e.parseDynamoMeta(t.meta):void 0}))},e.diff=function(e,t){var a=[],r=[];return t&&0!==t.length?e&&0!==e.length?{leftOnly:e.filter((function(e){var o=t.find((function(t){return e.key===t.key}));return o&&(o.md5===e.md5?r.push(e.key):a.push(e.key)),!o})).map((function(e){return e.key})),rightOnly:t.filter((function(t){return!e.find((function(e){return t.key===e.key}))})).map((function(e){return e.key})),different:a,same:r}:{leftOnly:[],rightOnly:t.map((function(e){return e.key})),different:[],same:[]}:{leftOnly:e.map((function(e){return e.key})),rightOnly:[],different:[],same:[]}},e.getProjectS3Keys=function(e,t,a){var r=n.default.join(e.machineName,a,t),o="".concat(r,".zip"),i=n.default.join(r,e.projectFile),l=n.default.join(e.machineName,a,"".concat(t,".zip.pending")),s="".concat([e.machineName,a,t].join("-"));return{prefix:r,zipKey:o,projFileKey:i,zipKeyPending:l,downloadFolderName:s,downloadZipFilename:"".concat(s,".zip")}},e.parseDynamoMeta=function(e){var t=Object.keys(e).filter((function(e){return 0===e.indexOf("META_")})).reduce((function(t,a){var o,n=a.split("META_")[1];return r(r({},t),((o={})[n]=e[a],o))}),{});return JSON.stringify(t)},e.parseTagString=function(e){return e&&0!==e.trim().length?e.split(",").map((function(e){return e.trim()})).filter((function(e){return e.length>0&&"null"!==e&&"undefined"!==e})):[]},e.parseS3Key=function(t,a){if(a.split("/").length<3)throw new Error("Not a valid project key");var r=a.split("/"),o=r[0],n=r[1],i=r[2];if(t.machineName!==o)throw new Error("Program passed to parseS3 key ".concat(t.machineName," does not correspond to program in key: ").concat(o));return e.getProjectS3Keys(t,i,n)},e.parseS3KeyDUMB=function(e){var t=e.split("/");if(t.length<3)throw new Error("Not a valid project key");var a=t[0],r=t[1],o=t[2],i=n.default.join(a,r,o);return{programMachineName:a,projType:r,id:o,zipKey:"".concat(i,".zip"),prefix:i}},e}();t.Project=l},473:function(e,t,a){"use strict";var r=this&&this.__extends||function(){var e=function(t,a){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])},e(t,a)};return function(t,a){if("function"!==typeof a&&null!==a)throw new TypeError("Class extends value "+String(a)+" is not a constructor or null");function r(){this.constructor=t}e(t,a),t.prototype=null===a?Object.create(a):(r.prototype=a.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0}),t.ValidationError=void 0;var o=function(e){function t(t,a){var r=e.call(this,t)||this;return r.name=r.constructor.name,r.reasons=a,Error.captureStackTrace(r,r.constructor),r}return r(t,e),t}(Error);t.ValidationError=o},474:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TileServiceJSONClass=void 0;var r=function(e){Object.assign(this,e)};t.TileServiceJSONClass=r},539:function(e,t){},592:function(e,t,a){},595:function(e,t,a){"use strict";a.r(t);var r={};a.r(r),a.d(r,"tagColors",(function(){return je})),a.d(r,"isDev",(function(){return ve})),a.d(r,"mapConfig",(function(){return Oe})),a.d(r,"version",(function(){return Se})),a.d(r,"endpoints",(function(){return ze})),a.d(r,"mandatoryMetaColors",(function(){return _e})),a.d(r,"redirectUrl",(function(){return Te})),a.d(r,"googleAnalytics",(function(){return Ce})),a.d(r,"awsAuth",(function(){return Pe}));var o={};a.r(o),a.d(o,"init",(function(){return qt})),a.d(o,"currentPageView",(function(){return Jt})),a.d(o,"event",(function(){return Xt}));var n=a(0),i=a.n(n),l=a(34),s=a.n(l),c=a(35),p=a(14),m=a(50),u=a(12),d=a(706),g=a(19),y=a.n(g),h=a(707),b=a(73),f=a(1),x=a(670),w=a(103),j=a(668),k=(Object(j.a)((function(e){return{root:{display:"flex",zIndex:e.zIndex.drawer+1},text:{flexGrow:1},logo:{}}})),a(673)),v=a(672),O=a(698),S=a(697),z=a(382),_=a(139),T=a.n(_),C=a(346),P=a.n(C),L=a(345),I=a.n(L),R=a(676),N=a(347),E=a.n(N),A=a(15),D=a(27),U=a(726),M=a(725),B=a(86),F=a.n(B),W=a(677),G=a(678),$=a(675),V=a(684),Z=a(685),H=a(686),q=a(687),J=a(688),X=a(689),K=a(690),Q=a(691),Y=function(){return Y=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var o in t=arguments[a])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},Y.apply(this,arguments)},ee=Object(j.a)((function(e){return{root:{},shareIconTitle:{},shareButtons:{margin:e.spacing(1,0),"&>*":{marginRight:e.spacing(1)}},flexGrow:{flexGrow:1},dlgTitle:{color:e.palette.primary.contrastText,backgroundColor:e.palette.primary.main,display:"flex"},closeButton:{flex:"0 0"}}})),te=function(e){var t=e.open,a=e.shareUrl,r=e.handleClose,o=ee();return Object(f.jsxs)(M.a,Y({open:t,onClose:r,"aria-labelledby":"form-dialog-title"},{children:[Object(f.jsxs)($.a,Y({className:o.dlgTitle,disableTypography:!0},{children:[Object(f.jsx)(R.a,Y({color:"inherit"},{children:Object(f.jsx)(T.a,{className:o.shareIconTitle})})),Object(f.jsx)(w.a,Y({variant:"h4",className:o.flexGrow},{children:"Share"})),Object(f.jsx)("div",Y({className:o.closeButton},{children:Object(f.jsx)(R.a,Y({onClick:r,color:"inherit"},{children:Object(f.jsx)(F.a,{})}))}))]})),Object(f.jsxs)(W.a,{children:[Object(f.jsx)(G.a,{children:"Copy this link and share it using your preferred method."}),Object(f.jsx)(U.a,{value:a,margin:"dense",id:"name",variant:"outlined",fullWidth:!0,inputProps:{onClick:function(e){e.preventDefault(),e.target.select()}}}),Object(f.jsxs)("div",Y({className:o.shareButtons},{children:[Object(f.jsx)(V.a,Y({url:a},{children:Object(f.jsx)(Z.a,{size:32,round:!0})})),Object(f.jsx)(H.a,Y({url:a},{children:Object(f.jsx)(q.a,{size:32,round:!0})})),Object(f.jsx)(J.a,Y({url:a},{children:Object(f.jsx)(X.a,{size:32,round:!0})})),Object(f.jsx)(K.a,Y({url:a,quote:"title"},{children:Object(f.jsx)(Q.a,{size:32,round:!0})}))]}))]})]}))},ae=a(597),re=a(727),oe=a(344),ne=a.n(oe),ie=a(692),le=function(){return le=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var o in t=arguments[a])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},le.apply(this,arguments)},se=Object(j.a)((function(e){return{root:{},title:{margin:0,display:"flex",padding:e.spacing(2),background:e.palette.warning.main,color:e.palette.warning.contrastText},actions:{margin:0,padding:e.spacing(1)},content:{padding:e.spacing(2)},rasterImgsContainer:{display:"flex",width:"100%",overflow:"hidden"},rasterImgsContainerCol:{},rasterImgs:{width:"100%",height:"auto"},closeButton:{position:"absolute",right:e.spacing(1),top:e.spacing(1)}}})),ce=function(e){var t=e.onClose,a=e.open,r=se();return Object(f.jsxs)(M.a,le({"aria-labelledby":"customized-dialog-title",open:a,maxWidth:"sm",onClose:t},{children:[Object(f.jsxs)($.a,le({disableTypography:!0,className:r.title},{children:[Object(f.jsx)(w.a,le({variant:"h6",color:"inherit"},{children:"Provisional Data"})),Object(f.jsx)(R.a,le({"aria-label":"close",className:r.closeButton,onClick:t,color:"inherit"},{children:Object(f.jsx)(F.a,{})}))]})),Object(f.jsxs)(W.a,le({dividers:!0},{children:[Object(f.jsxs)(w.a,le({paragraph:!0},{children:["As of ",Object(f.jsx)("strong",{children:"November 2021"}),", All projects in the Riverscapes Warehouse are provisional!"]})),Object(f.jsxs)(w.a,le({paragraph:!0},{children:["You have been granted early-access and are free to explore and download these provisional projects and data. Until Summer 2022, the"," ",Object(f.jsx)("strong",{children:Object(f.jsx)(ie.a,le({href:"https://rave.riverscapes.net/",target:"_blank"},{children:"RAVE viewers"}))}),", the project reports, and many of the models will be undergoing major development."]})),Object(f.jsx)(w.a,le({paragraph:!0},{children:"These provisional data are still extremely useful, but many projects have not yet been reviewed and properly quality controlled. We are actively developing a rigorous quality assurance program that will include manual quality control to communicate the quality of the data. The data might contain unreported errors. Users should use caution using data obtained from the riverscapes data warehouse until these QA/QC statuses are fully reported for each project."})),Object(f.jsx)(w.a,le({paragraph:!0},{children:"Please check back regularly for the latest version of projects and model outputs, as well as improvements. We are also developing versioning reporting, and attribution to make clear what projects were produced from what versions of tools, and who ran the tools, who curated the projects, who performed quality control and who funded or supported that work to make available to others. Thank you for your patience while we work towards a launch."})),Object(f.jsx)(w.a,le({paragraph:!0},{children:Object(f.jsx)("strong",{children:"For feature suggestions, questions or to report a bug please visit:"})})),Object(f.jsx)(w.a,le({paragraph:!0,style:{textAlign:"center"}},{children:Object(f.jsx)(ae.a,le({variant:"outlined",size:"large",href:"https://github.com/Riverscapes/riverscapes-website/discussions/categories/riverscapes-warehouse",target:"_blank"},{children:"Discussion forum"}))})),Object(f.jsxs)(w.a,le({paragraph:!0,variant:"caption"},{children:[Object(f.jsx)("strong",{children:"Note"}),": Issues and discussions are open and public but you will need a free Github account to contribute."]}))]}))]}))},pe=function(){return pe=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var o in t=arguments[a])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},pe.apply(this,arguments)},me=Object(j.a)((function(e){return{button:{marginLeft:e.spacing(1),paddingLeft:e.spacing(2),paddingRight:e.spacing(2)}}})),ue=function(){var e=me(),t=Object(n.useState)(!1),a=t[0],r=t[1];return Object(f.jsxs)(f.Fragment,{children:[Object(f.jsx)(re.a,pe({title:"These are provisional riverscape projects. They are from models and tools undergoing active development, and individual projects are undergoing QA/QC and subject to change. Please treat with caution. No warranty is expressed or implied."},{children:Object(f.jsx)(ae.a,pe({variant:"contained",size:"small",color:"secondary",className:e.button,startIcon:Object(f.jsx)(ne.a,{}),onClick:function(){return r(!0)}},{children:"Provisional Data"}))})),Object(f.jsx)(ce,{open:a,onClose:function(){return r(!1)}})]})},de=a(215),ge=a(218),ye=a(217),he=a(216),be=a(693),fe=a(694),xe=a(695),we=a(696),je={tagColors:["#418CF0","#FCB441","#E0400A","#056492","#BFBFBF","#1A3B69","#FFE382","#129CDD","#CA6B4B","#005CDB","#F3D288","#506381","#F1B9A8","#E0830A","#7893BE"]},ke=Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_GRAPHQL:"https://gco5qebdt4.execute-api.us-west-2.amazonaws.com/production/api",REACT_APP_VERSION:"0.2.12",REACT_APP_MAPBOX_TOKEN:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg",REACT_APP_WAREHOUSE_URL:"https://data.riverscapes.net",REACT_APP_GOOGLE_ANALYTICS:"UA-60121403-12"}).REACT_APP_DOMAIN;y.a.debug("config: ",{domain:ke});var ve=!1,Oe={mapBoxToken:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg"},Se="0.2.12",ze={graphql:"https://gco5qebdt4.execute-api.us-west-2.amazonaws.com/production/api",cdn:Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_GRAPHQL:"https://gco5qebdt4.execute-api.us-west-2.amazonaws.com/production/api",REACT_APP_VERSION:"0.2.12",REACT_APP_MAPBOX_TOKEN:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg",REACT_APP_WAREHOUSE_URL:"https://data.riverscapes.net",REACT_APP_GOOGLE_ANALYTICS:"UA-60121403-12"}).REACT_APP_CDN},_e=[de.a,ge.a,ye.a,he.a,be.a,fe.a,xe.a,we.a],Te=new URL("".endsWith("/")?"":"/",window.location.origin);console.log("RedirectUrl",{redirectUrl:Te,publicUrl:""});var Ce="UA-60121403-12",Pe={Auth:{region:Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_GRAPHQL:"https://gco5qebdt4.execute-api.us-west-2.amazonaws.com/production/api",REACT_APP_VERSION:"0.2.12",REACT_APP_MAPBOX_TOKEN:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg",REACT_APP_WAREHOUSE_URL:"https://data.riverscapes.net",REACT_APP_GOOGLE_ANALYTICS:"UA-60121403-12"}).REACT_APP_AWS_REGION_DEPLOY,userPoolId:Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_GRAPHQL:"https://gco5qebdt4.execute-api.us-west-2.amazonaws.com/production/api",REACT_APP_VERSION:"0.2.12",REACT_APP_MAPBOX_TOKEN:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg",REACT_APP_WAREHOUSE_URL:"https://data.riverscapes.net",REACT_APP_GOOGLE_ANALYTICS:"UA-60121403-12"}).REACT_APP_AWS_USERPOOLID,userPoolWebClientId:Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_GRAPHQL:"https://gco5qebdt4.execute-api.us-west-2.amazonaws.com/production/api",REACT_APP_VERSION:"0.2.12",REACT_APP_MAPBOX_TOKEN:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg",REACT_APP_WAREHOUSE_URL:"https://data.riverscapes.net",REACT_APP_GOOGLE_ANALYTICS:"UA-60121403-12"}).REACT_APP_AWS_USERPOOLWEBCLIENTID,mandatorySignIn:!0,oauth:{domain:Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_GRAPHQL:"https://gco5qebdt4.execute-api.us-west-2.amazonaws.com/production/api",REACT_APP_VERSION:"0.2.12",REACT_APP_MAPBOX_TOKEN:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg",REACT_APP_WAREHOUSE_URL:"https://data.riverscapes.net",REACT_APP_GOOGLE_ANALYTICS:"UA-60121403-12"}).REACT_APP_HOSTED_DOMAIN,scope:["email","profile","openid"],redirectSignIn:Te,redirectSignOut:Te,responseType:"code"}}},Le=function(){return Le=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var o in t=arguments[a])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},Le.apply(this,arguments)},Ie=Object(j.a)((function(e){var t,a,r,o;return{appBar:{zIndex:e.zIndex.drawer+1},root:{display:"flex",alignItems:"center",width:"100%",padding:e.spacing(0,1),textShadow:"3px 3px 3px rgba(0,0,0,0.7)",backgroundImage:"url(".concat("","/HeaderBackground.png)"),backgroundRepeat:"no-repeat",backgroundPosition:"0% 50%",backgroundSize:"cover",backgroundColor:"#444444"},logo:{height:40,width:40,marginRight:e.spacing(2)},programChooser:{margin:e.spacing(0,1),color:e.palette.primary.contrastText,"& svg":{color:e.palette.primary.contrastText},"&:before":{borderColor:e.palette.primary.contrastText},"&:after":{borderColor:e.palette.primary.contrastText}},transparent:{backgroundColor:"transparent",background:"none",color:e.palette.text.primary},search:(t={position:"relative",borderRadius:e.shape.borderRadius,backgroundColor:Object(D.a)(e.palette.common.white,.15),"&:hover":{backgroundColor:Object(D.a)(e.palette.common.white,.25)},marginRight:e.spacing(2),marginLeft:0,width:"100%",flexGrow:1},t[e.breakpoints.up("sm")]={marginLeft:e.spacing(3),width:"auto"},t),searchIcon:{width:e.spacing(7),height:"100%",position:"absolute",pointerEvents:"none",display:"flex",alignItems:"center",justifyContent:"center"},inputRoot:{color:"inherit"},spacer:{flexGrow:1},inputInput:(a={padding:e.spacing(1,1,1,7),transition:e.transitions.create("width"),width:"100%"},a[e.breakpoints.up("sm")]={width:200},a),sectionDesktop:(r={display:"none"},r[e.breakpoints.up("sm")]={display:"flex",flexGrow:1},r),sectionMobile:(o={display:"flex",flexGrow:1},o[e.breakpoints.up("sm")]={display:"none"},o)}}));function Re(e){return(!e.meta||!e.meta.access||"PUBLIC"!==e.meta.access)&&null===e.role}var Ne,Ee=function(e){var t=e.title,a=e.program,r=e.programs,o=e.signOutHandler,l=e.toolbarItems,s=e.provisional,c=e.shareUrl,p=e.history,m=Ie(),u=Object(n.useState)(!1),d=u[0],g=u[1],y=Object(n.useState)(null),h=y[0],b=y[1],x=function(){return b(null)},j=p&&p.location.pathname.indexOf("/admin")>-1,_=(o||r)&&Object(f.jsxs)(z.a,Le({anchorEl:h,anchorOrigin:{vertical:"top",horizontal:"right"},keepMounted:!0,transformOrigin:{vertical:"top",horizontal:"right"},open:!!h,onClose:x},{children:[r&&Object(f.jsx)(S.a,{children:Object(f.jsx)(w.a,Le({variant:"overline",onClick:function(){return p.push("/")}},{children:"Programs"}))}),r&&Object(f.jsx)(O.a,{}),r&&r.length>0&&r.map((function(e,t){return Object(f.jsx)(S.a,Le({disabled:a&&a.machineName===e.machineName||Re(e),onClick:function(){return t=e,x(),void(p&&p.push("/".concat(t.machineName)));var t},value:e.machineName},{children:e.name}),"prog-".concat(t))})),o&&Object(f.jsx)(O.a,{}),o&&Object(f.jsx)(S.a,Le({onClick:o},{children:"Log Out"}))]})),C=a&&(a.role===A.WarehouseRoleEnum.Admin||a.role===A.WarehouseRoleEnum.SuperUser);return Object(f.jsxs)(i.a.Fragment,{children:[Object(f.jsx)(v.a,Le({position:"static",className:m.appBar},{children:Object(f.jsxs)(k.a,Le({className:m.root,disableGutters:!0},{children:[Object(f.jsx)("a",Le({href:"http://riverscapes.net/"},{children:Object(f.jsx)("img",{className:m.logo,src:"https://riverscapes.net/assets/images/RiverscapesLogo.png",alt:"logo"})})),a?Object(f.jsxs)("div",{children:[Object(f.jsx)(w.a,Le({variant:"subtitle1"},{children:a.name})),Object(f.jsx)(w.a,Le({variant:"caption"},{children:t}))]}):Object(f.jsx)(w.a,Le({variant:"subtitle1"},{children:t})),Object(f.jsx)("div",{className:m.spacer}),Se&&Object(f.jsxs)(w.a,Le({component:"div",className:m.text,color:"inherit",variant:"overline"},{children:["v.",Se]})),C&&Object(f.jsx)(R.a,Le({"aria-haspopup":"true",onClick:function(){p&&a&&(j?p.push("/".concat(a.machineName)):p.push("/".concat(a.machineName,"/admin")))},color:"inherit"},{children:j?Object(f.jsx)(I.a,{}):Object(f.jsx)(P.a,{})})),l,s&&Object(f.jsx)(ue,{}),c&&Object(f.jsx)(R.a,Le({"aria-haspopup":"true",onClick:function(){return g(!0)},color:"inherit"},{children:Object(f.jsx)(T.a,{})})),(o||r)&&Object(f.jsx)(R.a,Le({"aria-haspopup":"true",onClick:function(e){return b(e.currentTarget)},color:"inherit"},{children:Object(f.jsx)(E.a,{})}))]}))})),_,c&&Object(f.jsx)(te,{open:d,shareUrl:c,handleClose:function(){return g(!1)}})]})},Ae=a(699),De=a(128),Ue=a.n(De),Me=a(119),Be=a.n(Me),Fe=function(){return Fe=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var o in t=arguments[a])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},Fe.apply(this,arguments)},We=Object(j.a)((function(){return{root:{"& *":{cursor:"pointer"}},disabledButton:{opacity:.5}}})),Ge=function(e){var t=e.title,a=e.project,r=e.pendingSince,o=e.btnProps,n=e.downloadZipFile,l=We(),s=Object(f.jsx)(re.a,Fe({title:Object(f.jsxs)(i.a.Fragment,{children:[Object(f.jsx)(w.a,Fe({variant:"body1"},{children:"Download Project Zip"})),Object(f.jsx)(w.a,Fe({variant:"caption",paragraph:!0},{children:"Click to download this project as a single zip file"})),Object(f.jsx)(w.a,Fe({variant:"caption",paragraph:!0},{children:"There may be a delay if the zip file needs to be built."}))]})},{children:t?Object(f.jsx)(ae.a,Fe({variant:"contained",color:"primary",onClick:function(e){e.preventDefault(),e.stopPropagation(),n(a)},startIcon:Object(f.jsx)(Ue.a,{})},o,{children:t||"ZIP"})):Object(f.jsx)(R.a,Fe({color:"primary",onClick:function(e){e.preventDefault(),e.stopPropagation(),n(a)}},o,{children:Object(f.jsx)(Ue.a,{})}))}));return r&&(s=Object(f.jsx)(re.a,Fe({title:Object(f.jsxs)(i.a.Fragment,{children:[Object(f.jsx)(w.a,Fe({variant:"body1"},{children:"Preparing Zip"})),Object(f.jsx)(w.a,Fe({variant:"caption",paragraph:!0},{children:"The warehouse is building your zip file for you."})),Object(f.jsxs)(w.a,Fe({variant:"caption",paragraph:!0},{children:["started ",Be()(r,"x").fromNow()]}))]})},{children:Object(f.jsx)(ae.a,Fe({variant:"outlined",disableFocusRipple:!0,disableRipple:!0,disableTouchRipple:!0,color:"primary",onClick:function(e){e.preventDefault(),e.stopPropagation()},className:l.disabledButton,startIcon:Object(f.jsx)(Ae.a,{color:o&&o.color&&"secondary"===o.color?"primary":"secondary",size:24,thickness:6})},o,{children:t||"ZIP"}))}))),Object(f.jsx)("div",Fe({className:l.root},{children:s}))},$e=function(){return $e=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var o in t=arguments[a])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},$e.apply(this,arguments)},Ve=Object(j.a)((function(e){return{root:{},whBtnLogo:{height:20,width:20,marginRight:e.spacing(1)},whButton:{maxWidth:300}}})),Ze=function(e){var t=e.title,a=e.href,r=e.stay,n=Ve();return Object(f.jsxs)(ae.a,$e({className:n.whButton,target:r?void 0:"_blank",variant:"contained",href:a,onClick:function(){o.event("webrave","open_warehouse","open_warehouse")},color:"secondary",fullWidth:!0},{children:[Object(f.jsx)("img",{className:n.whBtnLogo,src:"https://riverscapes.net/assets/images/RiverscapesLogo.png",alt:"logo"}),t]}))},He=(a(256),Object(j.a)((function(){return{root:{"& *":{cursor:"pointer"}},disabledButton:{opacity:.5}}})),a(385)),qe=a(729),Je=a(683),Xe=a(728),Ke=a(599),Qe=a(701),Ye=a(700),et=(a(348),a(7)),tt=a(214),at=((Ne={})[A.WarehouseRoleEnum.SuperUser]=tt.a,Ne[A.WarehouseRoleEnum.Admin]=de.a,Ne[A.WarehouseRoleEnum.Participant]=xe.a,Ne[A.WarehouseRoleEnum.Observer]=ye.a,Ne),rt=function(){return rt=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var o in t=arguments[a])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},rt.apply(this,arguments)};Object(j.a)((function(e){return{rootContainer:{height:"100%",display:"flex",flexDirection:"column",overflow:"hidden"},spacer:{flexGrow:1},root:{display:"flex",flexDirection:"column",padding:e.spacing(2,4,4,4),maxHeight:"85%",overflow:"hidden"},instruct:{flex:"0 0"},progList:{border:"1px solid #cccccc",flex:"1 1",overflowY:"scroll"},logoContainer:{flex:"0 0",padding:e.spacing(2),textAlign:"center"},scrollHint:{width:"100%",height:30,marginTop:-30,display:"block",background:"linear-gradient(0deg, rgba(255,255,255,1) 0%, rgba(255,255,255,0) 100%)",zIndex:1e3},logo:{},accessChip:rt({},Object.keys(at).reduce((function(t,a){var r;return rt(rt({},t),((r={})["&.access_".concat(a)]={color:e.palette.getContrastText(at[a][500]),background:at[a][500]},r))}),{}))}}));a(703),a(682);var ot=a(201),nt=a.n(ot),it=(a(349),a(350),a(351),a(704)),lt=a(140),st=a.n(lt),ct=a(141),pt=a.n(ct),mt=(a(199),a(702)),ut=(Object(j.a)((function(e){return{treeItemRoot:{backgroundColor:e.palette.background.paper,"&:nth-child(odd)":{backgroundColor:e.palette.background.default}},treeItemContainer:{display:"flex"},treeItemText:{marginLeft:e.spacing(1),padding:e.spacing(1),flexGrow:1},treeItemIcon:{},treeFile:{},treeFileContent:{borderBottom:"1px solid ".concat(e.palette.grey[100])},treeFolder:{},treeFolderContent:{},treeFolderText:{padding:e.spacing(1)},allowSelect:{"&,& *":{userSelect:"text",cursor:"auto"}}}})),Object(j.a)((function(e){return{root:{margin:0,padding:e.spacing(2)},allowSelect:{"&,& *":{userSelect:"text",cursor:"auto"}},scrollPaper:{alignItems:"baseline"},name:{maxWidth:"95%",whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis",marginBottom:e.spacing(1)},titlebar:{backgroundColor:"#444444",color:e.palette.primary.contrastText,display:"flex"},titlebarLeft:{flexGrow:1},header:{display:"flex"},headerLeft:{flex:"1 1 80%"},headerRight:{textAlign:"right",flex:"1 0"},flexGrow:{flexGrow:1},closeButton:{flex:"0 0",color:e.palette.grey[500]},normalIcon:{},documentIcon:{color:de.a[500]},photoIcon:{color:be.a[500]},TerrainIcon:{color:ge.a[500]},metaDisplay:{display:"flex",flexFlow:"wrap"},title:{marginTop:e.spacing(2)},treeItemContainer:{display:"flex"},treeItemText:{marginLeft:e.spacing(1),flexGrow:1},treeItemIcon:{},treeFileContent:{borderBottom:"1px solid ".concat(e.palette.grey[100]),padding:e.spacing(1)},treeFolder:{},treeFolderContent:{padding:e.spacing(1)},metaDisplayItem:{flex:"1 1",borderRadius:e.spacing(1),backgroundColor:"#fafafa",margin:e.spacing(1,.5),border:"#1px solid #e7e7e7",padding:e.spacing(1),maxWidth:"25%",minWidth:150,"&>*":{whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"}},prodChip:{marginLeft:e.spacing(1),backgroundColor:e.palette.primary.light,color:"white"},popOver:{padding:e.spacing(2)},subHeader:{width:"100%",display:"flex"}}})),a(352)),dt=a.n(ut),gt=function(){return gt=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var o in t=arguments[a])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},gt.apply(this,arguments)},yt=Object(j.a)((function(e){return{rootContainer:{height:"100%",display:"flex",flexDirection:"column"},spacer:{flexGrow:1},root:{padding:e.spacing(2,4,4,4)},logoContainer:{padding:e.spacing(2),textAlign:"center"},logo:{}}})),ht=function(e){var t=e.title,a=e.signIn,r=yt();return Object(f.jsxs)(x.a,gt({className:r.rootContainer,maxWidth:"md"},{children:[Object(f.jsx)("div",{className:r.spacer}),Object(f.jsxs)(He.a,gt({className:r.root},{children:[Object(f.jsx)("div",gt({className:r.logoContainer},{children:Object(f.jsx)("img",{className:r.logo,src:"/RiverscapesLogo.png",alt:"logo"})})),Object(f.jsxs)(w.a,gt({paragraph:!0,variant:"body1"},{children:["Welcome to ",Object(f.jsx)("strong",{children:t}),". Please click the button below to log in."]})),Object(f.jsx)(w.a,gt({paragraph:!0,variant:"body1"},{children:"If you don't have an account you will be prompted to use your Google account or create a new account using another email address."})),Object(f.jsx)(ae.a,gt({variant:"contained",onClick:a,color:"primary",fullWidth:!0,size:"large",startIcon:Object(f.jsx)(dt.a,{})},{children:"Sign In"}))]})),Object(f.jsx)("div",{className:r.spacer})]}))},bt=(a(705),a(90)),ft=a.n(bt),xt=(Object(j.a)((function(e){return{root:{marginLeft:e.spacing(1)},titlebar:{display:"flex",background:e.palette.error.main,color:e.palette.error.contrastText},closeButton:{},name:{paddingLeft:e.spacing(1),flexGrow:1}}})),a(94)),wt=a.n(xt),jt=function(){return jt=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var o in t=arguments[a])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},jt.apply(this,arguments)},kt=function(e,t,a,r){return new(a||(a=Promise))((function(o,n){function i(e){try{s(r.next(e))}catch(t){n(t)}}function l(e){try{s(r.throw(e))}catch(t){n(t)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(i,l)}s((r=r.apply(e,t||[])).next())}))},vt=function(e,t){var a,r,o,n,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return n={next:l(0),throw:l(1),return:l(2)},"function"===typeof Symbol&&(n[Symbol.iterator]=function(){return this}),n;function l(n){return function(l){return function(n){if(a)throw new TypeError("Generator is already executing.");for(;i;)try{if(a=1,r&&(o=2&n[0]?r.return:n[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,n[1])).done)return o;switch(r=0,o&&(n=[2&n[0],o.value]),n[0]){case 0:case 1:o=n;break;case 4:return i.label++,{value:n[1],done:!1};case 5:i.label++,r=n[1],n=[0];continue;case 7:n=i.ops.pop(),i.trys.pop();continue;default:if(!(o=(o=i.trys).length>0&&o[o.length-1])&&(6===n[0]||2===n[0])){i=0;continue}if(3===n[0]&&(!o||n[1]>o[0]&&n[1]<o[3])){i.label=n[1];break}if(6===n[0]&&i.label<o[1]){i.label=o[1],o=n;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(n);break}o[2]&&i.ops.pop(),i.trys.pop();continue}n=t.call(e,i)}catch(l){n=[6,l],r=0}finally{a=o=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,l])}}},Ot=function(e,t){return"_".concat(e,"_").concat(t)},St=function(e,t){return!e||e<Date.now()-1e3*t},zt=function(e){return kt(void 0,void 0,void 0,(function(){return vt(this,(function(t){switch(t.label){case 0:return[4,wt.a.keys()];case 1:return[2,t.sent().filter((function(t){return 0===t.indexOf("_".concat(e,"_"))}))]}}))}))},_t=function(e,t){var a=this;this.prune=function(){return kt(a,void 0,void 0,(function(){var e,t,a,r;return vt(this,(function(o){switch(o.label){case 0:return y.a.debug("[".concat(this.ns,"]LocalForageClass PRUNE")),[4,zt(this.ns)];case 1:e=o.sent(),t=0,o.label=2;case 2:return t<e.length?(a=e[t],[4,wt.a.getItem(a)]):[3,6];case 3:return r=o.sent(),St(null===r||void 0===r?void 0:r.ts,this.ttl)?(y.a.debug("[".concat(this.ns,"]LocalForageClass Prune Expired. Deleting: ").concat(a)),[4,wt.a.removeItem(a)]):[3,5];case 4:o.sent(),o.label=5;case 5:return t++,[3,2];case 6:return[2]}}))}))},this.get=function(e,t){return void 0===t&&(t=!1),kt(a,void 0,void 0,(function(){var a,r;return vt(this,(function(o){switch(o.label){case 0:return a=Ot(this.ns,e),[4,wt.a.getItem(a).catch((function(e){y.a.error("LocalForageClass ERROR",e)}))];case 1:return(r=o.sent())&&r.v&&r.ts?St(r.ts,this.ttl)?(y.a.debug("[".concat(this.ns,"]LocalForageClass Get Expired. Deleting: ").concat(e)),[4,wt.a.removeItem(a)]):[3,3]:[3,7];case 2:return o.sent(),[2,null];case 3:return y.a.debug("[".concat(this.ns,"]LocalForageClass HIT: ").concat(e)),!0!==t?[3,5]:[4,wt.a.setItem(a,jt(jt({},r),{ts:Date.now()}))];case 4:o.sent(),o.label=5;case 5:return[2,r.v];case 6:return[3,8];case 7:return[2,null];case 8:return[2]}}))}))},this.set=function(e,t){var r=Ot(a.ns,e),o={ts:Date.now(),v:t};return wt.a.setItem(r,o).then((function(){y.a.debug("[".concat(a.ns,"]LocalForageClass Set: ").concat(e))}))},this.del=function(e){return y.a.debug("[".concat(a.ns,"]LocalForageClass Deleting: ").concat(e)),wt.a.removeItem(Ot(a.ns,e)).catch((function(){})).then()},this.clear=function(){return kt(a,void 0,void 0,(function(){var e,t;return vt(this,(function(a){switch(a.label){case 0:return y.a.debug("[".concat(this.ns,"]LocalForageClass clear")),[4,zt(this.ns)];case 1:for(e=a.sent(),t=0;t<e.length;t++)wt.a.removeItem(e[t]);return[2]}}))}))},this.ns=e,this.ttl=t},Tt=a(40),Ct=a.n(Tt),Pt=function(){return Pt=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var o in t=arguments[a])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},Pt.apply(this,arguments)},Lt=function(e,t,a,r){return new(a||(a=Promise))((function(o,n){function i(e){try{s(r.next(e))}catch(t){n(t)}}function l(e){try{s(r.throw(e))}catch(t){n(t)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(i,l)}s((r=r.apply(e,t||[])).next())}))},It=function(e,t){var a,r,o,n,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return n={next:l(0),throw:l(1),return:l(2)},"function"===typeof Symbol&&(n[Symbol.iterator]=function(){return this}),n;function l(n){return function(l){return function(n){if(a)throw new TypeError("Generator is already executing.");for(;i;)try{if(a=1,r&&(o=2&n[0]?r.return:n[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,n[1])).done)return o;switch(r=0,o&&(n=[2&n[0],o.value]),n[0]){case 0:case 1:o=n;break;case 4:return i.label++,{value:n[1],done:!1};case 5:i.label++,r=n[1],n=[0];continue;case 7:n=i.ops.pop(),i.trys.pop();continue;default:if(!(o=(o=i.trys).length>0&&o[o.length-1])&&(6===n[0]||2===n[0])){i=0;continue}if(3===n[0]&&(!o||n[1]>o[0]&&n[1]<o[3])){i.label=n[1];break}if(6===n[0]&&i.label<o[1]){i.label=o[1],o=n;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(n);break}o[2]&&i.ops.pop(),i.trys.pop();continue}n=t.call(e,i)}catch(l){n=[6,l],r=0}finally{a=o=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,l])}}},Rt=function(e,t){var a=Object(n.useState)({}),r=a[0],o=a[1],i=Object(n.useRef)();i.current=r;var l=Object(n.useCallback)((function(a,r){return Lt(void 0,void 0,void 0,(function(){var o,n,i;return It(this,(function(l){switch(l.label){case 0:if(!t)return[2,Promise.resolve()];l.label=1;case 1:return l.trys.push([1,4,,5]),[4,e.getCurrentToken()];case 2:return o=l.sent(),[4,Object(A.downloadFile)(ze.graphql,o,a.projType,t.machineName,a.id,r)];case 3:n=l.sent();try{n.data&&window.open(n.data.downloadFile.downloadUrl,"_self")}catch(s){y.a.error("DOWNLOAD err",s)}return[3,5];case 4:return i=l.sent(),y.a.error("DOWNLOAD err",i),[3,5];case 5:return[2]}}))}))}),[t,e]),s=Object(n.useCallback)((function(a){if(!t)return Promise.resolve();return function r(){return e.getCurrentToken().then((function(e){return Object(A.downloadZipFile)(ze.graphql,e,a.projType,t.machineName,a.id)})).then((function(e){var t;try{e.data&&!e.data.downloadZip.pendingSince?(o(Ct.a.pickBy(i.current,(function(e,t){return t!==a.id}))),window.open(e.data.downloadZip.downloadUrl,"_self")):(o(Pt(Pt({},i.current),((t={})[a.id]=e.data?e.data.downloadZip.pendingSince:Date.now(),t))),setTimeout(r,5e3))}catch(n){y.a.error("DOWNLOAD err",n)}})).catch((function(e){y.a.error("DOWNLOAD err",e)}))}()}),[t,e]);return{pendingZips:i.current,downloadFileFn:l,downloadZipFile:s}},Nt=function(){return Nt=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var o in t=arguments[a])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},Nt.apply(this,arguments)},Et=function(e,t,a,r){return new(a||(a=Promise))((function(o,n){function i(e){try{s(r.next(e))}catch(t){n(t)}}function l(e){try{s(r.throw(e))}catch(t){n(t)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(i,l)}s((r=r.apply(e,t||[])).next())}))},At=function(e,t){var a,r,o,n,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return n={next:l(0),throw:l(1),return:l(2)},"function"===typeof Symbol&&(n[Symbol.iterator]=function(){return this}),n;function l(n){return function(l){return function(n){if(a)throw new TypeError("Generator is already executing.");for(;i;)try{if(a=1,r&&(o=2&n[0]?r.return:n[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,n[1])).done)return o;switch(r=0,o&&(n=[2&n[0],o.value]),n[0]){case 0:case 1:o=n;break;case 4:return i.label++,{value:n[1],done:!1};case 5:i.label++,r=n[1],n=[0];continue;case 7:n=i.ops.pop(),i.trys.pop();continue;default:if(!(o=(o=i.trys).length>0&&o[o.length-1])&&(6===n[0]||2===n[0])){i=0;continue}if(3===n[0]&&(!o||n[1]>o[0]&&n[1]<o[3])){i.label=n[1];break}if(6===n[0]&&i.label<o[1]){i.label=o[1],o=n;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(n);break}o[2]&&i.ops.pop(),i.trys.pop();continue}n=t.call(e,i)}catch(l){n=[6,l],r=0}finally{a=o=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,l])}}},Dt={loading:!1,initialized:!1},Ut=function(e,t,a,r,o){void 0===a&&(a=!1),void 0===r&&(r=!1);var i=Object(d.f)().projectId,l=Object(n.useState)(Dt),s=l[0],c=l[1],p=Object(n.useRef)(Dt);p.current=s;var m=Object(n.useRef)(!1);return Object(n.useEffect)((function(){if(!i||i.length<2)c(Dt);else try{if(!t||!i)return;if(i&&s.project&&i===s.project.id)return;var n=t.machineName;setTimeout((function(){m.current||s.project||c(Nt(Nt({},p.current),{loading:!0}))}),500),e.getCurrentToken().then((function(e){return Object(A.getProject)(ze.graphql,e,i,n,a,r)})).then((function(e){return Et(void 0,void 0,void 0,(function(){var t;return At(this,(function(a){switch(a.label){case 0:return m.current=!0,y.a.debug("getProjectById::Response",e),e.data&&e.data.project&&p.current&&p.current.project&&(null===(t=p.current)||void 0===t?void 0:t.project.id)===e.data.project.id?[2]:[3,1];case 1:return e.data?(c({project:e.data.project,loading:!1,initialized:!0}),o?[4,o(e.data.project)]:[3,3]):[3,4];case 2:a.sent(),a.label=3;case 3:return[3,6];case 4:return c({project:void 0,loading:!1,initialized:!0}),o?[4,o(null)]:[3,6];case 5:a.sent(),a.label=6;case 6:return[2]}}))}))})).catch((function(e){m.current=!0,c({project:void 0,loading:!1,initialized:!0}),y.a.error("api.getProjectById error",e)}))}catch(l){return}}),[i,t,e]),s},Mt=(a(258),a(93)),Bt=Object(Mt.a)();var Ft=a(380),Wt=a(213),Gt=function(){return Gt=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var o in t=arguments[a])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},Gt.apply(this,arguments)},$t={palette:{primary:{main:Wt.a[500]},secondary:{main:he.a[600],contrastText:"#FFFFFF"},text:{}}},Vt=Gt(Gt({},$t),{palette:Gt(Gt({},$t.palette),{type:"dark"})}),Zt={home:Object(Ft.a)($t),homeDark:Object(Ft.a)(Vt)},Ht=a(221),qt=function(){Ce?Ht.a.initialize(Ce,{titleCase:!1}):y.a.error("Google Analytics: no UA- code found")},Jt=function(e){Ht.a.pageview(e||window.location.pathname+window.location.hash)},Xt=function(e,t,a){Ht.a.event({category:e,action:t,label:a})},Kt=function(e){var t=e.title,a=e.children,r=e.history,o=e.signOut,n=e.containerProps;return Object(f.jsx)(h.a,{theme:Zt.home,children:Object(f.jsx)(b.a,{containerProps:Object(p.a)({maxWidth:"md"},n),noScroll:!0,fullWidth:!0,topbar:Object(f.jsx)(Ee,{history:r,title:t,signOutHandler:o,shareUrl:window.location.href,provisional:!0}),children:Object(f.jsx)(f.Fragment,{children:a})})})},Qt=function(e){var t=e.title;return Object(f.jsx)(b.b,{logoSVG:Object(f.jsx)(Ae.a,{size:"7rem",thickness:7}),status:Object(f.jsx)(w.a,{variant:"h5",component:"div",children:t||"Loading..."}),containerProps:{maxWidth:"xl",style:{position:"absolute",zIndex:1e3,top:0,left:0,width:"100%",height:"100%",background:"#FFFFFF77"}}})},Yt=a(13),ea=a(22),ta=a(353),aa=a(354),ra=a(355),oa=a(10),na=a(130);a(259);var ia=function(e,t,a){var r=new na.c({width:t,height:a}).fitBounds([[e[0],e[1]],[e[2],e[3]]],{padding:200});return{longitude:r.longitude,latitude:r.latitude,zoom:r.zoom}};function la(e,t,a){return a||t?a&&!t?[Math.max(e[0],a[0]),Math.max(e[1],a[1]),Math.min(e[2],a[2]),Math.min(e[3],a[3])]:t&&!a?[Math.max(e[0],t[0]),Math.max(e[1],t[1]),Math.min(e[2],t[2]),Math.min(e[3],t[3])]:t&&a?[Math.max(e[0],Math.min(a[0],t[0])),Math.max(e[1],Math.min(a[1],t[1])),Math.min(e[2],Math.max(a[2],t[2])),Math.min(e[3],Math.max(a[3],t[3]))]:null:null}function sa(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=Math.max(0,Math.min(100,e));return 1-t/100}function ca(e,t){var a=Ca.zoomRange;return e||t?t?[e?e[0]:Ca.zoomRange[0],Math.min(Ca.zoomRange[1],Math.max(e[1],t[1]||e[1]))]:e:a}var pa=[A.ProjectTreeLayerTypes.POINT,A.ProjectTreeLayerTypes.LINE,A.ProjectTreeLayerTypes.POLYGON,A.ProjectTreeLayerTypes.TIN,A.ProjectTreeLayerTypes.RASTER];function ma(e,t){var a,r={minzoom:(null===t||void 0===t?void 0:t.minZoom)||0,maxzoom:24,layout:{}};if(null!==t&&void 0!==t&&null!==(a=t.rsLayer)&&void 0!==a&&a.subLayers){var o=t.rsLayer.subLayers.find((function(t){return t.id===e}));r["source-layer"]=o.path}else{var n;r["source-layer"]=null===t||void 0===t||null===(n=t.rsLayer)||void 0===n?void 0:n.id}return r}var ua,da={line:function(e,t,a){return Object(p.a)(Object(p.a)({},ma(e.layerId,a)),{},{type:"line",paint:{"line-color":t[500],"line-opacity":sa(e.transparency)}})},point:function(e,t,a){return Object(p.a)(Object(p.a)({},ma(e.layerId,a)),{},{type:"circle",paint:{"circle-stroke-opacity":1,"circle-stroke-width":2,"circle-stroke-color":t[500],"circle-opacity":sa(e.transparency),"circle-radius":4,"circle-color":t[700]}})},polygon:function(e,t,a){return Object(p.a)(Object(p.a)({},ma(e.layerId,a)),{},{type:"fill",paint:{"fill-opacity":sa(e.transparency),"fill-color":t[700]}})},outline:function(e,t,a){return Object(p.a)(Object(p.a)({},ma(e.layerId,a)),{},{type:"line",paint:{"line-color":t[500],"line-opacity":sa(e.transparency)}})}};!function(e){e.bgLayer="BGL",e.userContent="USRLYR",e.bgSource="BGSRC",e.layerSource="SRC"}(ua||(ua={}));var ga=function(e,t){return"".concat(ua.layerSource,"_").concat(e||"NOPATH","_").concat(t||"SRC")},ya=function(e,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return"".concat(ua.userContent,"_").concat(e||"UNKNOWN","_").concat(t||"NOSYMB","_").concat(a)},ha=function(e){return Boolean(e&&e.isStyleLoaded())},ba=function(e,t){return e.getStyle().layers.filter((function(e){var a=e.metadata;return Object(Tt.isUndefined)(t)||a.mType===t})).map((function(e){return e.id}))},fa=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";return{mType:e,mIdx:t,mRef:a}};function xa(e,t){if(!ha(e))return!1;var a=e,r=Date.now(),o=[],n=null,i=!0;return t.slice().reverse().forEach((function(e){var t,r,l=e.leaf.layerType===A.ProjectTreeLayerTypes.RASTER?ga(e.leaf.layerPath,e.leaf.symbology):ga(e.leaf.layerPath,e.leaf.layerName||e.leaf.layerId);if(a.getSource(l)||(a=e.leaf.layerType===A.ProjectTreeLayerTypes.RASTER?a.addSource(l,(t=e.tiles,r=e.leaf.symbology,{type:"raster",scheme:"tms",maxzoom:t.maxZoom||20,minzoom:t.minZoom||4,tiles:["".concat(t.url).concat(r||"raster","/{z}/{x}/{y}.").concat(t.format||"png")]})):a.addSource(l,function(e,t){var a="".concat(t,"/");return{type:"vector",maxzoom:e.maxZoom||20,minzoom:e.minZoom||4,tiles:["".concat(e.url).concat(a,"{z}/{x}/{y}.").concat(e.format||"pbf")]}}(e.tiles,e.leaf.layerName||e.leaf.layerId))),e.leaf.layerType===A.ProjectTreeLayerTypes.RASTER){var s=ya(e.leaf.layerPath,e.leaf.symbology);o.push(s),a.getLayer(s)||(y.a.debug('DEBUG::MM: Adding raster layer "'.concat(s,'" before "').concat(n,'"')),a=a.addLayer(Object(p.a)(Object(p.a)({},function(e,t,a){var r,o={type:"raster",id:t,source:a,minzoom:(null===(r=e.tiles)||void 0===r?void 0:r.minZoom)||0,maxzoom:24,layout:{},paint:{}};e.leaf.transparency&&e.leaf.transparency>0&&(o.paint["raster-opacity"]=sa(e.leaf.transparency));return o}(e,s,l)),{},{metadata:fa(ua.userContent,void 0,"".concat(e.leaf.layerPath,"/").concat(e.leaf.symbology))}),n),n=s)}else{var c;if(e.symbologyStatus===A.SymbologyStatus.FETCHING)return void(i=!1);var m=(null===(c=e.symbology)||void 0===c?void 0:c.mapboxJson)||[];if((!m||0===m.length)&&null!==e.randomColor){var u=La[e.randomColor];switch(e.leaf.layerType){case A.ProjectTreeLayerTypes.LINE:m=[da.line(e.leaf,u,e.tiles)];break;case A.ProjectTreeLayerTypes.POLYGON:m=[da.polygon(e.leaf,u,null===e||void 0===e?void 0:e.tiles),da.outline(e.leaf,u,null===e||void 0===e?void 0:e.tiles)];break;case A.ProjectTreeLayerTypes.POINT:m=[da.line(e.leaf,u,e.tiles)]}}m.forEach((function(t,r){var i=ya("".concat(e.leaf.layerPath,"/").concat(e.leaf.layerName||e.leaf.layerId),e.leaf.symbology,r);o.push(i),a.getLayer(i)?y.a.debug('DEBUG::MM: Already found "'.concat(i,'" in the map')):(y.a.debug('DEBUG::MM: Adding vector sublayer "'.concat(i,'" before "').concat(n,'"')),a=a.addLayer(Object(p.a)(Object(p.a)({},function(e,t,a,r){var o,n=Object(p.a)(Object(p.a)({type:"fill",minzoom:(null===(o=e.tiles)||void 0===o?void 0:o.minZoom)||0,maxzoom:24,layout:{},paint:{}},t),{},{id:a,source:r,"source-layer":e.leaf.layerName||e.leaf.layerId});if(e.leaf.transparency&&e.leaf.transparency>0){var i=sa(e.leaf.transparency);switch(n.type){case"fill":n.paint=Object(p.a)(Object(p.a)({},n.paint),{},Object(oa.a)({},"fill-opacity",i));break;case"line":n.paint=Object(p.a)(Object(p.a)({},n.paint),{},Object(oa.a)({},"line-opacity",i));break;case"circle":n.paint=Object(p.a)(Object(p.a)({},n.paint),{},Object(oa.a)({},"circle-opacity",i))}}return n}(e,t,i,l)),{},{metadata:fa(ua.userContent,r,"".concat(e.leaf.layerPath,"/").concat(e.leaf.symbology))}),n),n=i)}))}})),ba(a,ua.userContent).forEach((function(e){o.indexOf(e)<0&&(y.a.debug("DEBUG::MM: Removing unused layer: ".concat(e),{validLayerIds:o}),a=a.removeLayer(e))})),y.a.debug("DEBUG::MM: userLayerRecalc took ".concat(Date.now()-r," ms")),i}function wa(e,t){if(!t.sources)return{sources:{},layers:[]};var a=t.sources||{},r=t.layers||[],o=t.glyphs,n=t.sprite,i={};return{sources:Object.keys(t.sources).reduce((function(t,r){var o="".concat(ua.bgSource,"_").concat(e,"_").concat(r),n=a[r];return i[r]=o,Object(p.a)(Object(p.a)({},t),{},Object(oa.a)({},o,n))}),{}),layers:r.map((function(e,t){var a="custom"!==e.type&&e.metadata||{},r=Object(p.a)(Object(p.a)({},e),{},{metadata:Object(p.a)(Object(p.a)({},a),fa(ua.bgLayer,t)),id:"".concat(ua.bgLayer,"_").concat(t,"_").concat(e.id)});return"background"!==r.type&&"circle"!==r.type&&"custom"!==r.type&&r.source&&"string"===typeof r.type&&(r.source=i[r.source.toString()]),r})),glyphs:o,sprite:n}}var ja=a(708),ka=a(709),va=a(710),Oa=[Object(p.a)({id:"SATELLITE",title:"Satellite Imagery",toolTip:"Satellite Imagery",Icon:ja.a,color:"green"},wa("SAT",ta)),Object(p.a)({id:"HILLSHADE",title:"Topo",toolTip:"OSM Topo Map",Icon:ka.a,color:"blue"},wa("HS",ra)),Object(p.a)({id:"STREET",title:"Street Map",toolTip:"Street Map",Icon:va.a,color:"blue"},wa("ST",aa))],Sa=Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_GRAPHQL:"https://gco5qebdt4.execute-api.us-west-2.amazonaws.com/production/api",REACT_APP_VERSION:"0.2.12",REACT_APP_MAPBOX_TOKEN:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg",REACT_APP_WAREHOUSE_URL:"https://data.riverscapes.net",REACT_APP_GOOGLE_ANALYTICS:"UA-60121403-12"}).REACT_APP_DOMAIN;y.a.debug("config: ",{domain:Sa});var za={graphql:"".concat("https://gco5qebdt4.execute-api.us-west-2.amazonaws.com/production/api")},_a="https://data.riverscapes.net",Ta="/images",Ca={appName:"Riverscapes Project Viewer (webRAVE)",zoomRange:[4,18],apiTimeout:2e4,defaultViewport:{zoom:8},worldBounds:[-141,23,-50,70],baseLayer:Oa[0],drawerOpen:!0,init:!1,minFilterTextLength:3,maxMapLayers:5,retryDelayS:2,refreshDelayS:20},Pa={version:8,name:"WebRaveStyle",sprite:"mapbox://sprites/northarrowresearch/ckmuw9x2e5f0417pe3vy7y0cz/55jsegcrpjhdm8ibxtin56tly",glyphs:"mapbox://fonts/northarrowresearch/{fontstack}/{range}.pbf"},La=(de.a,ge.a,ye.a,he.a,be.a,fe.a,xe.a,we.a,[de.a,ge.a,ye.a,he.a,be.a,fe.a,xe.a,we.a]),Ia=new URL("".endsWith("/")?"":"/",window.location.origin);y.a.debug("RedirectUrl",{redirectUrl:Ia,publicUrl:""});var Ra=Object(Yt.b)({key:"project",default:null}),Na=Object(Yt.b)({key:"auth",default:null}),Ea=Object(Yt.b)({key:"drawerOpen",default:Ca.drawerOpen}),Aa=Object(Yt.b)({key:"map/activeLayerIds",default:[]}),Da=Object(Yt.e)({key:"activeTreeLeaves",get:function(e){var t=e.get,a=t(Ra),r=t(Aa);return a&&a.tree&&(null===a||void 0===a?void 0:a.tree.leaves.filter((function(e){return r.indexOf(e.id)>-1})))||[]}}),Ua=Object(Yt.e)({key:"map/activeLeavesSorted",get:function(e){return function(e){var t=Object(ea.a)(e);return t.sort((function(e,t){return e.layerType!==t.layerType?pa.indexOf(e.layerType)-pa.indexOf(t.layerType):e.id-t.id})),t}((0,e.get)(Da))}}),Ma=Object(Yt.e)({key:"project/mapLayerLeaves",get:function(e){var t=(0,e.get)(Ra);return t&&t.tree?t.tree.leaves.filter((function(e){var t=e.layerType,a=e.layerPath,r=e.nodeExists;return A.ProjectTreeLayerTileTypes.indexOf(t)>-1&&r&&a&&a.length>0})):[]}}),Ba=Object(Yt.e)({key:"project/layerPaths",get:function(e){return(0,e.get)(Ma).reduce((function(e,t){var a=t.layerName?"".concat(t.layerPath,"/").concat(t.layerName):t.layerPath||"unknown";return!t.layerPath||e.indexOf(a)>-1?e:[].concat(Object(ea.a)(e),[a])}),[])}}),Fa=Object(Yt.b)({key:"treeFilterText",default:""}),Wa=Object(Yt.e)({key:"projectLeafHierarchy",get:function(e){var t=(0,e.get)(Ra);return t&&t.tree?t.tree.leaves.reduce((function(e,a){return Object(p.a)(Object(p.a)({},e),{},Object(oa.a)({},a.id,function(e,t){for(var a=t.pid,r=[],o=[];a>-1&&r.length<e.tree.branches.length;){var n=e.tree.branches.find((function(e){return e.bid===a}));n&&r.indexOf(n.bid)<0?(r.push(n.bid),o.push(n.label.toLowerCase().trim()),a=n.pid):a=-1}return r.map((function(e,t){return[e,o[t]]}))}(t,a)))}),{}):{}}}),Ga=Object(Yt.b)({key:"tree/treeInfoPaneId",default:null}),$a=Object(Yt.b)({key:"tree/treeInfoPaneOpen",default:!1}),Va=Object(Yt.f)({key:"treeLeafSelectorFamily",get:function(e){return function(t){var a=(0,t.get)(Ra);if(!a)throw new Error("treeLeafSelectorFamily: No project found");var r=a.tree.leaves.find((function(t){return t.id===e}));if(!r)throw new Error("treeLeafSelectorFamily: No leaf found");return r}}}),Za=Object(Yt.b)({key:"tree/selectedIds",default:[]}),Ha=Object(Yt.e)({key:"tree/selectedIdsSelect",get:function(e){var t,a=(0,e.get)(Za);return{branches:(t=a).filter((function(e){return e.indexOf("b-")>-1})).map((function(e){return parseInt(e.replace("b-",""),10)})),leaves:t.filter((function(e){return e.indexOf("l-")>-1})).map((function(e){return parseInt(e.replace("l-",""),10)}))}}}),qa=Object(Yt.e)({key:"projectHiddenNodes",get:function(e){var t=e.get,a=t(Ra),r={branches:[],leaves:[]};if(!a)return r;var o=t(Wa),n=t(Fa).toLowerCase().trim();if(n.length<Ca.minFilterTextLength)return r;var i=n.split(" ").filter((function(e){return e.length>0}));if(i.length<1)return r;var l=a.tree.leaves.filter((function(e){var t=o[e.id];return i.every((function(a){return e.label.toLowerCase().indexOf(a)>-1||t.find((function(e){return Object(u.a)(e,2)[1].indexOf(a)>-1}))}))})).map((function(e){return e.id})),s=Array.from(new Set(l.reduce((function(e,t){return[].concat(Object(ea.a)(e),Object(ea.a)(o[t].map((function(e){return Object(u.a)(e,1)[0]}))))}),[])));return r.leaves=a.tree.leaves.map((function(e){return e.id})).filter((function(e){return l.indexOf(e)<0})),r.branches=a.tree.branches.map((function(e){return e.bid})).filter((function(e){return s.indexOf(e)<0})),r}}),Ja=Object(Yt.f)({key:"treeLeafStateFamily",get:function(e){return function(t){var a,r=t.get,o=r(hr(e)),n=r(qa).leaves.indexOf(e)>-1,i=r(Aa).indexOf(e)>-1,l=o.leaf.layerType===A.ProjectTreeLayerTypes.REPORT&&o.tileStatus===A.TilingStatus.SUCCESS&&(null===(a=o.tiles)||void 0===a?void 0:a.url)+"index.html";return{leaf:o.leaf,tilesState:o.tileStatus,treeAllowed:!0,reportUrl:l||void 0,renderable:o.renderable,hidden:n,active:i}}}}),Xa=Object(Yt.e)({key:"tree/rootBranchId",get:function(e){var t=(0,e.get)(Ra);if(!t||!t.tree)return null;var a=null===t||void 0===t?void 0:t.tree.branches.find((function(e){return-1===e.pid}));return a?a.bid:null}}),Ka=Object(Yt.f)({key:"tree/branches",get:function(e){return function(t){var a=(0,t.get)(Ra),r=null===a||void 0===a?void 0:a.tree.branches.find((function(t){return t.bid===e}));if(!a)throw new Error("treeBranchSelectorFamily: No project found");if(!r)throw new Error("treeBranchSelectorFamily: No branch found");return{branch:r,children:{branches:a.tree.branches.filter((function(t){return t.pid===e})).map((function(e){return e.bid})),leaves:a.tree.leaves.filter((function(t){return t.pid===e})).map((function(e){return e.id}))}}}}}),Qa=Object(Yt.f)({key:"tree/branchState",get:function(e){return function(t){var a=t.get,r=a(Ha),o=a(Ka(e)),n=a(qa),i=Boolean(a(tr).indexOf(e)>-1),l=Boolean(r.branches.indexOf(e)>-1);return{branch:o,hidden:n.branches.indexOf(e)>-1,selected:l,collapsed:i}}}}),Ya=Object(Yt.b)({key:"tree/contextMenu",default:null}),er=Object(Yt.b)({key:"tree/expandedIds",default:[]}),tr=Object(Yt.e)({key:"tree/expandedIdsSelect",get:function(e){return(0,e.get)(er).filter((function(e){return e.indexOf("b-")>-1})).map((function(e){return parseInt(e.replace("b-",""),10)}))}}),ar=Object(Yt.e)({key:"tree/treeAllIds",get:function(e){var t=(0,e.get)(Ra);return t&&t.tree?[].concat(Object(ea.a)(t.tree.branches.map((function(e){var t=e.bid;return"b-".concat(t)}))),Object(ea.a)(t.tree.leaves.map((function(e){var t=e.id;return"l-".concat(t)})))):[]}}),rr=a(357),or=new(a.n(rr).a)({maxConcurrent:5}),nr=new _t("TILES",3600);nr.prune();var ir=Object(Yt.c)({key:"tiles/tileReq",default:0}),lr=Object(Yt.c)({key:"tiles/tileRetries",default:0}),sr=(Object(Yt.b)({key:"tiles/usableIds",default:[]}),Object(Yt.f)({key:"tiles/tiles",get:function(e){return function(){var t=Object(m.a)(Object(c.a)().mark((function t(a){var r,o,n,i,l,s,m,u;return Object(c.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if((r=a.get)(ir(e)),r(lr(e)),o=r(Na),n=r(Ra),i={status:A.TilingStatus.UNKNOWN},n&&o&&e){t.next=8;break}return t.abrupt("return",i);case 8:return l="".concat(n.projType,"/").concat(null===n||void 0===n?void 0:n.program,"/").concat(null===n||void 0===n?void 0:n.id,"/").concat(e),t.next=11,nr.get(l);case 11:if(!(s=t.sent)){t.next=14;break}return t.abrupt("return",s);case 14:return t.prev=14,t.next=17,or.schedule({priority:5},(function(){return o.getCurrentToken().then((function(t){return Object(A.getLayerTiles)(za.graphql,t,n.projType,null===n||void 0===n?void 0:n.program,null===n||void 0===n?void 0:n.id,e,Ca.apiTimeout)}))}));case 17:(u=t.sent)&&!u.errors&&u.data||(i.status=A.TilingStatus.FETCH_ERROR,u.errors&&u.errors.length>0&&(i.error=u.errors.map((function(e){return JSON.stringify(e)})).join(", \n"))),i=Object(p.a)(Object(p.a)({},i),null===(m=u.data)||void 0===m?void 0:m.getLayerTiles),t.next=27;break;case 22:t.prev=22,t.t0=t.catch(14),y.a.error("Tile fetch error",t.t0),i.status=A.TilingStatus.FETCH_ERROR,i.error=String(t.t0);case 27:return A.TilingStatusFinished.indexOf(i.status)>-1&&nr.set(l,i),t.abrupt("return",i);case 29:case"end":return t.stop()}}),t,null,[[14,22]])})));return function(e){return t.apply(this,arguments)}}()}})),cr=new _t("SYMB",21600);cr.prune();var pr=function(e){return e.reduce((function(e,t){if(!t.symbology)return e;var a=[t.symbology,t.layerType===A.ProjectTreeLayerTypes.RASTER];return e.find((function(e){return Object(Tt.isEqual)(e,a)}))?e:[].concat(Object(ea.a)(e),[a])}),[])},mr=Object(Yt.e)({key:"symbology/uniqueSymb",get:function(e){var t=(0,e.get)(Ma);return pr(t)}}),ur=(Object(Yt.e)({key:"symbology/activeSymbologies",get:function(e){var t=(0,e.get)(Da);return pr(t)}}),Object(Yt.f)({key:"symbology/symbology",get:function(e){var t=Object(u.a)(e,2),a=t[0],r=t[1];return function(){var e=Object(m.a)(Object(c.a)().mark((function e(t){var o,n,i,l,s,m,u,d,g,h;return Object(c.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(i=t.get,l=i(Ra),s=i(Na),l&&s&&a){e.next=5;break}return e.abrupt("return",null);case 5:return m={name:a,status:A.SymbologyStatus.UNKNOWN},u="".concat(l.projType,"/").concat(a),e.next=9,cr.get(u);case 9:if(!(d=e.sent)){e.next=12;break}return e.abrupt("return",d);case 12:return e.next=14,or.schedule({priority:5},(function(){return s.getCurrentToken().then((function(e){return Object(A.getWebSymbology)(za.graphql,e,l.projType,a,r,Ca.apiTimeout)})).catch((function(e){y.a.debug("symbologySelectorFamily",e)}))}));case 14:if((g=e.sent)&&!g.errors){e.next=19;break}return m.status=A.SymbologyStatus.ERROR,m.error="Error downloading symbology",e.abrupt("return",m);case 19:if((h=null!==(o=g.data)&&void 0!==o&&o.getWebSymbology?Object(p.a)(Object(p.a)({},null===(n=g.data)||void 0===n?void 0:n.getWebSymbology),{},{status:A.SymbologyStatus.FOUND}):m).status!==A.SymbologyStatus.FOUND){e.next=23;break}return e.next=23,cr.set(u,h);case 23:return e.abrupt("return",h);case 24:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()}})),dr=Object(Yt.b)({key:"map/assignedColors",default:[]}),gr=Object(Yt.c)({key:"map/leafRandomCol",default:null}),yr=Object(Yt.e)({key:"map/selectNextColor",get:function(e){for(var t=(0,e.get)(dr),a=0;a<La.length;a++)if(t.indexOf(a)<0)return a;return 0}}),hr=Object(Yt.f)({key:"map/layers",get:function(e){return function(t){var a=t.get,r=a(Va(e)),o=a(Ha),n=A.ProjectTreeLayerTileTypes.indexOf(r.layerType)>-1,i=n||r.layerType===A.ProjectTreeLayerTypes.REPORT,l=a(Aa).indexOf(e)>-1,s={leaf:r,treeSelected:Boolean(o.leaves&&o.leaves.indexOf(e)>-1),legendActive:l,renderable:!1,tileStatus:A.TilingStatus.NOT_APPLICABLE,symbologyStatus:A.SymbologyStatus.NOT_APPLICABLE};if(i){var c=a(Object(Yt.d)(sr(r.layerPath)));if(n){var p,m=a(Object(Yt.d)(ur([r.symbology,r.layerType===A.ProjectTreeLayerTypes.RASTER])));s.symbologyStatus="hasValue"!==m.state?A.SymbologyStatus.FETCHING:(null===(p=m.contents)||void 0===p?void 0:p.status)||A.SymbologyStatus.NOT_APPLICABLE,"hasValue"===m.state&&(s.symbology=m.contents)}s.tileStatus="hasValue"!==c.state?A.TilingStatus.FETCHING:c.contents.status,r.layerType===A.ProjectTreeLayerTypes.FILE&&(s.tileStatus,A.TilingStatus.SUCCESS),s.renderable=s.tileStatus===A.TilingStatus.SUCCESS&&s.symbologyStatus!==A.SymbologyStatus.FETCHING,"hasValue"===c.state&&(s.tiles=c.contents)}return s}}}),br=Object(Yt.e)({key:"map/viewProjLeafIds",get:function(e){var t=(0,e.get)(Ra);return t&&t.tree&&t.tree.views?t.tree.views.reduce((function(e,a){var r=a.layers.reduce((function(e,a){var r=t.tree.leaves.find((function(e){var t=e.blLayerId;return t&&t===a.id}));return r?[].concat(Object(ea.a)(e),[r.id]):e}),[]);return Object(p.a)(Object(p.a)({},e),{},Object(oa.a)({},a.id,r))}),{}):{}}}),fr=Object(Yt.b)({key:"map/baseLayer",default:Ca.baseLayer}),xr=Object(Yt.b)({key:"map/viewport",default:Ca.defaultViewport}),wr=Object(Yt.b)({key:"map/mapSize",default:null}),jr=Object(Yt.b)({key:"map/mapError",default:""}),kr=Object(Yt.b)({key:"map/mapLoaded",default:!1}),vr=Object(Yt.e)({key:"map/activeBoundsSelector",get:function(e){for(var t=(0,e.get)(Or),a=null,r=0;r<t.length;r++){var o,n,i=t[r];if(null!==(o=i.tiles)&&void 0!==o&&o.bounds)a=la(Ca.worldBounds,a,null===(n=i.tiles)||void 0===n?void 0:n.bounds)}return a}}),Or=Object(Yt.e)({key:"map/renderableMapLayers",get:function(e){var t=e.get,a=t(Ua).map((function(e){var a=e.id;return t(hr(a))})).filter((function(e){return e.tileStatus===A.TilingStatus.SUCCESS})),r=a.map((function(e){var a=e.leaf.id;return t(gr(a))}));return a.reduce((function(e,t,a){var o=t.leaf.id,n=Object(p.a)(Object(p.a)({},t),{},{randomColor:r[a],lid:o});return[].concat(Object(ea.a)(e),[n])}),[])}}),Sr=Object(Yt.b)({key:"map/view",default:null}),zr=Object(Yt.b)({key:"map/bounds",default:null}),_r=Object(Yt.b)({key:"map/zoomBounds",default:[Ca.zoomRange[0],Ca.zoomRange[1]]}),Tr=Object(Yt.e)({key:"bounds",get:function(e){var t=e.get;return{zoom:t(_r),bounds:t(zr)||Ca.worldBounds}}}),Cr=(Object(Yt.e)({key:"url/params",get:function(e){var t=e.get,a=t(xr),r=t(fr),o=t(Sr),n=t(Ea),i=t(Or),l={};return n||(l.d=0),a&&(l.c=[a.longitude,a.latitude,a.zoom,a.bearing,a.pitch]),r&&r.id!==Ca.baseLayer.id&&(l.b=r.id),o?l.v=o:l.l=i.map((function(e){return e.leaf.id})),y.a.debug("URLPARAMS:: urlParamsSelector fire",l),l}}),function(){var e=Object(Yt.h)(Sr),t=Object(u.a)(e,2),a=t[0],r=t[1],n=Object(Yt.i)(br),i=Object(Yt.i)(Ra),l=Object(Yt.k)(Aa),s=function(e){null!==e&&a!==e&&n[e]&&(o.event("webrave","set_view"),r(e),l(n[e]))};return{setView:s,resetView:function(){o.event("webrave","set_default_view"),i&&i.tree.defaultView&&s(i.tree.defaultView)}}}),Pr=function(e,t){var a=Object(Yt.h)(Ra),r=Object(u.a)(a,2),o=r[0],i=r[1],l=Object(Yt.k)(Aa),s=Object(Yt.k)(Na),c=Object(Yt.i)(mr),p=Object(Yt.i)(Ba),m=Object(Yt.k)(er),d=Cr().resetView,g=Object(n.useCallback)((function(){y.a.debug("RESETTING THE APP")}),[]);Object(n.useEffect)((function(){(!t&&o||t&&o&&t.id!==o.id)&&g(),i(t||null)}),[t]),Object(n.useEffect)((function(){s(e||null)}),[e]);var h=Object(Yt.g)((function(e){var t=e.snapshot;return function(e){t.getLoadable(sr(e))}})),b=Object(Yt.g)((function(e){var t=e.snapshot;return function(e){t.getLoadable(ur(e))}}));Object(n.useEffect)((function(){o&&o.tree?(o.name&&(document.title=o.name),l([]),d(),m(o.tree.branches.filter((function(e){return!e.collapsed})).map((function(e){return"b-".concat(e.bid)})))):(m([]),document.title="RAVE")}),[o]),Object(n.useEffect)((function(){c.map(b)}),[c]),Object(n.useEffect)((function(){p.map(h)}),[p])},Lr=Object(j.a)((function(e){return{rootContainer:{height:"100%",display:"flex",flexDirection:"column"},spacer:{flexGrow:1},root:{padding:e.spacing(2,4,4,4)},buttonContainer:{textAlign:"center"},logoContainer:{padding:e.spacing(2),textAlign:"center"},logo:{}}})),Ir=function(){var e=Lr();return Object(f.jsxs)(x.a,{className:e.rootContainer,maxWidth:"sm",children:[Object(f.jsx)("div",{className:e.spacer}),Object(f.jsxs)(He.a,{className:e.root,children:[Object(f.jsx)("div",{className:e.logoContainer,children:Object(f.jsx)("img",{className:e.logo,src:"/RiverscapesLogo.png",alt:"logo"})}),Object(f.jsx)(w.a,{paragraph:!0,variant:"body1",children:"The project you are looking for could not be found."}),Object(f.jsxs)(w.a,{paragraph:!0,variant:"body1",children:["Please go back to the ",Object(f.jsx)(ie.a,{href:"".concat(_a,"/#/"),children:"Riverscapes Data Warehouse"})," and choose a new project"]}),Object(f.jsx)("div",{className:e.buttonContainer,children:Object(f.jsx)(Ze,{title:"Warehouse",href:"".concat(_a,"/#/"),stay:!0})})]}),Object(f.jsx)("div",{className:e.spacer})]})},Rr=a(383),Nr=Object(j.a)((function(){return{root:{height:"100%",position:"relative"},splitPane:{},resizer:{background:"#000",opacity:.2,zIndex:1,boxSizing:"border-box",backgroundClip:"padding-box","&:hover":{transition:"all 2s ease"},"&.horizontal":{height:11,margin:"-5px 0",borderTop:"5px solid rgba(255, 255, 255, 0)",borderBottom:"5px solid rgba(255, 255, 255, 0)",cursor:"row-resize",width:"100%","&:hover":{borderTop:"5px solid rgba(0, 0, 0, 0.5)",borderBottom:"5px solid rgba(0, 0, 0, 0.5)"}},"&.vertical":{width:11,margin:"0 -5px",borderLeft:"5px solid rgba(255, 255, 255, 0)",borderRight:"5px solid rgba(255, 255, 255, 0)",cursor:"col-resize",height:"100%","&:hover":{borderLeft:"5px solid rgba(0, 0, 0, 0.5)",borderRight:"5px solid rgba(0, 0, 0, 0.5)"}},"&.disabled":{cursor:"not-allowed","&:hover":{borderColor:"transparent"}}}}})),Er=function(e){var t=e.open,a=e.child1,r=e.child2,o=e.split,i=e.primary,l=e.defaultSize,s=e.minSize,c=e.maxSize,p=Nr(),m=Object(n.useMemo)((function(){return a}),[a]),u=Object(n.useMemo)((function(){return r}),[r]);return t?Object(f.jsx)("div",{className:p.root,children:Object(f.jsxs)(Rr.a,{className:p.splitPane,resizerClassName:p.resizer,split:o,primary:i,defaultSize:l,minSize:s,maxSize:c,pane1Style:{overflow:"hidden"},pane2Style:{overflow:"hidden"},children:[m,u]})}):Object(f.jsx)("div",{className:p.root,children:i&&"first"!==i?u:m})},Ar=Object(j.a)((function(e){return{rootContainer:{height:"100%",display:"flex",flexDirection:"column"},spacer:{flexGrow:1},root:{padding:e.spacing(2,4,4,4)},logoContainer:{padding:e.spacing(2),textAlign:"center"},logo:{}}})),Dr=function(e){var t=e.machineName,a=e.message,r=e.noWHButton,o=Ar();return Object(f.jsxs)(x.a,{className:o.rootContainer,maxWidth:"xs",children:[Object(f.jsx)("div",{className:o.spacer}),Object(f.jsxs)(He.a,{className:o.root,children:[Object(f.jsx)("div",{className:o.logoContainer,children:Object(f.jsx)("img",{className:o.logo,src:"/RiverscapesLogo.png",alt:"logo"})}),Object(f.jsx)(w.a,{paragraph:!0,variant:"body1",children:a}),!r&&Object(f.jsx)("div",{style:{textAlign:"center"},children:Object(f.jsx)(Ze,{title:"Warehouse",href:"".concat(_a,"/#/").concat(t||"")})})]}),Object(f.jsx)("div",{className:o.spacer})]})},Ur=a(723),Mr=a(711),Br=Object(j.a)((function(e){return{root:{height:"100%",display:"flex",flexDirection:"column",overflow:"hidden"},appBar:{flex:"0 0"},tabs:{},tabContents:{position:"relative",overflow:"hidden",flexGrow:1},closeButton:{zIndex:1e3,background:e.palette.secondary.main,color:e.palette.secondary.contrastText,position:"absolute",top:0,right:0}}})),Fr=function(e){var t=e.tabs,a=Br(),r=Object(n.useState)(0),o=Object(u.a)(r,2),i=o[0],l=o[1];return Object(f.jsxs)("div",{className:a.root,children:[Object(f.jsx)(Ur.a,{value:i,className:a.tabs,onChange:function(e,t){l(t)},indicatorColor:"primary",textColor:"primary",variant:"fullWidth","aria-label":"full width tabs example",children:t.map((function(e,t){return Object(f.jsx)(Mr.a,{label:e.label,value:t},"tab-".concat(t))}))}),t.map((function(e,t){var r=e.value;return Object(f.jsx)("div",{className:a.tabContents,style:{display:t===i?"block":"none"},children:r},"tab-".concat(t))}))]})},Wr=function(){var e=Object(Yt.h)(Sr),t=Object(u.a)(e,2),a=t[0],r=t[1],n=Object(Yt.h)(Aa),i=Object(u.a)(n,2),l=i[0],s=i[1],c=Object(Yt.h)(jr),p=Object(u.a)(c,2),m=p[0],d=p[1],g=function(e){o.event("webrave","remove_layer"),m&&d(""),null!==a&&r(null),s(l.filter((function(t){return t!==e})))},y=function(e){if(o.event("webrave","add_layer"),l.length===Ca.maxMapLayers)return o.event("error","too_many_layers"),void d("Only ".concat(Ca.maxMapLayers," layers are allowed at a time."));m&&d(""),null!==a&&r(null),s(Array.from(new Set([].concat(Object(ea.a)(l),[e]))))};return{removeLayer:g,addLayer:y,toggleLayer:function(e){l.indexOf(e)>-1?g(e):y(e)}}},Gr=a(358),$r=Object(j.a)((function(){return{normal:{fontStyle:"italic",opacity:.8},highlighted:{fontWeight:"bold"}}})),Vr=function(e){var t=e.text,a=e.query,r=$r();if(!a||0===a.length)return Object(f.jsx)("span",{children:t});var o=a.split(" ").map((function(e){return e.trim()})).filter((function(e){return e&&e.length>0})).join(" "),n=Object(Gr.a)({text:t,query:o});return Object(f.jsx)("span",{children:n.map((function(e,t){return Object(f.jsx)("span",{className:e.match?r.highlighted:r.normal,children:e.text},"textMatch-".concat(t))}))})},Zr=a(31),Hr=a.n(Zr),qr=Hr()(Object(f.jsxs)(i.a.Fragment,{children:[Object(f.jsx)("circle",{vectorEffect:"non-scaling-stroke",cx:"5.5",cy:"5.5",r:"2.5"}),Object(f.jsx)("circle",{vectorEffect:"non-scaling-stroke",cx:"5.5",cy:"18.5",r:"2.5"}),Object(f.jsx)("circle",{vectorEffect:"non-scaling-stroke",cx:"12",cy:"12",r:"2.5"}),Object(f.jsx)("circle",{vectorEffect:"non-scaling-stroke",cx:"18.5",cy:"10",r:"2.5"}),Object(f.jsx)("circle",{vectorEffect:"non-scaling-stroke",cx:"17.5",cy:"16.5",r:"2.5"})]}),"Multidot"),Jr=Hr()(Object(f.jsx)(i.a.Fragment,{children:Object(f.jsx)("path",{d:" M 5.932 4.519 C 5.976 4.353 6 4.179 6 4 C 6 2.896 5.104 2 4 2 C 2.896 2 2 2.896 2 4 L 2 4 L 2 4 L 2 4 L 2 4 C 2 4.74 2.402 5.386 3 5.732 L 3 18.268 C 2.402 18.614 2 19.26 2 20 L 2 20 L 2 20 L 2 20 L 2 20 C 2 21.104 2.896 22 4 22 C 4.74 22 5.386 21.598 5.732 21 L 18.268 21 L 18.268 21 C 18.614 21.598 19.26 22 20 22 C 21.104 22 22 21.104 22 20 C 22 19.26 21.598 18.614 21 18.268 L 21 9.732 L 21 9.732 C 21.598 9.386 22 8.74 22 8 C 22 6.896 21.104 6 20 6 C 18.937 6 18.067 6.831 18.004 7.878 L 13.1 10.33 C 12.784 10.121 12.406 10 12 10 C 11.822 10 11.65 10.023 11.486 10.067 L 5.932 4.519 Z  M 5 18.268 C 5.303 18.444 5.556 18.697 5.732 19 L 18.268 19 C 18.444 18.697 18.697 18.444 19 18.268 L 19 9.732 C 18.966 9.712 18.933 9.692 18.9 9.67 L 13.996 12.122 C 13.933 13.169 13.063 14 12 14 C 10.896 14 10 13.104 10 12 L 10 12 C 10 11.822 10.023 11.649 10.067 11.485 L 5 6.41 L 5 18.268 Z ",fillRule:"evenodd"})}),"Polygon"),Xr=Hr()(Object(f.jsxs)(i.a.Fragment,{children:[Object(f.jsx)("circle",{vectorEffect:"non-scaling-stroke",cx:"4",cy:"13",r:"2"}),Object(f.jsx)("circle",{vectorEffect:"non-scaling-stroke",cx:"12",cy:"9",r:"2"}),Object(f.jsx)("circle",{vectorEffect:"non-scaling-stroke",cx:"20",cy:"13",r:"2"}),Object(f.jsx)("path",{d:" M 4.45 13.89 L 3.55 14.34 L 2.66 12.55 L 3.55 12.11 L 12 7.88 L 20.45 12.11 L 21.34 12.55 L 20.45 14.34 L 19.55 13.89 L 12 10.12 L 4.45 13.89 Z "})]}),"Polyline"),Kr=(Hr()(Object(f.jsxs)(i.a.Fragment,{children:[Object(f.jsx)("path",{d:"M22,2l0,20l-20,0l0,-20l20,0Zm-2,2l-16,0l0,16l16,0l0,-16Z"}),Object(f.jsx)("rect",{x:"5",y:"5",width:"4",height:"4"}),Object(f.jsx)("rect",{x:"15",y:"5",width:"4",height:"4"}),Object(f.jsx)("rect",{x:"5",y:"15",width:"4",height:"4"}),Object(f.jsx)("rect",{x:"10",y:"10",width:"1",height:"5"}),Object(f.jsx)("rect",{x:"11",y:"10",width:"6",height:"2"}),Object(f.jsx)("rect",{x:"11",y:"12",width:"2",height:"2"}),Object(f.jsx)("rect",{x:"13",y:"7",width:"1",height:"2"}),Object(f.jsx)("rect",{x:"14",y:"9",width:"1",height:"1"}),Object(f.jsx)("rect",{x:"8",y:"10",width:"1",height:"4"}),Object(f.jsx)("rect",{x:"7",y:"11",width:"1",height:"3"}),Object(f.jsx)("rect",{x:"9",y:"11",width:"1",height:"1"}),Object(f.jsx)("rect",{x:"10",y:"6",width:"2",height:"3"}),Object(f.jsx)("rect",{x:"12",y:"7",width:"1",height:"1"}),Object(f.jsx)("rect",{x:"15",y:"14",width:"2",height:"4"}),Object(f.jsx)("rect",{x:"14",y:"14",width:"1",height:"1"}),Object(f.jsx)("rect",{x:"17",y:"15",width:"2",height:"2"}),Object(f.jsx)("rect",{x:"11",y:"16",width:"1",height:"3"}),Object(f.jsx)("rect",{x:"12",y:"15",width:"2",height:"2"}),Object(f.jsx)("rect",{x:"10",y:"18",width:"1",height:"1"})]}),"QRCode"),function(){return Kr=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var o in t=arguments[a])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},Kr.apply(this,arguments)}),Qr=Hr()(Object(f.jsxs)(i.a.Fragment,{children:[Object(f.jsxs)("g",{children:[Object(f.jsx)("g",Kr({transform:"matrix(1,0,0,1,-1.77636e-15,3.97768)"},{children:Object(f.jsx)("rect",{x:"4",y:"4.022",width:"4",height:"3.978"})})),Object(f.jsx)("g",Kr({transform:"matrix(1,0,0,1,0,11.9777)"},{children:Object(f.jsx)("rect",{x:"4",y:"4.022",width:"4",height:"3.978"})})),Object(f.jsx)("g",Kr({transform:"matrix(1,0,0,1,8,4)"},{children:Object(f.jsx)("rect",{x:"4",y:"4.022",width:"4",height:"3.978"})})),Object(f.jsx)("g",Kr({transform:"matrix(1,0,0,1,8,12)"},{children:Object(f.jsx)("rect",{x:"4",y:"4.022",width:"4",height:"3.978"})})),Object(f.jsx)("g",Kr({transform:"matrix(1,0,0,1,4,-0.0223232)"},{children:Object(f.jsx)("rect",{x:"4",y:"4.022",width:"4",height:"3.978"})})),Object(f.jsx)("g",Kr({transform:"matrix(1,0,0,1,4,7.97768)"},{children:Object(f.jsx)("rect",{x:"4",y:"4.022",width:"4",height:"3.978"})})),Object(f.jsx)("g",Kr({transform:"matrix(1,0,0,1,12,0)"},{children:Object(f.jsx)("rect",{x:"4",y:"4.022",width:"4",height:"3.978"})})),Object(f.jsx)("g",Kr({transform:"matrix(1,0,0,1,12,8)"},{children:Object(f.jsx)("rect",{x:"4",y:"4.022",width:"4",height:"3.978"})}))]}),Object(f.jsxs)("g",Kr({id:"Raster"},{children:[Object(f.jsx)("path",{d:"M21,5.432C21,4.09 19.91,3 18.568,3L5.432,3C4.09,3 3,4.09 3,5.432L3,18.568C3,19.91 4.09,21 5.432,21L18.568,21C19.91,21 21,19.91 21,18.568L21,5.432Z",style:{fillOpacity:0}}),Object(f.jsx)("path",{d:"M22,5.432C22,3.538 20.462,2 18.568,2L5.432,2C3.538,2 2,3.538 2,5.432L2,18.568C2,20.462 3.538,22 5.432,22L18.568,22C20.462,22 22,20.462 22,18.568L22,5.432ZM20,5.432L20,18.568C20,19.358 19.358,20 18.568,20C18.568,20 5.432,20 5.432,20C4.642,20 4,19.358 4,18.568C4,18.568 4,5.432 4,5.432C4,4.642 4.642,4 5.432,4C5.432,4 18.568,4 18.568,4C19.358,4 20,4.642 20,5.432Z"})]}))]}),"Multidot"),Yr=a(359),eo=a.n(Yr),to=function(){return to=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var o in t=arguments[a])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},to.apply(this,arguments)},ao=Object(j.a)((function(){return{root:{}}})),ro=function(e){var t=e.layerType,a=e.iconProps,r=e.className,o=ao(),n=qr;switch(t){case A.ProjectTreeLayerTypes.POINT:n=qr;break;case A.ProjectTreeLayerTypes.LINE:n=Xr;break;case A.ProjectTreeLayerTypes.POLYGON:n=Jr;break;case A.ProjectTreeLayerTypes.RASTER:n=Qr;break;case A.ProjectTreeLayerTypes.FILE:n=nt.a;break;case A.ProjectTreeLayerTypes.REPORT:n=eo.a}return Object(f.jsx)(n,to({className:r||o.root},a))},oo=Hr()(Object(f.jsx)("path",{d:"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z"}),"Multidot"),no=Object(j.a)((function(e){return{leaf:{cursor:"context-menu",marginLeft:e.spacing(2)},active:{fontWeight:"bold"},treeLeafLabel:{display:"flex"},innerLabel:{flexGrow:0},spacer:{flexGrow:1},metaIcon:{margin:e.spacing(.25),opacity:.2,fontSize:e.spacing(2),lineHeight:"1rem"},loadingSpinner:{color:e.palette.text.secondary},tileStatus:{flexGrow:0,fontStyle:"italic"},leafQUEUED:{color:"#999999",fontStyle:"italic"},leafNO_GEOMETRIES:{color:"#666666"},leafCREATING:{color:"orange"},leafTILING_ERROR:{color:"red",fontStyle:"italic"},leafTIMEOUT:{color:"#999999",fontStyle:"italic"},leafFETCH_ERROR:{color:"red",fontStyle:"italic"},leafNOT_FOUND:{color:"red",fontStyle:"italic"},leafINDEX_NOT_FOUND:{color:"red",fontStyle:"italic"},leafLAYER_NOT_FOUND:{color:"red",fontStyle:"italic"},leafUNKNOWN:{color:e.palette.text.secondary,fontStyle:"italic"},leafFETCHING:{color:e.palette.text.secondary,fontStyle:"italic"},leafSUCCESS:{}}})),io=function(e){var t=e.id,a=e.layerType,r=e.label,o=e.active,n=e.hidden,i=e.searchText,l=e.tilesState,s=e.handleContext,c=e.handleClick,p=e.handleDoubleClick,m=no(),u=null;if(A.ProjectTreeLayerTileTypes.indexOf(a)>-1||a===A.ProjectTreeLayerTypes.REPORT)switch(l){case A.TilingStatus.SUCCESS:break;case A.TilingStatus.QUEUED:u="Queued for tiling...";break;case A.TilingStatus.CREATING:u="Building tiles...";break;case A.TilingStatus.TILING_ERROR:u="Tiling error";break;case A.TilingStatus.TIMEOUT:u="Tile timeout";break;case A.TilingStatus.INDEX_NOT_FOUND:u="Missing tiles";break;case A.TilingStatus.NO_GEOMETRIES:u="Empty geometry";break;case A.TilingStatus.LAYER_NOT_FOUND:u="Layer missing";break;case A.TilingStatus.FETCH_ERROR:u="Fetch error";break;case A.TilingStatus.UNKNOWN:case A.TilingStatus.FETCHING:u=Object(f.jsx)(Ae.a,{className:m.loadingSpinner,color:"inherit",thickness:3,size:15})}return Object(f.jsx)(mt.a,{nodeId:"l-".concat(t),className:Object(et.a)(m.leaf,l&&m["leaf".concat(l)]),hidden:n,onClick:function(){return c(t)},onDoubleClick:function(){return p(t)},label:Object(f.jsxs)("div",{className:m.treeLeafLabel,children:[Object(f.jsx)(w.a,{variant:"body2",color:"inherit",className:Object(et.a)(m.innerLabel,o&&m.active),children:Object(f.jsx)(Vr,{text:r,query:i})}),Object(f.jsx)("div",{className:m.spacer}),u&&Object(f.jsx)(w.a,{variant:"caption",color:"inherit",className:Object(et.a)(m.innerLabel,o&&m.active),children:u})]}),onContextMenu:function(e){e.preventDefault(),s(t,e.clientX-2,e.clientY-4)},icon:Object(f.jsx)(ro,{layerType:a})})},lo=Object(j.a)((function(e){return{branch:{marginTop:e.spacing(.5)},iconContainer:{width:e.spacing(4)},label:{}}})),so=function(e){var t=e.id,a=e.hidden,r=e.label,o=e.searchText,n=e.children,i=lo();return Object(f.jsx)(mt.a,{nodeId:"b-".concat(t),className:Object(et.a)(i.branch),classes:{label:i.label,iconContainer:i.iconContainer},onDoubleClick:function(e){e.preventDefault(),e.stopPropagation()},onContextMenu:function(e){e.preventDefault(),e.stopPropagation()},hidden:a,label:Object(f.jsx)(w.a,{variant:"body1",children:Object(f.jsx)(Vr,{text:r,query:o})}),children:n})},co=a(712),po=a(362),mo=a.n(po),uo=a(361),go=a.n(uo),yo=a(360),ho=a.n(yo),bo=Object(j.a)((function(e){return{container:{height:"100%",width:"100%",display:"flex",flexDirection:"column"},folderIcon:{color:e.palette.secondary.main},tree:{flexGrow:1,overflow:"scroll",paddingBottom:e.spacing(5)},searchBox:{flexGrow:0,padding:e.spacing(.5)},searchBoxInput:{padding:e.spacing(.75,.5)}}})),fo=function(e){var t=e.lyrInfoOpen,a=e.setSearchText,r=e.expanded,o=e.ctxMenu,n=e.lyrInfo,i=e.selected,l=e.setExpanded,s=e.setSelected,c=e.children,p=bo(),m=Object(Tt.debounce)((function(e){return a(e)}),100);return Object(f.jsx)(Er,{open:t,split:"horizontal",primary:"first",defaultSize:"60%",maxSize:"80%",minSize:"30%",child1:Object(f.jsxs)("div",{className:p.container,children:[Object(f.jsx)(U.a,{fullWidth:!0,className:p.searchBox,placeholder:"Filter Project Layers...",variant:"outlined",onChange:function(e){m(e.target.value.toLowerCase().trim())},InputProps:{classes:{input:p.searchBoxInput},startAdornment:Object(f.jsx)(co.a,{position:"start",children:Object(f.jsx)(ho.a,{})})}}),Object(f.jsx)(it.a,{className:p.tree,defaultCollapseIcon:Object(f.jsxs)(f.Fragment,{children:[Object(f.jsx)(st.a,{}),Object(f.jsx)(go.a,{className:p.folderIcon})]}),defaultExpandIcon:Object(f.jsxs)(f.Fragment,{children:[Object(f.jsx)(pt.a,{}),Object(f.jsx)(mo.a,{className:p.folderIcon})]}),onNodeToggle:function(e,t){l(t)},onNodeSelect:function(e,t){s(Array.isArray(t)?t:[t])},selected:i,expanded:r,children:c}),o]}),child2:n||Object(f.jsx)("div",{})})},xo=Object(j.a)((function(e){return{root:{},item:{},menuItemIcon:{marginRight:e.spacing(1)},error:{color:e.palette.error.main}}})),wo=function(e){var t=e.open,a=e.position,r=e.onClose,o=e.menuItems,n=xo();return Object(f.jsx)(z.a,{keepMounted:!0,open:t,onClose:r,anchorReference:"anchorPosition",anchorPosition:a,className:n.root,children:o.map((function(e,t){var a=e.label,r=e.Icon,o=e.handleClick,i=e.disabled,l=e.error;return Object(f.jsxs)(S.a,{onClick:o,disabled:i,className:Object(et.a)(n.item,l&&n.error),children:[r&&Object(f.jsx)(r,{className:n.menuItemIcon,color:"inherit"}),a]},"ctxMenuIt-".concat(t))}))})},jo=function(){var e=Object(Yt.g)((function(e){var t=e.snapshot,a=e.set;return function(){var e=Object(m.a)(Object(c.a)().mark((function e(r){var o,n,i;return Object(c.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.getPromise(wr);case 2:return o=e.sent,e.next=5,t.getPromise(xr);case 5:if(n=e.sent,!o||!r){e.next=12;break}return i=ia(r,o.width,o.height),a(xr,Object(p.a)(Object(p.a)({},n),i)),e.abrupt("return",!0);case 12:return e.abrupt("return",!1);case 13:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()}));return e},ko=a(129),vo=a.n(ko),Oo=a(365),So=a.n(Oo),zo=a(364),_o=a.n(zo),To=a(167),Co=a.n(To),Po=a(363),Lo=a.n(Po),Io=a(366),Ro=a.n(Io),No=function(e){var t,a=e.ctxState,r=e.onClose,o=e.downloadFile,n=Object(Yt.i)(hr(a.leafId)),i=Object(Yt.k)(Ga),l=Object(Yt.k)($a),s=Wr(),c=s.addLayer,p=s.removeLayer,m=jo(),u=[];n.leaf.layerType===A.ProjectTreeLayerTypes.REPORT?n.tileStatus===A.TilingStatus.FETCHING||n.tileStatus===A.TilingStatus.QUEUED?u.push({label:"Report queued for upload...",Icon:Co.a,disabled:!0}):u.push({label:"Open Report",Icon:Lo.a,disabled:!(null!==(t=n.tiles)&&void 0!==t&&t.url&&n.tileStatus===A.TilingStatus.SUCCESS),handleClick:function(){var e,t=window.open((null===(e=n.tiles)||void 0===e?void 0:e.url)+"index.html","_blank","noopener,noreferrer");t&&(t.opener=null),r()}}):n.leaf.layerType===A.ProjectTreeLayerTypes.FILE?u.push({label:"Download file",Icon:Ue.a,handleClick:function(){n.leaf.layerPath&&o(n.leaf.layerPath),r()}}):n.tileStatus===A.TilingStatus.FETCHING||n.symbologyStatus===A.SymbologyStatus.FETCHING?u.push({label:"Loading tile data...",Icon:Co.a,disabled:!0}):(n.tileStatus===A.TilingStatus.SUCCESS?n.legendActive?u.push({label:"Remove from map",Icon:_o.a,handleClick:function(){p(n.leaf.id),r()}},{label:"Zoom layer extents",Icon:vo.a,handleClick:function(){var e;m(null===(e=n.tiles)||void 0===e?void 0:e.bounds),r()}}):!n.legendActive&&n.renderable&&u.push({label:"Add to map",Icon:So.a,handleClick:function(){c(n.leaf.id),r()}},{label:"Zoom layer extents (add to map first)",Icon:vo.a,disabled:!0}):n.tileStatus===A.TilingStatus.QUEUED?u.push({label:"Queued for tiling...",Icon:Co.a,disabled:!0}):n.tileStatus===A.TilingStatus.NOT_APPLICABLE?u.push({label:"Tiling is not applicable to this layer",Icon:ft.a,disabled:!0}):n.tileStatus===A.TilingStatus.NO_GEOMETRIES?u.push({label:"No Geometries were found",Icon:ft.a,disabled:!0}):n.tileStatus===A.TilingStatus.CREATING?u.push({label:"Currently building tiles...",Icon:Co.a,disabled:!0}):n.tileStatus===A.TilingStatus.TILING_ERROR?u.push({label:"Tiles did not build",Icon:ft.a,disabled:!0,error:!0}):n.tileStatus===A.TilingStatus.TIMEOUT?u.push({label:"Tiling timed out",Icon:ft.a,disabled:!0,error:!0}):n.tileStatus===A.TilingStatus.INDEX_NOT_FOUND?u.push({label:"Error fetching tile info",Icon:ft.a,disabled:!0,error:!0}):n.tileStatus===A.TilingStatus.LAYER_NOT_FOUND?u.push({label:"The original GIS layer is missing",Icon:ft.a,disabled:!0,error:!0}):n.tileStatus===A.TilingStatus.FETCH_ERROR&&u.push({label:"Error fetching tile info",Icon:ft.a,disabled:!0,error:!0}),u.push({label:"Layer Information",Icon:Ro.a,handleClick:function(){i(a.leafId),l(!0),r()}}));return Object(f.jsx)(wo,{open:Boolean(a),position:a.position,onClose:r,menuItems:u})},Eo=a(714),Ao=a(715),Do=a(717),Uo=a(713),Mo=a(716),Bo=a(55),Fo=Object(j.a)((function(e){return{root:{padding:e.spacing(1)},table:{},section:{marginBottom:e.spacing(3)},sectionHeader:{borderBottom:"1px solid"},metaKey:{fontWeight:"bold"},metaValue:{color:e.palette.text.secondary,overflowWrap:"anywhere",textAlign:"left"}}})),Wo={datecreated:function(e){var t=Bo.dates.HTML5InputToTimestamp(e);return t>0?"".concat(Bo.dates.formatDate(t,"lll")," (").concat(Bo.dates.formatDateAgo(t),")"):"unknown"}},Go=function(e,t){var a=e.toLowerCase();return Object.keys(Wo).indexOf(a)>-1?Wo[a](t):t&&t.match(/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/)?Object(f.jsx)(ie.a,{href:t,target:"_blank",children:t}):t},$o=function(e){var t=e.title,a=e.meta,r=Fo();return 0===Object.keys(a).length?null:Object(f.jsxs)("div",{className:r.section,children:[Object(f.jsx)(w.a,{variant:"subtitle1",className:r.sectionHeader,children:t}),Object(f.jsx)(Uo.a,{children:Object(f.jsx)(Eo.a,{className:r.table,size:"small","aria-label":"a dense table",children:Object(f.jsx)(Ao.a,{children:Object.keys(a).map((function(e){return Object(f.jsxs)(Mo.a,{children:[Object(f.jsx)(Do.a,{component:"th",scope:"row",className:r.metaKey,children:e}),Object(f.jsx)(Do.a,{align:"right",className:r.metaValue,children:Go(e,a[e])})]},e)}))})})})]})},Vo=["_rs_lyr_origin_url"],Zo=Object(j.a)((function(e){return{root:{padding:e.spacing(1)},minimal:{},whNote:{padding:e.spacing(2,1)}}}));var Ho=function(e){var t=e.leaf,a=e.minimal,r=Zo(),o=t.meta||{},n=function(e){var t=Object.keys(e).filter((function(e){return Vo.indexOf(e)<0})),a=function(a){return t.filter((function(e){return 0===e.indexOf(a)})).reduce((function(t,r){return Object(p.a)(Object(p.a)({},t),{},Object(oa.a)({},r.replace(a,""),e[r]))}),{})};return{upstreamWarehouse:a("_rs_wh_"),upstreamProject:a("_rs_prj_"),upstreamLayer:a("_rs_lyr_"),Layer:t.filter((function(e){return 0!==e.indexOf("_rs")})).reduce((function(t,a){return Object(p.a)(Object(p.a)({},t),{},Object(oa.a)({},a,e[a]))}),{})}}(o);return Object(f.jsxs)(He.a,{className:a?r.minimal:r.root,children:[Object.keys(n.Layer).length>0&&Object(f.jsx)($o,{title:"Layer Metadata",meta:n.Layer}),!a&&Object.keys(n.upstreamWarehouse).length>0&&Object(f.jsxs)("div",{className:r.whNote,children:[Object(f.jsxs)(w.a,{variant:"caption",component:"div",children:["This layer was imported from a ",o._rs_prj_projType," project in the Riverscapes warehouse. You can visit the original project using the button below."]}),Object(f.jsx)(Ze,{title:"Original ".concat(o._rs_prj_projType," Project"),href:"".concat(_a,"#/").concat(o._rs_wh_program,"/").concat(o._rs_wh_id)})]}),Object.keys(n.upstreamProject).length>0&&Object(f.jsx)($o,{title:"Original Project Metadata",meta:n.upstreamProject}),Object.keys(n.upstreamLayer).length>0&&Object(f.jsx)($o,{title:"Original Layer Metadata",meta:n.upstreamLayer}),Object(f.jsx)($o,{title:"Other",meta:{Symbology:t.symbology||"None","Layer Name":t.layerName||"None","Layer Id":t.layerId||"None","Default Transparency":"".concat(t.transparency||"None")}})]})},qo=a(203),Jo=a.n(qo),Xo=Object(j.a)((function(e){return{root:{padding:e.spacing(1)},sectionHeader:{borderBottom:"1px solid"},table:{},metaKey:{fontWeight:"bold"},metaValue:{color:e.palette.text.secondary}}})),Ko=function(e){var t,a,r,o,n=e.tiles,i=Xo(),l={Status:n.status,Error:n.error,Started:n?"".concat(Bo.dates.formatDate(n.started,"lll")," (").concat(Bo.dates.formatDateAgo(n.started),")"):"unknown","Last status":n?"".concat(Bo.dates.formatDate(n.lastStatus,"lll")," (").concat(Bo.dates.formatDateAgo(n.lastStatus),")"):"unknown","Creation time":n?"".concat(((n.duration||0)/60).toFixed(0)," minutes"):"unknown","Original Size":n&&n.originFile?Jo()(n.originFile.size).format("0.0 b"):"unknown",Files:n&&n.numFiles?Jo()(n.numFiles).format("0,0"):"unknown","Relative path":(null===(t=n.rsLayer)||void 0===t?void 0:t.path)||"unknown","Physical path":n?null===(a=n.originFile)||void 0===a?void 0:a.key:"unknown","Modified (origin)":n?"".concat(Bo.dates.formatDate(null===(r=n.originFile)||void 0===r?void 0:r.lastModified,"lll")," (").concat(Bo.dates.formatDateAgo(null===(o=n.originFile)||void 0===o?void 0:o.lastModified),")"):"unknown"};return Object(f.jsx)(He.a,{className:i.root,children:Object(f.jsx)($o,{title:"Webtile information",meta:l})})},Qo=Object(j.a)((function(e){return{root:{height:"100%",overflow:"hidden",display:"flex",flexDirection:"column"},toolbar:{flex:"0 0 ",padding:e.spacing(0,1),minHeight:e.spacing(6),background:e.palette.primary.dark,color:e.palette.primary.contrastText},spacer:{flexGrow:1},layerTitle:{},layerIcon:{},layerMeta:{flexGrow:1,overflowY:"scroll",userSelect:"text","& *":{userSelect:"text"}},typeContainer:{},closeButton:{}}})),Yo=function(e){var t=e.leaf,a=e.tiles,r=e.handleClose,o=Qo();return Object(f.jsxs)("div",{className:o.root,children:[Object(f.jsxs)(k.a,{className:o.toolbar,children:[Object(f.jsx)(re.a,{title:"This is a ".concat(t.layerType," layer"),children:Object(f.jsx)(R.a,{edge:"start",className:o.layerIcon,color:"inherit","aria-label":"menu",children:Object(f.jsx)(ro,{layerType:t.layerType})})}),Object(f.jsx)(w.a,{variant:"body2",className:o.layerTitle,children:t.label}),Object(f.jsx)("div",{className:o.spacer}),Object(f.jsx)(R.a,{edge:"start",className:o.closeButton,color:"inherit","aria-label":"menu",onClick:r,children:Object(f.jsx)(F.a,{})})]}),Object(f.jsxs)("div",{className:o.layerMeta,children:[t&&Object(f.jsx)(Ho,{leaf:t}),a&&Object(f.jsx)(Ko,{tiles:a})]})]})},en=function(e){var t=e.leafID,a=e.handleClose,r=Object(Yt.i)(hr(t));return Object(f.jsx)(Yo,{leaf:r.leaf,tiles:r.tiles,handleClose:a})},tn=function e(t){var a=t.branchId,r=t.depth,o=t.downloadFile,n=Object(Yt.i)(Qa(a)),i=Object(Yt.i)(Fa);if(!n||!n.branch)return null;var l=null===n||void 0===n?void 0:n.branch.children.branches.map((function(t,a){return Object(f.jsx)(e,{downloadFile:o,branchId:t,depth:r+1},"".concat(null===n||void 0===n?void 0:n.branch.branch.label,"-").concat(t,"-").concat(a))})).filter((function(e){return e})),s=null===n||void 0===n?void 0:n.branch.children.leaves.map((function(e,t){return Object(f.jsx)(an,{downloadFile:o,leafId:e,depth:r+1},"".concat(null===n||void 0===n?void 0:n.branch.branch.label,"-").concat(e,"-").concat(t))})).filter((function(e){return e}));return 0===s.length&&0===l.length?null:Object(f.jsx)(so,{id:a,label:null===n||void 0===n?void 0:n.branch.branch.label,hidden:null===n||void 0===n?void 0:n.hidden,searchText:i,children:[].concat(Object(ea.a)(l),Object(ea.a)(s))})},an=function(e){var t=e.leafId,a=e.downloadFile,r=Object(Yt.i)(Ja(t)),n=Object(Yt.i)(Fa),i=Object(Yt.k)(Ya),l=Object(Yt.k)(Ga),s=Wr().toggleLayer;if(!r||!r.leaf||!r.leaf.nodeExists)return null;var c=r.leaf,p=c.id,m=c.layerType,u=c.label;return Object(f.jsx)(io,{id:p,layerType:m,label:u,active:r.active,hidden:r.hidden,tilesState:r.tilesState,searchText:n,handleClick:l,handleDoubleClick:function(){if(o.event("webrave","double_click"),r.leaf.layerType===A.ProjectTreeLayerTypes.REPORT&&r.renderable){var e=window.open(r.reportUrl,"_blank","noopener,noreferrer");e&&(e.opener=null)}else r.leaf.layerType===A.ProjectTreeLayerTypes.FILE?r.leaf.layerPath&&a(r.leaf.layerPath):r.renderable&&s(r.leaf.id)},handleContext:function(e,t,a){o.event("webrave","open_context_menu"),i({leafId:e,position:{left:t,top:a}})}})},rn=function(e){var t=e.downloadFile,a=Object(Yt.k)(Fa),r=Object(Yt.i)(Xa),o=Object(Yt.h)(er),n=Object(u.a)(o,2),i=n[0],l=n[1],s=Object(Yt.h)(Za),c=Object(u.a)(s,2),p=c[0],m=c[1],d=Object(Yt.h)(Ya),g=Object(u.a)(d,2),h=g[0],b=g[1],x=Object(Yt.i)(Ga),w=Object(Yt.i)(ar),j=Object(Yt.i)(qa),k=Object(Yt.h)($a),v=Object(u.a)(k,2),O=v[0],S=v[1],z=j.branches.length>0?w:i,_=j.branches.length>0?function(){y.a.debug("collapsing turned off")}:l,T=O&&null!==x?Object(f.jsx)(en,{leafID:x,handleClose:function(){return S(!1)}}):null,C=h&&Object(f.jsx)(No,{ctxState:h,onClose:function(){return b(null)},downloadFile:t}),P=null!==r?Object(f.jsx)(tn,{branchId:r,depth:0,downloadFile:t}):Object(f.jsx)("div",{});return Object(f.jsx)(fo,{lyrInfoOpen:O,setSearchText:a,expanded:z,ctxMenu:C,lyrInfo:T,selected:p,setExpanded:_,setSelected:function(e){Object(Tt.isEqual)(e,p)||m(e)},children:P})},on=function(e){var t=e.layerPath,a=Object(Yt.j)(sr(t)),r=Object(Yt.g)((function(e){var a=e.snapshot,r=e.set;return Object(m.a)(Object(c.a)().mark((function e(){var o,n,i,l,s,p,m,u;return Object(c.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("hasValue"===(o=a.getLoadable(sr(t))).state){e.next=3;break}return e.abrupt("return");case 3:return n=o.contents,e.next=6,a.getPromise(ir(t));case 6:return i=e.sent,e.next=9,a.getPromise(lr(t));case 9:return l=e.sent,e.next=12,a.getPromise(zr);case 12:return s=e.sent,e.next=15,a.getPromise(_r);case 15:p=e.sent,n.status===A.TilingStatus.FETCH_ERROR?l<5&&setTimeout((function(){return r(lr(t),l+1)}),1e3*Ca.retryDelayS):n.status===A.TilingStatus.QUEUED||n.status===A.TilingStatus.UNKNOWN||n.status===A.TilingStatus.CREATING?setTimeout((function(){return r(ir(t),i+1)}),1e3*Ca.refreshDelayS):n.status===A.TilingStatus.SUCCESS&&(m=la(Ca.worldBounds,s,n.bounds||null),u=ca(p,[n.minZoom,n.maxZoom]),Object(Tt.isEqual)(s,m)||r(zr,m),Object(Tt.isEqual)(p,u)||r(_r,u));case 17:case"end":return e.stop()}}),e)})))}));return Object(n.useEffect)((function(){r()}),[a]),null},nn=a(731),ln=a(681),sn=a(724),cn=Object(j.a)((function(){return{root:{}}})),pn="custom",mn=function(e){var t=e.activeView,a=e.defaultView,r=e.projectViews,o=e.handleChange,i=cn(),l=null===t?pn:t,s=Object(n.useMemo)((function(){if(!r||0===r.length)return[Object(f.jsx)(S.a,{value:"custom",disabled:!0,children:Object(f.jsx)(w.a,{variant:"subtitle1",color:"textSecondary",children:Object(f.jsx)("em",{children:"No custom views"})})},pn)];var e=r.map((function(e,t){var r=e.id===a?"(default)":"";return Object(f.jsxs)(S.a,{value:e.id,children:[e.name," ",r]},"view-".concat(t))}))||[];return[].concat(Object(ea.a)(e),[null===t&&Object(f.jsx)(S.a,{value:"custom",children:Object(f.jsx)(w.a,{variant:"subtitle1",color:"textSecondary",children:Object(f.jsx)("em",{children:"Custom View"})})},pn)])}),[r,t]);return Object(f.jsxs)(ln.a,{className:i.root,fullWidth:!0,size:"small",children:[Object(f.jsx)(nn.a,{htmlFor:"grouped-native-select",children:"Curated Views"}),Object(f.jsx)(sn.a,{id:"view",value:l,disabled:!r||0===r.length,variant:"filled",onChange:function(e){return e.target.value!==pn&&o(e.target.value)},children:s})]})},un=Object(j.a)((function(e){return{root:{},menuIcon:{marginRight:e.spacing(1)},menuItem:{display:"flex"}}})),dn=function(e){var t=e.baseLayer,a=e.baseLayers,r=e.setBaseLayer,o=un(),n=a.map((function(e,t){var a=e.Icon;return Object(f.jsxs)(S.a,{value:e.id,className:o.menuItem,children:[Object(f.jsx)(a,{className:o.menuIcon}),Object(f.jsx)(w.a,{children:e.title})]},"view-".concat(t))}));return Object(f.jsxs)(ln.a,{className:o.root,fullWidth:!0,size:"small",children:[Object(f.jsx)(nn.a,{children:"Basemap"}),Object(f.jsx)(sn.a,{id:"baselayer",value:t.id,variant:"filled",classes:{selectMenu:o.menuItem},onChange:function(e){var t=a.find((function(t){return t.id===e.target.value}));t&&r(t)},children:n})]})},gn=function(e){var t=e.error;return Object(f.jsx)(w.a,{color:"error",children:t||" "})},yn=Object(j.a)((function(e){return{root:{zIndex:1e3,padding:e.spacing(0),border:"1px solid #EEEEEE",borderRadius:5,position:"absolute",background:"white",width:270,maxHeight:"90%",overflow:"hidden",boxShadow:"3px 3px 3px #00000066",top:15,right:15,display:"flex",flexDirection:"column"},subheaders:{background:"white"},legendList:{height:"100%",flex:"1 1",overflow:"scroll"}}})),hn=function(e){var t=e.views,a=e.defaultView,r=e.children,o=e.baseLayer,n=e.baseLayers,i=e.setBaseLayer,l=e.error,s=e.viewId,c=e.setViewId,p=yn();return Object(f.jsxs)("div",{className:p.root,children:[Object(f.jsx)(dn,{baseLayer:o,baseLayers:n,setBaseLayer:i}),Object(f.jsx)(mn,{activeView:s,defaultView:a,handleChange:c,projectViews:t}),Object(f.jsx)(Je.a,{dense:!0,disablePadding:!0,className:p.legendList,children:r}),Object(f.jsx)(gn,{error:l})]})},bn=a(719),fn=Object(j.a)((function(e){return{root:{flexDirection:"column",paddingLeft:e.spacing(5)},tooltip:{display:"flex","&>div":{marginRight:e.spacing(1)}},row:{width:"100%",display:"flex"},colorBox:{flexGrow:0,flexShrink:0,border:"1px solid #eaeaea",overflow:"hidden",color:"#FFFFFF00",width:e.spacing(2),height:e.spacing(2)},value:{color:e.palette.text.secondary,paddingLeft:e.spacing(1),whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"}}})),xn=function(e){var t=e.max,a=e.min,r=e.rampType,o=e.legend,n=fn(),i=function(e,t,a,r){var o=[];o=t&&a&&r===A.RampType.INTERPOLATED?e.map((function(e){var r=Object(u.a)(e,2),o=r[0],n=r[1],i=n.match(/^([0-9.]+)%$/);if(i){var l=parseFloat(i[1]);return[o,(a+(t-a)*l/100).toFixed(2)]}return[o,n]})):Object(ea.a)(e);var n=o.reduce((function(e,t){return Object(p.a)(Object(p.a)({},e),{},Object(oa.a)({},"".concat(t[0]).concat(t[1]),t))}),{});return Object.values(n)}(o,t,a,r);return Object(f.jsx)(Ke.a,{divider:!0,dense:!0,disableGutters:!0,className:n.root,children:i.map((function(e,t){return Object(f.jsxs)("div",{className:n.row,children:[Object(f.jsx)("div",{className:n.colorBox,style:{background:e[0]},children:"color"}),Object(f.jsx)(re.a,{enterDelay:2e3,title:Object(f.jsxs)("div",{className:n.tooltip,children:[Object(f.jsx)("div",{className:n.colorBox,style:{background:e[0]},children:"color"}),e[1]]}),children:Object(f.jsx)(w.a,{variant:"caption",component:"div",className:n.value,children:e[1]})})]},"cr-".concat(t))}))})};var wn=a(367),jn=a.n(wn),kn=a(718),vn=a(51),On=Object(j.a)((function(e){return{container:{},listItem:{paddingTop:0,paddingBottom:0,paddingLeft:0,paddingRight:26},listItemActive:{"& *":{cursor:"pointer"}},listItemAvatar:{minWidth:e.spacing(3.5)},expandIcon:{minWidth:e.spacing(1)},avatar:{width:e.spacing(3),height:e.spacing(3),"& svg":{height:"0.7em",width:"0.7em"}},expandIconButton:{padding:0,"& svg":{width:"0.7em",height:"0.7em"}},expandDisabled:{color:"rgba(0,0,0,0.05)!important"},textPrimary:{whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"},textSecondary:{whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"},secondary:{right:0},root:{marginTop:e.spacing(2)},heading:{marginTop:e.spacing(1)},loadingSpinner:{color:e.palette.text.secondary},layerItem:{display:"flex"},legendName:{flexGrow:1},deleteButtonHover:{},legendColor:{border:"1px solid black",width:"20px",display:"inline-block",height:"14px",marginRight:"5px"},deleteButton:{flexGrow:0,color:"#CCCCCC",padding:0,marginRight:0,"& < svg":{width:"0.8em",height:"0.8em"}},zoomButton:{flexGrow:0,color:"#CCCCCC",padding:0,marginRight:0,"& < svg":{width:"0.8em",height:"0.8em"}}}})),Sn=function(e){var t=e.label,a=e.leafId,r=e.loading,o=e.max,l=e.min,s=e.subLabel,c=e.fallbackColor,p=e.zoomLayerExtent,m=e.symbology,d=e.layerType,g=e.removeLayer,y=On(),h=Object(vn.a)(),b=Object(n.useState)(!0),x=Object(u.a)(b,2),j=x[0],k=x[1],v=Boolean(m&&m.legend&&m.legend.length>1),O=Boolean(m&&m.legend&&1===m.legend.length),S=h.palette.text.primary,z=h.palette.background.default;O&&null!==m&&void 0!==m&&m.legend?d===A.ProjectTreeLayerTypes.POLYGON||d===A.ProjectTreeLayerTypes.RASTER?(z=m.legend[0][0],S=h.palette.getContrastText(z)):(S=m.legend[0][0],z=h.palette.background.default):c&&(d===A.ProjectTreeLayerTypes.POLYGON||d===A.ProjectTreeLayerTypes.RASTER?(S=c[500],z=c[100]):(S=c[500],z=h.palette.background.default));var _=function(){return v?k(!j):void 0};return Object(f.jsxs)(i.a.Fragment,{children:[Object(f.jsxs)(Ke.a,{dense:!0,className:Object(et.a)(y.listItem,v&&y.listItemActive),children:[Object(f.jsx)(kn.a,{className:y.expandIcon,children:Object(f.jsx)(R.a,{size:"small",onClick:_,disabled:!v,classes:{root:y.expandIconButton,disabled:y.expandDisabled},children:v&&j?Object(f.jsx)(st.a,{}):Object(f.jsx)(pt.a,{})})}),Object(f.jsx)(Ye.a,{className:y.listItemAvatar,children:Object(f.jsx)(qe.a,{className:y.avatar,style:{background:z},onClick:_,children:Object(f.jsx)(ro,{layerType:d,iconProps:{style:{color:S}}})})}),Object(f.jsx)(re.a,{enterDelay:1500,title:Object(f.jsxs)(i.a.Fragment,{children:[Object(f.jsx)(w.a,{color:"inherit",children:t}),s&&Object(f.jsx)(w.a,{variant:"caption",children:s})]}),children:Object(f.jsx)(Qe.a,{primary:t,secondary:s,onClick:_,classes:{primary:y.textPrimary,secondary:y.textSecondary}})}),Object(f.jsxs)(bn.a,{className:y.secondary,children:[r&&Object(f.jsx)(Ae.a,{className:y.loadingSpinner,color:"inherit",thickness:3,size:15}),!r&&Object(f.jsxs)(f.Fragment,{children:[p&&Object(f.jsx)(re.a,{enterDelay:1500,title:"Zoom layer extents",children:Object(f.jsx)(R.a,{edge:"end",className:y.zoomButton,"aria-label":"zoomExtent",onClick:function(e){e.stopPropagation(),p()},children:Object(f.jsx)(vo.a,{})})}),Object(f.jsx)(re.a,{enterDelay:1500,title:"Remove map layer",children:Object(f.jsx)(R.a,{edge:"end",className:y.deleteButton,"aria-label":"delete",onClick:function(e){e.stopPropagation(),g(a)},children:Object(f.jsx)(jn.a,{})})})]})]})]}),v&&j&&Object(f.jsx)(xn,{max:o,min:l,rampType:null===m||void 0===m?void 0:m.rampType,legend:null===m||void 0===m?void 0:m.legend})]})},zn=a(144),_n=function(){var e=Object(Yt.i)(Ra),t=Object(Yt.h)(jr),a=Object(u.a)(t,2),r=a[0],i=a[1],l=Object(zn.b)().enqueueSnackbar,s=Object(Yt.i)(Ua),c=Object(Yt.h)(fr),p=Object(u.a)(c,2),m=p[0],d=p[1],g=Object(Yt.i)(Sr),y=Cr().setView;if(Object(n.useEffect)((function(){r&&r.length>0&&(l(r,{variant:"error",autoHideDuration:3e3}),i(""))}),[r]),!e)return null;var h=e.tree.views?e.tree.views:[],b=h.length>0&&e.tree.defaultView?e.tree.defaultView:"";return Object(f.jsx)(hn,{views:h,defaultView:b,baseLayer:m,baseLayers:Oa,setBaseLayer:function(e){o.event("webrave","set_base_layer",e.id),d(e)},viewId:g,setViewId:y,children:s.map((function(e,t){var a=e.id;return Object(f.jsx)(Tn,{lid:a},"lgdLyr-".concat(t))}))})},Tn=function(e){var t,a,r=e.lid,o=Object(Yt.i)(Va(r)),n=Object(Yt.i)(hr(r)),i=Object(Yt.i)(gr(r)),l=jo(),s=Wr().removeLayer,c=null===(t=n.tiles)||void 0===t||null===(a=t.rasterStats)||void 0===a?void 0:a.stats,p=o.id,m=o.layerType,u=o.label,d=void 0,g=void 0,h=void 0;if(c)try{var b,x;d=c.max||c.maximum||void 0,g=c.min||c.minimum||void 0,d&&d>0&&g&&g>0&&(h="min: ".concat(null===(b=g)||void 0===b?void 0:b.toFixed(2)," max: ").concat(null===(x=d)||void 0===x?void 0:x.toFixed(2)))}catch(w){y.a.error("Could not get stats using object: ".concat(JSON.stringify(c)))}return Object(f.jsx)(Sn,{leafId:p,layerType:m,symbology:n.symbology,max:d,min:g,label:u,subLabel:h,overZoomed:!0,zoomLayerExtent:function(){var e;return l(null===(e=n.tiles)||void 0===e?void 0:e.bounds)},fallbackColor:null!==i?La[i]:void 0,loading:n.tileStatus===A.TilingStatus.FETCHING||n.symbologyStatus===A.SymbologyStatus.FETCHING,removeLayer:s})},Cn=a(368),Pn=a.n(Cn),Ln=Object(j.a)((function(e){return{root:{},normalBG:{color:e.palette.primary.contrastText,background:e.palette.primary.light,"&:hover,&.focus":{color:e.palette.primary.contrastText,background:e.palette.primary.dark}},"@keyframes overzoomFade":{"0%":{backgroundColor:e.palette.warning.dark},"50%":{backgroundColor:e.palette.warning.light},"100%":{backgroundColor:e.palette.warning.dark}},normalButtons:{color:e.palette.primary.contrastText,background:e.palette.primary.dark},overZBG:{color:e.palette.warning.contrastText,background:e.palette.warning.main,"&:hover,&.focus":{color:e.palette.warning.contrastText,background:e.palette.warning.dark},animation:"$overzoomFade 2s infinite"},overZButtons:{color:e.palette.warning.contrastText,background:e.palette.warning.dark},labelIcon:{background:"transparent","&:hover,&.focus":{background:"transparent"}},warnText:{color:e.palette.warning.light},label:{display:"flex"},chipIcon:{height:e.spacing(2),width:e.spacing(2),fontSize:e.typography.caption.fontSize,padding:0,"& svg":{fontSize:e.typography.caption.fontSize}},coordsTxt:{marginRight:e.spacing(1),marginLeft:e.spacing(1)},avatar:{},expanded:{},helpIcon:{marginLeft:e.spacing(1)},overZoomed:{color:e.palette.warning.contrastText,background:e.palette.warning.main}}})),In=function(e){var t,a,r=e.className,o=e.viewport,i=e.overZoomed,l=e.onHelpClick,s=e.onCopyClick,c=Ln(),p=Object(n.useState)(!1),m=Object(u.a)(p,2),d=m[0],g=m[1],y={bg:i?c.overZBG:c.normalBG,btn:i?c.overZButtons:c.normalButtons},h=function(e){return function(t){t.preventDefault(),t.stopPropagation(),e&&e()}};return Object(f.jsx)(Xe.a,{size:"small",onClick:function(){return g(!d)},className:Object(et.a)(c.root,y.bg,r),clickable:!1,classes:{icon:Object(et.a)(y.bg,c.labelIcon),labelSmall:c.label},label:Object(f.jsxs)(f.Fragment,{children:[Object(f.jsx)(re.a,{title:Object(f.jsxs)(f.Fragment,{children:[Object(f.jsx)("div",{children:d?"Map zoom & coords":"Map zoom (click to expand)"}),i&&Object(f.jsx)("div",{className:c.warnText,children:"Warning: Map Zoom exceeds raster tile resolution"})]}),children:Object(f.jsxs)("span",{children:[d&&"Zoom: ",o.zoom?o.zoom.toFixed(1):"?",d&&Object(f.jsxs)("span",{className:c.coordsTxt,children:[" Center: ","( ",null===(t=o.longitude)||void 0===t?void 0:t.toFixed(5),", ",null===(a=o.latitude)||void 0===a?void 0:a.toFixed(5)," )"," "]})]})}),d&&Object(f.jsx)(re.a,{title:"Copy map coordinates to clipboard",children:Object(f.jsx)(R.a,{onMouseOver:h(),className:Object(et.a)(c.chipIcon,y.btn,c.helpIcon),onClick:h(s),children:Object(f.jsx)(oo,{})})}),i&&Object(f.jsx)(re.a,{title:"Click to learn more about this warning.",children:Object(f.jsx)(R.a,{onMouseOver:h(),className:Object(et.a)(c.chipIcon,y.btn,c.helpIcon),onClick:h(l),children:Object(f.jsx)(Pn.a,{})})})]})})},Rn=Object(j.a)((function(e){return{root:{},title:{margin:0,padding:e.spacing(2),background:e.palette.warning.main,color:e.palette.warning.contrastText},actions:{margin:0,padding:e.spacing(1)},content:{padding:e.spacing(2)},rasterImgsContainer:{display:"flex",width:"100%",overflow:"hidden"},rasterImgsContainerCol:{},rasterImgs:{width:"100%",height:"auto"},closeButton:{position:"absolute",right:e.spacing(1),top:e.spacing(1)}}})),Nn=function(e){var t=e.onClose,a=e.open,r=Rn();return Object(f.jsxs)(M.a,{"aria-labelledby":"customized-dialog-title",open:a,maxWidth:"sm",onClose:t,children:[Object(f.jsxs)($.a,{disableTypography:!0,className:r.title,children:[Object(f.jsx)(w.a,{variant:"h6",children:"Map Zoom exceeds raster tile resolution"}),Object(f.jsx)(R.a,{"aria-label":"close",className:r.closeButton,onClick:t,color:"inherit",children:Object(f.jsx)(F.a,{})})]}),Object(f.jsxs)(W.a,{dividers:!0,children:[Object(f.jsxs)(w.a,{paragraph:!0,children:["For a smoother web experience we've capped the maximum zoom level for rasters ","we serve on the web. As a result you may notice some rasters get a little blurry ","at higher zoom levels."]}),Object(f.jsxs)("div",{className:r.rasterImgsContainer,children:[Object(f.jsxs)("div",{className:r.rasterImgsContainerCol,children:[Object(f.jsx)(w.a,{variant:"h6",children:"Original"}),Object(f.jsx)("img",{src:"".concat(Ta,"/desktop_raster.png"),className:r.rasterImgs})]}),Object(f.jsxs)("div",{className:r.rasterImgsContainerCol,children:[Object(f.jsx)(w.a,{variant:"h6",children:"Web"}),Object(f.jsx)("img",{src:"".concat(Ta,"/web_raster.png"),className:r.rasterImgs})]})]}),Object(f.jsxs)(w.a,{paragraph:!0,children:["If you find that you need the extra clarity at high zoom levels please consider downloading this project from the ",'"Project Info" tab on the left.']}),Object(f.jsxs)(w.a,{paragraph:!0,children:["You can then use one of our ",Object(f.jsx)(ie.a,{href:"http://rave.riverscapes.net/",target:"_blank",children:"desktop plugins"})," (QRAVE for QGIS, ArcRAVE for ESRI ArcGIS) ","to view these datasets at their maximum resolution."]})]})]})},En=Object(j.a)((function(e){return{root:{position:"absolute",bottom:e.spacing(2),left:e.spacing(2)}}})),An=function(){var e=Object(n.useState)(!1),t=Object(u.a)(e,2),a=t[0],r=t[1],o=Object(zn.b)().enqueueSnackbar,i=En(),l=Object(Yt.i)(xr),s=Object(Yt.i)(Or).filter((function(e){return e.leaf.layerType===A.ProjectTreeLayerTypes.RASTER})).reduce((function(e,t){var a=t.tiles&&t.tiles.maxZoom&&t.tiles.maxZoom>0?t.tiles.maxZoom:100;return Math.min(a,e)}),100),c=Boolean(l&&l.zoom&&s&&l.zoom>s);return Object(f.jsxs)(f.Fragment,{children:[Object(f.jsx)(In,{className:i.root,viewport:l,onCopyClick:function(){var e=l.zoom,t=l.width,a=l.height,r=l.latitude,n=l.longitude,i=l.bearing,s=l.pitch;navigator.clipboard.writeText(JSON.stringify({zoom:e,width:t,height:a,latitude:r,longitude:n,bearing:i,pitch:s},null,2)),o("Coordinates copied to clipboard!",{variant:"info",autoHideDuration:1e3})},onHelpClick:function(){return r(!0)},overZoomed:c}),Object(f.jsx)(Nn,{open:a,onClose:function(){return r(!1)}})]})},Dn=function(){return Object(f.jsx)(b.b,{logoSVG:Object(f.jsx)(Ae.a,{size:"3rem",thickness:4}),status:Object(f.jsx)(w.a,{variant:"h5",component:"div",children:"Loading Map..."}),containerProps:{maxWidth:"xl",style:{position:"absolute",zIndex:1e3,top:0,left:0,width:"100%",height:"100%",background:"#FFFFFF33"}}})},Un=(a(538),{left:15,top:60}),Mn=Object(j.a)((function(e){return{"@global":{".mapboxgl-ctrl-bottom-left":{zIndex:"0 !important",position:"absolute",pointerEvents:"none",left:"initial",right:e.spacing(2),bottom:e.spacing(3)}},root:{marginLeft:e.spacing(1)},container:{display:"flex",height:"100%"},mapContainer:{position:"relative",background:"#CCCCCC",height:"100%",width:"100%","&>h1":{color:"#9999FF",position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)"}},drawerContents:{height:"100%",display:"flex"},drawerSpacer:{flex:"0 0 0%"},drawerSpacerOpen:{},dialogContainer:{alignItems:"left",justifyContent:"left"},loaderSpinner:{position:"absolute",bottom:10,right:10,color:e.palette.secondary.main},dialog:{position:"absolute",margin:0,left:"20px",top:"20px"},subheaders:{background:"white"},dummyText:{}}})),Bn=Ct.a.debounce((function(){return y.a.debug.apply(y.a,arguments)}),1500),Fn=function(e){var t=e.children,a=e.baseLayer,o=e.styleLoading,i=e.bounds,l=e.zoomBounds,s=Mn(),c=Object(Yt.h)(xr),m=Object(u.a)(c,2),d=m[0],g=m[1],h=Object(n.useState)(!1),b=Object(u.a)(h,2),x=b[0],w=b[1],j=Object(Yt.i)(zr),k=Object(Yt.k)(wr),v=Object(Yt.h)(kr),O=Object(u.a)(v,2),S=O[0],z=O[1],_=Object(n.useRef)();_.current=d;var T=Object(n.useCallback)((function(e){var t=e.target.isStyleLoaded();S!==t&&z(t)}),[S]),C=Object(n.useCallback)((function(e){var t=Object(p.a)(Object(p.a)({},_.current),e);l&&t.zoom&&(t.zoom>l[1]?t.zoom=l[1]:t.zoom<l[0]&&(t.zoom=l[0]));var a=function(e,t){var a=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!e&&t&&!0===a)return[(t[0]+t[2])/2,(t[1]+t[3])/2];if(!t||!e||Object(Tt.isUndefined)(e[0])||Object(Tt.isUndefined)(e[1]))return null;var r=[t[0]>e[0]?t[0]:t[2]<e[0]?t[2]:e[0],t[1]>e[1]?t[1]:t[3]<e[1]?t[3]:e[1]];return r[0]===e[0]&&r[1]===e[1]?null:a?[(t[0]+t[2])/2,(t[1]+t[3])/2]:r}([t.longitude,t.latitude],i||Ca.worldBounds,Boolean(j&&!x));Array.isArray(a)&&(t.longitude=a[0],t.latitude=a[1]),j&&!x&&w(!0),Bn("setViewport DEBOUNCED",{inV:e,outV:t,bounds:i,center:i&&!x}),g(t)}),[i,l,x,j]),P=Object(n.useMemo)((function(){return function(e){return Object(p.a)(Object(p.a)({},Pa),{},{sources:e.sources,layers:e.layers})}(a)}),[]);Object(n.useEffect)((function(){Bn("setViewport useEffect",{bounds:i,zoomBounds:l,boundsSet:x,rawBounds:j}),C(Object(p.a)({},_.current))}),[i,l,x,j]);var L=o&&Object(f.jsx)(Ae.a,{size:"2rem",thickness:6,className:s.loaderSpinner});return P&&i?Object(f.jsx)("div",{className:s.mapContainer,children:Object(f.jsxs)(na.d,Object(p.a)(Object(p.a)({},d),{},{width:"100%",height:"100%",minZoom:l[0]||4,maxZoom:l[1]||20,clickRadius:2,onLoad:T,onResize:function(e){var t=e.width,a=e.height;y.a.debug("resize map",t,a),k(t>0&&a>0?{width:t,height:a}:null)},mapStyle:P,onViewportChange:C,onError:function(e){(!e.error||!e.error.status||e.error.status<400||e.error.status>500)&&console.error("MAP ERROR",e)},mapboxApiAccessToken:r.mapConfig.mapBoxToken,children:[Object(f.jsx)(na.b,{style:Un}),L,t]}))}):Object(f.jsx)(Dn,{})},Wn=a(720),Gn=a(369),$n=a.n(Gn),Vn=a(370),Zn=a.n(Vn),Hn=Object(j.a)((function(e){return{toggleTree:{position:"absolute",top:e.spacing(1),left:e.spacing(1)},zoomExtent:{position:"absolute",top:e.spacing(1),left:e.spacing(7)}}})),qn=function(e){var t=e.drawerOpen,a=e.toggleDrawer,r=e.zoomExtents,o=e.bounds,n=Hn();return Object(f.jsxs)(f.Fragment,{children:[Object(f.jsx)(re.a,{title:"Toggle the tree sidebar",children:Object(f.jsx)(Wn.a,{color:"primary","aria-label":"add",onClick:a,size:"small",className:n.toggleTree,children:t?Object(f.jsx)($n.a,{}):Object(f.jsx)(Zn.a,{})})}),Object(f.jsx)(re.a,{title:o?"Zoom to active layer extent":"Cannot zoom to map extent. No bounding box found",children:Object(f.jsx)(Wn.a,{color:"secondary","aria-label":"zoomOut",onClick:function(){return r()},size:"small",disabled:!o,className:n.zoomExtent,children:Object(f.jsx)(vo.a,{})})})]})},Jn=function(){var e=Object(Yt.h)(Ea),t=Object(u.a)(e,2),a=t[0],r=t[1],n=jo(),i=Object(Yt.i)(vr);return Object(f.jsx)(qn,{drawerOpen:a,bounds:i,zoomExtents:function(){i&&n(i)},toggleDrawer:function(){o.event("webrave","set_map_drawer",a?"open":"closed"),r(!a)}},"treeToggleBtn")},Xn=function(){var e=i.a.useContext(na.a).map,t=Object(Yt.i)(fr),a=Object(Yt.i)(Or),r=Object(n.useRef)(e),o=Object(n.useState)({check:0,base:0,layers:0}),l=Object(u.a)(o,2),s=l[0],c=l[1];return Object(n.useEffect)((function(){if(r.current){var e=s.check,o=s.base,n=s.layers,i={check:e,base:o,layers:n};if(o>0){var l=function(e,t){if(!ha(e))return!1;y.a.debug("DEBUG::MM: changeBaseLayer",t.id);var a=Date.now(),r=e,o=[];Object.keys(t.sources).forEach((function(e){r.getSource(e)||(r=r.addSource(e,t.sources[e]))}));var n=null,i=0;t.layers.forEach((function(e){r.getLayer(e.id)||(r=r.addLayer(e,n),i++),o.push(e.id),n=e.id})),y.a.debug("DEBUG::MM: changeBaseLayer Added ".concat(i," background layers"));var l=0;return ba(r).filter((function(e){return 0===e.indexOf(ua.bgLayer)})).filter((function(e){return o.indexOf(e)<0})).forEach((function(e){l++,r=r.removeLayer(e)})),l>0&&y.a.debug("DEBUG::MM: changeBaseLayer Removed ".concat(l," unneeded background layers")),y.a.debug("DEBUG::MM: userLayerRecalc took ".concat(Date.now()-a," ms")),!0}(r.current,t);y.a.debug("MapLayers::changeBaseLayer: ".concat(l)),l?(i.base=0,i.check+=1):i.base+=1}if(n>0){var m=xa(r.current,a);y.a.debug("MapLayers::userLayerRecalc: ".concat(m)),m?(i.layers=0,i.check+=1):i.layers+=1}if(e>0){var u=function(e,t){if(!ha(e))return!1;var a=e,r=ba(a).reduce((function(e,t){return Object(p.a)(Object(p.a)({},e),{},Object(oa.a)({},t,a.getLayer(t).metadata))}),{}),o=t.map((function(e){var t=e.leaf;return"".concat(t.layerPath,"/").concat(t.symbology)})).reverse(),n=ba(a,ua.bgLayer);n.sort((function(e,t){return r[e].mIdx-r[t].mIdx}));var i=ba(a,ua.userContent);i.sort((function(e,t){var a=o.indexOf(r[e].mRef)-o.indexOf(r[t].mRef);return 0!==a?a:r[e].mIdx-r[t].mIdx}));var l=[].concat(Object(ea.a)(n),Object(ea.a)(i));l.reverse(),y.a.debug("DEBUG::MM: verifyLayerOrder",{have:ba(a).reverse(),need:l});var s=ba(a);return s.reverse(),l.forEach((function(e,t){if(t!==s.indexOf(e)){var r=0===t?null:l[t-1];y.a.debug("DEBUG::MM: Move Needed ".concat(e," to before ").concat(r)),a=a.moveLayer(e,r),(s=ba(a)).reverse()}})),!0}(r.current,a);y.a.debug("MapLayers::verifyLayerOrder: ".concat(u)),u?i.check=0:i.check+=1}Object(Tt.isEqual)(i,s)||setTimeout((function(){y.a.debug("MapLayers::setRefreshNeeded",s,i),c(i)}),500)}}),[s,t,a]),Object(n.useEffect)((function(){var e=setInterval((function(){c(Object(p.a)(Object(p.a)({},s),{},{check:s.check+1}))}),3e3);return function(){return clearInterval(e)}}),[]),Object(n.useEffect)((function(){c(Object(p.a)(Object(p.a)({},s),{},{base:s.base+1}))}),[t]),Object(n.useEffect)((function(){c(Object(p.a)(Object(p.a)({},s),{},{layers:s.layers+1}))}),[a]),null},Kn=function(){var e=jo(),t=Object(Yt.i)(Tr),a=Object(Yt.i)(kr),r=Object(Yt.i)(fr),o=Object(Yt.i)(vr),i=Object(n.useState)(!1),l=Object(u.a)(i,2),s=l[0],p=l[1];return Object(n.useEffect)((function(){var t=function(){var t=Object(m.a)(Object(c.a)().mark((function t(){var a;return Object(c.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(s||!o){t.next=6;break}return t.next=3,e(o);case 3:a=t.sent,y.a.info("MapConnect: Trying to center map the first time",a),a&&p(!0);case 6:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}();t()}),[o,s]),Object(f.jsxs)(zn.a,{maxSnack:3,dense:!0,preventDuplicate:!0,autoHideDuration:2e3,anchorOrigin:{vertical:"bottom",horizontal:"center"},children:[Object(f.jsx)(_n,{}),Object(f.jsx)(Fn,{baseLayer:r,zoomBounds:t.zoom,bounds:t.bounds,styleLoading:!a,children:[Object(f.jsx)(Jn,{},"toggleBtn"),Object(f.jsx)(Xn,{},"mapLayers")]}),Object(f.jsx)(An,{})]})},Qn=Object(j.a)((function(e){return{root:{padding:e.spacing(1),height:"100%",overflowY:"scroll",userSelect:"text","& *":{userSelect:"text"}},btnGroup:{width:"100%",display:"flex",justifyContent:"space-between","&>*":{flex:"0 0 calc(50% - 0.5em)"},margin:e.spacing(1,1,3,1)},divider:{marginTop:e.spacing(3)},footerLogo:{}}})),Yn=function(e){var t=e.project,a=e.downloadZipFile,r=e.pendingZips,o=Qn(),n={Title:t.name,Type:t.projType,"Warehouse ID":t.id,"Warehouse Tags":Array.isArray(t.tags)?t.tags.join(", "):"<None>","Project Created":"".concat(Bo.dates.formatDate(t.createdOn,"lll")," (").concat(Bo.dates.formatDateAgo(t.createdOn),")"),"Project Updated":"".concat(Bo.dates.formatDate(t.updatedOn,"lll")," (").concat(Bo.dates.formatDateAgo(t.updatedOn),")")},i=t&&r[t.id];return Object(f.jsxs)(He.a,{className:o.root,children:[Object(f.jsxs)(w.a,{variant:"h4",paragraph:!0,color:"textPrimary",children:[t.projType," Project"]}),Object(f.jsx)(O.a,{}),Object(f.jsxs)(w.a,{component:"div",paragraph:!0,children:["This project exists within the Riverscapes Data Warehouse. You can download this project and view it using free"," ",Object(f.jsx)("a",{href:"https://rave.riverscapes.net",target:"_blank",rel:"noreferrer",children:"RAVE plugins for ArcGIS and QGIS"}),"."]}),Object(f.jsxs)("div",{className:o.btnGroup,children:[Object(f.jsx)(Ze,{title:"Warehouse",href:"".concat(_a,"/#/").concat(t.program,"/").concat(t.id)}),Object(f.jsx)(Ge,{downloadZipFile:a,pendingSince:i,project:t,title:"Download"})]}),Object(f.jsx)($o,{title:"Project Information",meta:n}),Object(f.jsx)($o,{title:"Project Metadata",meta:t.meta}),Object(f.jsx)(O.a,{className:o.divider}),Object(f.jsx)("a",{href:"http://riverscapes.net",target:"_blank",rel:"noreferrer",children:Object(f.jsx)("img",{className:o.footerLogo,alt:"footer",src:"".concat("","/cc-watermarks-riverscapes_orig.png")})})]})},ei=function(){var e=Object(Yt.i)(Da),t=Object(Yt.g)((function(e){var t=e.snapshot,a=e.set;return function(){var e=Object(m.a)(Object(c.a)().mark((function e(r){var o,n,i,l,s;return Object(c.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.getPromise(dr);case 2:return o=e.sent,e.next=5,t.getPromise(gr(r));case 5:return n=e.sent,e.next=8,t.getPromise(hr(r));case 8:return i=e.sent,e.next=11,t.getPromise(yr);case 11:l=e.sent,s=!1,i.symbology&&i.symbology.status===A.SymbologyStatus.FOUND||(s=!0),s&&null===n?(a(dr,[].concat(Object(ea.a)(o),[l])),a(gr(r),l)):s||null===n||(a(dr,o.filter((function(e){return e===n}))),a(gr(r),null));case 15:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()}));Object(n.useEffect)((function(){var a=function(){var a=Object(m.a)(Object(c.a)().mark((function a(){var r;return Object(c.a)().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:r=0;case 1:if(!(r<e.length)){a.next=8;break}if(e[r].layerType===A.ProjectTreeLayerTypes.RASTER){a.next=5;break}return a.next=5,t(e[r].id);case 5:r++,a.next=1;break;case 8:case"end":return a.stop()}}),a)})));return function(){return a.apply(this,arguments)}}();a()}),[e])},ti=function(e){var t=e.history,a=e.auth,r=e.program,i=Object(Yt.i)(Ea),l=Object(Yt.i)(Ba),s=r&&Object.values(A.WarehouseRoleEnum).indexOf(r.role)>-1,c=Ut(a,r,!1,!0,(function(e){return e&&o.currentPageView("webRAVE/".concat(r.machineName,"/").concat(e.id)),Promise.resolve()})),p=c.project,m=c.loading,u=c.initialized,d=Rt(a,r),g=d.downloadZipFile,y=d.downloadFileFn,h=d.pendingZips,b=function(e){return p?y(p,e):Promise.resolve()};Pr(a,p),ei();var x=Object(n.useMemo)((function(){return Object(f.jsx)(Kn,{})}),[]),w=Object(n.useMemo)((function(){return Object(f.jsx)(Fr,{tabs:[{label:"Project Tree",value:Object(f.jsx)(rn,{downloadFile:b})},{label:"Project Info",value:p?Object(f.jsx)(Yn,{project:p,downloadZipFile:g,pendingZips:h}):Object(f.jsx)("div",{})}]})}),[p,b,g,h]);return s?!u||m?Object(f.jsx)(Kt,{title:"Loading",history:t,signOut:a.signOut,children:Object(f.jsx)(Qt,{title:m?"Loading Project...":"Initializing..."})}):p&&p.tree?(p||m||o.event("error","project_not_found",window.location.hash),Object(f.jsxs)(f.Fragment,{children:[l.map((function(e){return Object(f.jsx)(on,{layerPath:e},e)})),Object(f.jsx)(Kt,{title:p.name,history:t,signOut:a.signOut,children:Object(f.jsx)(Er,{open:i,split:"vertical",primary:"second",minSize:500,maxSize:"85%",defaultSize:"75%",child1:w,child2:x})})]})):Object(f.jsx)(Kt,{title:"Project not found",history:t,signOut:a.signOut,children:Object(f.jsx)(Ir,{})}):(o.event("error","access_denied",window.location.hash),Object(f.jsx)(Kt,{title:"Access Denied",history:t,signOut:a.signOut,children:Object(f.jsx)(Dr,{machineName:null,message:"You do not have viewing access to this program."})}))},ai=a(381);o.init();var ri,oi=new _t("AppAuth",300);oi.prune(),function(e){e.NOT_FOUND='Program "{TOKEN}" not found. Please return to the warehouse to choose another.',e.NO_ACCESS="You do not have access to the program {TOKEN}. Please return to the warehouse choose another."}(ri||(ri={}));var ni=function(){var e=window.location.hash.split("/");return e.length>1&&e[1].match(/[A-Za-z0-9-_]{3,25}/g)?e[1]:null},ii=function(){var e=window.location.hash.split("/"),t=e.length>0&&"#"===e[0],a=e.length>1&&e[1].match(/[A-Za-z0-9-_]{3,25}/g),r=e.length>2&&e[2].match(/[A-Za-z0-9-_]{3,25}/g);return!!(t&&Boolean(a)&&Boolean(r))||(y.a.error("URL Failed check",{hashCheck:t,programStringCheck:a,projectIdCheck:r}),!1)},li=function(){var e=Object(n.useState)(),t=Object(u.a)(e,2),a=t[0],i=t[1],l=Object(n.useState)(null),s=Object(u.a)(l,2),g=s[0],h=s[1],x=Object(n.useState)({program:null,loading:!0,error:null,machineName:ni(),validUrl:ii()}),w=Object(u.a)(x,2),j=w[0],k=w[1],v=Object(n.useState)(!0),O=Object(u.a)(v,2),S=O[0],z=O[1],_=Object(ai.a)(a,!1,!1),T=Object(d.e)();Object(n.useEffect)((function(){Object(A.authCheck)(r.endpoints.graphql,"",Ca.apiTimeout).then((function(e){var t;y.a.debug("authResp",e);var a=null===(t=e.data)||void 0===t?void 0:t.auth;a&&a.region&&(i({region:a.region,userPoolId:a.userPool,userPoolWebClientId:a.clientId,mandatorySignIn:!0,oauth:{domain:a.domain,scope:["email","profile","openid"],redirectSignIn:r.redirectUrl.toString(),redirectSignOut:r.redirectUrl.toString(),responseType:"code"}}),z(!1))})).catch((function(e){y.a.error("authCheck error",e),h(e)}))}),[]),Object(n.useEffect)((function(){if(T){var e=function(){var e=Object(m.a)(Object(c.a)().mark((function e(){var t,a,r,o;return Object(c.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t="RSUrl",e.next=3,oi.get(t);case 3:a=e.sent,r=T.location.pathname,y.a.debug("[".concat(t,"] Cache:::REDIRECT checking ").concat(a," === ").concat(r)),ii()&&!_.isAuthenticated&&!_.error&&_.isAuthComplete&&(y.a.debug("[".concat(t,"] Cache:::REDIRECT:::SET ").concat(r)),oi.set(t,r)),a&&_.isAuthenticated&&_.isAuthComplete&&!_.error&&(r!==a&&(y.a.debug("[".concat(t,"] Cache:::REDIRECT Needed! ").concat(r," !== ").concat(a)),T.push(a),j.machineName||(o=ni(),y.a.debug("Setting program machine name",o),k(Object(p.a)(Object(p.a)({},j),{},{machineName:o})))),oi.del(t));case 8:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}();e()}}),[T,_]);var C=Object(n.useCallback)((function(e,t,a){var r;r=a?"/"+t.machineName+"/"+a.id:"/"+t.machineName,o.event("webrave","navigate",r),e.push(r)}),[]);Object(n.useEffect)((function(){!_.isAuthenticated||null!==j&&void 0!==j&&j.program||!j.machineName||!1===j.loading||_.getCurrentToken().then((function(e){return Object(A.getProgramAuth)(r.endpoints.graphql,e,j.machineName||"UNKNOWN")})).then((function(e){if(y.a.debug("API GetProgram",e),e.data&&e.data.program)k({program:e.data.program,loading:!1,error:null,machineName:e.data.program.machineName,validUrl:ii()});else{var t=null;e.errors&&e.errors.length>0&&0===e.errors[0].message.indexOf("Program not found")&&(t=ri.NOT_FOUND),o.event("error","navigate",t||""),k({program:null,loading:!1,error:t,machineName:j.machineName,validUrl:ii()})}})).catch((function(e){y.a.error("api.getPrograms error",e),o.event("error","navigate","api.getPrograms error")}))}),[_,j]);var P=Object(f.jsx)("img",{src:"/RiverscapesLogo.png",alt:"logo"});if(null!==g)return Object(f.jsx)(Kt,{title:"Network Error",children:Object(f.jsx)(Dr,{machineName:j.machineName,message:"Something has prevented this application from contacting its corresponding API. Please wait a few seconds and try reloading this page.",noWHButton:!0})});if(S)return Object(f.jsx)(Kt,{title:"Loading authentication info",children:Object(f.jsx)(b.b,{logoSVG:P,title:Ca.appName,message:"Loading authentication info",version:r.version})});if(j.validUrl){if(null!==j.error)return Object(f.jsx)(Kt,{title:"Error",children:Object(f.jsx)(Dr,{machineName:j.machineName,message:j.error.replace("{TOKEN}",j.machineName||"<Not Specified>")})});if(_.isAuthenticated){if(!j||null!==j&&void 0!==j&&j.loading)return Object(f.jsx)(Kt,{title:"Loading Program",children:Object(f.jsx)(b.b,{logoSVG:P,title:"WebRave",message:"Loading Program: ".concat(j.machineName||"NULL"),version:r.version})});var L={navigate:C,signOut:_.signOut};return Object(f.jsxs)(d.c,{children:[Object(f.jsx)(d.a,{path:"/:programId/:projectId/:config?",render:function(e){return Object(f.jsx)(ti,Object(p.a)(Object(p.a)({},e),{},{auth:_,program:null===j||void 0===j?void 0:j.program}))}}),Object(f.jsx)(d.a,{path:"*",render:function(e){return Object(f.jsx)(Kt,Object(p.a)(Object(p.a)(Object(p.a)({},e),L),{},{children:Object(f.jsx)(Ir,{})}))}})]})}return _.isAuthComplete?Object(f.jsx)(Kt,{title:"Sign in",children:Object(f.jsx)(ht,{signIn:_.signIn,title:"Riverscapes Map Viewer"})}):Object(f.jsx)(Kt,{title:"webRAVE",children:Object(f.jsx)(b.b,{logoSVG:P,title:"Authenticating",message:"Authenticating",version:r.version})})}return Object(f.jsx)(Kt,{title:"Error",children:Object(f.jsx)(Dr,{machineName:j.machineName,message:"This is not a valid WebRAVE URL. Please return to the Data Warehouse and try again."})})},si=(a(592),a(189));a.n(si).a.workerClass=a(593).default,Object(b.c)(),a(594),s.a.render(Object(f.jsx)(Yt.a,{children:Object(f.jsx)(d.b,{basename:"/",history:Bt,children:Object(f.jsx)(li,{})})}),document.getElementById("root")),window.addEventListener("load",(function(){window.history.pushState({},"")})),navigator.storage&&navigator.storage.persist?navigator.storage.persist().then((function(e){e?y.a.debug("Storage will not be cleared except by explicit user action"):y.a.warn("Storage may be cleared by the UA under storage pressure.")})):y.a.warn("navigator.storage API not implemented.")}},[[595,1,2]]]);
//# sourceMappingURL=main.72cefff2.chunk.js.map