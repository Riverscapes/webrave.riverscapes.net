{"version":3,"sources":["../../src/index.ts","../../src/types.ts","../../src/xml.ts","../../src/api.ts","../../src/schema.graphql.ts","../../../src/classes/Program.ts","../../../src/classes/Project.ts","../../../src/classes/errors.ts","../../../src/classes/TileServiceJSONClass.ts","../../../src/frame/Footer.tsx","../../../src/modals/ShareDialog.tsx","../../src/config.ts","../../../src/frame/Topbar.tsx","../../../src/frame/Topbar.style.ts","../../../src/misc/DownloadZipBtn.tsx","../../../src/misc/WarehouseButton.tsx","../../../src/misc/WebRaveBtn.tsx","../../src/constants.ts","../../../src/modals/ProgramChooser.tsx","../../../../src/modals/ProjectModal/RecurseTreeItem.tsx","../../../../src/modals/ProjectModal/RecurseTreeItem.style.ts","../../../../src/modals/ProjectModal/ProjectModal.tsx","../../../../src/modals/ProjectModal/ProjectModal.style.ts","../../../src/modals/LoginScreen.tsx","../../../src/modals/NotAllowedModal.tsx","../../../src/lib/LocalForageCache.ts","../../../src/hooks/useDownloads.tsx","../../../src/hooks/useProject.ts","../../../src/hooks/useQueryParams.ts","../../src/themes.ts","../../src/googleAnalytics.ts","components/AppWrapper.tsx","components/ProjectLoading.tsx","lib/util.ts","components/map/defaultSymbology.ts","lib/MapManager.ts","mapStyles/index.ts","config.ts","recoil/project.ts","recoil/tree.ts","lib/downloadQueue.ts","recoil/tiles.ts","recoil/symbology.ts","recoil/layers.ts","recoil/map.ts","hooks/useViews.tsx","recoil/url.ts","hooks/useAppStateInit.tsx","components/ProjectNotFound.tsx","components/AppSplitter.tsx","components/TreeDrawer.tsx","hooks/useMapLayers.tsx","components/tree/TreeNodeLabel.tsx","../../src/Multidot.tsx","../../src/Polygon.tsx","../../src/Polyline.tsx","../../src/QRCode.tsx","../../src/Raster.tsx","../../src/LayerIcon.tsx","../../src/ContentCopy.tsx","components/tree/TreeLeaf.tsx","components/tree/TreeBranch.tsx","components/tree/TreeControl.tsx","components/tree/TreeContextMenu.tsx","hooks/useZoomExtents.tsx","connectors/TreeContextMenu.connect.tsx","components/meta/MetaData.tsx","components/meta/LayerMeta.tsx","components/meta/LayerTileInfo.tsx","components/meta/LayerInfo.tsx","connectors/TreeLayerInfo.connect.tsx","connectors/Treecontrol.connect.tsx","connectors/MapTiles.connect.tsx","components/legend/ViewList.tsx","components/legend/BaseLayerPicker.tsx","components/legend/LegendError.tsx","components/legend/Legend.tsx","components/legend/ColorRamp.tsx","components/legend/LegendLayerItem.tsx","connectors/Legend.connect.tsx","components/map/ZoomIndicator.tsx","components/map/OverzoomedHelp.tsx","connectors/ZoomIndicator.connect.tsx","components/map/MapLoading.tsx","components/map/Map.tsx","components/TreeToggleBtn.tsx","connectors/TreeToggle.connect.tsx","connectors/MapLayer.connect.tsx","connectors/Map.connect.tsx","components/ProjectInfoTab.tsx","hooks/useColourFallback.ts","connectors/App.connect.tsx","connectors/AppAuth.connect.tsx","index.tsx"],"names":["default","_","fileSort","currFolder","sort","a","children","b","filter","domain","appBar","root","logo","programChooser","transparent","searchIcon","inputRoot","spacer","inputInput","_a","treeFolder","this","main","AppWrapper","title","history","signOut","containerProps","ThemeProvider","theme","themes","home","maxWidth","noScroll","fullWidth","topbar","Topbar","signOutHandler","shareUrl","window","location","href","ProjectLoading","logoSVG","CircularProgress","size","thickness","status","Typography","variant","component","style","position","zIndex","top","left","width","height","background","zoomExtents","cornersArr","viewport","WebMercatorViewport","fitBounds","padding","longitude","latitude","zoom","newBounds","worldBounds","oldBounds","newRect","Math","max","min","calculateOpacity","transparency","sanitized","newZoomBounds","oldZBounds","newZbounds","fallback","appDefaults","zoomRange","SORT_ORDER","ProjectTreeLayerTypes","POINT","LINE","POLYGON","TIN","RASTER","commonFeatures","layerId","tiles","lyrProps","minzoom","minZoom","maxzoom","layout","rsLayer","subLayers","sublyr","find","sl","id","path","MapLayerTypes","line","leaf","rndColor","type","paint","point","polygon","outline","sourceIdGen","lpath","sName","layerSource","layerIdGen","subIdx","userContent","checkLoaded","map","Boolean","isStyleLoaded","getMapLayerIds","getStyle","layers","metadata","isUndefined","mType","metaMaker","mIdx","mRef","userLayerRecalc","renderablelayers","mapInst","start","Date","now","validLayerIds","beforeId","slice","reverse","forEach","lyr","symbologyName","sourceId","layerType","layerPath","symbology","layerName","getSource","addSource","scheme","maxZoom","url","format","layerIdPath","getVectorSource","push","getLayer","log","debug","addLayer","layer","source","getRasterLayerProps","undefined","symbJSONArr","mapboxJson","length","randomColor","rndCol","legendColors","defaultSymbology","symb","subLyrId","opacity","getVectorLayerProps","lyrId","indexOf","removeLayer","fixMapboxExport","sourcePrefix","rawStyle","sources","rawSources","rawLayers","glyphs","sprite","sourceLookup","Object","keys","reduce","acc","sKey","newId","bgSource","idx","lyrMeta","newLyr","bgLayer","toString","mapStyles","toolTip","Icon","SatelliteOutlined","color","Satellite","TerrainOutlined","RiverscapesTopo","DirectionsCarOutlined","BasicMap","process","REACT_APP_DOMAIN","endpoints","graphql","warehouseUrl","imagesUrl","appName","apiTimeout","defaultViewport","baseLayer","baseLayers","drawerOpen","init","minFilterTextLength","maxMapLayers","retryDelayS","refreshDelayS","initMapStyle","version","name","red","green","blue","orange","purple","cyan","lime","brown","redirectUrl","URL","endsWith","origin","publicUrl","projectAtom","atom","key","authAtom","drawerOpenAtom","activeIdsAtom","activeTreeLeavesSelector","selector","get","proj","activeIds","tree","leaves","activeLeavesSortedSelector","newArr","lyrA","lyrB","layerSort","projectMapLayerLeafsSelector","nodeExists","ProjectTreeLayerTileTypes","projectLayerPathsSelector","newPath","treeFilterTextAtom","projectLeafHierarchySelector","project","parent","pid","ancestry","searchStrings","branches","foundBranch","br","bid","label","toLowerCase","trim","projectLeafSearchAncestry","treeInfoPaneIdAtom","treeInfoPaneOpenAtom","treeLeafSelectorFamily","selectorFamily","ptid","Error","treeSelectedIdsAtom","treeSelectedSelector","rawIds","selectedIds","ids","parseInt","replace","projectHiddenNodesSelector","retVal","hierarchy","filterText","filterTextArr","split","w","allowedLeaves","leafHierarchy","every","word","allowedBranches","Array","from","Set","lid","treeLeafStateSelector","layerStateSelectorFamily","hidden","active","reportUrl","REPORT","tileStatus","TilingStatus","SUCCESS","tilesState","treeAllowed","renderable","treeRootBranchId","branch","treeBranchSelectorFamily","lf","treeBranchStateSelectorFamily","hiddenNodes","collapsed","treeExpandedSelector","selected","treeContextMenuAtom","treeExpandedIdsAtom","treeAllIdsSelector","QUEUE","Bottleneck","maxConcurrent","LOCAL_CACHE","LocalForageCache","prune","tilesRequestIdAtomFamily","atomFamily","tilesRetriesAtomFamily","tilesSelectorFamily","auth","UNKNOWN","cacheKey","projType","program","cacheVal","downloadQueue","schedule","priority","getCurrentToken","then","jwt","getLayerTiles","apiRes","errors","data","FETCH_ERROR","error","e","JSON","stringify","join","String","TilingStatusFinished","set","createSymbologyKeys","symbKey","sk","isEqual","projectSymbologiesSelector","mapLyrs","symbologySelectorFamily","activeSymb","isRaster","SymbologyStatus","getWebSymbology","catch","err","ERROR","finalVal","FOUND","assignedRandomColorsAtom","leafRandomColAtomFamily","selectNextColor","current","leafid","isMapAddable","isOnTileServer","legendActive","treeSelected","NOT_APPLICABLE","symbologyStatus","tileServLoadable","noWait","symbologyLoadable","state","FETCHING","contents","FILE","viewProjLeafIdsSelector","views","view","viewIds","vl","ptl","blLayerId","baseLayerAtom","viewportAtom","mapSizeAtom","mapErrorAtom","mapLoadedAtom","activeBoundsSelector","renderableLayers","renderableMapLayersSelector","bounds","usableLayers","rndCols","activeViewAtom","boundsAtom","zoomBoundsAtom","boundsSelector","useViews","currentView","d","c","bearing","pitch","v","l","useRecoilState","currView","setCurrView","viewLeafIds","useRecoilValue","setActiveMapIds","useSetRecoilState","setView","viewId","googleAnalytics","event","resetView","defaultView","useAppStateInit","initAuth","initProj","setProjectTree","setActiveIds","setAuth","projectSymbologies","projectLayerPaths","setExpanded","resetApp","useCallback","useEffect","preFetchLayerTile","useRecoilCallback","snapshot","getLoadable","preFetchSymbology","document","useStyles","makeStyles","rootContainer","display","flexDirection","flexGrow","spacing","buttonContainer","textAlign","logoContainer","ProjectNotFound","classes","Container","className","Paper","src","alt","paragraph","Link","stay","splitPane","resizer","boxSizing","backgroundClip","transition","margin","borderTop","borderBottom","cursor","borderLeft","borderRight","borderColor","AppSplitter","open","child1","child2","primary","defaultSize","minSize","maxSize","child1Memoized","useMemo","child2Memoized","resizerClassName","pane1Style","overflow","pane2Style","flex","tabs","tabContents","closeButton","palette","secondary","contrastText","right","TreeDrawer","useState","activeTab","setValue","Tabs","value","onChange","newValue","indicatorColor","textColor","tab","Tab","tid","useMapLayers","setError","toggleLayer","normal","fontStyle","highlighted","fontWeight","TreeNodeLabel","text","query","t","chunks","highlightWords","match","useLeafStyles","marginLeft","treeLeafLabel","innerLabel","metaIcon","fontSize","lineHeight","loadingSpinner","leafQUEUED","leafNO_GEOMETRIES","leafCREATING","leafTILING_ERROR","leafTIMEOUT","leafFETCH_ERROR","leafNOT_FOUND","leafINDEX_NOT_FOUND","leafLAYER_NOT_FOUND","leafUNKNOWN","leafFETCHING","leafSUCCESS","TreeLeaf","searchText","handleContext","handleClick","handleDoubleClick","tileStatusStr","QUEUED","CREATING","TILING_ERROR","TIMEOUT","INDEX_NOT_FOUND","NO_GEOMETRIES","LAYER_NOT_FOUND","TreeItem","nodeId","clsx","onClick","onDoubleClick","onContextMenu","preventDefault","clientX","clientY","icon","useBranchStyles","marginTop","iconContainer","TreeBranch","stopPropagation","container","folderIcon","paddingBottom","searchBox","searchBoxInput","TreeControl","lyrInfoOpen","setSearchText","expanded","ctxMenu","lyrInfo","setSelected","setSearchDebounced","debounce","stext","TextField","placeholder","target","InputProps","input","startAdornment","InputAdornment","TreeView","defaultCollapseIcon","defaultExpandIcon","onNodeToggle","nodeIds","onNodeSelect","isArray","item","menuItemIcon","marginRight","TreeContextMenu","onClose","menuItems","Menu","keepMounted","anchorReference","anchorPosition","disabled","MenuItem","useZoomExtents","zoomLayerExtent","lyrBounds","getPromise","mapSize","zoomView","TreeContextMenuConnect","ctxState","downloadFile","leafId","setTreeInfoPaneId","setTreeeInfoPaneOpen","HourglassEmptyIcon","AssessmentIcon","newWindow","opener","DownloadIcon","RemoveCircleIcon","ZoomOutMapIcon","AddCircleIcon","ErrorIcon","InfoIcon","table","section","marginBottom","sectionHeader","metaKey","metaValue","overflowWrap","SPECIAL_FORMATS","datecreated","val","valDate","dates","HTML5InputToTimestamp","formatDate","formatDateAgo","formatString","lwrKey","MetaData","meta","TableContainer","Table","TableBody","rowKey","TableRow","TableCell","scope","align","DONTSHOW","minimal","whNote","LayerMeta","sections","k","distill","rk","upstreamWarehouse","upstreamProject","upstreamLayer","Layer","makeSections","_rs_prj_projType","Symbology","LayerTileInfo","Status","Started","started","lastStatus","duration","toFixed","originFile","numeral","Files","numFiles","lastModified","toolbar","minHeight","dark","layerTitle","layerIcon","layerMeta","overflowY","userSelect","typeContainer","LayerInfo","handleClose","Toolbar","Tooltip","IconButton","edge","TreeLayerInfo","leafID","TreeBranchConnector","branchId","depth","branchState","TreeLeafConnector","treeLeafState","setCtxState","setInfoPaneId","TreeControlConnect","setFilterText","rootBranchId","expandedIds","setExpandedIds","setSelectedIds","infoPaneId","allIds","infoPaneOpen","setInfoPaneOpen","realExpanded","realSetExpanded","treeContrextMenu","rootBranch","MapTilesConnect","tLoad","useRecoilValueLoadable","updateBoundsState","reqId","retryId","zoomBounds","setTimeout","newBoundsCalc","newZoomBoundsCalc","EMPTY_VID","ViewList","activeView","projectViews","handleChange","realView","viewOptions","viewOpts","defaultString","FormControl","InputLabel","htmlFor","Select","menuIcon","menuItem","BaseLayerPicker","setBaseLayer","selectMenu","newBl","bl","LegendError","border","borderRadius","maxHeight","boxShadow","subheaders","legendList","Legend","setViewId","List","dense","disablePadding","paddingLeft","tooltip","row","colorBox","flexShrink","whiteSpace","textOverflow","ColorRamp","rampType","legend","pRamp","ramp","newRamp","RampType","INTERPOLATED","regMatch","percent","parseFloat","newRampDict","r","values","parseRamp","ListItem","divider","disableGutters","idr","enterDelay","listItem","paddingTop","paddingRight","listItemActive","listItemAvatar","minWidth","expandIcon","avatar","expandIconButton","expandDisabled","textPrimary","textSecondary","heading","layerItem","legendName","deleteButtonHover","legendColor","deleteButton","zoomButton","LegendLayerItem","loading","subLabel","fallbackColor","useTheme","setOpen","hasLegend","hasOneItemLegend","fgColor","bgColor","getContrastText","toggle","Fragment","ListItemIcon","ListItemAvatar","Avatar","iconProps","ListItemText","ListItemSecondaryAction","LegendConnect","mapError","setMapError","enqueueSnackbar","useSnackbar","activeLeaves","_setBaseLayer","autoHideDuration","LegendItemConnect","rndColIdx","stats","rasterStats","maximum","minimum","overZoomed","normalBG","light","backgroundColor","warning","normalButtons","overZBG","animation","overZButtons","labelIcon","warnText","chipIcon","typography","caption","coordsTxt","helpIcon","ZoomIndicator","onHelpClick","onCopyClick","cc","bg","btn","cb","Chip","clickable","labelSmall","onMouseOver","ContentCopy","actions","content","rasterImgsContainer","rasterImgsContainerCol","rasterImgs","OverZoomedHelp","Dialog","DialogTitle","disableTypography","DialogContent","dividers","bottom","TreeToggleConnect","overZoomDlg","setOverZoomDlg","minMaxRasterZoom","lyrMaxZoom","navigator","clipboard","writeText","OverzoomedHelp","MapLoading","navControlStyle","pointerEvents","mapContainer","transform","drawerContents","drawerSpacer","drawerSpacerOpen","dialogContainer","alignItems","justifyContent","loaderSpinner","dialog","dummyText","debounceConsoleLog","Map","styleLoading","_setViewport","boundsSet","setBoundsSet","rawBounds","setMapSize","mapLoaded","setMapLoaded","viewportRef","useRef","loadHandler","styleLoaded","setViewport","inV","outV","geoFenceCorrect","coords","center","newCoords","geoFence","baseStyle","createInitialStyle","mapLoader","clickRadius","onLoad","onResize","mapStyle","onViewportChange","onError","console","mapboxApiAccessToken","config","mapConfig","mapBoxToken","toggleTree","zoomExtent","toggleDrawer","Fab","TreeToggleBtn","MapLayers","React","useContext","MapContext","renderableMapLayers","mapRef","check","base","refreshNeeded","setRefreshNeeded","newState","c_success","newBase","validBgLayers","newSourceKey","addCounter","removeCounter","changeBaseLayer","l_success","v_success","lMeta","usrLyrOrder","bgIds","slotIds","delta","correctStack","have","need","allLayers","needId","needIdx","moveLayer","verifyLayerOrder","refreshInterval","setInterval","clearInterval","MapConnect","activeBounds","run","success","info","maxSnack","preventDuplicate","anchorOrigin","vertical","horizontal","btnGroup","footerLogo","ProjectInfoTab","downloadZipFile","pendingZips","projectInfo","Title","Type","tags","createdOn","updatedOn","pendingSince","Divider","rel","useColourFallback","activeTreeLeaves","assignRndCol","colIds","currRndCol","nextCol","needRndCol","cid","exFunc","AppConnect","hasViewAccess","WarehouseRoleEnum","role","useProject","currentPageView","machineName","Promise","resolve","isProjLoading","initialized","useDownloads","downloadFileFn","fkey","mapComponent","treeComponent","hash","plp","NotAllowedModal","getProgramMachineName","locationHash","AppAuthConnect","authInfo","setAuthInfo","programState","setProgramState","isAppPreLoading","setIsAppPreLoading","useHosted","useHistory","authCheck","authResp","authVals","region","userPoolId","userPool","userPoolWebClientId","clientId","mandatorySignIn","oauth","redirectSignIn","redirectSignOut","responseType","storageUrl","localUrl","pathname","isAuthenticated","isAuthComplete","del","navigate","address","getProgramAuth","apiReturn","message","appWrapProps","render","props","signIn","mapboxgl","workerClass","require","devSetup","ReactDOM","basename","hashHistory","getElementById","addEventListener","pushState","storage","persist","granted","warn"],"mappings":"umBAAA,YACA,YACA,YAEA,aAAS,6EAAAA,WACT,YACA,YACA,YACA,a,iCCYA,IAmOY,EA2HA,E,4OA9VZ,SAAY,GACR,aACA,aACA,iBACA,mBACA,mBALJ,CAAY,kCAAa,KAQzB,SAAY,GACR,oBACA,gBACA,sBACA,4BAJJ,CAAY,0CAAiB,KAO7B,SAAY,GACR,kBACA,oBACA,kBAHJ,CAAY,4BAAU,KAOtB,SAAY,GACR,8BACA,sBACA,gBAHJ,CAAY,wBAAQ,KA6MpB,SAAY,GACR,oBACA,kBACA,sBACA,kCACA,sBACA,gCACA,oBACA,8BACA,oCACA,oCACA,4BACA,oBAZJ,CAAY,kCAAY,KAeX,uBAAuB,CAChC,EAAa,eACb,EAAa,cACb,EAAa,QACb,EAAa,aACb,EAAa,SAGjB,SAAY,GACR,oBACA,sBACA,oBACA,kCACA,gBACA,gBANJ,CAAY,sCAAe,KAS3B,SAAY,GACR,kBACA,cACA,0BACA,4BAJJ,CAAY,0BAAS,KA2FrB,SAAY,GACR,kBACA,kBACA,cACA,oBACA,gBACA,cACA,YAPJ,CAAY,oDAAqB,KAUpB,4BAA4B,CACrC,EAAsB,OACtB,EAAsB,QACtB,EAAsB,KACtB,EAAsB,Q,4m8MChY1B,aACI,EAAJ,UAGA,QACA,YACA,WAuBA,SAAgB,EAAa,GACvB,IACM,OAAG,EAAQ,QACX,SAAC,EAAK,G,MAAE,EAAC,IAAE,EAAC,EAAAC,EAAO,cACZ,KAAG,MACL,EAAE,MAAO,GAAK,EAAE,OAAM,MAE3B,IAEN,SACM,MAAG,IA1Bf,kBAA6B,G,oGAEV,OADT,EAAQ,KAAK,MACJ,IAAM,aAAM,CACvB,IAAK,EACL,OAAQ,S,OAIZ,GANM,EAAS,UAIT,GAAY,KAAK,MAAQ,GAAS,KACzB,IAAI,UAAI,KAAK,eAAe,EAAS,QAAQ,GAAE,aACzD,EAAO,KAAM,MAAM,IAAI,MAAM,6BAClC,SAAO,EAAO,cAOlB,iBAsDA,2BAAsC,G,kHACR,UAAM,wBAAmB,GAAQ,OAAM,SAAC,GAClD,MAAN,IAAI,kBAAgB,sEAAuE,CAAC,EAAI,c,OAiC1G,OAlCgB,EAAU,SAIpB,EAAwC,EAAa,EAAkB,QAAQ,SAAS,GAAG,MAAzF,EAAW,cAAE,EAAW,cAAK,EAAI,IAAnC,+BAEA,EAAc,EAAkB,QAAQ,YAAY,GAAG,YAAY,GAAG,WAAW,KACnF,SAAC,G,IAAE,EAAC,IAAE,EAAK,QAAE,EAAU,aAAO,cACvB,GAAC,CACJ,MAAO,EAAS,MAAM,QAAQ,GAAS,EAAM,KAAI,SAAC,GAAM,cAAO,CAAC,QAAU,EAC1E,WAAY,EACN,MAAM,QAAQ,GACV,EAAW,KAAI,SAAC,GAAM,SAAE,EAAF,WACtB,CAAC,EAAW,cAChB,OAGV,EAAS,GACT,EAAkB,QAAQ,YAAY,GAAG,OAAO,GAAG,QAE/C,EADA,MAAM,QAAQ,EAAkB,QAAQ,YAAY,GAAG,OAAO,GAAG,OACxD,EAAkB,QAAQ,YAAY,GAAG,OAAO,GAAG,MAAM,KAAI,SAAC,GAAM,cACnE,CAAC,EAAkB,QAAQ,YAAY,GAAG,OAAO,GAAG,QAElE,EAAc,GACd,EAAkB,QAAQ,YAAY,GAAG,SAAS,GAAG,UAEjD,EADA,MAAM,QAAQ,EAAkB,QAAQ,YAAY,GAAG,SAAS,GAAG,SACrD,EAAkB,QAAQ,YAAY,GAAG,SAAS,GAAG,QAAQ,KAAI,SAAC,GAAM,cACvE,CAAC,EAAkB,QAAQ,YAAY,GAAG,SAAS,GAAG,UAIvE,GAAS,IAAI,UAAO,WAAY,gBAAgB,GAChD,EAnEV,SAAuB,EAAa,EAAe,EAAa,GAC5D,IAAM,EAAgB,EAAO,qBAAqB,aAAa,GACzD,EAAsB,MAAM,KAAK,EAAc,qBAAqB,YAEpE,EAAS,GAuBb,OArBA,EAAkB,SAAQ,SAAC,GACzB,IAAM,EAAU,GACV,EAAM,EAAO,aAAa,OAC1B,EAAU,EAAS,MAAK,SAAC,GAAM,SAAE,KAAF,KACrC,IAAK,EAAS,MAAM,IAAI,MAAM,8BAA8B,EAAG,KAE/D,IADA,IAAI,EAAS,EAAO,W,aAEhB,IAAM,EAAM,EAAO,aAAa,OAC1B,EAAM,EAAO,QACb,EAAc,UAAR,EAAkB,EAAO,MAAK,SAAC,GAAM,SAAE,KAAF,KAAgB,EAAY,MAAK,SAAC,GAAM,SAAE,KAAF,KACjF,EAAiB,EAAX,OAAE,EAAS,EAAL,KACpB,EAAQ,KAAK,CACT,KAAM,EACN,GAAI,EACJ,OAAM,EACN,KAAI,IAER,EAAS,EAAO,YAXb,GAAU,EAAO,YAAiC,cAAnB,EAAO,S,IAazC,EAAG,KAAI,OAAM,GAAO,CAAE,QAAS,EAAQ,gBAExC,EAwCU,CAAc,EAAQ,EAAa,EAAQ,GAE5D,GAAO,QAAQ,QACX,IAAI,UAAQ,CACR,KAAM,EAAkB,QAAQ,KAAK,GACrC,YAAa,EAAkB,QAAQ,YAAY,GACnD,YAAW,EACX,YAAW,EACX,KAAI,EAEJ,SAAU,EACV,YAAW,EACX,OAAM,cASlB,2BAAsC,G,sGACR,UAAM,wBAAmB,GAAQ,OAAM,SAAC,GAE9D,MAAM,IAAI,kBAAgB,sEAAuE,CAAC,EAAI,c,OAWhG,OAbJ,EAAoB,SAIpB,EAAS,EAAkB,QACnB,EAAuB,GACjC,EAAO,YACP,EAAS,EAAa,EAAO,UAAU,GAAG,OAEhC,EAAqB,GAC/B,EAAO,WACK,EAAL,EAAa,EAAO,SAAS,GAAG,OAE3C,GAAO,QAAQ,QAAQ,CACP,GAAR,EAAO,GACC,KAAN,EAAO,KAAK,GACN,SAAF,EAAO,YAAY,GACjB,UAAD,EACC,QAAH,EAAO,QACJ,KAAR,EACQ,KAAN,UAAQ,eAAe,EAAO,MACxB,IAAP,EACO,kBAAK,EACL,OAAN,aASd,sBAA2B,EAAmB,GACxC,IAAI,GAAS,IAAI,UAAO,WAAY,gBAAgB,GAChD,EAAW,EAAO,qBAAqB,YAAY,GAErD,EAAO,qBAAqB,aAAa,OAAS,GAC9C,EAAG,YAAY,EAAO,qBAAqB,aAAa,IAE9D,IAAI,EAAgB,EAAO,cAAc,aAS3C,OARE,OAAK,KAAK,GAAS,SAAQ,SAAC,GACtB,IAAE,EAAQ,EAAO,cAAc,QAC/B,EAAE,aAAa,OAAQ,GACvB,EAAE,YAAY,EAAO,eAAe,EAAQ,KAC5C,EAAU,YAAY,MAE9B,EAAO,aAAa,EAAe,IACjB,IAAI,UAAO,eAAgB,kBAAkB,IAUnE,sBACI,EACA,EACA,GAEE,IAAI,EAAa,EAAQ,SAAS,MAAK,SAAC,GAAM,SAAE,KAAF,KAC9C,IAAG,EACG,MAAE,IAAI,MAAM,oBAAoB,EAAQ,uBAAuB,EAAQ,KAAI,KAIjF,OAFqC,EAAW,QAAQ,QAAO,SAAC,GAAM,uBAAE,QAEjD,KAAI,SAAC,GAAqB,MAAC,CAC1C,OAAM,KACN,MAAC,EAAY,EAAM,Y,qrEChNjC,I,8BAAA,YACI,EAAJ,OACA,YACA,WAeA,QAaa,UAAU,SACnB,EACA,EACA,EACA,EACA,GAEE,IAAI,EAAQ,KAAK,MACjB,OAAK,aAAM,CACL,IAAD,EACC,OAAI,OACJ,QAAG,EACH,QAAK,CACC,cAAS,EAAM,UAAU,EAAQ,eAEvC,KAAE,CACF,OAAO,WAAM,GACb,UAAS,KAGZ,MAAK,SAAC,G,IAAQ,EAAS,OACd,GAAQ,KAAK,MAAQ,GAAS,IAQpC,OAPI,EAAO,IACP,UAAI,KACA,cAAc,EAAK,QAAQ,GAAE,cAAa,WAAM,GAC3C,QAAQ,MAAO,IACf,MAAM,EAAG,IAAG,IAAI,KAAK,UAAU,IAGrC,KAEV,OAAM,SAAC,GAOJ,MAAI,EAAI,UAAoC,MAAxB,EAAI,SAAS,OACvB,IAAI,MAAM,sBAAsB,GAC/B,EAAI,MAAqB,iBAAb,EAAI,KACjB,IAAI,MAAM,2CAA2C,EAAG,MAI9D,UAAI,MAAM,gBAAiB,CAAE,IAAG,EAAE,IAAG,EAAE,OAAO,WAAM,GAAQ,UAAS,EAAE,IAAG,IACpE,OAWtB,qBACI,EACA,EACA,GAYA,OAAO,aACH,EACA,GAAG,EAEH,WAAG,6fAYH,GACA,IAYR,8BACI,EACA,EACA,EACA,EACA,EACA,GASE,OAAK,aACH,EACA,GAAG,EAEH,WAAG,ujBASH,CAAE,IAAG,EAAE,QAAO,EAAE,SAAQ,GACxB,IAQR,uBACI,EACA,EACA,G,mEAEA,UAAO,aACH,EACA,GAAG,EAEH,WAAG,2zEA0CH,GACA,GACF,MAAK,SAAC,GAEJ,cACO,GAAS,CACZ,KAAM,CACF,SAAU,EAAU,KAAK,SAAS,IAAI,UAAQ,2BAW9D,0BACI,EACA,EACA,EACA,G,oGAKI,UAAM,aACN,EACA,GAAG,EAEH,WAAG,ygEAoCH,CAAE,QAAS,GACX,I,OAGM,OA/CM,EAGZ,SAFQ,EAAO,eACf,EAAM,SA6CV,GAAO,CACS,KAAN,CACY,QAAL,UAAQ,YAAY,IAErB,OAAN,YASd,sBACI,EACA,EACA,EACA,G,oGAKI,UAAM,aACN,EACA,GAAG,EAEH,WAAG,ygEAoCH,CAAc,QAAH,GACX,I,OAGM,OA/CJ,EAGF,SAFQ,EAAO,eACf,EAAM,SA6CV,GAAO,CACH,KAAM,CACF,QAAS,UAAQ,YAAY,IAEjC,OAAM,YAWd,sBACI,EACA,EACA,EACA,EACA,EACA,EACA,G,YAFA,mBACA,c,4DAGA,UAAO,aACH,EACA,GAAG,EAEH,WAAG,q+BAwBS,yBA0CA,kDAnDI,EACM,oLAOA,GAGN,EACM,s4CAsCA,IAMtB,CAAE,GAAE,EAAE,QAAO,GACb,GACF,MAAK,SAAC,GAAc,cACf,GAAS,CACZ,KAAM,CACF,QAAS,UAAQ,YAAY,EAAU,KAAK,uBAuBxD,yBACI,EACA,EACA,EACA,EACA,EACA,EACA,G,0FAEiB,UAAM,aACnB,EACA,GAAG,EAEH,WAAG,23BAaH,CAAE,GAAE,EAAE,MAAO,EAAU,YAAW,EAAE,QAAO,GAC3C,I,OAEJ,SApBiB,kBAuBrB,wBACI,EACA,EACA,EACA,EACA,EACA,EACA,G,0FAEiB,UAAM,aACnB,EACA,GAAG,EAGH,WAAG,6yBAYH,CAAE,SAAQ,EAAE,QAAO,EAAE,GAAE,EAAE,SAAQ,GACjC,I,OAEJ,SApBiB,kBAuBrB,yBACI,EACA,EACA,EACA,EACA,EACA,EACA,G,kGAEY,UAAM,aACd,EACA,GAAG,EAGH,WAAG,yrDA2BH,CAAE,SAAQ,EAAE,QAAO,EAAE,GAAE,EAAE,UAAS,GAClC,I,OAEJ,OAnCM,EAAM,UAmCH,MAEC,EAAS,EAAI,KAAK,cACxB,GAAO,CACH,OAAQ,EAAI,OACZ,KAAM,CACF,cAAa,OACN,GAAM,CAET,QAAS,GAAU,EAAO,SAAW,SAAS,EAAO,QAAS,IAC9D,WAAY,GAAU,EAAO,YAAc,SAAS,EAAO,WAAY,IAEvE,YAAa,GAAU,EAAO,aAAe,KAAK,MAAM,EAAO,aAC/D,QAAS,GAAU,EAAO,SAAW,KAAK,MAAM,EAAO,SACvD,WAAY,GACR,EAAO,YAAU,OACV,EAAO,YAAU,CACpB,aAAc,SAAS,EAAO,WAAW,aAAc,YAjBhE,GAAO,CAAE,OAAQ,EAAI,iBAyBxC,2BACI,EACA,EACA,EACA,EACA,EACA,G,gGAEY,UAAM,aACd,EACA,GAAG,EACH,WAAG,m2BAcH,CAAE,SAAQ,EAAE,KAAI,EAAE,SAAQ,GAC1B,I,OAEJ,OApBM,EAAM,UAoBH,KAEL,GAAO,CACH,OAAQ,EAAI,OACZ,KAAM,CACF,gBAAiB,EAAI,KAAK,iBAAe,OAClC,EAAI,KAAK,iBAAe,CAC3B,WAAY,EAAI,KAAK,gBAAgB,YAAc,KAAK,MAAM,EAAI,KAAK,gBAAgB,iBAPxF,GAAO,CAAE,OAAQ,EAAI,iBAsBxC,2BACI,EACA,EACA,EACA,EACA,EACA,G,0FAEiB,UAAM,aACnB,EACA,GAAG,EAGH,WAAG,myBAaH,CAAE,SAAQ,EAAE,QAAO,EAAE,GAAE,GACvB,I,OAEJ,SArBiB,kBA+BrB,yBACI,EACA,EACA,EACA,EACA,G,0FAEiB,UAAM,aACnB,EACA,GAAG,EAGH,WAAG,mUAMH,CAAE,QAAO,EAAE,GAAE,GACb,I,OAEJ,SAdiB,kBAwBrB,kBACI,EACA,EACA,EACA,EACA,G,wGAEY,UAAM,aACd,EACA,GAAG,EAEH,WAAG,miFAyCF,OAEI,GAAM,CAAE,QAAO,IACpB,I,OAEJ,OAlDM,EAAM,UAkDH,MAEC,EAAiC,EAAI,KAAK,QAAU,GAAlD,EAAS,YAAE,EAAQ,WAAE,EAAK,QAClC,GAAO,CACH,OAAQ,EAAI,OACZ,KAAM,CACF,OAAQ,CACJ,SAAU,MAAM,QAAQ,GAAY,EAAS,IAAI,UAAQ,aAAe,EACxE,UAAS,EACT,MAAK,OATN,GAAO,CAAE,OAAQ,EAAI,iBAgBxC,sCACI,EACA,EACA,EACA,EACA,EACA,G,gGAEiB,UAAM,aACnB,EACA,GAAG,EACH,WAAG,u0BAcH,CAAE,QAAO,EAAE,GAAE,EAAE,WAAU,GACzB,I,OAEJ,OApBM,EAAW,UAoBH,KAEV,GAAO,CACH,OAAQ,EAAS,OACjB,KAAM,CACF,WAAY,EAAS,KAAK,WACrB,OACQ,EAAS,KAAK,YAAU,CAC3B,UAAW,SAAS,EAAS,KAAK,WAAW,UAAW,IACxD,UAAW,SAAS,EAAS,KAAK,WAAW,UAAW,MAE5D,QAXE,GAAO,CAAE,OAAQ,EAAS,iBAiBlD,yBACI,EACA,EACA,EACA,EACA,EACA,G,sGAEiB,UAAM,aACnB,EACA,GAAG,EAGH,WAAG,yiCAiBH,CAAE,QAAO,EAAE,MAAK,EAAE,UAAS,GAC3B,I,OAGJ,OA1BM,EAAW,UA0BH,MAEJ,EAAqC,EAAS,KAAK,UAAY,GAAlD,EAAY,YAAE,EAAK,QACtC,GAAO,CACH,OAAQ,EAAS,OACjB,KAAM,CACF,SAAU,CACN,MAAO,MAAM,QAAQ,GACf,EAAM,KAAI,SAAC,GAAM,cACV,GAAC,CACJ,UAAW,SAAS,EAAE,UAAW,IACjC,UAAW,SAAS,EAAE,UAHT,SAKjB,EACN,UAAW,OAdP,GAAO,CAAE,OAAQ,EAAS,kB,wSCz3BlD,I,EAAA,YACI,EAAJ,OAIM,GAAQ,EAAG,WAAG,m2aAwN2C,gDAGN,6CAGH,yCAGJ,iuEATxC,OAAO,OAAO,yBAAuB,KAAK,YAG1C,OAAO,OAAO,mBAAiB,KAAK,YAGpC,OAAO,OAAO,gBAAc,KAAK,YAGjC,OAAO,OAAO,YAAU,KAAK,aA8FvC,UAAe,G,4UCzTf,iBAgBI,WAAY,GACR,OAAO,OAAO,KAAM,GAsB5B,OAfW,cAAP,SAAmB,GACf,IAAK,EAAO,OAAO,KACnB,IAAM,EAAO,EAAM,KAAO,KAAK,MAAM,EAAM,MAAQ,GACnD,OAAO,IAAI,EAAO,OACX,GAAK,CACR,KAAI,EACJ,KAAM,EAAM,KACZ,SAAU,EAAM,SACV,EAAM,SAAS,KAAI,SAAC,GAAM,cACnB,GAAC,CACJ,QAAS,KAAK,MAAM,EAFE,cAI1B,OAGlB,EAvCA,GAAa,a,4ZCDb,gBAQA,SAASC,EAASC,GACdA,EAAWC,MAAK,SAAC,EAAG,GAChB,OAAIC,EAAEC,WAAaC,EAAED,UAAkB,GAClC,EAAE,UAAY,EAAE,SAAiB,EAClC,EAAE,KAAK,cAAgB,EAAE,KAAK,eAAuB,EACrD,EAAE,KAAK,cAAgB,EAAE,KAAK,cAAsB,EACjD,KAaf,iBAoBM,SAAF,EAAY,GAAR,IAAJ,OA0CI,KAAJ,iBAAmB,WACf,IAAM,EAAO,GAuBb,OArBM,EAAD,MAAM,SAAQ,SAAC,G,IAAE,EAAG,MACjB,EAAU,EAAI,MAAM,KAED,IAAnB,EAAQ,QAAgB,EAAI,QAAQ,OAAS,IAC7C,EAAU,EAAI,MAAM,OAGxB,IADA,IAAI,EAAa,E,aAEb,IAAM,EAAS,CAAE,KAAM,EAAQ,QAAS,SAAU,IAC5C,EAAQ,EAAW,MAAK,SAAC,GAAM,SAAE,OAAS,EAAX,QACjC,GAAS,EAAM,SACf,EAAa,EAAM,UAEnB,EAAW,KAAK,GAChB,EAAa,EAAO,UAExB,EAAS,IATN,EAAQ,OAAS,G,IAWxB,EAAW,KAAK,CAAE,KAAM,EAAQ,GAAI,KAAM,OAE9C,EAAS,GACF,GAjEH,OAAG,OAAO,KAAM,GACf,KAAK,QAAO,KAAK,MAAQ,IAC1B,KAAK,MAAQ,KAAK,KAAK,SACvB,KAAK,KAAK,OAAS,KAAK,KAAK,OAAO,KAAI,SAAC,GAAO,cACzC,GAAE,CACL,KAAM,GAAM,EAAG,QAAU,KAAK,MAAM,EAAG,SAFK,SAiM5D,OAtLW,cAAc,SAAC,GAClB,OAAK,EACE,IAAI,EAAO,OACX,GAAK,CACR,UAAW,SAAS,EAAM,UAAW,IACrC,UAAW,SAAS,EAAM,UAAW,IACrC,KAAM,EAAM,KAAO,KAAK,MAAM,EAAM,MAAQ,GAC5C,KAAM,EAAM,KAAO,EAAM,KAAK,MAAM,KAAO,MAN5B,MAehB,eAAe,SAAC,GACnB,OAAO,IAAI,EAAO,OACX,GAAK,CACR,KAAM,EAAM,MAAQ,EAAM,KAC1B,KAAM,EAAM,KAAO,EAAQ,gBAAgB,EAAM,WAAQ,MAqC1D,OAAO,SAAC,EAA8B,GACrC,IAAE,EAAY,GACZ,EAAO,GAEb,OAAK,GAA0B,IAAjB,EAAM,OAOR,GAAwB,IAAhB,EAAK,OA0BlB,CACH,SAjBa,EACZE,QAAO,SAAC,GACL,IAAM,EAAQ,EAAM,MAAK,SAAC,GAAc,SAAS,MAAQ,EAAjB,OAKxC,OAJI,IACI,EAAM,MAAQ,EAAS,IAAK,EAAK,KAAK,EAAS,KAC9C,EAAU,KAAK,EAAS,OAEzB,KAEX,KAAI,SAAC,GAAM,gBASZ,UANc,EACb,QAAO,SAAC,GAAc,OAAC,EAAK,MAAK,SAAC,GAAa,SAAU,MAAQ,EAAlB,UAC/C,KAAI,SAAC,GAAM,gBAKZ,UAAS,EACT,KAAI,GA7BG,CACH,SAAU,GACV,UAAW,EAAM,KAAI,SAAC,GAAM,gBAC5B,UAAW,GACX,KAAM,IAXH,CACH,SAAU,EAAK,KAAI,SAAC,GAAM,gBAC1B,UAAW,GACX,UAAW,GACX,KAAM,KA0CX,mBAAmB,SAAC,EAAkB,EAAmB,GAC5D,IAAM,EAAS,UAAK,KAAK,EAAQ,YAAa,EAAU,GAClD,EAAY,EAAM,OAClB,EAAc,UAAK,KAAK,EAAQ,EAAQ,aACxC,EAAgB,UAAK,KAAK,EAAQ,YAAa,EAAa,EAAS,gBAIrE,EAAqB,GAAG,CAAC,EAAQ,YAAa,EAAU,GAAW,KAAK,KAG9E,MAAO,CACH,OAAM,EACN,OAAM,EACN,YAAW,EACX,cAAa,EACb,mBAAkB,EAClB,oBAR2B,EAAkB,SAY9C,kBAAkB,SAAC,GAEtB,IAAM,EAAW,OAAO,KAAK,GACxB,QAAO,SAAC,GAAM,aAAE,QAAQ,YACxB,QAAO,SAAC,EAAK,G,MACJ,EAAO,EAAE,MAAM,SAAS,GAC9B,cAAY,KAAG,MAAG,GAAO,EAAO,GAAE,MACnC,IACP,OAAO,KAAK,UAAU,IAGnB,iBAAiB,SAAC,GACrB,OAAK,GAAyC,IAA5B,EAAU,OAAO,OAC5B,EACF,MAAM,KACN,KAAI,SAAC,GAAM,mBACX,QAAO,SAAC,GAAM,SAAE,OAAS,GAAW,SAAN,GAAhB,cAAgC,KAJK,IAUrD,aAAa,SAAC,EAAkB,GAEnC,GADe,EAAI,MAAM,KACd,OAAS,EAAG,MAAM,IAAI,MAAM,2BACjC,MAAqC,EAAI,MAAM,KAA9C,EAAkB,KAAE,EAAQ,KAAE,EAAE,KACvC,GAAI,EAAQ,cAAgB,EACxB,MAAM,IAAI,MACN,iCAAiC,EAAQ,YAAW,2CAA2C,GAGvG,OAAO,EAAQ,iBAAiB,EAAS,EAAI,IAM1C,iBAAiB,SACpB,GAEA,IAAM,EAAS,EAAI,MAAM,KACzB,GAAI,EAAO,OAAS,EAAG,MAAM,IAAI,MAAM,2BAChC,MAAoC,EAAlB,GAAE,EAAgB,EAAR,GAAE,EAAM,EAAJ,GACjC,EAAS,UAAK,KAAK,EAAoB,EAAU,GAEvD,MAAO,CACH,mBAAkB,EAClB,SAAQ,EACR,GAAE,EACF,OALc,EAAM,OAMpB,OAAM,IAGlB,EAzNA,GAAa,a,gmBCrCb,kBAGM,SAAF,EAAY,EAAiB,GAAzB,IAAJ,EACI,YAAM,IAAQ,K,OAEd,EAAK,KAAO,EAAK,YAAY,KAC7B,EAAK,QAAU,EAIf,MAAM,kBAAkB,EAAM,EAAK,a,EAEzC,OAbmC,OAarC,EAbA,CAAqC,OAAxB,qB,gHCKb,MAmBI,SAAY,GACR,OAAO,OAAO,KAAM,IApBf,0B,2xBCIK,aAAW,SAAC,GAAU,MAAC,CACrC,KAAM,CACF,QAAS,OACT,OAAQ,EAAM,OAAO,OAAS,GAElC,KAAM,CACF,SAAU,GAEV,KAAE,O,ueCWJ,GAAY,aAAW,SAAC,GAAU,MAAC,CACjC,KAAE,GACF,eAAY,GAChB,aAAc,CACV,OAAQ,EAAM,QAAQ,EAAG,GACzB,MAAO,CACH,YAAa,EAAM,QAAQ,KAG/B,SAAM,CACN,SAAU,GAEd,SAAU,CACN,MAAO,EAAM,QAAQ,QAAQ,aAC7B,gBAAiB,EAAM,QAAQ,QAAQ,KACvC,QAAS,QAEb,YAAa,CACT,KAAM,WAwDC,GApDsB,SAAC,G,IAAE,EAAI,OAAE,EAAQ,WAAE,EAAW,cACzD,EAAU,KACd,OACE,eAAC,IAAM,IAAK,KAAE,EAAM,QAAS,EAAW,kBAAkB,qBAAmB,WACzE,eAAC,IAAW,IAAC,UAAW,EAAQ,SAAU,mBAAiB,cACvD,cAAC,IAAU,IAAC,MAAM,WAAS,UACvB,cAAC,IAAS,CAAC,UAAW,EAAQ,qBAAc,UAAI,GAEpD,cAAC,IAAU,IAAC,QAAQ,KAAK,UAAW,EAAQ,UAAQ,4BAGpD,wBAAK,UAAW,EAAQ,aAAW,UAC/B,cAAC,IAAU,IAAC,QAAS,EAAa,MAAM,WAAS,UAC7C,cAAC,IAAS,kBAAG,UACJ,WACX,GAEV,eAAC,IAAa,WACV,cAAC,IAAiB,8EAClB,cAAC,IAAS,CACN,MAAO,EACP,OAAO,QACP,GAAG,OACH,QAAQ,WACR,WAAS,EACT,WAAY,CACR,QAAS,SAAC,GACN,EAAE,iBACa,EAAE,OACV,iBAEd,GAEL,yBAAK,UAAW,EAAQ,cAAY,WAChC,cAAC,IAAgB,IAAC,IAAK,GAAQ,UAC3B,cAAC,IAAS,CAAC,KAAM,GAAI,OAAK,kBAAG,GAEjC,cAAC,IAAkB,IAAC,IAAK,GAAQ,UAC7B,cAAC,IAAW,CAAC,KAAM,GAAI,OAAK,kBAAG,GAEnC,cAAC,IAAmB,IAAC,IAAK,GAAQ,UAC9B,cAAC,IAAY,CAAC,KAAM,GAAI,OAAK,kBAAG,GAEpC,cAAC,IAAmB,IAAC,IAAK,EAAU,MAAO,SAAO,UAC9C,cAAC,IAAY,CAAC,KAAM,GAAI,OAAK,kBAAG,WACd,UACpB,WACM,I,gFC/Ff,GAAY,CAEnB,UAAS,CACP,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAIJC,GAAS,4dAAY,iBAKzB,IAAI,MAAM,WAAY,CAAE,OAAM,KACvB,IAAM,IAAgC,EAEhC,GAAY,CACrB,YAAa,4GAIJ,GAAU,QAEV,GAAY,CACrB,QAAS,wEACT,IAAK,4dAAY,eAGR,GAAsB,CAAC,KAAK,KAAO,KAAM,KAAQ,KAAQ,KAAM,KAAM,MACrE,GAAc,IAAI,IAC3B,GAAuB,SAAS,KAAO,GAAkD,IACzF,OAAO,SAAS,QAEpB,QAAQ,IAAI,cAAe,CAAE,YAAW,GAAE,UAAW,KAE9C,IAAM,GAAkB,iBAElB,GAAU,CACnB,KAAM,CACF,OAAQ,4dAAY,4BACpB,WAAY,4dAAY,yBACxB,oBAAqB,4dAAY,kCACjC,iBAAiB,EACjB,MAAO,CACH,OAAQ,4dAAY,wBACpB,MAAO,CAAC,QAAS,UAAW,UAC5B,eAAgB,GAChB,gBAAiB,GACjB,aAAc,U,mNCzCpB,GAAY,aCnBH,SAAC,G,YAA6B,MAAC,CACtCC,OAAI,CACJ,OAAQ,EAAM,OAAO,OAAS,GAE9BC,KAAE,CACF,QAAS,OACT,WAAY,SACZ,MAAO,OACP,QAAS,EAAM,QAAQ,EAAG,GAC1B,WAAY,8BACZ,gBAAiB,6BACjB,iBAAkB,YAClB,mBAAoB,SACpB,eAAgB,QAChB,gBAAiB,WAEjBC,KAAE,CACF,OAAQ,GACR,MAAO,GACP,YAAa,EAAM,QAAQ,IAE3BC,eAAY,CACZ,OAAQ,EAAM,QAAQ,EAAG,GACzB,MAAO,EAAM,QAAQ,QAAQ,aAC7B,QAAS,CACL,MAAO,EAAM,QAAQ,QAAQ,cAEjC,WAAY,CACR,YAAa,EAAM,QAAQ,QAAQ,cAEvC,UAAW,CACP,YAAa,EAAM,QAAQ,QAAQ,eAGvCC,YAAS,CACT,gBAAiB,cACjB,WAAY,OACZ,MAAO,EAAM,QAAQ,KAAK,SAG1B,QAAE,GACI,SAAI,WACJ,aAAQ,EAAM,MAAM,aACpB,gBAAW,YAAM,EAAM,QAAQ,OAAO,MAAO,KAC7C,UAAK,CACP,gBAAiB,YAAM,EAAM,QAAQ,OAAO,MAAO,MAEjD,YAAO,EAAM,QAAQ,GACrB,WAAM,EACN,MAAC,OACP,SAAU,GACV,EAAC,EAAM,YAAY,GAAG,OAAQ,CAC1B,WAAY,EAAM,QAAQ,GAC1B,MAAO,QAEd,GACGC,WAAQ,CACR,MAAO,EAAM,QAAQ,GACrB,OAAQ,OACR,SAAU,WACV,cAAe,OACf,QAAS,OACT,WAAY,SACZ,eAAgB,UAEhBC,UAAO,CACP,MAAO,WAEPC,OAAI,CACJ,SAAU,GAEVC,YAAM,GACA,QAAG,EAAM,QAAQ,EAAG,EAAG,EAAG,GAC1B,WAAM,EAAM,YAAY,OAAO,SAC/B,MAAC,QACP,EAAC,EAAM,YAAY,GAAG,OAAQ,CAC1B,MAAO,KAEd,GACG,gBAAU,GACV,QAAS,QACT,EAAC,EAAM,YAAY,GAAG,OAAQ,CAC1B,QAAS,OACT,SAAU,GAEjB,GACG,eAAS,GACT,QAAS,OACT,SAAU,GACV,EAAC,EAAM,YAAY,GAAG,OAAQ,CAC1B,QAAS,QAEhB,OD7DC,SAAU,GAAW,GACvB,QAAI,EAAK,OAAQ,EAAK,KAAK,QAA+B,WAArB,EAAK,KAAK,SAC1B,OAAd,EAAK,KAGhB,I,GAmHe,GAnHiB,SAAC,G,IAC7B,EAAK,QACL,EAAO,UACP,EAAQ,WACR,EAAc,iBACd,EAAY,eACZ,EAAQ,WACR,EAAO,UAED,EAAU,KACV,EAA4B,oBAAkB,GAA7C,EAAS,KAAE,EAAY,KACxB,EAA8C,mBAAS,MAAtD,EAAkB,KAAE,EAAqB,KAE1C,EAAwB,WAAY,gBAOpC,EAAU,GAAW,EAAQ,SAAS,SAAS,QAAQ,WAAa,EAUpE,GAAoB,GAAkB,IACxC,eAAC,IAAI,IACD,SAAU,EACV,aAAc,CAAE,SAAU,MAAO,WAAY,SAC7C,aAAW,EACX,gBAAiB,CAAE,SAAU,MAAO,WAAY,SAChD,OAAQ,EACR,QAAS,GAAqB,WAE7B,GACG,cAAC,IAAQ,UACL,cAAC,IAAU,IAAC,QAAQ,WAAW,QAAS,WAAY,SAAQ,KAAR,OAAiB,qCAExD,GAGpB,GAAY,cAAC,IAAO,WACpB,GACG,EAAS,OAAS,GAClB,EAAS,KAAI,SAAC,EAAM,GAAQ,OACxB,cAAC,IAAQ,IACL,SAAW,GAAW,EAAQ,cAAgB,EAAK,aAAgB,GAAW,GAE9E,QAAS,WAAY,OArCjB,EAqCiB,EApCrC,SACI,GAAS,EAAQ,KAAK,IAAI,EAAG,cAFd,IAAC,GAsCJ,MAAO,EAAK,aAAW,UAEtB,EAAK,OAJD,QAHe,MAU/B,GAAkB,cAAC,IAAO,WAC1B,GAAkB,cAAC,IAAQ,IAAC,QAAS,GAAc,sCAAoB,GAG1E,EACF,IAAY,EAAQ,OAAS,oBAAkB,OAAS,EAAQ,OAAS,oBAAkB,WAE/F,OACI,eAAC,IAAM,SAAQ,WACX,cAAC,IAAM,IAAC,SAAS,SAAS,UAAW,EAAQ,QAAM,UAC/C,eAAC,IAAO,IAAC,UAAW,EAAQ,KAAM,gBAAc,cAC5C,sBAAG,KAAK,2BAAyB,UAC7B,qBACI,UAAW,EAAQ,KACnB,IAAK,4DACL,IAAI,aAAM,UACZ,GAEL,EACG,gCACI,cAAC,IAAU,IAAC,QAAQ,aAAW,UAAE,EAAQ,YAAI,GAC7C,cAAC,IAAU,IAAC,QAAQ,WAAS,UAAE,SAAK,UAAc,GAGtD,cAAC,IAAU,IAAC,QAAQ,aAAW,UAAE,SAAK,GAE1C,qBAAK,UAAW,EAAQ,aAAM,GAC7B,IACG,eAAC,IAAU,IAAC,UAAU,MAAM,UAAW,EAAQ,KAAM,MAAM,UAAU,QAAQ,YAAU,gBAChF,WAAO,GAGjB,GACG,cAAC,IAAU,oBAAe,OAAO,QAvEjC,WACZ,GAAW,IACP,EAAS,EAAQ,KAAK,IAAI,EAAQ,aACjC,EAAQ,KAAK,IAAI,EAAQ,YAAW,YAoE0B,MAAM,WAAS,UACjE,EAAU,cAAC,IAAW,WAAM,cAAC,IAAqB,kBAAG,GAG7D,EACA,GACG,cAAC,IAAU,oBAAe,OAAO,QApFzB,WAAY,cAoF2C,MAAM,WAAS,UAC1E,cAAC,IAAS,kBAAG,IAGnB,GAAkB,IAChB,cAAC,IAAU,oBAAe,OAAO,QA3ExB,SAAC,GAAgB,SAAsB,EAAtB,gBA2EsC,MAAM,WAAS,UAC3E,cAAC,IAAQ,kBAAG,WAEnB,UACK,GAEb,EACA,GAAY,cAAC,GAAW,CAAC,KAAM,EAAW,SAAU,EAAU,YAAa,WAAM,oBAAmB,UAAI,I,2RE1I/G,GAAY,aAAW,WAAM,MAAC,CAChC,KAAM,CACF,MAAO,CACH,OAAQ,YAGhB,eAAgB,CACZ,QAAS,QAwGF,GA5FyB,SAAC,G,IAAE,EAAK,QAAE,EAAO,UAAE,EAAY,eAAE,EAAQ,WAAE,EAAe,kBACxF,EAAU,KAEZ,EACA,cAAC,KAAO,IACA,MACA,eAAC,IAAM,SAAQ,WACX,cAAC,IAAU,IAAC,QAAQ,SAAO,2CAC3B,cAAC,IAAU,IAAC,QAAQ,UAAU,WAAS,6EAGvC,cAAC,IAAU,IAAC,QAAQ,UAAU,WAAS,wFAE1B,IACA,UAGpB,EACG,cAAC,KAAM,IACH,QAAQ,YACR,MAAM,UACN,QAAS,SAAC,GACN,EAAE,iBACF,EAAE,kBACF,EAAgB,IAEpB,UAAW,cAAC,KAAiB,YACzB,EAAQ,UAEX,GAAS,aAAK,GAGnB,cAAC,IAAU,IACP,MAAM,UACN,QAAS,SAAC,GACN,EAAE,iBACF,EAAE,kBACF,EAAgB,KAEf,EAA4B,UAEjC,cAAC,KAAiB,kBAAG,UAE5B,GA8CT,OA3CI,IACA,EACI,cAAC,KAAO,IACJ,MACI,eAAC,IAAM,SAAQ,WACX,cAAC,IAAU,IAAC,QAAQ,SAAO,oCAC3B,cAAC,IAAU,IAAC,QAAQ,UAAU,WAAS,0EAGvC,eAAC,IAAU,IAAC,QAAQ,UAAU,WAAS,yBAC1B,KAAO,EAAc,KAAK,kBAAS,UACnC,IACA,UAGrB,cAAC,KAAM,IACH,QAAQ,WACR,oBAAkB,EAClB,eAAa,EACb,oBAAkB,EAClB,MAAM,UACN,QAAS,SAAC,GACN,EAAE,iBACF,EAAE,mBAEN,UAAW,EAAQ,eACnB,UACI,cAAC,KAAgB,CACb,MACI,GAAY,EAAS,OAA4B,cAAnB,EAAS,MAAwB,UAAY,YAE/E,KAAM,GACN,UAAW,QAAC,IAGhB,EAAQ,UAEX,GAAS,aAAK,UACV,IAKd,wBAAK,UAAW,EAAQ,MAAI,UAAG,SAAS,I,mNCjH7C,GAAY,aAAW,SAAC,GAAU,MAAC,CACjC,KAAE,GAGN,UAAW,CAAE,OAAQ,GAAI,MAAO,GAAI,YAAa,EAAM,QAAQ,IAC/D,SAAU,CAEN,SAAU,SAkCH,GAxByC,SAAC,G,IAAE,EAAK,QAAE,EAAI,OAAE,EAAI,OAClE,EAAU,KAChB,OACI,eAAC,KAAM,IACH,UAAW,EAAQ,SACnB,OAAQ,OAAO,EAAY,SAC3B,QAAQ,YACR,KAAM,EACN,QAAS,WACL,EAAgB,MAAM,UAAW,iBAAkB,mBAEvD,MAAM,YACN,WAAS,cAET,qBACI,UAAW,EAAQ,UACnB,IAAK,4DACL,IAAI,aAAM,GAEb,UAAK,I,WChCA,aAAW,WAAM,MAAC,CAChC,KAAM,CACF,MAAO,CACH,OAAQ,YAGhB,eAAgB,CACZ,QAAS,Q,+FCdJ,KAAY,OACpB,oBAAkB,WAAY,KAC/B,GAAC,oBAAkB,OAAQ,KAC3B,GAAC,oBAAkB,aAAc,KACjC,GAAC,oBAAkB,UAAW,KACjC,I,mNCWiB,aAAW,SAAC,GAAU,MAAC,CACrC,cAAe,CACX,OAAQ,OACR,QAAS,OACT,cAAe,SACf,SAAU,UAEV,OAAI,CACJ,SAAU,GAEV,KAAE,CACF,QAAS,OACT,cAAe,SACf,QAAS,EAAM,QAAQ,EAAG,EAAG,EAAG,GAChC,UAAW,MACX,SAAU,UAEV,SAAM,CACN,KAAM,OAEN,SAAM,CACN,KAAM,MACN,UAAW,UAEf,cAAe,CACX,KAAM,MACN,QAAS,EAAM,QAAQ,GACvB,UAAW,UAEfN,KAAM,GACF,WAAM,MACH,OAAO,KAAK,IAAc,QACzB,SAAC,EAAK,G,MAAQ,gBACP,KAAG,MACL,YAAY,GAAQ,CACjB,MAAO,EAAM,QAAQ,gBAAgB,GAAa,GAAK,MACvD,WAAY,GAAa,GAAK,MACjCO,MAEL,SAgBZ,I,iJC5DkB,aCZH,SAAC,GAA6B,MAAC,CACtC,aAAU,CACV,gBAAiB,EAAM,QAAQ,WAAW,MAC1C,mBAAoB,CAChB,gBAAiB,EAAM,QAAQ,WAAW,UAGlD,kBAAmB,CACf,QAAS,QAET,aAAU,CACV,WAAY,EAAM,QAAQ,GAC1B,QAAS,EAAM,QAAQ,GACvB,SAAU,GAEd,aAAc,GACV,SAAM,GACV,gBAAiB,CACb,aAAc,aAAa,EAAM,QAAQ,KAAK,MAElDC,WAAY,GACR,kBAAe,GACnB,eAAgB,CACZ,QAAS,EAAM,QAAQ,IAEvB,YAAS,CACT,QAAS,CACL,WAAY,OACZ,OAAQ,aCSF,aCpCH,SAAC,GAA6B,MAAC,CACtC,KAAE,CACF,OAAQ,EACR,QAAS,EAAM,QAAQ,IAEvB,YAAS,CACT,QAAS,CACL,WAAY,OACZ,OAAQ,SAGhB,YAAa,CACT,WAAY,YAEZ,KAAE,CACF,SAAU,MACV,WAAY,SACZ,SAAU,SACV,aAAc,WACd,aAAc,EAAM,QAAQ,IAE5B,SAAM,CACN,gBAAiB,UACjB,MAAO,EAAM,QAAQ,QAAQ,aAC7B,QAAS,QAEb,aAAc,CACV,SAAU,GAEd,OAAQ,CACJ,QAAS,QAEb,WAAY,CACR,KAAM,WAEN,YAAS,CACT,UAAW,QACX,KAAM,OAEV,SAAU,CACN,SAAU,GAEV,YAAS,CACT,KAAM,MAIN,MAAO,EAAM,QAAQ,KAAK,MAE1B,WAAQ,GACZ,aAAc,CACV,MAAO,KAAI,MAEf,UAAW,CACP,MAAO,KAAO,MAEd,YAAS,CACT,MAAO,KAAM,MAEb,YAAS,CACT,QAAS,OACT,SAAU,QAEd,MAAO,CACH,UAAW,EAAM,QAAQ,IAEzB,kBAAe,CACf,QAAS,QAEb,aAAc,CACV,WAAY,EAAM,QAAQ,GAC1B,SAAU,GAEd,aAAc,GACd,gBAAiB,CAEb,aAAc,aAAa,EAAM,QAAQ,KAAK,KAC9C,QAAS,EAAM,QAAQ,IAEvB,WAAQ,GACR,kBAAe,CAEf,QAAS,EAAM,QAAQ,IAEvB,gBAAa,CACb,KAAM,MACN,aAAc,EAAM,QAAQ,GAC5B,gBAAiB,UACjB,OAAQ,EAAM,QAAQ,EAAG,IACzB,OAAQ,qBACR,QAAS,EAAM,QAAQ,GACvB,SAAU,MACV,SAAU,IACV,MAAO,CACH,WAAY,SACZ,SAAU,SACV,aAAc,aAGtB,SAAU,CACN,WAAY,EAAM,QAAQ,GAC1B,gBAAiB,EAAM,QAAQ,QAAQ,MACvC,MAAO,SAQX,QAAS,CACL,QAAS,EAAM,QAAQ,IAE3B,UAAW,CACP,MAAO,OAEP,QAAS,Y,sOC/GX,GAAY,aAAW,SAAC,GAAU,MAAC,CACrC,cAAe,CAGX,OAAQ,OACR,QAAS,OACT,cAAe,UAEnB,OAAQ,CACJ,SAAU,GAEdT,KAAM,CACF,QAAS,EAAM,QAAQ,EAAG,EAAG,EAAG,IAEhC,cAAW,CACX,QAAS,EAAM,QAAQ,GACvB,UAAW,UAEf,KAAM,OAyCK,GAjCsB,SAAC,G,IAAE,EAAK,QAAE,EAAM,SAC3C,EAAU,KAEhB,OACI,eAAC,IAAS,IAAC,UAAW,EAAQ,cAAe,SAAS,MAAI,WACtD,qBAAK,UAAW,EAAQ,aAAM,GAC9B,eAAC,KAAK,IAAC,UAAW,EAAQ,MAAI,WAC1B,wBAAK,UAAW,EAAQ,eAAa,UACjC,qBAAK,UAAW,EAAQ,KAAM,IAA8B,uBAAwB,IAAI,aAAM,UAAG,GAErG,eAAC,IAAU,IAAC,WAAS,EAAC,QAAQ,SAAO,yBACtB,iCAAS,QAAK,GAAU,wDAEvC,cAAC,IAAU,IAAC,WAAS,EAAC,QAAQ,SAAO,UAE7B,2IAAmI,GAG3I,cAAC,KAAM,IACH,QAAQ,YACR,QAAS,EACT,MAAM,UACN,WAAS,EACT,KAAK,QACL,UAAW,cAAC,KAAY,YAAG,sCAGtB,GAEb,qBAAK,UAAW,EAAQ,aAAM,WAAI,I,iPClDxC,GAAY,aAAW,SAAC,GAAU,MAAC,CACrC,KAAM,CACF,WAAY,EAAM,QAAQ,IAE9B,SAAU,CACN,QAAS,OACT,WAAY,EAAM,QAAQ,MAAM,KAChC,MAAO,EAAM,QAAQ,MAAM,cAE3B,YAAS,GACb,KAAM,CACF,YAAa,EAAM,QAAQ,GAC3B,SAAU,OAmDH,GA1CuB,SAAC,G,IAAE,EAAO,UAAE,EAAO,UAC/C,EAAU,KAChB,OACI,eAAC,IAAM,IACH,QAAS,EACT,MAAI,EACJ,SAAS,KACT,WAAS,EACT,UAAW,EAAQ,KACnB,QACI,IAEC,WAGL,eAAC,IAAW,IAAC,mBAAiB,EAAC,UAAW,EAAQ,UAAQ,WACtD,cAAC,KAAS,CAAC,MAAM,gBAAS,GAC1B,cAAC,IAAU,IAAC,UAAW,EAAQ,MAAI,4CAA4B,GAEnE,cAAC,IAAa,IAAC,UAAQ,aAClB,EACG,eAAC,IAAU,IAAC,QAAQ,QAAQ,UAAU,MAAM,MAAM,WAAS,WACtD,wCACD,iCAAS,EAAQ,WAAI,GAAU,IAAE,+DAChC,sCAA6B,GAGlC,cAAC,IAAU,IAAC,QAAQ,QAAQ,UAAU,MAAM,MAAM,WAAS,UAEnD,wHAAgH,UAG3H,GAEL,cAAC,KAAa,UACV,cAAC,KAAM,IAAC,QAAS,EAAS,MAAM,WAAS,UACpC,cAAM,SACF,WACG,I,ujDChEtB,GAAU,SAAC,EAAc,GAAgB,UAAI,EAAI,IAAR,GACzC,GAAe,SAAC,EAAI,GACtB,OAAQ,GAAM,EAAK,KAAK,MAAc,IAAN,GAE9B,GAAU,SAAO,GAAU,2C,mDAChB,SAAM,KAAY,Q,OAC/B,SADa,SACD,QAAO,SAAC,GAAM,aAAE,QAAQ,IAAI,EAAE,iBA4F/B,GAtFX,SAAY,EAAY,GAAxB,WAQI,KAAJ,MAAQ,iD,+DAES,OADb,IAAI,MAAM,IAAI,KAAK,GAAE,2BACR,GAAM,GAAQ,KAAK,K,OAA1B,EAAO,SACJ,EAAM,E,wBAAG,EAAM,EAAK,QACnB,EAAM,EAAK,GACL,GAAM,KAAY,QAA2B,KAF1B,M,cAEzB,EAAM,SACR,GAAgB,OAAH,QAAG,IAAH,OAAG,EAAH,EAAK,GAAI,KAAK,MAC3B,IAAI,MAAM,IAAI,KAAK,GAAE,8CAA8C,GACnE,GAAM,KAAY,WAAW,KAF7B,M,OAEA,S,wBAL6B,I,+BAgBzC,SAAM,SAAU,EAAa,G,YAAA,c,0FAEZ,OADP,EAAS,GAAQ,KAAK,GAAI,GACnB,GAAM,KAAY,QAAqB,GAAQ,OAAM,SAAC,GAC/D,IAAI,MAAM,yBAA0B,O,cADlC,EAAO,WAGD,EAAK,GAAK,EAAK,GACnB,GAAa,EAAK,GAAI,KAAK,MAC3B,IAAI,MAAM,IAAI,KAAK,GAAE,4CAA4C,GACjE,GAAM,KAAY,WAAW,KAF7B,MADJ,M,OAII,OADA,SACA,GAAO,M,cAEP,IAAI,MAAM,IAAI,KAAK,GAAE,0BAA0B,IAChC,IAAX,QAAiB,GAAM,KAAY,QAAQ,EAAM,SAAO,GAAI,CAAE,GAAI,KAAK,U,OAAtD,S,iBACrB,SAAO,EAAK,G,0BAEb,SAAO,M,yBAQd,KAAJ,IAAM,SAAI,EAAa,GACb,MAAS,GAAQ,EAAK,GAAI,GAC1B,EAAmB,CACb,GAAJ,KAAK,MACD,EAAL,GAED,OAAC,KAAY,QAAQ,EAAQ,GAAK,MAAK,WACjC,EAAR,EAAI,MAAM,IAAI,EAAK,GAAE,0BAA0B,OAQnD,KAAJ,IAAM,SAAC,GAEG,OADA,EAAN,EAAI,MAAM,IAAI,EAAK,GAAE,+BAA+B,GAC7C,KACF,WAAW,GAAQ,EAAK,GAAI,IAC5B,OAAM,eAGN,QAKLU,KAAK,MAAD,iD,2DAES,OADb,IAAI,MAAM,IAAI,KAAK,GAAE,2BACR,GAAM,GAAQ,KAAK,K,OAChC,IADM,EAAO,SACJ,EAAM,EAAG,EAAM,EAAK,OAAQ,IACjC,KAAY,WAAW,EAAK,I,kBAhFhC,KAAK,GAAK,EACV,KAAK,IAAM,G,ujDCoEJ,GA5EK,SAAC,EAAuB,GAClC,MAAgC,mBAAsB,IAArD,EAAW,KAAE,EAAc,KAC5B,EAAiB,mBACrB,EAAa,QAAU,EAEzB,IAAM,EAAiB,uBACnB,SAAO,EAAkB,GAAY,2C,6DACjC,IAAK,EAAS,SAAO,QAAQ,W,iBAEb,O,sBAAA,GAAM,EAAK,mB,OACX,OADN,EAAM,SACA,GAAM,uBACd,GAAU,QACV,EACA,EAAQ,SACR,EAAQ,YACR,EAAQ,GACR,I,OANE,EAAM,SAQZ,IACQ,EAAI,MAAM,OAAO,KAAK,EAAI,KAAK,aAAa,YAAa,SAC/D,MAAO,GACL,IAAI,MAAM,eAAgB,G,qCAG9B,IAAI,MAAM,eAAgB,G,gCAGlC,CAAC,EAAS,IAER,EAAkB,uBACpB,SAAC,GACG,IAAK,EAAS,OAAO,QAAQ,UAiCzB,OAhCiB,SAAf,IACF,SACK,kBACA,MAAK,SAAC,GACH,iCACI,GAAU,QACV,EACA,EAAQ,SACR,EAAQ,YACR,EAAQ,OAGf,MAAK,SAAC,G,MACH,IACQ,EAAI,OAAS,EAAI,KAAK,YAAY,cAClC,EAAe,KAAE,OAAO,EAAe,SAAS,SAAC,EAAK,GAAQ,WAAQ,EAAR,OAC9D,OAAO,KAAK,EAAI,KAAK,YAAY,YAAa,WAE9C,EAAc,SACP,EAAe,WAAO,MACxB,EAAQ,IAAK,EAAI,KAAO,EAAI,KAAK,YAAY,aAAe,KAAK,MAAK,KAE3E,WAAW,EAAc,MAE/B,MAAO,GACL,IAAI,MAAM,eAAgB,OAGjC,OAAM,SAAC,GACJ,IAAI,MAAM,eAAgB,MAG/B,KAEX,CAAC,EAAS,IAGZ,MAAK,CACC,YAAS,EAAe,QACxB,eAAU,EACd,gBAAe,I,miDCxEjB,GAAa,CAAE,SAAS,EAAO,aAAa,GA+DnC,GA7DI,SACf,EACA,EACA,EACA,EACA,QAFA,mBACA,cAGQ,MAAc,cAAL,UACX,EAA4B,mBAA0B,IAArD,EAAS,KAAE,EAAY,KACxB,EAAsB,iBAAwB,IAClD,EAAkB,QAAU,EAC5B,IAAI,EAAkB,kBAAO,GA+C7B,OA7CA,OAAF,YAAE,EAAQ,WACF,IAAC,GAAa,EAAU,OAAS,EACjC,EAAa,SAGb,IACM,IAAD,IAAY,EAAW,OACtB,GAAF,GAAa,EAAU,SAAW,IAAc,EAAU,QAAQ,GAAI,OACpE,MAAkB,EAAQ,YAE1B,YAAK,WACF,EAAgB,SAAY,EAAU,SACvC,EAAY,SAAM,EAAoB,SAAO,CAAE,SAAS,OAC7D,KACH,EAAK,kBACA,MAAK,SAAC,GAAQ,4BAAW,GAAU,QAAmB,EAAK,EAAW,EAAiB,EAAzE,MACd,MAAK,SAAO,GAAG,2C,gEACZ,EAAgB,SAAU,EAC1B,IAAI,MAAM,2BAA4B,GAElC,EAAI,MACJ,EAAI,KAAK,SACT,EAAoB,SACpB,EAAoB,QAAQ,UACD,QAA3B,IAAoB,eAAO,eAAE,QAAQ,MAAO,EAAI,KAAK,QAAQ,GAE7D,IANA,M,cAOO,EAAI,MACX,EAAa,CAAE,QAAS,EAAI,KAAK,QAAS,SAAS,EAAO,aAAa,IACnE,EAAiB,GAAM,EAAgB,EAAI,KAAK,UAAhD,OAFG,M,OAEc,S,2CAErB,EAAa,CAAE,aAAS,EAAW,SAAS,EAAO,aAAa,IAC5D,EAAiB,GAAM,EAAgB,OAAvC,M,OAAiB,S,qCAG5B,OAAM,SAAC,GACJ,EAAgB,SAAU,EAC1B,EAAa,CAAE,aAAS,EAAW,SAAS,EAAO,aAAa,IAChE,IAAI,MAAM,2BAA4B,MAEhD,SACE,UAEL,CAAC,EAAW,EAAS,IAEjB,G,kBCxDE,GAAc,e,2OCRrB,GAAqB,CACvB,QAAS,CACL,QAAS,CACL,KAAM,KAAO,MAEjB,UAAW,CACPC,KAAM,KAAO,KACb,aAAc,WAEd,KAAE,KASR,GAAQ,SACP,IAAI,CACP,QAAO,SACA,GAAK,SAAO,CACf,KAAM,WAIC,IACX,KAAM,aAAY,IAClB,SAAU,aAAY,K,UClCb,GAAO,WACZ,GACA,KAAQ,WAAW,GAAiB,CAEhC,WAAW,IAEd,IAAI,MAAM,wCAGN,GAAkB,SAAC,GAC5B,KAAQ,SAAS,GAAQ,OAAO,SAAS,SAAW,OAAO,SAAS,OAG3D,GAAQ,SAAC,EAAkB,EAAgB,GAClD,GAAF,EAAQ,MAAM,CACV,SAAQ,EACR,OAAM,EACN,MAAK,KCqBEC,GAjBqB,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,MAAOlB,EAAwD,EAAxDA,SAAUmB,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,eACtE,OACI,cAACC,EAAA,EAAD,CAAeC,MAAOC,GAAOC,KAA7B,SACI,cAAC,IAAD,CACIJ,eAAc,aAAIK,SAAU,MAASL,GACrCM,UAAQ,EACRC,WAAS,EACTC,OACI,cAACC,GAAD,CAAQX,QAASA,EAASD,MAAOA,EAAOa,eAAgBX,EAASY,SAAUC,OAAOC,SAASC,OALnG,SASI,mCAAGnC,SCFJoC,GAzByB,SAAC,GAAsB,IAApBlB,EAAmB,EAAnBA,MACvC,OACI,cAAC,IAAD,CACImB,QAAS,cAACC,GAAA,EAAD,CAAkBC,KAAK,OAAOC,UAAW,IAClDC,OACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAnC,SACK1B,GAAS,eAGlBG,eAAgB,CACZK,SAAU,KACVmB,MAAO,CACHC,SAAU,WACVC,OAAQ,IACRC,IAAK,EACLC,KAAM,EACNC,MAAO,OACPC,OAAQ,OACRC,WAAY,iB,0ECFzB,IAAMC,GAAc,SACvBC,EACAJ,EACAC,GAGA,IAAMI,EAAW,IAAIC,KAAoB,CAAEN,QAAOC,WAAUM,UACxD,CACI,CAACH,EAAW,GAAIA,EAAW,IAC3B,CAACA,EAAW,GAAIA,EAAW,KAE/B,CAAEI,QAAS,MAGf,MAAO,CAAEC,UAD6BJ,EAA9BI,UACYC,SADkBL,EAAnBK,SACWC,KADQN,EAATM,OAU1B,SAASC,GACZC,EACAC,EACAC,GAEA,OAAKA,GAAYD,EACRC,IAAYD,EACV,CAEHE,KAAKC,IAAIJ,EAAY,GAAIE,EAAQ,IACjCC,KAAKC,IAAIJ,EAAY,GAAIE,EAAQ,IACjCC,KAAKE,IAAIL,EAAY,GAAIE,EAAQ,IACjCC,KAAKE,IAAIL,EAAY,GAAIE,EAAQ,KAEhCD,IAAcC,EACZ,CAEHC,KAAKC,IAAIJ,EAAY,GAAIC,EAAU,IACnCE,KAAKC,IAAIJ,EAAY,GAAIC,EAAU,IACnCE,KAAKE,IAAIL,EAAY,GAAIC,EAAU,IACnCE,KAAKE,IAAIL,EAAY,GAAIC,EAAU,KAElCA,GAAaC,EACX,CAEHC,KAAKC,IAAIJ,EAAY,GAAIG,KAAKE,IAAIH,EAAQ,GAAID,EAAU,KACxDE,KAAKC,IAAIJ,EAAY,GAAIG,KAAKE,IAAIH,EAAQ,GAAID,EAAU,KACxDE,KAAKE,IAAIL,EAAY,GAAIG,KAAKC,IAAIF,EAAQ,GAAID,EAAU,KACxDE,KAAKE,IAAIL,EAAY,GAAIG,KAAKC,IAAIF,EAAQ,GAAID,EAAU,MAGzD,KA1B4B,KA6BhC,SAASK,KAA4C,IAA3BC,EAA0B,uDAAX,EACtCC,EAAYL,KAAKC,IAAI,EAAGD,KAAKE,IAAI,IAAKE,IAC5C,OAAO,EAAIC,EAAY,IA+BpB,SAASC,GACZC,EACAC,GAEA,IAAMC,EAAWC,GAAYC,UAC7B,OAAKJ,GAAeC,EACVA,EAMH,CAHKD,EAAaA,EAAW,GAAKG,GAAYC,UAAU,GACnDX,KAAKE,IAAIQ,GAAYC,UAAU,GAAIX,KAAKC,IAAIM,EAAW,GAAIC,EAAW,IAAMD,EAAW,MAJtEA,EADUE,EAgE3C,IAAMG,GAAa,CACfC,wBAAsBC,MACtBD,wBAAsBE,KACtBF,wBAAsBG,QACtBH,wBAAsBI,IACtBJ,wBAAsBK,QCzL1B,SAASC,GAAeC,EAAkBC,GAA2C,IAAD,EAC1EC,EAAgC,CAClCC,SAAc,OAALF,QAAK,IAALA,OAAA,EAAAA,EAAOG,UAAW,EAC3BC,QAAS,GACTC,OAAQ,IAEZ,UAAIL,QAAJ,IAAIA,GAAJ,UAAIA,EAAOM,eAAX,aAAI,EAAgBC,UAAW,CAC3B,IAAMC,EAASR,EAAMM,QAAQC,UAAUE,MAAK,SAACC,GAAD,OAAQA,EAAGC,KAAOZ,KAC9DE,EAAS,gBAAkBO,EAAOI,SAC/B,CAAC,IAAD,EACHX,EAAS,gBAAT,OAA2BD,QAA3B,IAA2BA,GAA3B,UAA2BA,EAAOM,eAAlC,aAA2B,EAAgBK,GAE/C,OAAOV,EAuDI,IC3CHY,GD2CG,IACXC,KAbJ,SAAsBC,EAAuBC,EAAiBhB,GAS1D,OARmC,2BAC5BF,GAAeiB,EAAKhB,QAASC,IADD,IAE/BiB,KAAM,OACNC,MAAO,CACH,aAAcF,EAAS,KACvB,eAAgBlC,GAAiBiC,EAAKhC,kBAQ9CoC,MA9BJ,SAAuBJ,EAAuBC,EAAiBhB,GAa3D,OAZmC,2BAC5BF,GAAeiB,EAAKhB,QAASC,IADD,IAE/BiB,KAAM,SACNC,MAAO,CACH,wBAAyB,EACzB,sBAAuB,EACvB,sBAAuBF,EAAS,KAChC,iBAAkBlC,GAAiBiC,EAAKhC,cACxC,gBAAiB,EACjB,eAAgBiC,EAAS,SAqBjCI,QA3CJ,SAAyBL,EAAuBC,EAAiBhB,GAS7D,OARmC,2BAC5BF,GAAeiB,EAAKhB,QAASC,IADD,IAE/BiB,KAAM,OACNC,MAAO,CACH,eAAgBpC,GAAiBiC,EAAKhC,cACtC,aAAciC,EAAS,SAsC/BK,QAxDJ,SAAgCN,EAAuBC,EAAiBhB,GASpE,OARmC,2BAC5BF,GAAeiB,EAAKhB,QAASC,IADD,IAE/BiB,KAAM,OACNC,MAAO,CACH,aAAcF,EAAS,KACvB,eAAgBlC,GAAiBiC,EAAKhC,oB,SCGtC8B,K,cAAAA,E,qBAAAA,E,iBAAAA,E,mBAAAA,Q,KASZ,IAAMS,GAAc,SAACC,EAAgBC,GACjC,MAAM,GAAN,OAAUX,GAAcY,YAAxB,YAAuCF,GAAS,SAAhD,YAA4DC,GAAS,QAGnEE,GAAa,SAACH,EAAgBC,GAAjB,IAAiCG,EAAjC,uDAA0C,EAA1C,gBACZd,GAAce,YADF,YACiBL,GAAS,UAD1B,YACuCC,GAAS,SADhD,YAC4DG,IAEzEE,GAAc,SAACC,GAAD,OAAuBC,QAAQD,GAAOA,EAAIE,kBACxDC,GAAiB,SAACH,EAAUnH,GAE9B,OADemH,EAAII,WAAWC,OAChBxH,QAAO,gBAAGyH,EAAH,EAAGA,SAAH,OAAkBC,uBAAY1H,IAAWyH,EAASE,QAAU3H,KAAQmH,KAAI,qBAAGnB,OAG9F4B,GAAY,SAACD,GAAD,IAAuBE,EAAvB,uDAA8B,EAAGC,EAAjC,uDAAwC,GAAxC,MAA8D,CAC5EH,QACAE,OACAC,SAOG,SAASC,GAAgBZ,EAAUa,GACtC,IAAKd,GAAYC,GAAM,OAAO,EAC9B,IAAIc,EAAUd,EACRe,EAAQC,KAAKC,MAGbC,EAA0B,GAC5BC,EAA0B,KA8G9B,OA5GAN,EACKO,QACAC,UACAC,SAAQ,SAACC,GAGN,IA8QarD,EAAoBsD,EA9Q3BC,EACFF,EAAItC,KAAKyC,YAAchE,wBAAsBK,OACvCyB,GAAY+B,EAAItC,KAAK0C,UAAWJ,EAAItC,KAAK2C,WACzCpC,GAAY+B,EAAItC,KAAK0C,UAAWJ,EAAItC,KAAK4C,WAAaN,EAAItC,KAAKhB,SAezE,GAZK6C,EAAQgB,UAAUL,KAEfX,EADAS,EAAItC,KAAKyC,YAAchE,wBAAsBK,OACnC+C,EAAQiB,UAAUN,GAsQvBvD,EAtQiDqD,EAAIrD,MAsQjCsD,EAtQuDD,EAAItC,KAAK2C,UAuQlG,CACHzC,KAAM,SACN6C,OAAQ,MACR1D,QAASJ,EAAM+D,SAAW,GAC1B7D,QAASF,EAAMG,SAAW,EAC1BH,MAAO,CAAC,GAAD,OAAIA,EAAMgE,KAAV,OAAgBV,GAAiB,SAAjC,wBAAyDtD,EAAMiE,QAAU,WA1Q1DrB,EAAQiB,UACdN,EA0PxB,SAAyBvD,EAAoBD,GACzC,IAAMmE,EAAW,UAAMnE,EAAN,KACjB,MAAO,CACHkB,KAAM,SACNb,QAASJ,EAAM+D,SAAW,GAC1B7D,QAASF,EAAMG,SAAW,EAC1BH,MAAO,CAAC,GAAD,OAAIA,EAAMgE,KAAV,OAAgBE,EAAhB,uBAA0ClE,EAAMiE,QAAU,SA/PjDE,CAAgBd,EAAIrD,MAAsBqD,EAAItC,KAAK4C,WAAaN,EAAItC,KAAKhB,WAMjFsD,EAAItC,KAAKyC,YAAchE,wBAAsBK,OAAQ,CACrD,IAAME,EAAU2B,GAAW2B,EAAItC,KAAK0C,UAAWJ,EAAItC,KAAK2C,WACxDV,EAAcoB,KAAKrE,GACd6C,EAAQyB,SAAStE,KAClBuE,IAAIC,MAAJ,0CAA6CxE,EAA7C,qBAAiEkD,EAAjE,MACAL,EAAUA,EAAQ4B,SAAR,2BAiQ9B,SAA6BC,EAAsB9D,EAAY4C,GAA+B,IAAD,EACnFtD,EAAuB,CACzBgB,KAAM,SACNN,KACA+D,OAAQnB,EACRrD,SAAS,UAAAuE,EAAMzE,aAAN,eAAaG,UAAW,EACjCC,QAAS,GACTC,OAAQ,GACRa,MAAO,IAEPuD,EAAM1D,KAAKhC,cAAgB0F,EAAM1D,KAAKhC,aAAe,IACrDkB,EAASiB,MAAM,kBAAoBpC,GAAiB2F,EAAM1D,KAAKhC,eAEnE,OAAOkB,EA5QoB0E,CAAoBtB,EAAKtD,EAASwD,IAFnC,IAGFnB,SAAUG,GACN1B,GAAce,iBACdgD,EAFe,UAGZvB,EAAItC,KAAK0C,UAHG,YAGUJ,EAAItC,KAAK2C,cAG1CT,GAEJA,EAAWlD,OAEZ,CAAC,IAAD,EAGC8E,GAAe,UAAAxB,EAAIK,iBAAJ,eAAeoB,aAAc,GAEhD,KAAMD,GAAsC,IAAvBA,EAAYE,SAAqC,OAApB1B,EAAI2B,YAAsB,CACxE,IAAMC,EAASC,GAAa7B,EAAI2B,aAChC,OAAQ3B,EAAItC,KAAKyC,WACb,KAAKhE,wBAAsBE,KACvBmF,EAAc,CAACM,GAAiBrE,KAAKuC,EAAItC,KAAMkE,EAAQ5B,EAAIrD,QAC3D,MACJ,KAAKR,wBAAsBG,QACvBkF,EAAc,CACVM,GAAiB/D,QAAQiC,EAAItC,KAAMkE,EAAnC,OAA2C5B,QAA3C,IAA2CA,OAA3C,EAA2CA,EAAKrD,OAChDmF,GAAiB9D,QAAQgC,EAAItC,KAAMkE,EAAnC,OAA2C5B,QAA3C,IAA2CA,OAA3C,EAA2CA,EAAKrD,QAEpD,MACJ,KAAKR,wBAAsBC,MACvBoF,EAAc,CAACM,GAAiBrE,KAAKuC,EAAItC,KAAMkE,EAAQ5B,EAAIrD,SAOvE6E,EAGKzB,SAAQ,SAACgC,EAAMzD,GACZ,IAAM0D,EAAW3D,GAAW,GAAD,OACpB2B,EAAItC,KAAK0C,UADW,YACEJ,EAAItC,KAAK4C,WAAaN,EAAItC,KAAKhB,SACxDsD,EAAItC,KAAK2C,UACT/B,GAEJqB,EAAcoB,KAAKiB,GAGdzC,EAAQyB,SAASgB,GAelBf,IAAIC,MAAJ,oCAAuCc,EAAvC,kBAdAf,IAAIC,MAAJ,6CAAgDc,EAAhD,qBAAqEpC,EAArE,MACAL,EAAUA,EAAQ4B,SAAR,2BA6NtC,SACIC,EACAW,EACAzE,EACA4C,GACW,IAAD,EACJtD,EAAoB,yBAEtBgB,KAAM,OACNf,SAAS,UAAAuE,EAAMzE,aAAN,eAAaG,UAAW,EACjCC,QAAS,GACTC,OAAQ,GACRa,MAAO,IAKJkE,GAXmB,IAYtBzE,KACA+D,OAAQnB,EACR,eAAgBkB,EAAM1D,KAAK4C,WAAac,EAAM1D,KAAKhB,UAEvD,GAAI0E,EAAM1D,KAAKhC,cAAgB0F,EAAM1D,KAAKhC,aAAe,EAAG,CACxD,IAAMuG,EAAUxG,GAAiB2F,EAAM1D,KAAKhC,cAC5C,OAAQkB,EAASgB,MACb,IAAK,OACDhB,EAASiB,MAAT,2BAAsBjB,EAASiB,OAA/B,mBAAuC,eAAiBoE,IACxD,MACJ,IAAK,OACDrF,EAASiB,MAAT,2BAAsBjB,EAASiB,OAA/B,mBAAuC,eAAiBoE,IACxD,MACJ,IAAK,SACDrF,EAASiB,MAAT,2BAAsBjB,EAASiB,OAA/B,mBAAuC,iBAAmBoE,KAMtE,OAAOrF,EAjQ4BsF,CAAoBlC,EAAK+B,EAAMC,EAAU9B,IAF1C,IAGFnB,SAAUG,GACN1B,GAAce,YACdD,EAFe,UAGZ0B,EAAItC,KAAK0C,UAHG,YAGUJ,EAAItC,KAAK2C,cAG1CT,GAEJA,EAAWoC,UAQnCpD,GAAeW,EAAS/B,GAAce,aAAawB,SAAQ,SAACoC,GACpDxC,EAAcyC,QAAQD,GAAS,IAC/BlB,IAAIC,MAAJ,4CAA+CiB,GAAS,CAAExC,kBAC1DJ,EAAUA,EAAQ8C,YAAYF,OAItClB,IAAIC,MAAJ,0CAA6CzB,KAAKC,MAAQF,EAA1D,SACO,EAyHJ,SAAS8C,GAAgBC,EAAsBC,GAClD,IAAKA,EAASC,QAAS,MAAO,CAAEA,QAAS,GAAI3D,OAAQ,IACrD,IAAM4D,EAAaF,EAASC,SAAW,GACjCE,EAAYH,EAAS1D,QAAU,GAC/B8D,EAASJ,EAASI,OAClBC,EAASL,EAASK,OAClBC,EAAuC,GA6B7C,MAAO,CAAEL,QA5BOM,OAAOC,KAAKR,EAASC,SAASQ,QAAO,SAACC,EAAKC,GACvD,IAAMC,EAAK,UAAM5F,GAAc6F,SAApB,YAAgCd,EAAhC,YAAgDY,GACrD9B,EAASqB,EAAWS,GAG1B,OADAL,EAAaK,GAAQC,EACd,2BACAF,GADP,mBAEKE,EAAQ/B,MAEd,IAmBevC,OAlBH6D,EAAUlE,KAAuB,SAACuB,EAAKsD,GAClD,IAAMC,EAAwB,WAAbvD,EAAIpC,MAAqBoC,EAAIjB,UAAa,GACrDyE,EAAM,2BACLxD,GADK,IAERjB,SAAS,2BAAMwE,GAAYrE,GAAU1B,GAAciG,QAASH,IAC5DhG,GAAG,GAAD,OAAKE,GAAciG,QAAnB,YAA8BH,EAA9B,YAAqCtD,EAAI1C,MAW/C,MAPoB,eAAhBkG,EAAO5F,MACS,WAAhB4F,EAAO5F,MACS,WAAhB4F,EAAO5F,MACP4F,EAAOnC,QACgB,kBAAhBmC,EAAO5F,OAEd4F,EAAOnC,OAASyB,EAAaU,EAAOnC,OAAOqC,aACxCF,KAEeZ,SAAQC,U,kCCxRvBc,GAnCgB,CAAC,aAExBrG,GAAI,YACJhF,MAAO,oBACPsL,QAAS,oBACTC,KAAMC,KACNC,MAAO,SACJzB,GAAgB,MAAO0B,KAPH,aAUvB1G,GAAI,YACJhF,MAAO,OACPsL,QAAS,eACTC,KAAMI,KACNF,MAAO,QACJzB,GAAgB,KAAM4B,KAfF,aAkBvB5G,GAAI,SACJhF,MAAO,aACPsL,QAAS,aACTC,KAAMM,KACNJ,MAAO,QACJzB,GAAgB,KAAM8B,MCpC7B7M,GAAS8M,4dAAYC,iBAKzBrD,IAAIC,MAAM,WAAY,CAAE3J,YACjB,IAGMgN,GAAY,CACrBC,QAAQ,GAAD,OAAKH,0EAIHI,GAAeJ,+BACfK,GAAqC,UAKrC1I,GAAc,CACvB2I,QAAS,uCACT1I,UAAW,CAAC,EAAG,IACf2I,WAAY,IACZC,gBAAiB,CACb5J,KAAM,GAEVE,YAAa,EAAE,cAAe,oBAAqB,aAAc,mBAMjE2J,UAAWC,GAAW,GACtBC,YAAY,EACZC,MAAM,EACNC,oBAAqB,EACrBC,aAAc,EACdC,YAAa,EACbC,cAAe,IAGNC,GAA+B,CACxCC,QAAS,EACTC,KAAM,eACN3C,OAAQ,0FACRD,OAAQ,6DAOCf,IAFgC4D,KAAKC,KAAOC,KAAMC,KAAQC,KAAQC,KAAMC,KAAMC,KAEtD,CAACP,KAAKC,KAAOC,KAAMC,KAAQC,KAAQC,KAAMC,KAAMC,OAEvEC,GAAc,IAAIC,IAC3B7B,GAAuB8B,SAAS,KAAO9B,GAAkD,IACzFhL,OAAOC,SAAS8M,QAGpBnF,IAAIC,MAAM,cAAe,CAAE+E,eAAaI,UAAWhC,KCxD5C,IAAMiC,GAAcC,aAAqB,CAC5CC,IAAK,UACL1P,QAAS,OAGA2P,GAAWF,aAA6B,CACjDC,IAAK,OACL1P,QAAS,OAOA4P,GAAiBH,aAAc,CACxCC,IAAK,aACL1P,QAASkF,GAAYgJ,aAMZ2B,GAAgBJ,aAAe,CACxCC,IAAK,qBACL1P,QAAS,KAOA8P,GAA2BC,aAA4B,CAChEL,IAAK,mBACLM,IAAK,YAAc,IAAXA,EAAU,EAAVA,IACEC,EAAOD,EAAIR,IACXU,EAAYF,EAAIH,IACtB,OAAKI,GAASA,EAAKE,OACR,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAME,KAAKC,OAAO5P,QAAO,SAACoG,GAAD,OAAUsJ,EAAU5E,QAAQ1E,EAAKJ,KAAO,OADxC,MAS3B6J,GAA6BN,aAA4B,CAClEL,IAAK,yBACLM,IAAK,YAGD,OLqID,SAAmBI,GACtB,IAAME,EAAM,aAAOF,GAWnB,OAVAE,EAAOlQ,MAAK,SAACmQ,EAAMC,GAEf,OAAID,EAAKlH,YAAcmH,EAAKnH,UACjBjE,GAAWkG,QAAQiF,EAAKlH,WAAajE,GAAWkG,QAAQkF,EAAKnH,WAI7DkH,EAAK/J,GAAKgK,EAAKhK,MAGvB8J,EKlJYG,EADUT,EADX,EAAVA,KACyBF,QASxBY,GAA+BX,aAA4B,CACpEL,IAAK,yBACLM,IAAK,YAAc,IACTC,GAAOD,EADC,EAAVA,KACaR,IACjB,OAAKS,GAASA,EAAKE,KACZF,EAAKE,KAAKC,OAAO5P,QACpB,gBAAG6I,EAAH,EAAGA,UAAWC,EAAd,EAAcA,UAAWqH,EAAzB,EAAyBA,WAAzB,OACIC,4BAA0BtF,QAAQjC,IAAc,GAAKsH,GAAcrH,GAAaA,EAAUsB,OAAS,KAH3E,MAY3BiG,GAA4Bd,aAAmB,CACxDL,IAAK,qBACLM,IAAK,YAED,OADgBA,EADF,EAAVA,KACgBU,IACLvE,QAAiB,SAACC,EAAKxF,GAClC,IAAMkK,EAAUlK,EAAK4C,UAAL,UAAoB5C,EAAK0C,UAAzB,YAAsC1C,EAAK4C,WAAc5C,EAAK0C,WAAa,UAC3F,OAAQ1C,EAAK0C,WAAa8C,EAAId,QAAQwF,IAAY,EAAI1E,EAA/C,uBAAyDA,GAAzD,CAA8D0E,MACtE,OCjFEC,GAAqBtB,aAAa,CAC3CC,IAAK,iBACL1P,QAAS,KAGAgR,GAA+BjB,aAA6C,CACrFL,IAAK,uBACLM,IAAK,YAAc,IACTC,GAAOD,EADC,EAAVA,KACaR,IACjB,OAAKS,GAASA,EAAKE,KACFF,EAAKE,KAAKC,OAAOjE,QAA2C,SAACC,EAAKxF,GAC/E,OAAO,2BACAwF,GADP,mBAEKxF,EAAKJ,GN0If,SAAmCyK,EAAkBrK,GAQxD,IAPA,IAAIsK,EAAStK,EAAKuK,IAEZC,EAAqB,GACrBC,EAA0B,GAIzBH,GAAU,GAAKE,EAASxG,OAASqG,EAAQd,KAAKmB,SAAS1G,QAAQ,CAClE,IAAM2G,EAAcN,EAAQd,KAAKmB,SAAShL,MAAK,SAACkL,GAAD,OAAQA,EAAGC,MAAQP,KAE9DK,GAAeH,EAAS9F,QAAQiG,EAAYE,KAAO,GACnDL,EAASnH,KAAKsH,EAAYE,KAC1BJ,EAAcpH,KAAKsH,EAAYG,MAAMC,cAAcC,QACnDV,EAASK,EAAYJ,KAIrBD,GAAU,EAIlB,OAAOE,EAASzJ,KAAI,SAAC8J,EAAKjF,GAAN,MAAc,CAACiF,EAAKJ,EAAc7E,OMhK/BqF,CAA0B5B,EAAMrJ,OAEhD,IAN6B,MAW3BkL,GAAqBrC,aAAoB,CAClDC,IAAK,sBACL1P,QAAS,OAEA+R,GAAuBtC,aAAc,CAC9CC,IAAK,wBACL1P,SAAS,IAMAgS,GAAyBC,aAAwC,CAC1EvC,IAAK,yBACLM,IACI,SAACkC,GAAD,OACA,YAAc,IACJjC,GAAOD,EADJ,EAAVA,KACkBR,IACjB,IAAKS,EAAM,MAAM,IAAIkC,MAAM,4CAE3B,IAAMvL,EAAOqJ,EAAKE,KAAKC,OAAO9J,MAAK,qBAAGE,KAAgB0L,KACtD,IAAKtL,EAAM,MAAM,IAAIuL,MAAM,yCAE3B,OAAOvL,MAQNwL,GAAsB3C,aAAe,CAC9CC,IAAK,mBACL1P,QAAS,KAIAqS,GAAuBtC,aAAqB,CACrDL,IAAK,yBACLM,IAAK,YAAc,INqEUsC,EMpEnBC,GAAcvC,EADN,EAAVA,KACoBoC,IACxB,MNoEG,CACHd,UAFyBgB,EMnEDC,GNqEP/R,QAAO,SAACgS,GAAD,OAASA,EAAIlH,QAAQ,OAAS,KAAG3D,KAAI,SAAC6K,GAAD,OAASC,SAASD,EAAIE,QAAQ,KAAM,IAAK,OACtGtC,OAAQkC,EAAO9R,QAAO,SAACgS,GAAD,OAASA,EAAIlH,QAAQ,OAAS,KAAG3D,KAAI,SAAC6K,GAAD,OAASC,SAASD,EAAIE,QAAQ,KAAM,IAAK,WM9D/FC,GAA6B5C,aAAsB,CAC5DL,IAAK,qBACLM,IAAK,YAAc,IAAXA,EAAU,EAAVA,IACEC,EAAOD,EAAIR,IACXoD,EAAsB,CAAEtB,SAAU,GAAIlB,OAAQ,IACpD,IAAKH,EAAM,OAAO2C,EAClB,IAAMC,EAAY7C,EAAIgB,IAChB8B,EAAa9C,EAAIe,IAAoBY,cAAcC,OAGzD,GAAIkB,EAAWlI,OAAS1F,GAAYkJ,oBAAqB,OAAOwE,EAGhE,IAAMG,EAAgBD,EAAWE,MAAM,KAAKxS,QAAO,SAACyS,GAAD,OAAOA,EAAErI,OAAS,KAGrE,GAAImI,EAAcnI,OAAS,EAAG,OAAOgI,EAGrC,IAAMM,EAAgBjD,EAAKE,KAAKC,OAC3B5P,QAAO,SAACoG,GACL,IAAMuM,EAAgBN,EAAUjM,EAAKJ,IAErC,OAAOuM,EAAcK,OAAM,SAACC,GAExB,OAAIzM,EAAK8K,MAAMC,cAAcrG,QAAQ+H,IAAS,GAEvCF,EAAc7M,MAAK,uCAAqBgF,QAAQ+H,IAAS,WAGvE1L,KAAI,qBAAGnB,MAGN8M,EAAkBC,MAAMC,KAC1B,IAAIC,IAAIP,EAAc/G,QAAiB,SAACC,EAAKsH,GAAN,6BAAkBtH,GAAlB,aAA0ByG,EAAUa,GAAK/L,KAAI,8CAAkB,MAK1G,OAFAiL,EAAOxC,OAASH,EAAKE,KAAKC,OAAOzI,KAAI,qBAAGnB,MAAahG,QAAO,SAACkT,GAAD,OAASR,EAAc5H,QAAQoI,GAAO,KAClGd,EAAOtB,SAAWrB,EAAKE,KAAKmB,SAAS3J,KAAI,qBAAG8J,OAAejR,QAAO,SAACiR,GAAD,OAAS6B,EAAgBhI,QAAQmG,GAAO,KACnGmB,KAcFe,GAAwB1B,aAAsC,CACvEvC,IAAK,sBACLM,IACI,SAACkC,GAAD,OACA,YAAc,IAAD,EAAVlC,EAAU,EAAVA,IACO1F,EAAQ0F,EAAI4D,GAAyB1B,IACrC2B,EAAS7D,EAAI2C,IAA4BvC,OAAO9E,QAAQ4G,IAAS,EACjE4B,EAAS9D,EAAIH,IAAevE,QAAQ4G,IAAS,EAC7C6B,EACFzJ,EAAM1D,KAAKyC,YAAchE,wBAAsB2O,QAC/C1J,EAAM2J,aAAeC,eAAaC,UAClC,UAAA7J,EAAMzE,aAAN,eAAagE,KAAM,aACvB,MAAO,CACHjD,KAAM0D,EAAM1D,KACZwN,WAAY9J,EAAM2J,WAClBI,aAAa,EACbN,UAAWA,QAAatJ,EACxB6J,WAAYhK,EAAMgK,WAClBT,SACAC,cAKHS,GAAmBxE,aAAwB,CACpDL,IAAK,oBACLM,IAAK,YAAc,IACTC,GAAOD,EADC,EAAVA,KACaR,IACjB,IAAKS,IAASA,EAAKE,KAAM,OAAO,KAChC,IAAMqE,EAAM,OAAGvE,QAAH,IAAGA,OAAH,EAAGA,EAAME,KAAKmB,SAAShL,MAAK,SAACkL,GAAD,OAAoB,IAAZA,EAAGL,OACnD,OAAKqD,EACEA,EAAO/C,IADM,QAoBfgD,GAA2BxC,aAAiD,CACrFvC,IAAK,gBACLM,IACI,SAACyB,GAAD,OACA,YAAc,IACJxB,GAAOD,EADJ,EAAVA,KACkBR,IACXgF,EAAM,OAAGvE,QAAH,IAAGA,OAAH,EAAGA,EAAME,KAAKmB,SAAShL,MAAK,SAACkL,GAAD,OAAQA,EAAGC,MAAQA,KAE3D,IAAKxB,EAAM,MAAM,IAAIkC,MAAM,8CAC3B,IAAKqC,EAAQ,MAAM,IAAIrC,MAAM,6CAE7B,MAAO,CACHqC,SACAlU,SAAU,CACNgR,SAAUrB,EAAKE,KAAKmB,SAAS9Q,QAAO,SAACgR,GAAD,OAAQA,EAAGL,MAAQM,KAAK9J,KAAI,SAAC6J,GAAD,OAAQA,EAAGC,OAC3ErB,OAAQH,EAAKE,KAAKC,OAAO5P,QAAO,SAACkU,GAAD,OAAQA,EAAGvD,MAAQM,KAAK9J,KAAI,qBAAGnB,YAetEmO,GAAgC1C,aAA8C,CACvFvC,IAAK,mBACLM,IACI,SAACyB,GAAD,OACA,YAAc,IAAXzB,EAAU,EAAVA,IACOuC,EAAcvC,EAAIqC,IAClBmC,EAASxE,EAAIyE,GAAyBhD,IACtCmD,EAAc5E,EAAI2C,IAElBkC,EAAYjN,QAAQoI,EAAI8E,IAAsBxJ,QAAQmG,IAAQ,GAE9DsD,EAAWnN,QAAQ2K,EAAYjB,SAAShG,QAAQmG,IAAQ,GAK9D,MAAO,CACH+C,SACAX,OAJWe,EAAYtD,SAAShG,QAAQmG,IAAQ,EAKhDsD,WACAF,iBAWHG,GAAsBvF,aAA0B,CACzDC,IAAK,mBACL1P,QAAS,OAQAiV,GAAsBxF,aAAe,CAC9CC,IAAK,mBACL1P,QAAS,KAGA8U,GAAuB/E,aAAmB,CACnDL,IAAK,yBACLM,IAAK,YACD,OAAOA,EADO,EAAVA,KACOiF,IACNzU,QAAO,SAACgS,GAAD,OAASA,EAAIlH,QAAQ,OAAS,KACrC3D,KAAI,SAAC6K,GAAD,OAASC,SAASD,EAAIE,QAAQ,KAAM,IAAK,UAI7CwC,GAAqBnF,aAAmB,CACjDL,IAAK,kBACLM,IAAK,YAAc,IACTC,GAAOD,EADC,EAAVA,KACaR,IACjB,OAAKS,GAASA,EAAKE,KACb,GAAN,oBAAWF,EAAKE,KAAKmB,SAAS3J,KAAI,gBAAG8J,EAAH,EAAGA,IAAH,kBAAkBA,OAApD,aAA+DxB,EAAKE,KAAKC,OAAOzI,KAAI,gBAAGnB,EAAH,EAAGA,GAAH,kBAAiBA,QADrE,M,UCxQzB2O,GAJD,I,QAAIC,GAAW,CACzBC,cAAe,ICObC,GAAc,IAAIC,GAAiB,QAAS,MAClDD,GAAYE,QAOL,IAAMC,GAA2BC,aAA2B,CAC/DhG,IAAK,gBACL1P,QAAS,IAIA2V,GAAyBD,aAA2B,CAC7DhG,IAAK,oBACL1P,QAAS,IAQA4V,IALgBnG,aAAe,CACxCC,IAAK,kBACL1P,QAAS,KAGsBiS,aAAoC,CACnEvC,IAAK,cACLM,IACI,SAAC1G,GAAD,8CACA,2CAAAjJ,EAAA,0DAAS2P,EAAT,EAASA,KAGDyF,GAAyBnM,IAE7B0G,EAAI2F,GAAuBrM,IAErBuM,EAAO7F,EAAIL,IACXM,EAAOD,EAAIR,IAIboD,EAAsB,CACtB7P,OAAQmR,eAAa4B,SAEpB7F,GAAS4F,GAASvM,EAf3B,yCAe6CsJ,GAf7C,cAkBUmD,EAlBV,UAkBwB9F,EAAK+F,SAlB7B,mBAkByC/F,QAlBzC,IAkByCA,OAlBzC,EAkByCA,EAAMgG,QAlB/C,mBAkB0DhG,QAlB1D,IAkB0DA,OAlB1D,EAkB0DA,EAAMzJ,GAlBhE,YAkBsE8C,GAlBtE,UAmB2BgM,GAAYtF,IAAiB+F,GAnBxD,aAmBUG,EAnBV,kDAqByBA,GArBzB,mCA2B6BC,GAAcC,SAAS,CAAEC,SAAU,IAAK,kBACzDR,EACKS,kBACAC,MAAK,SAACC,GAAD,OACFC,wBACIhJ,GAAUC,QACV8I,EACAvG,EAAK+F,SAHI,OAIT/F,QAJS,IAITA,OAJS,EAITA,EAAMgG,QAJG,OAKThG,QALS,IAKTA,OALS,EAKTA,EAAMzJ,GACN8C,EACApE,GAAY4I,kBAtCpC,SA2Bc4I,EA3Bd,UA0CuBA,EAAOC,QAAWD,EAAOE,OAGpChE,EAAO7P,OAASmR,eAAa2C,YACzBH,EAAOC,QAAUD,EAAOC,OAAO/L,OAAS,IACxCgI,EAAOkE,MAAQJ,EAAOC,OAAOhP,KAAI,SAACoP,GAAD,OAAOC,KAAKC,UAAUF,MAAIG,KAAK,UAGxEtE,EAAM,2BACCA,GADD,UAEC8D,EAAOE,YAFR,aAEC,EAAaH,eApD5B,mDAuDQtM,IAAI2M,MAAM,mBAAV,MACAlE,EAAO7P,OAASmR,eAAa2C,YAC7BjE,EAAOkE,MAAQK,OAAO,EAAD,IAzD7B,eA6DQC,uBAAqB9L,QAAQsH,EAAO7P,SAA2B,GAC/DuS,GAAY+B,IAAiBtB,EAAUnD,GA9D/C,kBAiEWA,GAjEX,2DADA,0DCrBF0C,GAAc,IAAIC,GAAiB,OAAQ,OACjDD,GAAYE,QAUZ,IAAM8B,GAAsB,SAAClH,GACzB,OAAOA,EAAOjE,QAAuB,SAACC,EAAKxF,GACvC,IAAKA,EAAK2C,UAAW,OAAO6C,EAC5B,IAAMmL,EAAwB,CAAC3Q,EAAK2C,UAAW3C,EAAKyC,YAAchE,wBAAsBK,QACxF,OAAK0G,EAAI9F,MAAK,SAACkR,GAAD,OAAQC,mBAAQD,EAAID,MACtBnL,EADuC,GAAN,oBAAWA,GAAX,CAAgBmL,MAE9D,KAOMG,GAA6B3H,aAAyB,CAC/DL,IAAK,uBACLM,IAAK,YAAc,IACT2H,GAAU3H,EADF,EAAVA,KACgBU,IACpB,OAAO4G,GAAoBK,MAatBC,IAR+B7H,aAAyB,CACjEL,IAAK,8BACLM,IAAK,YAAc,IACT6H,GAAa7H,EADL,EAAVA,KACmBF,IACvB,OAAOwH,GAAoBO,MAII5F,aAA+C,CAClFvC,IAAK,sBACLM,IACI,mCAAEtB,EAAF,KAAQoJ,EAAR,mDACA,+CAAAzX,EAAA,yDAAS2P,EAAT,EAASA,IACCC,EAAOD,EAAIR,IACXqG,EAAO7F,EAAIL,IACZM,GAAS4F,GAASnH,EAH3B,yCAGwC,MAHxC,cAIUkE,EAAoB,CACtBlE,OACA3L,OAAQgV,kBAAgBjC,SAItBC,EAVV,UAUwB9F,EAAK+F,SAV7B,YAUyCtH,GAVzC,SAW2B4G,GAAYtF,IAAe+F,GAXtD,YAWUG,EAXV,kDAayBA,GAbzB,yBAkByBC,GAAcC,SAAS,CAAEC,SAAU,IAAK,kBACzDR,EACKS,kBACAC,MAAK,SAACC,GAAD,OACFwB,0BAAgBvK,GAAUC,QAAS8I,EAAKvG,EAAK+F,SAAUtH,EAAMoJ,EAAU5S,GAAY4I,eAEtFmK,OAAM,SAACC,GACJ/N,IAAIC,MAAM,0BAA2B8N,SAzBrD,YAkBUxB,EAlBV,UA6BmBA,EAAOC,OA7B1B,wBA8BQ/D,EAAO7P,OAASgV,kBAAgBI,MAChCvF,EAAOkE,MAAQ,8BA/BvB,kBAgCelE,GAhCf,YAmCUwF,GAAW,UAAA1B,EAAOE,YAAP,eAAaoB,iBAAb,qCAEJtB,EAAOE,YAFH,aAEJ,EAAaoB,iBAFT,IAGPjV,OAAQgV,kBAAgBM,QAE5BzF,GACO7P,SAAWgV,kBAAgBM,MAzC5C,kCAyCyD/C,GAAY+B,IAAetB,EAAUqC,GAzC9F,iCA0CWA,GA1CX,4CADA,0DC3CKE,GAA2B7I,aAAe,CACnDC,IAAK,qBACL1P,QAAS,KAEAuY,GAA0B7C,aAAkC,CACrEhG,IAAK,oBACL1P,QAAS,OAEAwY,GAAkBzI,aAAiB,CAC5CL,IAAK,sBACLM,IAAK,YAID,IAJe,IACTyI,GAAUzI,EADF,EAAVA,KACgBsI,IAGX9L,EAAM,EAAGA,EAAMzB,GAAaH,OAAQ4B,IACzC,GAAIiM,EAAQnN,QAAQkB,GAAO,EAAG,OAAOA,EAEzC,OAAO,KAoBFoH,GAA2B3B,aAAsC,CAC1EvC,IAAK,aACLM,IACI,SAAC0I,GAAD,OACA,YAA6B,IAA1B1I,EAAyB,EAAzBA,IACOpJ,EAAOoJ,EAAIgC,GAAuB0G,IAClCnG,EAAcvC,EAAIqC,IAElBsG,EAAe/H,4BAA0BtF,QAAQ1E,EAAKyC,YAAc,EACpEuP,EAAiBD,GAAgB/R,EAAKyC,YAAchE,wBAAsB2O,OAG1E6E,EAAe7I,EAAIH,IAAevE,QAAQoN,IAAW,EAIrD9F,EAAwB,CAC1BhM,OACAkS,aAJiBlR,QAAQ2K,EAAYnC,QAAUmC,EAAYnC,OAAO9E,QAAQoN,IAAW,GAKrFG,eACAvE,YAAY,EACZL,WAAYC,eAAa6E,eACzBC,gBAAiBjB,kBAAgBgB,gBAGrC,GAAIH,EAAgB,CAChB,IAAMK,EAAmBjJ,EAAIkJ,aAAOtD,GAAoBhP,EAAK0C,aAC7D,GAAIqP,EAAc,CAAC,IAAD,EACRQ,EAAoBnJ,EACtBkJ,aACItB,GAAwB,CACpBhR,EAAK2C,UACL3C,EAAKyC,YAAchE,wBAAsBK,WAIrDkN,EAAOoG,gBACyB,aAA5BG,EAAkBC,MACZrB,kBAAgBsB,UAChB,UAAAF,EAAkBG,gBAAlB,eAA4BvW,SAAUgV,kBAAgBgB,eAChC,aAA5BI,EAAkBC,QAAsBxG,EAAOrJ,UAAY4P,EAAkBG,UAGrF1G,EAAOqB,WACwB,aAA3BgF,EAAiBG,MAAuBlF,eAAamF,SAAWJ,EAAiBK,SAASvW,OAG1F6D,EAAKyC,YAAchE,wBAAsBkU,OAAM3G,EAAOqB,WAAeC,eAAaC,SAEtFvB,EAAO0B,WACH1B,EAAOqB,aAAeC,eAAaC,SAAWvB,EAAOoG,kBAAoBjB,kBAAgBsB,SAC9D,aAA3BJ,EAAiBG,QAAsBxG,EAAO/M,MAAQoT,EAAiBK,UAG/E,OAAO1G,MAON4G,GAA0BzJ,aAAmC,CACtEL,IAAK,sBACLM,IAAK,YAAwC,IACnCC,GAAOD,EAD2B,EAApCA,KACaR,IACjB,OAAKS,GAASA,EAAKE,MAASF,EAAKE,KAAKsJ,MACvBxJ,EAAKE,KAAKsJ,MAAMtN,QAAiC,SAACC,EAAKsN,GAClE,IAAMC,EAAUD,EAAK1R,OAAOmE,QAAiB,SAACC,EAAKwN,GAC/C,IAAMC,EAAM5J,EAAKE,KAAKC,OAAO9J,MAAK,gBAAGwT,EAAH,EAAGA,UAAH,OAAmBA,GAAaA,IAAcF,EAAGpT,MACnF,OAAKqT,EACA,uBAAWzN,GAAX,CAAgByN,EAAIrT,KADR4F,IAElB,IACH,OAAO,2BACAA,GADP,mBAEKsN,EAAKlT,GAAKmT,MAEhB,IAXiD,MCxG/CI,GAAgBtK,aAAgB,CACzCC,IAAK,gBACL1P,QAASkF,GAAY8I,YAMZgM,GAAevK,aAAoB,CAC5CC,IAAK,eACL1P,QAASkF,GAAY6I,kBAGZkM,GAAcxK,aAAqB,CAC5CC,IAAK,cACL1P,QAAS,OAGAka,GAAezK,aAAa,CACrCC,IAAK,eACL1P,QAAS,KAGAma,GAAgB1K,aAAc,CACvCC,IAAK,gBACL1P,SAAS,IAQAoa,GAAuBrK,aAAkD,CAClFL,IAAK,2BACLM,IAAK,YAID,IAJe,IAETqK,GAAmBrK,EAFX,EAAVA,KAEyBsK,IACzBC,EAAkD,KAC7C/N,EAAM,EAAGA,EAAM6N,EAAiBzP,OAAQ4B,IAAO,CAAC,IAAD,EAE7B,EADjBtD,EAAMmR,EAAiB7N,GAC7B,aAAItD,EAAIrD,aAAR,aAAI,EAAW0U,OACXA,EAASnW,GAAUc,GAAYb,YAAakW,EAA1B,UAAkCrR,EAAIrD,aAAtC,aAAkC,EAAW0U,QAGvE,OAAOA,KASFD,GAA8BvK,aAA+B,CACtEL,IAAK,0BACLM,IAAK,YAAc,IAAXA,EAAU,EAAVA,IAIEwK,EADqBxK,EAAIK,IAE1B1I,KAAI,gBAAGnB,EAAH,EAAGA,GAAH,OAAYwJ,EAAI4D,GAAyBpN,OAC7ChG,QAAO,qBAAGyT,aAAgCC,eAAaC,WACtDsG,EAAUD,EAAa7S,KAAI,gBAAWnB,EAAX,EAAGI,KAAQJ,GAAX,OAAsBwJ,EAAIuI,GAAwB/R,OAWnF,OATegU,EAAarO,QAA6B,SAACC,EAAKlD,EAAKsD,GAChE,IAAMhG,EAAK0C,EAAItC,KAAKJ,GACdoM,EAA0B,2BACzB1J,GADyB,IAE5B2B,YAAa4P,EAAQjO,GACrBkH,IAAKlN,IAET,MAAM,GAAN,oBAAW4F,GAAX,CAAgBwG,MACjB,OAQE8H,GAAiBjL,aAAoB,CAC9CC,IAAK,WACL1P,QAAS,OAOA2a,GAAalL,aAA8C,CACpEC,IAAK,aACL1P,QAAS,OAMA4a,GAAiBnL,aAAuB,CACjDC,IAAK,iBACL1P,QAAS,CAACkF,GAAYC,UAAU,GAAID,GAAYC,UAAU,MAOjD0V,GAAiB9K,aAA+E,CACzGL,IAAK,SACLM,IAAK,YAAc,IAAXA,EAAU,EAAVA,IACJ,MAAO,CACH7L,KAAM6L,EAAI4K,IACVL,OAAQvK,EAAI2K,KAAezV,GAAYb,gBClGpCyW,ICpBkB/K,aAAsB,CACnDL,IAAK,aACLM,IAAK,YAAc,IAAXA,EAAU,EAAVA,IACEnM,EAAWmM,EAAIgK,IACfhM,EAAYgC,EAAI+J,IAChBgB,EAAc/K,EAAI0K,IAClBxM,EAAa8B,EAAIJ,IACjB5H,EAASgI,EAAIsK,IAEb1H,EAAsB,GAY5B,OAXK1E,IAAY0E,EAAOoI,EAAI,GACxBnX,IACA+O,EAAOqI,EAAI,CAACpX,EAASI,UAAWJ,EAASK,SAAUL,EAASM,KAAMN,EAASqX,QAASrX,EAASsX,QAC7FnN,GAAaA,EAAUxH,KAAOtB,GAAY8I,UAAUxH,KAAIoM,EAAOrS,EAAIyN,EAAUxH,IAC7EuU,EACAnI,EAAOwI,EAAIL,EAGXnI,EAAOyI,EAAIrT,EAAOL,KAAI,SAACuB,GAAD,OAASA,EAAItC,KAAKJ,MAE5C2D,IAAIC,MAAM,qCAAsCwI,GACzCA,KDrBE,WACb,MAAgC0I,aAAeZ,IAA/C,mBAAOa,EAAP,KAAiBC,EAAjB,KACMC,EAAcC,aAAelC,IAC7BvJ,EAAOyL,aAAelM,IACtBmM,EAAkBC,aAAkB/L,IAEpCgM,EAAU,SAACC,GACE,OAAXA,GAAmBP,IAAaO,GAAWL,EAAYK,KAC3DC,EAAgBC,MAAM,UAAW,YACjCR,EAAYM,GACZH,EAAgBF,EAAYK,MAOhC,MAAO,CAAED,UAASI,UALA,WACdF,EAAgBC,MAAM,UAAW,oBAC7B/L,GAAQA,EAAKE,KAAK+L,aAAaL,EAAQ5L,EAAKE,KAAK+L,iBE8D9CC,GAhES,SAACC,EAA4BC,GACjD,MAAkCf,aAAe9L,IAAjD,mBAAOyB,EAAP,KAAgBqL,EAAhB,KACMC,EAAeX,aAAkB/L,IACjC2M,EAAUZ,aAAkBjM,IAC5B8M,EAAqBf,aAAehE,IACpCgF,EAAoBhB,aAAe7K,IAEnC8L,EAAcf,aAAkB3G,IAC9BgH,EAAcnB,KAAdmB,UAEFW,EAAWC,uBAAY,WACzB1S,IAAIC,MAAM,uBACX,IAIH0S,qBAAU,aACAT,GAAYpL,GAAaoL,GAAYpL,GAAWoL,EAAS7V,KAAOyK,EAAQzK,KAC1EoW,IAEJN,EAAeD,GAAY,QAC5B,CAACA,IACJS,qBAAU,WAENN,EAAQJ,GAAY,QACrB,CAACA,IAGJ,IAAMW,EAAoBC,cAAkB,gBAAGC,EAAH,EAAGA,SAAH,OAAkB,SAAC3T,GAC3D2T,EAASC,YAAYtH,GAAoBtM,QAGvC6T,EAAoBH,cAAkB,gBAAGC,EAAH,EAAGA,SAAH,OAAkB,SAAC5Q,GAC3D4Q,EAASC,YAAYtF,GAAwBvL,QAOjDyQ,qBAAU,WACD7L,GAAYA,EAAQd,MAIjBc,EAAQvC,OACR0O,SAAS5b,MAAQyP,EAAQvC,MAE7B6N,EAAa,IACbN,IACAU,EAAY1L,EAAQd,KAAKmB,SAAS9Q,QAAO,SAACgR,GAAD,OAASA,EAAGqD,aAAWlN,KAAI,SAAC6J,GAAD,kBAAaA,EAAGC,WARpFkL,EAAY,IACZS,SAAS5b,MAAQ,UAStB,CAACyP,IAGJ6L,qBAAU,WACNL,EAAmB9U,IAAIwV,KACxB,CAACV,IAEJK,qBAAU,WACNJ,EAAkB/U,IAAIoV,KACvB,CAACL,KCxEFW,GAAYC,aAAW,SAACzb,GAAD,MAAY,CACrC0b,cAAe,CAGX9Z,OAAQ,OACR+Z,QAAS,OACTC,cAAe,UAEnBxc,OAAQ,CACJyc,SAAU,GAEd/c,KAAM,CACFqD,QAASnC,EAAM8b,QAAQ,EAAG,EAAG,EAAG,IAEpCC,gBAAiB,CACbC,UAAW,UAEfC,cAAe,CACX9Z,QAASnC,EAAM8b,QAAQ,GACvBE,UAAW,UAEfjd,KAAM,OAgCKmd,GAzBmB,WAC9B,IAAMC,EAAUX,KAEhB,OACI,eAACY,EAAA,EAAD,CAAWC,UAAWF,EAAQT,cAAevb,SAAS,KAAtD,UACI,qBAAKkc,UAAWF,EAAQ/c,SACxB,eAACkd,GAAA,EAAD,CAAOD,UAAWF,EAAQrd,KAA1B,UACI,qBAAKud,UAAWF,EAAQF,cAAxB,SACI,qBAAKI,UAAWF,EAAQpd,KAAMwd,IAA8B,uBAAwBC,IAAI,WAE5F,cAACrb,EAAA,EAAD,CAAYsb,WAAS,EAACrb,QAAQ,QAA9B,iEAGA,eAACD,EAAA,EAAD,CAAYsb,WAAS,EAACrb,QAAQ,QAA9B,mCAC0B,cAACsb,GAAA,EAAD,CAAM9b,KAAI,UAAKkL,GAAL,OAAV,wCAD1B,+BAIA,qBAAKuQ,UAAWF,EAAQJ,gBAAxB,SACI,cAAC,GAAD,CAAiBpc,MAAK,YAAeiB,KAAI,UAAKkL,GAAL,OAAwB6Q,MAAI,SAG7E,qBAAKN,UAAWF,EAAQ/c,a,UCtD9Boc,GAAYC,aAAW,iBAAO,CAChC3c,KAAM,CACF8C,OAAQ,OACRL,SAAU,YAGdqb,UAAW,GACXC,QAAS,CACLhb,WAAY,OACZyH,QAAS,GACT9H,OAAQ,EACRsb,UAAW,aACXC,eAAgB,cAChB,UAAW,CACPC,WAAY,eAEhB,eAAgB,CACZpb,OAAQ,GACRqb,OAAQ,SACRC,UAAW,mCACXC,aAAc,mCACdC,OAAQ,aACRzb,MAAO,OACP,UAAW,CACPub,UAAW,+BACXC,aAAc,iCAGtB,aAAc,CACVxb,MAAO,GACPsb,OAAQ,SACRI,WAAY,mCACZC,YAAa,mCACbF,OAAQ,aACRxb,OAAQ,OACR,UAAW,CACPyb,WAAY,+BACZC,YAAa,iCAGrB,aAAc,CACVF,OAAQ,cACR,UAAW,CACPG,YAAa,qBAsDdC,GArCiC,SAAC,GASxB,IARrBC,EAQoB,EARpBA,KACAC,EAOoB,EAPpBA,OACAC,EAMoB,EANpBA,OACAxM,EAKoB,EALpBA,MACAyM,EAIoB,EAJpBA,QACAC,EAGoB,EAHpBA,YACAC,EAEoB,EAFpBA,QACAC,EACoB,EADpBA,QAEM5B,EAAUX,KACVwC,EAAiBC,mBAAQ,kBAAMP,IAAQ,CAACA,IACxCQ,EAAiBD,mBAAQ,kBAAMN,IAAQ,CAACA,IAC9C,OAAKF,EAIG,qBAAKpB,UAAWF,EAAQrd,KAAxB,SACI,eAAC,KAAD,CACIud,UAAWF,EAAQS,UACnBuB,iBAAkBhC,EAAQU,QAC1B1L,MAAOA,EACPyM,QAASA,EACTC,YAAaA,EACbC,QAASA,EACTC,QAASA,EACTK,WAAY,CAAEC,SAAU,UACxBC,WAAY,CAAED,SAAU,UAT5B,UAWKL,EACAE,OAhBN,qBAAK7B,UAAWF,EAAQrd,KAAxB,SAAgC8e,GAAuB,UAAZA,EAAuCM,EAAjBF,K,oBCzE1ExC,GAAYC,aAAW,SAACzb,GAAD,MAAY,CACrClB,KAAM,CACF8C,OAAQ,OACR+Z,QAAS,OACTC,cAAe,SACfyC,SAAU,UAEdxf,OAAQ,CACJ0f,KAAM,OAEVC,KAAM,GACNC,YAAa,CACTld,SAAU,WACV8c,SAAU,SACVxC,SAAU,GAEd6C,YAAa,CACTld,OAAQ,IACRK,WAAY7B,EAAM2e,QAAQC,UAAUnf,KACpC2L,MAAOpL,EAAM2e,QAAQC,UAAUC,aAC/Btd,SAAU,WACVE,IAAK,EACLqd,MAAO,OA2CAC,GAnC+B,SAAC,GAA+B,IAA7BP,EAA4B,EAA5BA,KACvCrC,EAAUX,KAChB,EAA8BwD,mBAAiB,GAA/C,mBAAOC,EAAP,KAAkBC,EAAlB,KAKA,OACI,sBAAK7C,UAAWF,EAAQrd,KAAxB,UACI,cAACqgB,GAAA,EAAD,CACIC,MAAOH,EACP5C,UAAWF,EAAQqC,KACnBa,SARS,SAAClF,EAAmDmF,GACrEJ,EAASI,IAQDC,eAAe,UACfC,UAAU,UACVpe,QAAQ,YACR,aAAW,0BAPf,SASKod,EAAK1Y,KAAI,SAAC2Z,EAAK9U,GAAN,OACN,cAAC+U,GAAA,EAAD,CAAwB7P,MAAO4P,EAAI5P,MAAOuP,MAAOzU,GAAjD,cAAiBA,SAGxB6T,EAAK1Y,KAAI,WAAY6Z,GAAZ,IAAGP,EAAH,EAAGA,MAAH,OACN,qBAEI/C,UAAWF,EAAQsC,YACnBnd,MAAO,CAAEqa,QAASgE,IAAQV,EAAY,QAAU,QAHpD,SAKKG,GALL,cACgBO,WCdjBC,GA/BM,WACjB,MAAgCnG,aAAeZ,IAA/C,mBAAOa,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,aAAezL,IAAjD,mBAAOK,EAAP,KAAkBqM,EAAlB,KACA,EAA0BjB,aAAepB,IAAzC,mBAAOpD,EAAP,KAAc4K,EAAd,KAEMnW,EAAc,SAACmI,GACjBqI,EAAgBC,MAAM,UAAW,gBAC7BlF,GAAO4K,EAAS,IACH,OAAbnG,GAAmBC,EAAY,MACnCe,EAAarM,EAAU1P,QAAO,SAACgG,GAAD,OAAQA,IAAOkN,OAE3CrJ,EAAW,SAACqJ,GAEd,GADAqI,EAAgBC,MAAM,UAAW,aAC7B9L,EAAUtF,SAAW1F,GAAYmJ,aAGjC,OAFA0N,EAAgBC,MAAM,QAAS,wBAC/B0F,EAAS,QAAD,OAASxc,GAAYmJ,aAArB,mCAIRyI,GAAO4K,EAAS,IACH,OAAbnG,GAAmBC,EAAY,MACnCe,EAAahJ,MAAMC,KAAK,IAAIC,IAAJ,uBAAYvD,GAAZ,CAAuBwD,QAOnD,MAAO,CAAEnI,cAAalB,WAAUsX,YALZ,SAACjO,GACbxD,EAAU5E,QAAQoI,IAAQ,EAAGnI,EAAYmI,GACxCrJ,EAASqJ,M,UC/BhB2J,GAAYC,aAAW,iBAAO,CAChCsE,OAAQ,CACJC,UAAW,SACX1W,QAAS,IAEb2W,YAAa,CACTC,WAAY,YAyBLC,GArB4C,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAC1DlE,EAAUX,KAChB,IAAK6E,GAA0B,IAAjBA,EAAMtX,OAAc,OAAO,+BAAOqX,IAChD,IAAMpd,EAAYqd,EACblP,MAAM,KACNrL,KAAI,SAACwa,GAAD,OAAOA,EAAEvQ,UACbpR,QAAO,SAAC2hB,GAAD,OAAOA,GAAKA,EAAEvX,OAAS,KAC9BsM,KAAK,KACJkL,EAASC,aAAe,CAAEJ,OAAMC,MAAOrd,IAE7C,OACI,+BACKud,EAAOza,KAAI,SAACsT,EAAGzO,GAAJ,OACR,sBAA+B0R,UAAWjD,EAAEqH,MAAQtE,EAAQ8D,YAAc9D,EAAQ4D,OAAlF,SACK3G,EAAEgH,MADP,oBAAwBzV,U,oBC7BzB,QACX,eAAC,IAAM,SAAQ,WACX,wBAAQ,aAAa,qBAAqB,GAAG,MAAM,GAAG,MAAM,EAAE,YAAK,GACnE,wBAAQ,aAAa,qBAAqB,GAAG,MAAM,GAAG,OAAO,EAAE,YAAK,GACpE,wBAAQ,aAAa,qBAAqB,GAAG,KAAK,GAAG,KAAK,EAAE,YAAK,GACjE,wBAAQ,aAAa,qBAAqB,GAAG,OAAO,GAAG,KAAK,EAAE,YAAK,GACnE,wBAAQ,aAAa,qBAAqB,GAAG,OAAO,GAAG,OAAO,EAAE,YAAK,UAAG,GAE5E,YCRW,QACX,cAAC,IAAM,SAAQ,UACX,sBACI,EAAE,23BACF,SAAS,gBAAS,SACpB,GAEN,WCPW,QACX,eAAC,IAAM,SAAQ,WACX,wBAAQ,aAAa,qBAAqB,GAAG,IAAI,GAAG,KAAK,EAAE,UAAG,GAC9D,wBAAQ,aAAa,qBAAqB,GAAG,KAAK,GAAG,IAAI,EAAE,UAAG,GAC9D,wBAAQ,aAAa,qBAAqB,GAAG,KAAK,GAAG,KAAK,EAAE,UAAG,GAC/D,sBAAM,EAAE,0JAAmJ,UAAG,GAElK,Y,ICPW,KACX,eAAC,IAAM,SAAQ,WACX,sBAAM,EAAE,iEAA0D,GAClE,sBAAM,EAAE,IAAI,EAAE,IAAI,MAAM,IAAI,OAAO,UAAG,GACtC,sBAAM,EAAE,KAAK,EAAE,IAAI,MAAM,IAAI,OAAO,UAAG,GACvC,sBAAM,EAAE,IAAI,EAAE,KAAK,MAAM,IAAI,OAAO,UAAG,GACvC,sBAAM,EAAE,KAAK,EAAE,KAAK,MAAM,IAAI,OAAO,UAAG,GACxC,sBAAM,EAAE,KAAK,EAAE,KAAK,MAAM,IAAI,OAAO,UAAG,GACxC,sBAAM,EAAE,KAAK,EAAE,KAAK,MAAM,IAAI,OAAO,UAAG,GACxC,sBAAM,EAAE,KAAK,EAAE,IAAI,MAAM,IAAI,OAAO,UAAG,GACvC,sBAAM,EAAE,KAAK,EAAE,IAAI,MAAM,IAAI,OAAO,UAAG,GACvC,sBAAM,EAAE,IAAI,EAAE,KAAK,MAAM,IAAI,OAAO,UAAG,GACvC,sBAAM,EAAE,IAAI,EAAE,KAAK,MAAM,IAAI,OAAO,UAAG,GACvC,sBAAM,EAAE,IAAI,EAAE,KAAK,MAAM,IAAI,OAAO,UAAG,GACvC,sBAAM,EAAE,KAAK,EAAE,IAAI,MAAM,IAAI,OAAO,UAAG,GACvC,sBAAM,EAAE,KAAK,EAAE,IAAI,MAAM,IAAI,OAAO,UAAG,GACvC,sBAAM,EAAE,KAAK,EAAE,KAAK,MAAM,IAAI,OAAO,UAAG,GACxC,sBAAM,EAAE,KAAK,EAAE,KAAK,MAAM,IAAI,OAAO,UAAG,GACxC,sBAAM,EAAE,KAAK,EAAE,KAAK,MAAM,IAAI,OAAO,UAAG,GACxC,sBAAM,EAAE,KAAK,EAAE,KAAK,MAAM,IAAI,OAAO,UAAG,GACxC,sBAAM,EAAE,KAAK,EAAE,KAAK,MAAM,IAAI,OAAO,UAAG,GACxC,sBAAM,EAAE,KAAK,EAAE,KAAK,MAAM,IAAI,OAAO,UAAG,UAAG,GAE/C,U,iNCvBW,QACX,eAAC,IAAM,SAAQ,WACX,oBAAI,SAAJ,CACI,sBAAG,UAAU,wCAAsC,UAC/C,sBAAM,EAAE,IAAI,EAAE,QAAQ,MAAM,IAAI,OAAO,cAAO,UAAG,GAErD,sBAAG,UAAU,6BAA2B,UACpC,sBAAM,EAAE,IAAI,EAAE,QAAQ,MAAM,IAAI,OAAO,cAAO,UAAG,GAErD,sBAAG,UAAU,uBAAqB,UAC9B,sBAAM,EAAE,IAAI,EAAE,QAAQ,MAAM,IAAI,OAAO,cAAO,UAAG,GAErD,sBAAG,UAAU,wBAAsB,UAC/B,sBAAM,EAAE,IAAI,EAAE,QAAQ,MAAM,IAAI,OAAO,cAAO,UAAG,GAErD,sBAAG,UAAU,gCAA8B,UACvC,sBAAM,EAAE,IAAI,EAAE,QAAQ,MAAM,IAAI,OAAO,cAAO,UAAG,GAErD,sBAAG,UAAU,6BAA2B,UACpC,sBAAM,EAAE,IAAI,EAAE,QAAQ,MAAM,IAAI,OAAO,cAAO,UAAG,GAErD,sBAAG,UAAU,wBAAsB,UAC/B,sBAAM,EAAE,IAAI,EAAE,QAAQ,MAAM,IAAI,OAAO,cAAO,UAAG,GAErD,sBAAG,UAAU,wBAAsB,UAC/B,sBAAM,EAAE,IAAI,EAAE,QAAQ,MAAM,IAAI,OAAO,cAAO,UAAG,UACjD,GAER,uBAAG,GAAG,UAAQ,WACV,sBACI,EAAE,qJACF,MAAO,CAAE,YAAa,SAAG,GAE7B,sBAAM,EAAE,kXAA2W,WAAG,UACtX,GAER,Y,wOC/BE,GAAY,aAAW,WAAM,MAAC,CAChC,KAAM,OAsCK,GA7B6B,SAAC,G,IAAE,EAAS,YAAE,EAAS,YAAE,EAAS,YACpE,EAAU,KAEZ,EAAO,GACX,OAAQ,GACJ,KAAK,wBAAsB,MACvB,EAAO,GACP,MACA,KAAC,wBAAsB,KACvB,EAAO,GACP,MACA,KAAC,wBAAsB,QACvB,EAAO,GACP,MACA,KAAC,wBAAsB,OACvB,EAAO,GACP,MACA,KAAC,wBAAsB,KACvB,EAAO,KACP,MACA,KAAC,wBAAsB,OACvB,EAAO,KAKb,OAAK,cAAC,EAAI,IAAC,UAAW,GAAa,EAAQ,MAAU,QAAS,ICrCrD,QACX,sBAAM,EAAE,wIAAiI,GACzI,YCmBE+V,GAAgBjF,aAAW,SAACzb,GAAD,MAAY,CACzC+E,KAAM,CACFqY,OAAQ,eACRuD,WAAY3gB,EAAM8b,QAAQ,IAE9B7J,OAAQ,CACJiO,WAAY,QAEhBU,cAAe,CACXjF,QAAS,QAEbkF,WAAY,CACRhF,SAAU,GAEdzc,OAAQ,CACJyc,SAAU,GAEdiF,SAAU,CACN7D,OAAQjd,EAAM8b,QAAQ,KACtBxS,QAAS,GACTyX,SAAU/gB,EAAM8b,QAAQ,GACxBkF,WAAY,QAEhBC,eAAgB,CACZ7V,MAAOpL,EAAM2e,QAAQyB,KAAKxB,WAE9BxM,WAAY,CACRyJ,SAAU,EACVmE,UAAW,UAEfkB,WAAY,CACR9V,MAAO,UACP4U,UAAW,UAEfmB,kBAAmB,CACf/V,MAAO,WAEXgW,aAAc,CACVhW,MAAO,UAEXiW,iBAAkB,CACdjW,MAAO,MACP4U,UAAW,UAEfsB,YAAa,CACTlW,MAAO,UACP4U,UAAW,UAEfuB,gBAAiB,CACbnW,MAAO,MACP4U,UAAW,UAEfwB,cAAe,CACXpW,MAAO,MACP4U,UAAW,UAEfyB,oBAAqB,CACjBrW,MAAO,MACP4U,UAAW,UAEf0B,oBAAqB,CACjBtW,MAAO,MACP4U,UAAW,UAEf2B,YAAa,CACTvW,MAAOpL,EAAM2e,QAAQyB,KAAKxB,UAC1BoB,UAAW,UAEf4B,aAAc,CACVxW,MAAOpL,EAAM2e,QAAQyB,KAAKxB,UAC1BoB,UAAW,UAEf6B,YAAa,OAsGFC,GAnGkC,SAAC,GAW5B,IAVlBnd,EAUiB,EAVjBA,GACA6C,EASiB,EATjBA,UACAqI,EAQiB,EARjBA,MACAoC,EAOiB,EAPjBA,OACAD,EAMiB,EANjBA,OACA+P,EAKiB,EALjBA,WACAxP,EAIiB,EAJjBA,WACAyP,EAGiB,EAHjBA,cACAC,EAEiB,EAFjBA,YACAC,EACiB,EADjBA,kBAEM/F,EAAUuE,KAMZyB,EAAoD,KACxD,GAAIpT,4BAA0BtF,QAAQjC,IAAc,GAAKA,IAAchE,wBAAsB2O,OACzF,OAAQI,GACJ,KAAKF,eAAaC,QAEd,MACJ,KAAKD,eAAa+P,OACdD,EAAgB,YAChB,MACJ,KAAK9P,eAAagQ,SACdF,EAAgB,cAChB,MACJ,KAAK9P,eAAaiQ,aACdH,EAAgB,aAChB,MACJ,KAAK9P,eAAakQ,QACdJ,EAAgB,UAChB,MACJ,KAAK9P,eAAamQ,gBACdL,EAAgB,cAChB,MACJ,KAAK9P,eAAaoQ,cACdN,EAAgB,QAChB,MACJ,KAAK9P,eAAaqQ,gBACdP,EAAgB,gBAChB,MACJ,KAAK9P,eAAa2C,YACdmN,EAAgB,cAChB,MACJ,KAAK9P,eAAa4B,QAKlB,KAAK5B,eAAamF,SACd2K,EACI,cAACphB,GAAA,EAAD,CAAkBsb,UAAWF,EAAQ8E,eAAgB7V,MAAM,UAAUnK,UAAW,EAAGD,KAAM,KAQzG,OACI,cAAC2hB,GAAA,EAAD,CAEIC,OAAM,YAAOje,GACb0X,UAAWwG,aAAK1G,EAAQpX,KAAMwN,GAAc4J,EAAQ,OAAD,OAAQ5J,KAE3DP,OAAQA,EACR8Q,QAAS,kBAAMb,EAAYtd,IAC3Boe,cAAe,kBAAMb,EAAkBvd,IACvCkL,MACI,sBAAKwM,UAAWF,EAAQyE,cAAxB,UACI,cAACzf,EAAA,EAAD,CACIC,QAAQ,QACRgK,MAAM,UACNiR,UAAWwG,aAAK1G,EAAQ0E,WAAY5O,GAAUkK,EAAQlK,QAH1D,SAKI,cAAC,GAAD,CAAemO,KAAMvQ,EAAOwQ,MAAO0B,MAEvC,qBAAK1F,UAAWF,EAAQ/c,SACvB+iB,GACG,cAAChhB,EAAA,EAAD,CACIC,QAAQ,UACRgK,MAAM,UACNiR,UAAWwG,aAAK1G,EAAQ0E,WAAY5O,GAAUkK,EAAQlK,QAH1D,SAKKkQ,OAKjBa,cA/EU,SAAC7I,GACfA,EAAM8I,iBACNjB,EAAcrd,EAAIwV,EAAM+I,QAAU,EAAG/I,EAAMgJ,QAAU,IA8EjDC,KAAM,cAAC,GAAD,CAAW5b,UAAWA,OCrLlC6b,GAAkB5H,aAAW,SAACzb,GAAD,MAAY,CAC3C2S,OAAQ,CACJ2Q,UAAWtjB,EAAM8b,QAAQ,KAE7ByH,cAAe,CACX5hB,MAAO3B,EAAM8b,QAAQ,IAEzBjM,MAAO,OAoCI2T,GA/BsC,SAAC,GAAkE,IAAhE7e,EAA+D,EAA/DA,GAAIqN,EAA2D,EAA3DA,OAAQnC,EAAmD,EAAnDA,MAAOkS,EAA4C,EAA5CA,WAAYtjB,EAAgC,EAAhCA,SAC7E0d,EAAUkH,KAChB,OACI,cAACV,GAAA,EAAD,CAEIC,OAAM,YAAOje,GACb0X,UAAWwG,aAAK1G,EAAQxJ,QACxBwJ,QAAS,CACLtM,MAAOsM,EAAQtM,MACf0T,cAAepH,EAAQoH,eAE3BR,cAAe,SAAC7N,GACZA,EAAE+N,iBACF/N,EAAEuO,mBAENT,cAAe,SAAC9N,GACZA,EAAE+N,iBACF/N,EAAEuO,mBAENzR,OAAQA,EACRnC,MACI,cAAC1O,EAAA,EAAD,CAAYC,QAAQ,QAApB,SACI,cAAC,GAAD,CAAegf,KAAMvQ,EAAOwQ,MAAO0B,MAnB/C,SAuBKtjB,K,yECrCP+c,GAAYC,aAAW,SAACzb,GAAD,MAAY,CACrC0jB,UAAW,CACP9hB,OAAQ,OACRD,MAAO,OACPga,QAAS,OACTC,cAAe,UAEnB+H,WAAY,CACRvY,MAAOpL,EAAM2e,QAAQC,UAAUnf,MAEnC6O,KAAM,CACFuN,SAAU,EACVwC,SAAU,SACVuF,cAAe5jB,EAAM8b,QAAQ,IAEjC+H,UAAW,CACPhI,SAAU,EACV1Z,QAASnC,EAAM8b,QAAQ,KAE3BgI,eAAgB,CACZ3hB,QAASnC,EAAM8b,QAAQ,IAAM,SA8FtBiI,GA9EiC,SAAC,GAUxB,IATrBC,EASoB,EATpBA,YACAC,EAQoB,EARpBA,cACAC,EAOoB,EAPpBA,SACAC,EAMoB,EANpBA,QACAC,EAKoB,EALpBA,QACAlR,EAIoB,EAJpBA,SACA4H,EAGoB,EAHpBA,YACAuJ,EAEoB,EAFpBA,YACA5lB,EACoB,EADpBA,SAEM0d,EAAUX,KASV8I,EAAqBC,qBAAS,SAACC,GAAD,OAAmBP,EAAcO,KAAQ,KAE7E,OACI,cAAC,GAAD,CACI/G,KAAMuG,EACN7S,MAAM,aACNyM,QAAQ,QACRC,YAAY,MACZE,QAAQ,MACRD,QAAQ,MACRJ,OACI,sBAAKrB,UAAWF,EAAQuH,UAAxB,UACI,cAACe,EAAA,EAAD,CACIpkB,WAAS,EACTgc,UAAWF,EAAQ0H,UACnBa,YAAY,2BACZtjB,QAAQ,WACRie,SAAU,SAAClF,GACPmK,EAAoBnK,EAAMwK,OAAOvF,MAAiBtP,cAAcC,SAEpE6U,WAAY,CACRzI,QAAS,CAAE0I,MAAO1I,EAAQ2H,gBAC1BgB,eACI,cAACC,GAAA,EAAD,CAAgBxjB,SAAS,QAAzB,SACI,cAAC,KAAD,SAKhB,cAACyjB,GAAA,EAAD,CACI3I,UAAWF,EAAQ7N,KACnB2W,oBACI,qCACI,cAAC,KAAD,IACA,cAAC,KAAD,CAAgB5I,UAAWF,EAAQwH,gBAG3CuB,kBACI,qCACI,cAAC,KAAD,IACA,cAAC,KAAD,CAAY7I,UAAWF,EAAQwH,gBAGvCwB,aAlDC,SAAChL,EAAmDiL,GACrEtK,EAAYsK,IAkDIC,aA/CC,SAAClL,EAAmDiL,GACrEf,EAAY3S,MAAM4T,QAAQF,GAAWA,EAAU,CAACA,KA+ChClS,SAAUA,EACVgR,SAAUA,EAjBd,SAmBKzlB,IAEJ0lB,KAGTxG,OAAQyG,GAAW,2BCvHzB5I,GAAYC,aAAW,SAACzb,GAAD,MAAY,CACrClB,KAAM,GACNymB,KAAM,GACNC,aAAc,CACVC,YAAazlB,EAAM8b,QAAQ,IAE/B7G,MAAO,CACH7J,MAAOpL,EAAM2e,QAAQ1J,MAAMxV,UA6CpBimB,GA1BqC,SAAC,GAA8D,IAA5DjI,EAA2D,EAA3DA,KAAMlc,EAAqD,EAArDA,SAAUokB,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,UACtEzJ,EAAUX,KAChB,OACI,cAACqK,EAAA,EAAD,CACIC,aAAW,EACXrI,KAAMA,EACNkI,QAASA,EACTI,gBAAgB,iBAChBC,eAAgBzkB,EAChB8a,UAAWF,EAAQrd,KANvB,SAQK8mB,EAAU9f,KAAI,WAAgD6E,GAAhD,IAAGkF,EAAH,EAAGA,MAAO3E,EAAV,EAAUA,KAAM+W,EAAhB,EAAgBA,YAAagE,EAA7B,EAA6BA,SAAUhR,EAAvC,EAAuCA,MAAvC,OACX,eAACiR,EAAA,EAAD,CAEIpD,QAASb,EACTgE,SAAUA,EACV5J,UAAWwG,aAAK1G,EAAQoJ,KAAMtQ,GAASkH,EAAQlH,OAJnD,UAMK/J,GAAQ,cAACA,EAAD,CAAMmR,UAAWF,EAAQqJ,aAAcpa,MAAM,YACrDyE,IAPL,oBACsBlF,UCxBvBwb,GAhBQ,WACnB,IAAMC,EAAkBjL,cACpB,gBAAGC,EAAH,EAAGA,SAAU5F,EAAb,EAAaA,IAAb,8CACI,WAAO6Q,GAAP,mBAAA7nB,EAAA,sEAC0B4c,EAASkL,WAAWlO,IAD9C,cACUmO,EADV,gBAE2BnL,EAASkL,WAAWnO,IAF/C,UAEUnW,EAFV,QAGQukB,IAAWF,EAHnB,wBAIcG,EAAW1kB,GAAYukB,EAAWE,EAAQ5kB,MAAO4kB,EAAQ3kB,QAC/D4T,EAAI2C,GAAD,YAAC,eAAmBnW,GAAawkB,IAL5C,mBAMe,GANf,kCAOkB,GAPlB,4CADJ,yDAWJ,OAAOJ,G,8HCwKIK,GAnKiC,SAAC,GAAgD,IAelF,EAfoCC,EAA6C,EAA7CA,SAAUf,EAAmC,EAAnCA,QAASgB,EAA0B,EAA1BA,aAC5Dle,EAAQoR,aAAe9H,GAAyB2U,EAASE,SACzDC,EAAoB9M,aAAkB9J,IACtC6W,EAAuB/M,aAAkB7J,IAC/C,EAAkC0P,KAA1BpX,EAAR,EAAQA,SAAUkB,EAAlB,EAAkBA,YACZ0c,EAAkBD,KAClBP,EAA6B,GAE/Bnd,EAAM1D,KAAKyC,YAAchE,wBAAsB2O,OAC3C1J,EAAM2J,aAAeC,eAAamF,UAAY/O,EAAM2J,aAAeC,eAAa+P,OAChFwD,EAAUxd,KAAK,CACXyH,MAAO,8BACP3E,KAAM6b,KACNd,UAAU,IAGdL,EAAUxd,KAAK,CACXyH,MAAO,cACP3E,KAAM8b,KACNf,YAAY,UAAAxd,EAAMzE,aAAN,eAAagE,MAAOS,EAAM2J,aAAeC,eAAaC,SAClE2P,YAAa,WAAa,IAAD,EACfgF,EAAYvmB,OAAO+c,MAAK,UAAAhV,EAAMzE,aAAN,eAAagE,KAAM,aAAc,SAAU,uBACrEif,IAAWA,EAAUC,OAAS,MAClCvB,OAILld,EAAM1D,KAAKyC,YAAchE,wBAAsBkU,KACtDkO,EAAUxd,KAAK,CACXyH,MAAO,gBACP3E,KAAMic,KACNlF,YAAa,WACLxZ,EAAM1D,KAAK0C,WAAWkf,EAAale,EAAM1D,KAAK0C,WAClDke,OAGDld,EAAM2J,aAAeC,eAAamF,UAAY/O,EAAM0O,kBAAoBjB,kBAAgBsB,SAC/FoO,EAAUxd,KAAK,CACXyH,MAAO,uBACP3E,KAAM6b,KACNd,UAAU,KAIVxd,EAAM2J,aAAeC,eAAaC,QAC9B7J,EAAMuO,aACN4O,EAAUxd,KACN,CACIyH,MAAO,kBACP3E,KAAMkc,KACNnF,YAAa,WACTvY,EAAYjB,EAAM1D,KAAKJ,IACvBghB,MAGR,CACI9V,MAAO,qBACP3E,KAAMmc,KAENpF,YAAa,WAAa,IAAD,EACrBmE,EAAe,UAAC3d,EAAMzE,aAAP,aAAC,EAAa0U,QAC7BiN,QAIJld,EAAMuO,cAAgBvO,EAAMgK,YACpCmT,EAAUxd,KACN,CACIyH,MAAO,aACP3E,KAAMoc,KACNrF,YAAa,WACTzZ,EAASC,EAAM1D,KAAKJ,IACpBghB,MAGR,CACI9V,MAAO,wCACP3E,KAAMmc,KACNpB,UAAU,IAIfxd,EAAM2J,aAAeC,eAAa+P,OACzCwD,EAAUxd,KAAK,CACXyH,MAAO,uBACP3E,KAAM6b,KACNd,UAAU,IAEPxd,EAAM2J,aAAeC,eAAa6E,eACzC0O,EAAUxd,KAAK,CACXyH,MAAO,yCACP3E,KAAMqc,KACNtB,UAAU,IAEPxd,EAAM2J,aAAeC,eAAaoQ,cACzCmD,EAAUxd,KAAK,CACXyH,MAAO,2BACP3E,KAAMqc,KACNtB,UAAU,IAEPxd,EAAM2J,aAAeC,eAAagQ,SACzCuD,EAAUxd,KAAK,CACXyH,MAAO,8BACP3E,KAAM6b,KACNd,UAAU,IAEPxd,EAAM2J,aAAeC,eAAaiQ,aACzCsD,EAAUxd,KAAK,CACXyH,MAAO,sBACP3E,KAAMqc,KACNtB,UAAU,EACVhR,OAAO,IAEJxM,EAAM2J,aAAeC,eAAakQ,QACzCqD,EAAUxd,KAAK,CACXyH,MAAO,mBACP3E,KAAMqc,KACNtB,UAAU,EACVhR,OAAO,IAEJxM,EAAM2J,aAAeC,eAAamQ,gBACzCoD,EAAUxd,KAAK,CACXyH,MAAO,2BACP3E,KAAMqc,KACNtB,UAAU,EACVhR,OAAO,IAEJxM,EAAM2J,aAAeC,eAAaqQ,gBACzCkD,EAAUxd,KAAK,CACXyH,MAAO,oCACP3E,KAAMqc,KACNtB,UAAU,EACVhR,OAAO,IAEJxM,EAAM2J,aAAeC,eAAa2C,aACzC4Q,EAAUxd,KAAK,CACXyH,MAAO,2BACP3E,KAAMqc,KACNtB,UAAU,EACVhR,OAAO,IAGf2Q,EAAUxd,KAAK,CACXyH,MAAO,oBACP3E,KAAMsc,KACNvF,YAAa,WACT4E,EAAkBH,EAASE,QAC3BE,GAAqB,GACrBnB,QAKZ,OACI,cAAC,GAAD,CACIlI,KAAM1X,QAAQ2gB,GACdnlB,SAAUmlB,EAASnlB,SACnBokB,QAASA,EACTC,UAAWA,K,2DC3KjBpK,GAAYC,aAAW,SAACzb,GAAD,MAAY,CACrClB,KAAM,CACFqD,QAASnC,EAAM8b,QAAQ,IAE3B2L,MAAO,GACPC,QAAS,CACLC,aAAc3nB,EAAM8b,QAAQ,IAEhC8L,cAAe,CACXzK,aAAc,aAElB0K,QAAS,CAAE3H,WAAY,QACvB4H,UAAW,CACP1c,MAAOpL,EAAM2e,QAAQyB,KAAKxB,UAC1BmJ,aAAc,WACd/L,UAAW,YASbgM,GAA2D,CAC7DC,YAAa,SAACC,GACV,IAAMC,EAAUC,SAAMC,sBAAsBH,GAC5C,OAAOC,EAAU,EAAV,UAAiBC,SAAME,WAAWH,EAAS,OAA3C,aAAsDC,SAAMG,cAAcJ,GAA1E,KAAwF,YAGjGK,GAAe,SAAC3a,EAAaqa,GAC/B,IAAMO,EAAS5a,EAAIiC,cACnB,OAAI1F,OAAOC,KAAK2d,IAAiBve,QAAQgf,IAAW,EACzCT,GAAgBS,GAAQP,GAE/BA,GACAA,EAAIzH,MAAM,uGAGN,cAAC/D,GAAA,EAAD,CAAM9b,KAAMsnB,EAAKvD,OAAO,SAAxB,SACKuD,IAGCA,GA+BHQ,GA5B2B,SAAC,GAAoC,IAAlC/oB,EAAiC,EAAjCA,MAAOgpB,EAA0B,EAA1BA,KAC1CxM,EAAUX,KAChB,OAAiC,IAA7BpR,OAAOC,KAAKse,GAAM5f,OAAqB,KAEvC,sBAAKsT,UAAWF,EAAQuL,QAAxB,UACI,cAACvmB,EAAA,EAAD,CAAYC,QAAQ,YAAYib,UAAWF,EAAQyL,cAAnD,SACKjoB,IAEL,cAACipB,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAOxM,UAAWF,EAAQsL,MAAOzmB,KAAK,QAAQ,aAAW,gBAAzD,SACI,cAAC8nB,GAAA,EAAD,UACK1e,OAAOC,KAAKse,GAAM7iB,KAAI,SAACijB,GAAD,OACnB,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAW5nB,UAAU,KAAK6nB,MAAM,MAAM7M,UAAWF,EAAQ0L,QAAzD,SACKkB,IAEL,cAACE,GAAA,EAAD,CAAWE,MAAM,QAAQ9M,UAAWF,EAAQ2L,UAA5C,SACKU,GAAaO,EAAQJ,EAAKI,QALpBA,gBCvDrCK,GAAW,CAAC,sBAEZ5N,GAAYC,aAAW,SAACzb,GAAD,MAAY,CACrClB,KAAM,CACFqD,QAASnC,EAAM8b,QAAQ,IAE3BuN,QAAS,GAGTC,OAAQ,CACJnnB,QAASnC,EAAM8b,QAAQ,EAAG,QAuBlC,IAsCeyN,GAtC6B,SAAC,GAAuC,IAArCxkB,EAAoC,EAApCA,KAAMskB,EAA8B,EAA9BA,QAC3ClN,EAAUX,KACVmN,EAAO5jB,EAAK4jB,MAAQ,GACpBa,EAjBV,SAAsBb,GAClB,IAAMte,EAAOD,OAAOC,KAAKse,GAAMhqB,QAAO,SAAC8qB,GAAD,OAAOL,GAAS3f,QAAQggB,GAAK,KAE7DC,EAAU,SAAC7b,GAAD,OACZxD,EAAK1L,QAAO,SAAC8qB,GAAD,OAA0B,IAAnBA,EAAEhgB,QAAQoE,MAAYvD,QAAO,SAACC,EAAKof,GAAN,mBAAC,eAAkBpf,GAAnB,mBAAyBof,EAAG9Y,QAAQhD,EAAK,IAAM8a,EAAKgB,OAAQ,KAEhH,MAAO,CACHC,kBAAmBF,EAAQ,WAC3BG,gBAAiBH,EAAQ,YACzBI,cAAeJ,EAAQ,YACvBK,MAAO1f,EAAK1L,QAAO,SAAC8qB,GAAD,OAA4B,IAArBA,EAAEhgB,QAAQ,UAAca,QAAO,SAACC,EAAKof,GAAN,mBAAC,eAAkBpf,GAAnB,mBAAyBof,EAAKhB,EAAKgB,OAAQ,KAOvFK,CAAarB,GAC9B,OACI,eAACrM,GAAA,EAAD,CAAOD,UAAWgN,EAAUlN,EAAQkN,QAAUlN,EAAQrd,KAAtD,UACKsL,OAAOC,KAAKmf,EAASO,OAAOhhB,OAAS,GAAK,cAAC,GAAD,CAAUpJ,MAAM,iBAAiBgpB,KAAMa,EAASO,SACzFV,GAAWjf,OAAOC,KAAKmf,EAASI,mBAAmB7gB,OAAS,GAC1D,sBAAKsT,UAAWF,EAAQmN,OAAxB,UACI,eAACnoB,EAAA,EAAD,CAAYC,QAAQ,UAAUC,UAAU,MAAxC,4CACoCsnB,EAAKsB,iBADzC,uGAIA,cAAC,GAAD,CACItqB,MAAK,mBAAcgpB,EAAKsB,iBAAnB,YACLrpB,KAAI,UAAKkL,GAAL,aAAsB6c,EAAI,eAA1B,YAAgDA,EAAI,gBAInEve,OAAOC,KAAKmf,EAASK,iBAAiB9gB,OAAS,GAC5C,cAAC,GAAD,CAAUpJ,MAAM,4BAA4BgpB,KAAMa,EAASK,kBAE9Dzf,OAAOC,KAAKmf,EAASM,eAAe/gB,OAAS,GAC1C,cAAC,GAAD,CAAUpJ,MAAM,0BAA0BgpB,KAAMa,EAASM,gBAE7D,cAAC,GAAD,CACInqB,MAAM,QACNgpB,KAAM,CACFuB,UAAWnlB,EAAK2C,WAAa,OAC7B,aAAc3C,EAAK4C,WAAa,OAChC,WAAY5C,EAAKhB,SAAW,OAC5B,uBAAuB,GAAvB,OAA2BgB,EAAKhC,cAAgB,e,qBCnE9DyY,GAAYC,aAAW,SAACzb,GAAD,MAAY,CACrClB,KAAM,CACFqD,QAASnC,EAAM8b,QAAQ,IAE3B8L,cAAe,CACXzK,aAAc,aAElBsK,MAAO,GACPI,QAAS,CAAE3H,WAAY,QACvB4H,UAAW,CACP1c,MAAOpL,EAAM2e,QAAQyB,KAAKxB,eAqCnBuL,GA7BqC,SAAC,GAAmC,IAAD,QAAhCnmB,EAAgC,EAAhCA,MAC7CmY,EAAUX,KACVmN,EAA+B,CACjCyB,OAAQpmB,EAAM9C,OACdoP,MAAOtM,EAAMiR,MACboV,QAASrmB,EAAK,UACLokB,SAAME,WAAWtkB,EAAMsmB,QAAS,OAD3B,aACsClC,SAAMG,cAAcvkB,EAAMsmB,SADhE,KAER,UACN,cAAetmB,EAAK,UACXokB,SAAME,WAAWtkB,EAAMumB,WAAY,OADxB,aACmCnC,SAAMG,cAAcvkB,EAAMumB,YAD7D,KAEd,UACN,gBAAiBvmB,EAAK,YAAQA,EAAMwmB,UAAY,GAAK,IAAIC,QAAQ,GAA3C,YAA0D,UAChF,gBAAiBzmB,GAASA,EAAM0mB,WAAaC,KAAQ3mB,EAAM0mB,WAAW1pB,MAAMiH,OAAO,SAAW,UAC9F2iB,MAAO5mB,GAASA,EAAM6mB,SAAWF,KAAQ3mB,EAAM6mB,UAAU5iB,OAAO,OAAS,UACzE,iBAAiB,UAAAjE,EAAMM,eAAN,eAAeM,OAAQ,UACxC,gBAAiBZ,EAAK,UAAIA,EAAM0mB,kBAAV,aAAI,EAAkB7c,IAAiB,UAC7D,oBAAqB7J,EAAK,UACjBokB,SAAME,WAAN,UAAiBtkB,EAAM0mB,kBAAvB,aAAiB,EAAkBI,aAAc,OADhC,aAC2C1C,SAAMG,cAAN,UAC3DvkB,EAAM0mB,kBADqD,aAC3D,EAAkBI,cAFF,KAIpB,WAEV,OACI,cAACxO,GAAA,EAAD,CAAOD,UAAWF,EAAQrd,KAA1B,SACI,cAAC,GAAD,CAAUa,MAAM,sBAAsBgpB,KAAMA,OCtClDnN,GAAYC,aAAW,SAACzb,GAAD,MAAY,CACrClB,KAAM,CACF8C,OAAQ,OACRyc,SAAU,SACV1C,QAAS,OACTC,cAAe,UAEnBmP,QAAS,CACLxM,KAAM,OACNpc,QAASnC,EAAM8b,QAAQ,EAAG,GAC1BkP,UAAWhrB,EAAM8b,QAAQ,GACzBja,WAAY7B,EAAM2e,QAAQf,QAAQqN,KAClC7f,MAAOpL,EAAM2e,QAAQf,QAAQiB,cAEjCzf,OAAQ,CAAEyc,SAAU,GACpBqP,WAAY,GACZC,UAAW,GACXC,UAAW,CACPvP,SAAU,EACVwP,UAAW,SACXC,WAAY,OACZ,MAAO,CACHA,WAAY,SAGpBC,cAAe,GAOf7M,YAAa,OA6CF8M,GAlC6B,SAAC,GAAkD,IAAhDzmB,EAA+C,EAA/CA,KAAMf,EAAyC,EAAzCA,MAAOynB,EAAkC,EAAlCA,YAClDtP,EAAUX,KAChB,OACI,sBAAKa,UAAWF,EAAQrd,KAAxB,UACI,eAAC4sB,EAAA,EAAD,CAASrP,UAAWF,EAAQ4O,QAA5B,UACI,cAACY,GAAA,EAAD,CAAShsB,MAAK,oBAAeoF,EAAKyC,UAApB,UAAd,SACI,cAACokB,EAAA,EAAD,CAAYC,KAAK,QAAQxP,UAAWF,EAAQgP,UAAW/f,MAAM,UAAU,aAAW,OAAlF,SACI,cAAC,GAAD,CAAW5D,UAAWzC,EAAKyC,gBAGnC,cAACrG,EAAA,EAAD,CAAYC,QAAQ,QAAQib,UAAWF,EAAQ+O,WAA/C,SACKnmB,EAAK8K,QAEV,qBAAKwM,UAAWF,EAAQ/c,SAGxB,cAACwsB,EAAA,EAAD,CACIC,KAAK,QACLxP,UAAWF,EAAQuC,YACnBtT,MAAM,UACN,aAAW,OACX0X,QAAS2I,EALb,SAOI,cAAC,IAAD,SAGR,sBAAKpP,UAAWF,EAAQiP,UAAxB,UACKrmB,GAAQ,cAAC,GAAD,CAAWA,KAAMA,IACzBf,GAAS,cAAC,GAAD,CAAeA,MAAOA,WCvEjC8nB,GALwB,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAQN,EAAyB,EAAzBA,YACxChjB,EAAQoR,aAAe9H,GAAyBga,IACtD,OAAO,cAAC,GAAD,CAAWhnB,KAAM0D,EAAM1D,KAAMf,MAAOyE,EAAMzE,MAAOynB,YAAaA,KCoBnEO,GAAiD,SAAjDA,EAAkD,GAAwD,IAAtDC,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,MAAOvF,EAAoC,EAApCA,aACjEwF,EAActS,aAAe/G,GAA8BmZ,IAC3Dhb,EAAa4I,aAAe3K,IAClC,IAAKid,IAAgBA,EAAYxZ,OAAQ,OAAO,KAEhD,IAAMlD,EAAQ,OAAG0c,QAAH,IAAGA,OAAH,EAAGA,EAAaxZ,OAAOlU,SAASgR,SACzC3J,KAAI,SAAC8J,EAAKjF,GAAN,OACD,cAACqhB,EAAD,CAEIrF,aAAcA,EACdsF,SAAUrc,EACVsc,MAAOA,EAAQ,GAJnB,iBACYC,QADZ,IACYA,OADZ,EACYA,EAAaxZ,OAAOA,OAAO9C,MADvC,YACgDD,EADhD,YACuDjF,OAM1DhM,QAAO,SAACwa,GAAD,OAAOA,KAEb5K,EAAM,OAAG4d,QAAH,IAAGA,OAAH,EAAGA,EAAaxZ,OAAOlU,SAAS8P,OACvCzI,KAAI,SAAC+L,EAAKlH,GAAN,OACD,cAAC,GAAD,CAEIgc,aAAcA,EACdC,OAAQ/U,EACRqa,MAAOA,EAAQ,GAJnB,iBACYC,QADZ,IACYA,OADZ,EACYA,EAAaxZ,OAAOA,OAAO9C,MADvC,YACgDgC,EADhD,YACuDlH,OAM1DhM,QAAO,SAACwa,GAAD,OAAOA,KAGnB,OAAsB,IAAlB5K,EAAOxF,QAAoC,IAApB0G,EAAS1G,OAAqB,KAGrD,cAAC,GAAD,CACIpE,GAAIsnB,EACJpc,MAAK,OAAEsc,QAAF,IAAEA,OAAF,EAAEA,EAAaxZ,OAAOA,OAAO9C,MAClCmC,OAAM,OAAEma,QAAF,IAAEA,OAAF,EAAEA,EAAana,OACrB+P,WAAY9Q,EAJhB,gCAMSxB,GANT,aAMsBlB,OAWxB6d,GAA6C,SAAC,GAA6C,IAA3CxF,EAA0C,EAA1CA,OAAQD,EAAkC,EAAlCA,aACpD0F,EAAgBxS,aAAe/H,GAAsB8U,IACrD3V,EAAa4I,aAAe3K,IAC5Bod,EAAcvS,aAAkB5G,IAChCoZ,EAAgBxS,aAAkB9J,IAChC6P,EAAgBF,KAAhBE,YAiBR,IAAKuM,IAAkBA,EAActnB,OAASsnB,EAActnB,KAAK+J,WAAY,OAAO,KACpF,MAAiCud,EAActnB,KAAvCJ,EAAR,EAAQA,GAAI6C,EAAZ,EAAYA,UAAWqI,EAAvB,EAAuBA,MACvB,OACI,cAAC,GAAD,CACIlL,GAAIA,EACJ6C,UAAWA,EACXqI,MAAOA,EACPoC,OAAQoa,EAAcpa,OACtBD,OAAQqa,EAAcra,OACtBO,WAAY8Z,EAAc9Z,WAC1BwP,WAAY9Q,EACZgR,YAAasK,EACbrK,kBAtBY,WAEhB,GADAhI,EAAgBC,MAAM,UAAW,gBAC7BkS,EAActnB,KAAKyC,YAAchE,wBAAsB2O,QAAUka,EAAc5Z,WAAY,CAC3F,IAAMwU,EAAYvmB,OAAO+c,KAAK4O,EAAcna,UAAW,SAAU,uBAC7D+U,IAAWA,EAAUC,OAAS,WAC3BmF,EAActnB,KAAKyC,YAAchE,wBAAsBkU,KAC1D2U,EAActnB,KAAK0C,WAAWkf,EAAa0F,EAActnB,KAAK0C,WAC3D4kB,EAAc5Z,YAAYqN,EAAYuM,EAActnB,KAAKJ,KAgBhEqd,cA5Bc,SAAC4E,EAAgBllB,EAAcD,GACjDyY,EAAgBC,MAAM,UAAW,qBACjCmS,EAAY,CAAE1F,SAAQrlB,SAAU,CAAEG,OAAMD,aA0FjC+qB,GAxD+C,SAAC,GAA+C,IAA7C7F,EAA4C,EAA5CA,aACvD8F,EAAgB1S,aAAkB7K,IAClCwd,EAAe7S,aAAenH,IACpC,EAAsC+G,aAAerG,IAArD,mBAAOuZ,EAAP,KAAoBC,EAApB,KACA,EAAsCnT,aAAelJ,IAArD,mBAAOG,EAAP,KAAoBmc,EAApB,KACA,EAAgCpT,aAAetG,IAA/C,mBAAOuT,EAAP,KAAiB4F,EAAjB,KACMQ,EAAajT,aAAe5J,IAC5B8c,EAASlT,aAAexG,IAExBN,EAAc8G,aAAe/I,IACnC,EAAwC2I,aAAevJ,IAAvD,mBAAO8c,EAAP,KAAqBC,EAArB,KAOMC,EAAena,EAAYtD,SAAS1G,OAAS,EAAIgkB,EAASJ,EAC1DQ,EACFpa,EAAYtD,SAAS1G,OAAS,EACxB,WACIT,IAAIC,MAAM,0BAEdqkB,EAEJxI,EACF4I,GAA+B,OAAfF,EACZ,cAAC,GAAD,CAAsBf,OAAQe,EAAYrB,YAAa,kBAAMwB,GAAgB,MAC7E,KAEFG,EAAmB1G,GACrB,cAAC,GAAD,CAAwBA,SAAUA,EAAUf,QAAS,kBAAM2G,EAAY,OAAO3F,aAAcA,IAE1F0G,EACe,OAAjBX,EACI,cAAC,GAAD,CAAqBT,SAAUS,EAAcR,MAAO,EAAGvF,aAAcA,IAErE,wBAGR,OACI,cAAC,GAAD,CACI3C,YAAagJ,EACb/I,cAAewI,EACfvI,SAAUgJ,EACV/I,QAASiJ,EACThJ,QAASA,EACTlR,SAAUxC,EACVoK,YAAaqS,EACb9I,YArCY,SAAC1T,GACZiF,mBAAQjF,EAAKD,IAAcmc,EAAelc,IA4B/C,SAUK0c,KC5GEC,GA/C6B,SAAC,GAA6B,IAA3B7lB,EAA0B,EAA1BA,UACrC8lB,EAAQC,aAAuBzZ,GAAoBtM,IAEnDgmB,EAAoBtS,cAAkB,gBAAGC,EAAH,EAAGA,SAAU5F,EAAb,EAAaA,IAAb,6BAAuB,0CAAAhX,EAAA,yDAE3C,cADd+uB,EAAQnS,EAASC,YAAYtH,GAAoBtM,KAC7C8P,MAFqD,wDAGzDvT,EAAQupB,EAAM9V,SAH2C,SAK3C2D,EAASkL,WAAW1S,GAAyBnM,IALF,cAKzDimB,EALyD,gBAMzCtS,EAASkL,WAAWxS,GAAuBrM,IANF,cAMzDkmB,EANyD,iBAO1CvS,EAASkL,WAAWxN,IAPsB,eAOzDJ,EAPyD,iBAQtC0C,EAASkL,WAAWvN,IARkB,QAQzD6U,EARyD,OAW3D5pB,EAAM9C,SAAWmR,eAAa2C,YAC1B2Y,EAAU,GACVE,YAAW,kBAAMrY,EAAI1B,GAAuBrM,GAAYkmB,EAAU,KAA8B,IAA1BtqB,GAAYoJ,aAItFzI,EAAM9C,SAAWmR,eAAa+P,QAC9Bpe,EAAM9C,SAAWmR,eAAa4B,SAC9BjQ,EAAM9C,SAAWmR,eAAagQ,SAE9BwL,YAAW,kBAAMrY,EAAI5B,GAAyBnM,GAAYimB,EAAQ,KAAgC,IAA5BrqB,GAAYqJ,eAC3E1I,EAAM9C,SAAWmR,eAAaC,UAE/Bwb,EAAgBvrB,GAAUc,GAAYb,YAAakW,EAAQ1U,EAAM0U,QAAU,MAC3EqV,EAAoB9qB,GAAc2qB,EAAY,CAAC5pB,EAAMG,QAASH,EAAM+D,UAErE6N,mBAAQ8C,EAAQoV,IACjBtY,EAAIsD,GAAYgV,GAEflY,mBAAQgY,EAAYG,IACrBvY,EAAIuD,GAAgBgV,IA/BmC,+CAyCnE,OAJA9S,qBAAU,WACNwS,MACD,CAACF,IAEG,M,8BCtDL/R,GAAYC,aAAW,iBAAO,CAChC3c,KAAM,OAIJkvB,GAAY,SAyDHC,GAlD2B,SAAC,GAA4E,IAA1EC,EAAyE,EAAzEA,WAAY7T,EAA6D,EAA7DA,YAAa8T,EAAgD,EAAhDA,aAAcC,EAAkC,EAAlCA,aAC1EjS,EAAUX,KACV6S,EAA0B,OAAfH,EAAsBF,GAAYE,EAC7CI,EAAcrQ,mBAAQ,WACxB,IAAKkQ,GAAwC,IAAxBA,EAAaplB,OAC9B,MAAO,CACH,cAACmd,EAAA,EAAD,CAA0B9G,MAAM,SAAS6G,UAAQ,EAAjD,SACI,cAAC9kB,EAAA,EAAD,CAAYC,QAAQ,YAAYgK,MAAM,gBAAtC,SACI,oDAFO4iB,KAMvB,IAAMO,EACFJ,EAAaroB,KAAI,SAACyT,EAAG5O,GACjB,IACM6jB,EADYjV,EAAE5U,KAAO0V,EACO,YAAc,GAChD,OACI,eAAC6L,EAAA,EAAD,CAA8B9G,MAAO7F,EAAE5U,GAAvC,UACK4U,EAAE1M,KADP,IACc2hB,IADd,eAAuB7jB,QAIzB,GACV,MAAM,GAAN,oBACO4jB,GADP,CAEmB,OAAfL,GACI,cAAChI,EAAA,EAAD,CAA0B9G,MAAM,SAAhC,SACI,cAACje,EAAA,EAAD,CAAYC,QAAQ,YAAYgK,MAAM,gBAAtC,SACI,gDAFO4iB,QAOxB,CAACG,EAAcD,IAElB,OACI,eAACO,GAAA,EAAD,CAAapS,UAAWF,EAAQrd,KAAMuB,WAAS,EAACW,KAAK,QAArD,UACI,cAAC0tB,GAAA,EAAD,CAAYC,QAAQ,wBAApB,2BACA,cAACC,GAAA,EAAD,CACIjqB,GAAG,OACHya,MAAOiP,EACPpI,UAAWkI,GAAwC,IAAxBA,EAAaplB,OACxC3H,QAAQ,SACRie,SAAU,SAAClF,GAAD,OAAWA,EAAMwK,OAAOvF,QAAU4O,IAAaI,EAAajU,EAAMwK,OAAOvF,QALvF,SAOKkP,QClDX9S,GAAYC,aAAW,SAACzb,GAAD,MAAY,CACrClB,KAAM,GAGN+vB,SAAU,CACNpJ,YAAazlB,EAAM8b,QAAQ,IAE/BgT,SAAU,CACNnT,QAAS,YA0CFoT,GAtCyC,SAAC,GAI5B,IAHzB5iB,EAGwB,EAHxBA,UACAC,EAEwB,EAFxBA,WACA4iB,EACwB,EADxBA,aAEM7S,EAAUX,KAEV8S,EAAcliB,EAAWtG,KAAI,SAACyT,EAAG5O,GACnC,IAAMO,EAAOqO,EAAErO,KACf,OACI,eAACgb,EAAA,EAAD,CAA8B9G,MAAO7F,EAAE5U,GAAI0X,UAAWF,EAAQ2S,SAA9D,UACI,cAAC5jB,EAAD,CAAMmR,UAAWF,EAAQ0S,WACzB,cAAC1tB,EAAA,EAAD,UAAaoY,EAAE5Z,UAFnB,eAAuBgL,OAO/B,OACI,eAAC8jB,GAAA,EAAD,CAAapS,UAAWF,EAAQrd,KAAMuB,WAAS,EAACW,KAAK,QAArD,UACI,cAAC0tB,GAAA,EAAD,sBACA,cAACE,GAAA,EAAD,CACIjqB,GAAG,YACHya,MAAOjT,EAAUxH,GACjBvD,QAAQ,SACR+a,QAAS,CACL8S,WAAY9S,EAAQ2S,UAExBzP,SAAU,SAAClF,GACP,IAAM+U,EAAQ9iB,EAAW3H,MAAK,SAAC0qB,GAAD,OAAQA,EAAGxqB,KAAOwV,EAAMwK,OAAOvF,SACzD8P,GAAOF,EAAaE,IAThC,SAYKZ,QChDFc,GAJsB,SAAC,GAAsB,IAApBna,EAAmB,EAAnBA,MACpC,OAAO,cAAC9T,EAAA,EAAD,CAAYiK,MAAM,QAAlB,SAA2B6J,GAAS,OCCzCuG,GAAYC,aAAW,SAACzb,GAAD,MAAY,CACrClB,KAAM,CACF0C,OAAQ,IACRW,QAASnC,EAAM8b,QAAQ,GACvBuT,OAAQ,oBACRC,aAAc,EACd/tB,SAAU,WACVM,WAAY,QACZF,MAAO,IACP4tB,UAAW,MACXlR,SAAU,SACVmR,UAAW,wBACX/tB,IAAK,GACLqd,MAAO,GACPnD,QAAS,OACTC,cAAe,UAEnB6T,WAAY,CACR5tB,WAAY,SAEhB6tB,WAAY,CACR9tB,OAAQ,OACR2c,KAAM,MACNF,SAAU,cAwCHsR,GAxBuB,SAAC,GAUnB,IAThB/X,EASe,EATfA,MACAyC,EAQe,EARfA,YACA5b,EAOe,EAPfA,SACA0N,EAMe,EANfA,UACAC,EAKe,EALfA,WACA4iB,EAIe,EAJfA,aACA/Z,EAGe,EAHfA,MACAgF,EAEe,EAFfA,OACA2V,EACe,EADfA,UAEMzT,EAAUX,KAChB,OACI,sBAAKa,UAAWF,EAAQrd,KAAxB,UACI,cAAC,GAAD,CAAiBqN,UAAWA,EAAWC,WAAYA,EAAY4iB,aAAcA,IAC7E,cAAC,GAAD,CAAUd,WAAYjU,EAAQI,YAAaA,EAAa+T,aAAcwB,EAAWzB,aAAcvW,IAC/F,cAACiY,GAAA,EAAD,CAAMC,OAAK,EAACC,gBAAc,EAAC1T,UAAWF,EAAQuT,WAA9C,SACKjxB,IAEL,cAAC,GAAD,CAAawW,MAAOA,Q,UC3D1BuG,GAAYC,aAAW,SAACzb,GAAD,MAAY,CACrClB,KAAM,CACF8c,cAAe,SACfoU,YAAahwB,EAAM8b,QAAQ,IAE/BmU,QAAS,CACLtU,QAAS,OACT,QAAS,CACL8J,YAAazlB,EAAM8b,QAAQ,KAGnCoU,IAAK,CACDvuB,MAAO,OACPga,QAAS,QAEbwU,SAAU,CACNtU,SAAU,EACVuU,WAAY,EACZf,OAAQ,oBACRhR,SAAU,SACVjT,MAAO,YACPzJ,MAAO3B,EAAM8b,QAAQ,GACrBla,OAAQ5B,EAAM8b,QAAQ,IAE1BsD,MAAO,CACHhU,MAAOpL,EAAM2e,QAAQyB,KAAKxB,UAC1BoR,YAAahwB,EAAM8b,QAAQ,GAC3BuU,WAAY,SACZhS,SAAU,SACViS,aAAc,gBAyCPC,GA/B6B,SAAC,GAAoD,IAAlD3tB,EAAiD,EAAjDA,IAAKC,EAA4C,EAA5CA,IAAK2tB,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,OACzDtU,EAAUX,KACVkV,EA+BV,SAAmBC,EAA0B/tB,EAAcC,EAAc2tB,GACrE,IAAII,EAA8B,GAG9BA,EAFChuB,GAAQC,GAAO2tB,IAAaK,WAASC,aAE5BH,EAAK7qB,KAAI,YAAqB,IAAD,mBAAlBsF,EAAkB,KAAXgU,EAAW,KAC7B2R,EAAW3R,EAAMqB,MAAM,gBAC7B,GAAIsQ,EAAU,CACV,IAAMC,EAAUC,WAAWF,EAAS,IAEpC,MAAO,CAAC3lB,GADQvI,GAAQD,EAAMC,GAAOmuB,EAAW,KAAKvG,QAAQ,IAE1D,MAAO,CAACrf,EAAOgU,MARiC,aAAOuR,GAWtE,IAAMO,EAAcN,EAAQtmB,QAAO,SAACC,EAAK4mB,GAAN,mBAAC,eAAiB5mB,GAAlB,6BAA2B4mB,EAAE,IAA7B,OAAkCA,EAAE,IAAOA,MAAM,IACpF,OAAO/mB,OAAOgnB,OAAOF,GA7CPG,CAAUZ,EAAQ7tB,EAAKC,EAAK2tB,GAC1C,OACI,cAACc,GAAA,EAAD,CAAUC,SAAO,EAACzB,OAAK,EAAC0B,gBAAc,EAACnV,UAAWF,EAAQrd,KAA1D,SACK4xB,EAAM5qB,KAAI,SAACoqB,EAAKuB,GAAN,OACP,sBAAuBpV,UAAWF,EAAQ+T,IAA1C,UACI,qBAAK7T,UAAWF,EAAQgU,SAAU7uB,MAAO,CAAEO,WAAYquB,EAAI,IAA3D,mBAGA,cAACvE,GAAA,EAAD,CACI+F,WAAY,IACZ/xB,MACI,sBAAK0c,UAAWF,EAAQ8T,QAAxB,UACI,qBAAK5T,UAAWF,EAAQgU,SAAU7uB,MAAO,CAAEO,WAAYquB,EAAI,IAA3D,mBAGCA,EAAI,MAPjB,SAWI,cAAC/uB,EAAA,EAAD,CAAYC,QAAQ,UAAUC,UAAU,MAAMgb,UAAWF,EAAQiD,MAAjE,SACK8Q,EAAI,SAhBjB,aAAgBuB,U,4CC7B1BjW,GAAYC,aAAW,SAACzb,GAAD,MAAY,CACrC0jB,UAAW,GACXiO,SAAU,CACNC,WAAY,EACZhO,cAAe,EACfoM,YAAa,EACb6B,aAAc,IAElBC,eAAgB,CACZ,MAAO,CACH1U,OAAQ,YAGhB2U,eAAgB,CACZC,SAAUhyB,EAAM8b,QAAQ,MAE5BmW,WAAY,CACRD,SAAUhyB,EAAM8b,QAAQ,IAE5BoW,OAAQ,CACJvwB,MAAO3B,EAAM8b,QAAQ,GACrBla,OAAQ5B,EAAM8b,QAAQ,GACtB,QAAS,CACLla,OAAQ,QACRD,MAAO,UAGfwwB,iBAAkB,CACdhwB,QAAS,EACT,QAAS,CACLR,MAAO,QACPC,OAAQ,UAGhBwwB,eAAgB,CACZhnB,MAAO,8BAEXinB,YAAa,CACThC,WAAY,SACZhS,SAAU,SACViS,aAAc,YAElBgC,cAAe,CACXjC,WAAY,SACZhS,SAAU,SACViS,aAAc,YAElB1R,UAAW,CACPE,MAAO,GAEXhgB,KAAM,CACFwkB,UAAWtjB,EAAM8b,QAAQ,IAE7ByW,QAAS,CACLjP,UAAWtjB,EAAM8b,QAAQ,IAE7BmF,eAAgB,CACZ7V,MAAOpL,EAAM2e,QAAQyB,KAAKxB,WAE9B4T,UAAW,CACP7W,QAAS,QAEb8W,WAAY,CACR5W,SAAU,GAEd6W,kBAAmB,GACnBC,YAAa,CACTtD,OAAQ,kBACR1tB,MAAO,OACPga,QAAS,eACT/Z,OAAQ,OACR6jB,YAAa,OAEjBmN,aAAc,CACV/W,SAAU,EACVzQ,MAAO,UACPjJ,QAAS,EACTsjB,YAAa,EACb,UAAW,CACP9jB,MAAO,QACPC,OAAQ,UAGhBixB,WAAY,CACRhX,SAAU,EACVzQ,MAAO,UACPjJ,QAAS,EACTsjB,YAAa,EACb,UAAW,CACP9jB,MAAO,QACPC,OAAQ,cAwJLkxB,GApIyC,SAAC,GAY5B,IAXzBjjB,EAWwB,EAXxBA,MACA+W,EAUwB,EAVxBA,OACAmM,EASwB,EATxBA,QACAnwB,EAQwB,EARxBA,IACAC,EAOwB,EAPxBA,IACAmwB,EAMwB,EANxBA,SACAC,EAKwB,EALxBA,cACA7M,EAIwB,EAJxBA,gBACA1e,EAGwB,EAHxBA,UACAF,EAEwB,EAFxBA,UACAkC,EACwB,EADxBA,YAEMyS,EAAUX,KACVxb,EAAQkzB,eACd,EAAwBlU,oBAAkB,GAA1C,mBAAOvB,EAAP,KAAa0V,EAAb,KAEMC,EAAYrtB,QAAQ2B,GAAaA,EAAU+oB,QAAU/oB,EAAU+oB,OAAO1nB,OAAS,GAC/EsqB,EAAmBttB,QAAQ2B,GAAaA,EAAU+oB,QAAsC,IAA5B/oB,EAAU+oB,OAAO1nB,QAE/EuqB,EAAUtzB,EAAM2e,QAAQyB,KAAKxC,QAC7B2V,EAAUvzB,EAAM2e,QAAQ9c,WAAW1D,QACnCk1B,IAAgB,OAAI3rB,QAAJ,IAAIA,OAAJ,EAAIA,EAAW+oB,QAC3BjpB,IAAchE,wBAAsBG,SAAW6D,IAAchE,wBAAsBK,QACnF0vB,EAAU7rB,EAAU+oB,OAAO,GAAG,GAC9B6C,EAAUtzB,EAAM2e,QAAQ6U,gBAAgBD,KAExCD,EAAU5rB,EAAU+oB,OAAO,GAAG,GAC9B8C,EAAUvzB,EAAM2e,QAAQ9c,WAAW1D,SAGhC80B,IACHzrB,IAAchE,wBAAsBG,SAAW6D,IAAchE,wBAAsBK,QACnFyvB,EAAUL,EAAc,KACxBM,EAAUN,EAAc,OAExBK,EAAUL,EAAc,KACxBM,EAAUvzB,EAAM2e,QAAQ9c,WAAW1D,UAI3C,IAAMs1B,EAAS,kBAAaL,EAAYD,GAAS1V,QAAQ7U,GAEzD,OACI,eAAC,IAAM8qB,SAAP,WACI,eAACpC,GAAA,EAAD,CAAUxB,OAAK,EAACzT,UAAWwG,aAAK1G,EAAQwV,SAAUyB,GAAajX,EAAQ2V,gBAAvE,UACI,cAAC6B,GAAA,EAAD,CAActX,UAAWF,EAAQ8V,WAAjC,SACI,cAACrG,EAAA,EAAD,CACI5qB,KAAK,QACL8hB,QAAS2Q,EACTxN,UAAWmN,EACXjX,QAAS,CAAErd,KAAMqd,EAAQgW,iBAAkBlM,SAAU9J,EAAQiW,gBAJjE,SAMKgB,GAAa3V,EAAO,cAAC,KAAD,IAAqB,cAAC,KAAD,QAGlD,cAACmW,GAAA,EAAD,CAAgBvX,UAAWF,EAAQ4V,eAAnC,SACI,cAAC8B,GAAA,EAAD,CAAQxX,UAAWF,EAAQ+V,OAAQ5wB,MAAO,CAAEO,WAAY0xB,GAAWzQ,QAAS2Q,EAA5E,SACI,cAAC,GAAD,CACIjsB,UAAWA,EACXssB,UAAW,CACPxyB,MAAO,CAAE8J,MAAOkoB,UAKhC,cAAC3H,GAAA,EAAD,CACI+F,WAAY,KACZ/xB,MACI,eAAC,IAAM+zB,SAAP,WACI,cAACvyB,EAAA,EAAD,CAAYiK,MAAM,UAAlB,SAA6ByE,IAC5BmjB,GAAY,cAAC7xB,EAAA,EAAD,CAAYC,QAAQ,UAApB,SAA+B4xB,OALxD,SASI,cAACe,GAAA,EAAD,CACInW,QAAS/N,EACT+O,UAAWoU,EACXlQ,QAAS2Q,EACTtX,QAAS,CAAEyB,QAASzB,EAAQkW,YAAazT,UAAWzC,EAAQmW,mBAGpE,eAAC0B,GAAA,EAAD,CAAyB3X,UAAWF,EAAQyC,UAA5C,UACKmU,GACG,cAAChyB,GAAA,EAAD,CAAkBsb,UAAWF,EAAQ8E,eAAgB7V,MAAM,UAAUnK,UAAW,EAAGD,KAAM,MAE3F+xB,GACE,qCACK3M,GACG,cAACuF,GAAA,EAAD,CAAS+F,WAAY,KAAM/xB,MAAM,qBAAjC,SACI,cAACisB,EAAA,EAAD,CACIC,KAAK,MACLxP,UAAWF,EAAQ0W,WACnB,aAAW,aACX/P,QAAS,SAAC3I,GACNA,EAAMsJ,kBACN2C,KANR,SASI,cAAC,KAAD,QAIZ,cAACuF,GAAA,EAAD,CAAS+F,WAAY,KAAM/xB,MAAM,mBAAjC,SACI,cAACisB,EAAA,EAAD,CACIC,KAAK,MACLxP,UAAWF,EAAQyW,aACnB,aAAW,SACX9P,QAAS,SAAC3I,GACNA,EAAMsJ,kBACN/Z,EAAYkd,IANpB,SASI,cAAC,KAAD,iBAOvBwM,GAAa3V,GACV,cAAC,GAAD,CACI7a,IAAKA,EACLC,IAAKA,EACL2tB,SAAQ,OAAE9oB,QAAF,IAAEA,OAAF,EAAEA,EAAW8oB,SACrBC,OAAM,OAAE/oB,QAAF,IAAEA,OAAF,EAAEA,EAAW+oB,a,UC/LxBwD,GA3CiB,WAC5B,IAAM7lB,EAAOyL,aAAelM,IAC5B,EAAgC8L,aAAepB,IAA/C,mBAAO6b,EAAP,KAAiBC,EAAjB,KACQC,EAAoBC,eAApBD,gBACFE,EAAeza,aAAerL,IACpC,EAAmCiL,aAAevB,IAAlD,mBAAO/L,EAAP,KAAkBooB,EAAlB,KACMrb,EAAcW,aAAehB,IAE3BmB,EAAYf,KAAZe,QAcR,GAPAiB,qBAAU,WACFiZ,GAAYA,EAASnrB,OAAS,IAC9BqrB,EAAgBF,EAAU,CAAE9yB,QAAS,QAASozB,iBAAkB,MAChEL,EAAY,OAEjB,CAACD,KAEC9lB,EAAM,OAAO,KAElB,IAAMwJ,EAA2BxJ,EAAKE,KAAKsJ,MAAQxJ,EAAKE,KAAKsJ,MAAQ,GAC/DyC,EAAczC,EAAM7O,OAAS,GAAKqF,EAAKE,KAAK+L,YAAcjM,EAAKE,KAAK+L,YAAc,GACxF,OACI,cAAC,GAAD,CACIzC,MAAOA,EACPyC,YAAaA,EACblO,UAAWA,EACXC,WAAYA,GACZ4iB,aAtBa,SAACG,GAClBjV,EAAgBC,MAAM,UAAW,iBAAkBgV,EAAGxqB,IACtD4vB,EAAcpF,IAqBVlV,OAAQf,EACR0W,UAAW5V,EAPf,SASKsa,EAAaxuB,KAAI,WAAS6E,GAAT,IAAGhG,EAAH,EAAGA,GAAH,OACd,cAAC,GAAD,CAAyCkN,IAAKlN,GAA9C,iBAAkCgG,UAY5C8pB,GAAyC,SAAC,GAAwB,IAAD,IAArB5iB,EAAqB,EAArBA,IACxC9M,EAAO8U,aAAe1J,GAAuB0B,IAC7CpJ,EAAQoR,aAAe9H,GAAyBF,IAChD6iB,EAAY7a,aAAenD,GAAwB7E,IACnDuU,EAAkBD,KAChBzc,EAAgBkW,KAAhBlW,YAEFirB,EAAK,UAAGlsB,EAAMzE,aAAT,iBAAG,EAAa4wB,mBAAhB,aAAG,EAA0BD,MAChChwB,EAAyBI,EAAzBJ,GAAI6C,EAAqBzC,EAArByC,UAAWqI,EAAU9K,EAAV8K,MAEnBjN,OAA0BgG,EAC1B/F,OAA0B+F,EAC1BoqB,OAA+BpqB,EAEnC,GAAI+rB,EACA,IAAK,IAAD,IACA/xB,EAAO+xB,EAAM/xB,KAAmB+xB,EAAME,cAAsBjsB,EAC5D/F,EAAO8xB,EAAM9xB,KAAmB8xB,EAAMG,cAAsBlsB,EACxDhG,GAAOA,EAAM,GAAKC,GAAOA,EAAM,IAAGmwB,EAAQ,yBAAWnwB,SAAX,aAAW,EAAK4nB,QAAQ,GAAxB,2BAAmC7nB,SAAnC,aAAmC,EAAK6nB,QAAQ,KAChG,SACEniB,IAAI2M,MAAJ,4CAA+CE,KAAKC,UAAUuf,KAItE,OACI,cAAC,GAAD,CACI/N,OAAQjiB,EACR6C,UAAWA,EACXE,UAAWe,EAAMf,UACjB9E,IAAKA,EACLC,IAAKA,EACLgN,MAAOA,EACPmjB,SAAUA,EACV+B,YAVW,EAWX3O,gBAAiB,wBAAMA,EAAe,UAAC3d,EAAMzE,aAAP,aAAC,EAAa0U,SACpDua,cAA6B,OAAdyB,EAAqBxrB,GAAawrB,QAAa9rB,EAC9DmqB,QAAStqB,EAAM2J,aAAeC,eAAamF,UAAY/O,EAAM0O,kBAAoBjB,kBAAgBsB,SACjG9N,YAAaA,K,qBCrGnB8R,GAAYC,aAAW,SAACzb,GAAD,MAAY,CACrClB,KAAM,GACNk2B,SAAU,CACN5pB,MAAOpL,EAAM2e,QAAQf,QAAQiB,aAC7Bhd,WAAY7B,EAAM2e,QAAQf,QAAQqX,MAClC,kBAAmB,CACf7pB,MAAOpL,EAAM2e,QAAQf,QAAQiB,aAC7Bhd,WAAY7B,EAAM2e,QAAQf,QAAQqN,OAG1C,0BAA2B,CACvB,KAAM,CACFiK,gBAAiBl1B,EAAM2e,QAAQwW,QAAQlK,MAE3C,MAAO,CACHiK,gBAAiBl1B,EAAM2e,QAAQwW,QAAQF,OAE3C,OAAQ,CACJC,gBAAiBl1B,EAAM2e,QAAQwW,QAAQlK,OAG/CmK,cAAe,CACXhqB,MAAOpL,EAAM2e,QAAQf,QAAQiB,aAC7Bhd,WAAY7B,EAAM2e,QAAQf,QAAQqN,MAEtCoK,QAAS,CACLjqB,MAAOpL,EAAM2e,QAAQwW,QAAQtW,aAC7Bhd,WAAY7B,EAAM2e,QAAQwW,QAAQ11B,KAClC,kBAAmB,CACf2L,MAAOpL,EAAM2e,QAAQwW,QAAQtW,aAC7Bhd,WAAY7B,EAAM2e,QAAQwW,QAAQlK,MAEtCqK,UAAW,6BAEfC,aAAc,CACVnqB,MAAOpL,EAAM2e,QAAQwW,QAAQtW,aAC7Bhd,WAAY7B,EAAM2e,QAAQwW,QAAQlK,MAEtCuK,UAAW,CACP3zB,WAAY,cACZ,kBAAmB,CACfA,WAAY,gBAGpB4zB,SAAU,CACNrqB,MAAOpL,EAAM2e,QAAQwW,QAAQF,OAEjCplB,MAAO,CACH8L,QAAS,QAEb+Z,SAAU,CACN9zB,OAAQ5B,EAAM8b,QAAQ,GACtBna,MAAO3B,EAAM8b,QAAQ,GACrBiF,SAAU/gB,EAAM21B,WAAWC,QAAQ7U,SACnC5e,QAAS,EACT,QAAS,CACL4e,SAAU/gB,EAAM21B,WAAWC,QAAQ7U,WAG3C8U,UAAW,CACPpQ,YAAazlB,EAAM8b,QAAQ,GAC3B6E,WAAY3gB,EAAM8b,QAAQ,IAE9BoW,OAAQ,GACRhO,SAAU,GACV4R,SAAU,CAAEnV,WAAY3gB,EAAM8b,QAAQ,IACtCiZ,WAAY,CACR3pB,MAAOpL,EAAM2e,QAAQwW,QAAQtW,aAC7Bhd,WAAY7B,EAAM2e,QAAQwW,QAAQ11B,UA4F3Bs2B,GAhFqC,SAAC,GAM1B,IAAD,IALtB1Z,EAKsB,EALtBA,UACAra,EAIsB,EAJtBA,SACA+yB,EAGsB,EAHtBA,WACAiB,EAEsB,EAFtBA,YACAC,EACsB,EADtBA,YAEM9Z,EAAUX,KAChB,EAAgCwD,oBAAkB,GAAlD,mBAAOkF,EAAP,KAAiBpJ,EAAjB,KACMob,EAAK,CACPC,GAAIpB,EAAa5Y,EAAQkZ,QAAUlZ,EAAQ6Y,SAC3CoB,IAAKrB,EAAa5Y,EAAQoZ,aAAepZ,EAAQiZ,eAE/CnS,EAAiB,SAACoT,GAAD,OAAwB,SAACnhB,GAC5CA,EAAE+N,iBACF/N,EAAEuO,kBACE4S,GAAIA,MAEZ,OACI,cAACC,GAAA,EAAD,CACIt1B,KAAK,QACL8hB,QAAS,kBAAMhI,GAAaoJ,IAC5B7H,UAAWwG,aAAK1G,EAAQrd,KAAMo3B,EAAGC,GAAI9Z,GACrCka,WAAW,EACXpa,QAAS,CACLiH,KAAMP,aAAKqT,EAAGC,GAAIha,EAAQqZ,WAC1BgB,WAAYra,EAAQtM,OAExBA,MACI,qCACI,cAAC8b,GAAA,EAAD,CACIhsB,MACI,qCACI,8BAAOukB,EAA0C,oBAA/B,+BACjB6Q,GACG,qBAAK1Y,UAAWF,EAAQsZ,SAAxB,iEALhB,SAYI,iCACKvR,GAAQ,SACRliB,EAASM,KAAON,EAASM,KAAKmoB,QAAQ,GAAK,IAC3CvG,GACG,uBAAM7H,UAAWF,EAAQ0Z,UAAzB,UACK,YADL,eACoB7zB,EAASI,iBAD7B,aACoB,EAAoBqoB,QAAQ,GADhD,eACsDzoB,EAASK,gBAD/D,aACsD,EAAmBooB,QAAQ,GADjF,KACuF,YAKlGvG,GACG,cAACyH,GAAA,EAAD,CAAShsB,MAAM,oCAAf,SACI,cAACisB,EAAA,EAAD,CACI6K,YAAaxT,IACb5G,UAAWwG,aAAK1G,EAAQuZ,SAAUQ,EAAGE,IAAKja,EAAQ2Z,UAClDhT,QAASG,EAAegT,GAH5B,SAKI,cAACS,GAAD,QAIX3B,GACG,cAACpJ,GAAA,EAAD,CAAShsB,MAAM,0CAAf,SACI,cAACisB,EAAA,EAAD,CACI6K,YAAaxT,IACb5G,UAAWwG,aAAK1G,EAAQuZ,SAAUQ,EAAGE,IAAKja,EAAQ2Z,UAClDhT,QAASG,EAAe+S,GAH5B,SAKI,cAAC,KAAD,cCrJ1Bxa,GAAYC,aAAW,SAACzb,GAAD,MAAY,CACrClB,KAAM,GACNa,MAAO,CACHsd,OAAQ,EACR9a,QAASnC,EAAM8b,QAAQ,GACvBja,WAAY7B,EAAM2e,QAAQwW,QAAQ11B,KAClC2L,MAAOpL,EAAM2e,QAAQwW,QAAQtW,cAEjC8X,QAAS,CACL1Z,OAAQ,EACR9a,QAASnC,EAAM8b,QAAQ,IAE3B8a,QAAS,CACLz0B,QAASnC,EAAM8b,QAAQ,IAE3B+a,oBAAqB,CACjBlb,QAAS,OACTha,MAAO,OACP0c,SAAU,UAEdyY,uBAAwB,GACxBC,WAAY,CACRp1B,MAAO,OACPC,OAAQ,QAEZ8c,YAAa,CACTnd,SAAU,WACVud,MAAO9e,EAAM8b,QAAQ,GACrBra,IAAKzB,EAAM8b,QAAQ,QAqDZkb,GA7CuC,SAAC,GAA4C,IAA1CrR,EAAyC,EAAzCA,QAASlI,EAAgC,EAAhCA,KACxDtB,EAAUX,KAChB,OACI,eAACyb,EAAA,EAAD,CAAQ,kBAAgB,0BAA0BxZ,KAAMA,EAAMtd,SAAS,KAAKwlB,QAASA,EAArF,UACI,eAACuR,EAAA,EAAD,CAAaC,mBAAiB,EAAC9a,UAAWF,EAAQxc,MAAlD,UACI,cAACwB,EAAA,EAAD,CAAYC,QAAQ,KAApB,qDACA,cAACwqB,EAAA,EAAD,CAAY,aAAW,QAAQvP,UAAWF,EAAQuC,YAAaoE,QAAS6C,EAASva,MAAM,UAAvF,SACI,cAAC,IAAD,SAGR,eAACgsB,EAAA,EAAD,CAAeC,UAAQ,EAAvB,UACI,eAACl2B,EAAA,EAAD,CAAYsb,WAAS,EAArB,UACK,iFACA,oFACA,4BAEL,sBAAKJ,UAAWF,EAAQ0a,oBAAxB,UACI,sBAAKxa,UAAWF,EAAQ2a,uBAAxB,UACI,cAAC31B,EAAA,EAAD,CAAYC,QAAQ,KAApB,sBACA,qBAAKmb,IAAG,UAAKxQ,GAAL,uBAAqCsQ,UAAWF,EAAQ4a,gBAEpE,sBAAK1a,UAAWF,EAAQ2a,uBAAxB,UACI,cAAC31B,EAAA,EAAD,CAAYC,QAAQ,KAApB,iBACA,qBAAKmb,IAAG,UAAKxQ,GAAL,mBAAiCsQ,UAAWF,EAAQ4a,mBAGpE,eAAC51B,EAAA,EAAD,CAAYsb,WAAS,EAArB,UAEQ,qHAEH,qCAEL,eAACtb,EAAA,EAAD,CAAYsb,WAAS,EAArB,UACK,+BACD,cAACC,GAAA,EAAD,CAAM9b,KAAK,+BAA+B+jB,OAAO,SAAjD,6BAGC,8CACA,gEC3EfnJ,GAAYC,aAAW,SAACzb,GAAD,MAAY,CACrClB,KAAM,CACFyC,SAAU,WACV+1B,OAAQt3B,EAAM8b,QAAQ,GACtBpa,KAAM1B,EAAM8b,QAAQ,QAyCbyb,GArCqB,WAChC,MAAsCvY,oBAAkB,GAAxD,mBAAOwY,EAAP,KAAoBC,EAApB,KACQrD,EAAoBC,eAApBD,gBACFjY,EAAUX,KACVxZ,EAAW6X,aAAe1B,IAE1Buf,EADY7d,aAAepB,IAE5B9Z,QAAO,SAAC0I,GAAD,OAASA,EAAItC,KAAKyC,YAAchE,wBAAsBK,UAC7DyG,QAAe,SAACC,EAAKlD,GAClB,IAAMswB,EAAatwB,EAAIrD,OAASqD,EAAIrD,MAAM+D,SAAWV,EAAIrD,MAAM+D,QAAU,EAAIV,EAAIrD,MAAM+D,QAAU,IACjG,OAAOpF,KAAKE,IAAI80B,EAAYptB,KAC7B,KAEDwqB,EAAahvB,QAAQ/D,GAAYA,EAASM,MAAQo1B,GAAoB11B,EAASM,KAAOo1B,GAU5F,OACI,qCACI,cAAC,GAAD,CACIrb,UAAWF,EAAQrd,KACnBkD,SAAUA,EACVi0B,YAbG,WACX,IAAQ3zB,EAA6DN,EAA7DM,KAAMX,EAAuDK,EAAvDL,MAAOC,EAAgDI,EAAhDJ,OAAQS,EAAwCL,EAAxCK,SAAUD,EAA8BJ,EAA9BI,UAAWiX,EAAmBrX,EAAnBqX,QAASC,EAAUtX,EAAVsX,MAC3Dse,UAAUC,UAAUC,UAChB3iB,KAAKC,UAAU,CAAE9S,OAAMX,QAAOC,SAAQS,WAAUD,YAAWiX,UAASC,SAAS,KAAM,IAEvF8a,EAAgB,mCAAoC,CAAEhzB,QAAS,OAAQozB,iBAAkB,OASjFwB,YAAa,kBAAMyB,GAAe,IAClC1C,WAAYA,IAEhB,cAACgD,GAAD,CAAgBta,KAAM+Z,EAAa7R,QAAS,kBAAM8R,GAAe,UCpB9DO,GAzBc,WACzB,OACI,cAAC,IAAD,CACIl3B,QAAS,cAACC,GAAA,EAAD,CAAkBC,KAAK,OAAOC,UAAW,IAClDC,OACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAnC,4BAIJvB,eAAgB,CACZK,SAAU,KACVmB,MAAO,CACHC,SAAU,WACVC,OAAQ,IACRC,IAAK,EACLC,KAAM,EACNC,MAAO,OACPC,OAAQ,OACRC,WAAY,iBCG1Bo2B,I,OAAkB,CACpBv2B,KAAM,GACND,IAAK,KAGH+Z,GAAYC,aAAW,SAACzb,GAAD,MAAY,CACrC,UAAW,CACP,6BAA8B,CAC1BwB,OAAQ,eACRD,SAAU,WACV22B,cAAe,OACfx2B,KAAM,UACNod,MAAO9e,EAAM8b,QAAQ,GACrBwb,OAAQt3B,EAAM8b,QAAQ,KAG9Bhd,KAAM,CACF6hB,WAAY3gB,EAAM8b,QAAQ,IAE9B4H,UAAW,CACP/H,QAAS,OACT/Z,OAAQ,QAEZu2B,aAAc,CACV52B,SAAU,WACVM,WAAY,UACZD,OAAQ,OACRD,MAAO,OACP,OAAQ,CACJyJ,MAAO,UACP7J,SAAU,WACVE,IAAK,MACLC,KAAM,MACN02B,UAAW,0BAGnBC,eAAgB,CAEZz2B,OAAQ,OACR+Z,QAAS,QAEb2c,aAAc,CACV/Z,KAAM,UAEVga,iBAAkB,GAGlBC,gBAAiB,CACbC,WAAY,OACZC,eAAgB,QAEpBC,cAAe,CACXp3B,SAAU,WACV+1B,OAAQ,GACRxY,MAAO,GACP1T,MAAOpL,EAAM2e,QAAQC,UAAUnf,MAEnCm5B,OAAQ,CACJr3B,SAAU,WACV0b,OAAQ,EACRvb,KAAM,OACND,IAAK,QAETguB,WAAY,CACR5tB,WAAY,SAEhBg3B,UAAW,OAGTC,GAAqB16B,KAAEmmB,UAAS,kBAAajc,IAAIC,MAAJ,MAAAD,IAAG,aAAiB,MAsGxDywB,GApGiB,SAAC,GAAyE,IAAvEt6B,EAAsE,EAAtEA,SAAU0N,EAA4D,EAA5DA,UAAW6sB,EAAiD,EAAjDA,aAActgB,EAAmC,EAAnCA,OAAQkV,EAA2B,EAA3BA,WACpEzR,EAAUX,KAChB,EAAiC/B,aAAetB,IAAhD,mBAAOnW,EAAP,KAAiBi3B,EAAjB,KACA,EAAkCja,oBAAkB,GAApD,mBAAOka,EAAP,KAAkBC,EAAlB,KACMC,EAAYvf,aAAef,IAC3BugB,EAAatf,aAAkB3B,IACrC,EAAkCqB,aAAenB,IAAjD,mBAAOghB,EAAP,KAAkBC,EAAlB,KAEMC,EAAcC,mBACpBD,EAAY5iB,QAAU5U,EAEtB,IAAM03B,EAAc1e,uBAChB,SAAC9F,GACG,IAAMykB,EAAczkB,EAAEyP,OAAO3e,gBACzBszB,IAAcK,GAAaJ,EAAaI,KAEhD,CAACL,IASCM,EAAc5e,uBAChB,SAAC6e,GACG,IAAMC,EAAI,2BAAQN,EAAY5iB,SAAYijB,GAEtCjM,GAAckM,EAAKx3B,OACfw3B,EAAKx3B,KAAOsrB,EAAW,GAAIkM,EAAKx3B,KAAOsrB,EAAW,GAC7CkM,EAAKx3B,KAAOsrB,EAAW,KAAIkM,EAAKx3B,KAAOsrB,EAAW,KAE/D,IAAMmM,EnDnCX,SACHC,EACAthB,GAEwB,IADxBuhB,EACuB,wDAGvB,IAAKD,GAAUthB,IAAqB,IAAXuhB,EACrB,MAAO,EAAEvhB,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,GAGnE,IAAKA,IAAWshB,GAAU3zB,uBAAY2zB,EAAO,KAAO3zB,uBAAY2zB,EAAO,IAAK,OAAO,KACnF,IAAME,EAAY,CACdxhB,EAAO,GAAKshB,EAAO,GAAKthB,EAAO,GAAKA,EAAO,GAAKshB,EAAO,GAAKthB,EAAO,GAAKshB,EAAO,GAC/EthB,EAAO,GAAKshB,EAAO,GAAKthB,EAAO,GAAKA,EAAO,GAAKshB,EAAO,GAAKthB,EAAO,GAAKshB,EAAO,IAEnF,OAAIE,EAAU,KAAOF,EAAO,IAAME,EAAU,KAAOF,EAAO,GAAW,KAC5DC,EAAe,EAAEvhB,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,GACpEwhB,EmDiBoBC,CACpB,CAACL,EAAK13B,UAAW03B,EAAKz3B,UAEtBqW,GAAUrV,GAAYb,YAEtBuD,QAAQqzB,IAAcF,IAItBxnB,MAAM4T,QAAQyU,KACdD,EAAK13B,UAAY23B,EAAgB,GACjCD,EAAKz3B,SAAW03B,EAAgB,IAGhCX,IAAcF,GAAWC,GAAa,GAE1CL,GAAmB,wBAAyB,CAAEe,MAAKC,OAAMphB,SAAQuhB,OAAQvhB,IAAWwgB,IACpFD,EAAaa,KAEjB,CAACphB,EAAQkV,EAAYsL,EAAWE,IAI9BgB,EAAYnc,mBAAQ,kBjDmIvB,SAA4B9R,GAC/B,OAAO,2BACAQ,IADP,IAEI7C,QAASqC,EAAUrC,QACnB3D,OAAQgG,EAAUhG,SiDvIUk0B,CAAmBluB,KAAY,IAG/D8O,qBAAU,WACN6d,GAAmB,wBAAyB,CAAEpgB,SAAQkV,aAAYsL,YAAWE,cAC7EQ,EAAY,eAAKJ,EAAY5iB,YAC9B,CAAC8B,EAAQkV,EAAYsL,EAAWE,IAEnC,IAAMkB,EAAYtB,GAAgB,cAACj4B,GAAA,EAAD,CAAkBC,KAAK,OAAOC,UAAW,EAAGob,UAAWF,EAAQwc,gBAUjG,OAAKyB,GAAc1hB,EAGf,qBAAK2D,UAAWF,EAAQgc,aAAxB,SACI,eAAC,KAAD,2BACQn2B,GADR,IAEIL,MAAM,OACNC,OAAO,OACPuC,QAASypB,EAAW,IAAM,EAC1B7lB,QAAS6lB,EAAW,IAAM,GAC1B2M,YAAa,EACbC,OAAQd,EACRe,SAnES,SAAC,GAAuB,IAArB94B,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAC3B0G,IAAIC,MAAM,aAAc5G,EAAOC,GAC/By3B,EAAW13B,EAAQ,GAAKC,EAAS,EAAI,CAAED,QAAOC,UAAW,OAkEjD84B,SAAUN,EACVO,iBAAkBf,EAClBgB,QAvBI,SAAC1lB,KAERA,EAAED,QAAUC,EAAED,MAAM/T,QAAUgU,EAAED,MAAM/T,OAAS,KAAOgU,EAAED,MAAM/T,OAAS,MACxE25B,QAAQ5lB,MAAM,YAAaC,IAqBvB4lB,qBAAsBC,EAAOC,UAAUC,YAZ3C,UAcI,cAAC,KAAD,CAAmB35B,MAAO22B,KACzBqC,EACA77B,QApBqB,cAAC,GAAD,K,oDC7JhC+c,GAAYC,aAAW,SAACzb,GAAD,MAAY,CACrCk7B,WAAY,CACR35B,SAAU,WACVE,IAAKzB,EAAM8b,QAAQ,GACnBpa,KAAM1B,EAAM8b,QAAQ,IAExBqf,WAAY,CACR55B,SAAU,WACVE,IAAKzB,EAAM8b,QAAQ,GACnBpa,KAAM1B,EAAM8b,QAAQ,QAqCbjb,GAjCyB,SAAC,GAA8D,IAA5DwL,EAA2D,EAA3DA,WAAY+uB,EAA+C,EAA/CA,aAAct5B,EAAiC,EAAjCA,YAAa4W,EAAoB,EAApBA,OACxEyD,EAAUX,KAChB,OACI,qCACI,cAACmQ,GAAA,EAAD,CAAShsB,MAAM,0BAAf,SACI,cAAC07B,GAAA,EAAD,CACIjwB,MAAM,UACN,aAAW,MACX0X,QAASsY,EACTp6B,KAAK,QACLqb,UAAWF,EAAQ+e,WALvB,SAOK7uB,EAAa,cAAC,KAAD,IAAsB,cAAC,KAAD,QAG5C,cAACsf,GAAA,EAAD,CACIhsB,MAAQ+Y,EAA8D,8BAArD,mDADrB,SAGI,cAAC2iB,GAAA,EAAD,CACIjwB,MAAM,YACN,aAAW,UACX0X,QAAS,kBAAMhhB,KACfd,KAAK,QACLilB,UAAWvN,EACX2D,UAAWF,EAAQgf,WANvB,SAQI,cAAC,KAAD,YCvBL5D,GApBqB,WAChC,MAAmC9d,aAAe1L,IAAlD,mBAAO1B,EAAP,KAAmB+uB,EAAnB,KACMhV,EAAkBD,KAClBzN,EAASmB,aAAetB,IAC9B,OACI,cAAC+iB,GAAD,CAEIjvB,WAAYA,EACZqM,OAAQA,EACR5W,YAAa,WACL4W,GAAQ0N,EAAgB1N,IAEhC0iB,aAAc,WACVlhB,EAAgBC,MAAM,UAAW,iBAAmB9N,EAAwB,OAAX,UACjE+uB,GAAc/uB,KARd,kBC0DDkvB,GAlEa,WACxB,IAAQz1B,EAAQ01B,IAAMC,WAAWC,MAAzB51B,IACFqG,EAAY0N,aAAe3B,IAC3ByjB,EAAsB9hB,aAAepB,IACrCmjB,EAASnC,iBAAO3zB,GACtB,EAA0CkZ,mBAA0D,CAChG6c,MAAO,EACPC,KAAM,EACN31B,OAAQ,IAHZ,mBAAO41B,EAAP,KAAsBC,EAAtB,KA0DA,OApDA/gB,qBAAU,WACN,GAAK2gB,EAAOhlB,QAAZ,CACA,IAAQilB,EAAwBE,EAAxBF,MAAOC,EAAiBC,EAAjBD,KAAM31B,EAAW41B,EAAX51B,OACf81B,EAAW,CAAEJ,QAAOC,OAAM31B,UAChC,GAAI21B,EAAO,EAAG,CACV,IAAMI,EpDyNX,SAAyBp2B,EAAUq2B,GACtC,IAAKt2B,GAAYC,GAAM,OAAO,EAC9BwC,IAAIC,MAAM,6BAA8B4zB,EAAQx3B,IAChD,IAAMkC,EAAQC,KAAKC,MACfH,EAAUd,EAERs2B,EAA0B,GAGhChyB,OAAOC,KAAK8xB,EAAQryB,SAAS1C,SAAQ,SAACi1B,GAC7Bz1B,EAAQgB,UAAUy0B,KAAez1B,EAAUA,EAAQiB,UAAUw0B,EAAcF,EAAQryB,QAAQuyB,QAIpG,IAAIp1B,EAA0B,KAC1Bq1B,EAAa,EACjBH,EAAQh2B,OAAOiB,SAAQ,SAACC,GAEfT,EAAQyB,SAAShB,EAAI1C,MACtBiC,EAAUA,EAAQ4B,SAASnB,EAAKJ,GAChCq1B,KAEJF,EAAch0B,KAAKf,EAAI1C,IACvBsC,EAAWI,EAAI1C,MAEnB2D,IAAIC,MAAJ,2CAA8C+zB,EAA9C,uBAGA,IAAIC,EAAgB,EAYpB,OAXAt2B,GAAeW,GACVjI,QAAO,SAAC6K,GAAD,OAAoD,IAAzCA,EAAMC,QAAQ5E,GAAciG,YAC9CnM,QAAO,SAAC6K,GAAD,OAAW4yB,EAAc3yB,QAAQD,GAAS,KACjDpC,SAAQ,SAACoC,GACN+yB,IACA31B,EAAUA,EAAQ8C,YAAYF,MAElC+yB,EAAgB,GAAGj0B,IAAIC,MAAJ,6CAAgDg0B,EAAhD,gCAGvBj0B,IAAIC,MAAJ,0CAA6CzB,KAAKC,MAAQF,EAA1D,SACO,EoDjQmB21B,CAAgBZ,EAAOhlB,QAASzK,GAClD7D,IAAIC,MAAJ,sCAAyC2zB,IACrCA,GACAD,EAASH,KAAO,EAChBG,EAASJ,OAAS,GACfI,EAASH,MAAQ,EAE5B,GAAI31B,EAAS,EAAG,CACZ,IAAMs2B,EAAY/1B,GAAgBk1B,EAAOhlB,QAAS+kB,GAClDrzB,IAAIC,MAAJ,sCAAyCk0B,IACrCA,GACAR,EAAS91B,OAAS,EAClB81B,EAASJ,OAAS,GACfI,EAAS91B,QAAU,EAE9B,GAAI01B,EAAQ,EAAG,CACX,IAAMa,EpDoJX,SAA0B52B,EAAUa,GACvC,IAAKd,GAAYC,GAAM,OAAO,EAC9B,IAAIc,EAAUd,EAER62B,EAAQ12B,GAAeW,GAAS0D,QAClC,SAACC,EAAKf,GAAN,mBAAC,eAAqBe,GAAtB,mBAA4Bf,EAAQ5C,EAAQyB,SAASmB,GAAOpD,aAC5D,IAGEw2B,EAAcj2B,EAAiBb,KAAI,gBAAGf,EAAH,EAAGA,KAAH,gBAAiBA,EAAK0C,UAAtB,YAAmC1C,EAAK2C,cAAaP,UAGxF01B,EAAQ52B,GAAeW,EAAS/B,GAAciG,SACpD+xB,EAAMt+B,MAAK,SAACC,EAAWE,GAAZ,OAA0Bi+B,EAAMn+B,GAAGgI,KAAOm2B,EAAMj+B,GAAG8H,QAE9D,IAAMs2B,EAAU72B,GAAeW,EAAS/B,GAAce,aACtDk3B,EAAQv+B,MAAK,SAACC,EAAWE,GAErB,IAAMq+B,EAAQH,EAAYnzB,QAAQkzB,EAAMn+B,GAAGiI,MAAQm2B,EAAYnzB,QAAQkzB,EAAMj+B,GAAG+H,MAChF,OAAc,IAAVs2B,EAAoBA,EAGbJ,EAAMn+B,GAAGgI,KAAOm2B,EAAMj+B,GAAG8H,QAKxC,IAAMw2B,EAAsB,uBAAOH,GAAP,aAAiBC,IAC7CE,EAAa71B,UAGbmB,IAAIC,MAAM,8BAA+B,CAAE00B,KAAMh3B,GAAeW,GAASO,UAAW+1B,KAAMF,IAE1F,IAAIG,EAAYl3B,GAAeW,GAW/B,OAVAu2B,EAAUh2B,UACV61B,EAAa51B,SAAQ,SAACg2B,EAAQC,GAC1B,GAAIA,IAAYF,EAAU1zB,QAAQ2zB,GAAS,CACvC,IAAMn2B,EAAuB,IAAZo2B,EAAgB,KAAOL,EAAaK,EAAU,GAC/D/0B,IAAIC,MAAJ,iCAAoC60B,EAApC,sBAAwDn2B,IACxDL,EAAUA,EAAQ02B,UAAUF,EAAQn2B,IACpCk2B,EAAYl3B,GAAeW,IACjBO,eAGX,EoDhMmBo2B,CAAiB3B,EAAOhlB,QAAS+kB,GACnDrzB,IAAIC,MAAJ,uCAA0Cm0B,IACtCA,EAAWT,EAASJ,MAAQ,EAC3BI,EAASJ,OAAS,EAEtBjmB,mBAAQqmB,EAAUF,IACnBlO,YAAW,WACPvlB,IAAIC,MAAJ,8BAAyCwzB,EAAeE,GACxDD,EAAiBC,KAClB,QAER,CAACF,EAAe5vB,EAAWwvB,IAI9B1gB,qBAAU,WACN,IAAMuiB,EAAkBC,aAAY,WAChCzB,EAAiB,2BAAKD,GAAN,IAAqBF,MAAOE,EAAcF,MAAQ,OACnE,KACH,OAAO,kBAAM6B,cAAcF,MAC5B,IAEHviB,qBAAU,WACN+gB,EAAiB,2BAAKD,GAAN,IAAqBD,KAAMC,EAAcD,KAAO,OACjE,CAAC3vB,IACJ8O,qBAAU,WACN+gB,EAAiB,2BAAKD,GAAN,IAAqB51B,OAAQ41B,EAAc51B,OAAS,OACrE,CAACw1B,IAIG,MCVIgC,GA5Cc,WACzB,IAAMvX,EAAkBD,KAClBzN,EAASmB,aAAeb,IACxBsgB,EAAYzf,aAAevB,IAC3BnM,EAAY0N,aAAe3B,IAC3B0lB,EAAe/jB,aAAetB,IAEpC,EAAkCyG,oBAAkB,GAApD,mBAAOka,EAAP,KAAkBC,EAAlB,KAaA,OAXAle,qBAAU,WACN,IAAM4iB,EAAG,uCAAG,4BAAAr/B,EAAA,yDACH06B,IAAa0E,EADV,gCAEkBxX,EAAgBwX,GAFlC,OAEEE,EAFF,OAGJx1B,IAAIy1B,KAAK,kDAAmDD,GACxDA,GAAS3E,GAAa,GAJtB,2CAAH,qDAOT0E,MACD,CAACD,EAAc1E,IAGd,eAAC,KAAD,CACI8E,SAAU,EACVlO,OAAK,EACLmO,kBAAgB,EAChBzJ,iBAAkB,IAClB0J,aAAc,CACVC,SAAU,SACVC,WAAY,UAPpB,UAUI,cAAC,GAAD,IACA,cAAC,GAAD,CAAKjyB,UAAWA,EAAWyhB,WAAYlV,EAAOpW,KAAMoW,OAAQA,EAAOA,OAAQsgB,cAAeM,EAA1F,SACK,CAEG,cAAC,GAAD,GAAuB,aACvB,cAAC,GAAD,GAAqB,gBAG7B,cAAC,GAAD,QC5CN9d,GAAYC,aAAW,SAACzb,GAAD,MAAY,CACrClB,KAAM,CACFqD,QAASnC,EAAM8b,QAAQ,GACvBla,OAAQ,OACRypB,UAAW,SACXC,WAAY,OACZ,MAAO,CACHA,WAAY,SAGpB+S,SAAU,CACN18B,MAAO,OACPga,QAAS,OACT+c,eAAgB,gBAChB,MAAO,CACHna,KAAM,yBAEVtB,OAAQjd,EAAM8b,QAAQ,EAAG,EAAG,EAAG,IAEnCyV,QAAS,CACLjO,UAAWtjB,EAAM8b,QAAQ,IAE7BwiB,WAAY,OAgEDC,GAvDuC,SAAC,GAI3B,IAHxBnvB,EAGuB,EAHvBA,QACAovB,EAEuB,EAFvBA,gBACAC,EACuB,EADvBA,YAEMtiB,EAAUX,KAEVkjB,EAAc,CAChBC,MAAOvvB,EAAQvC,KACf+xB,KAAMxvB,EAAQ+E,SACd,eAAgB/E,EAAQzK,GACxB,iBAAkB+M,MAAM4T,QAAQlW,EAAQyvB,MAAQzvB,EAAQyvB,KAAKxpB,KAAK,MAAQ,SAC1E,kBAAkB,GAAlB,OAAsB+S,SAAME,WAAWlZ,EAAQ0vB,UAAW,OAA1D,aAAqE1W,SAAMG,cAAcnZ,EAAQ0vB,WAAjG,KACA,kBAAkB,GAAlB,OAAsB1W,SAAME,WAAWlZ,EAAQ2vB,UAAW,OAA1D,aAAqE3W,SAAMG,cAAcnZ,EAAQ2vB,WAAjG,MAEEC,EAAe5vB,GAAWqvB,EAAYrvB,EAAQzK,IACpD,OACI,eAAC2X,GAAA,EAAD,CAAOD,UAAWF,EAAQrd,KAA1B,UACI,eAACqC,EAAA,EAAD,CAAYC,QAAQ,KAAKqb,WAAS,EAACrR,MAAM,cAAzC,UACKgE,EAAQ+E,SADb,cAGA,cAAC8qB,EAAA,EAAD,IACA,eAAC99B,EAAA,EAAD,CAAYE,UAAU,MAAMob,WAAS,EAArC,4HAEe,IACX,mBAAG7b,KAAK,+BAA+B+jB,OAAO,SAASua,IAAI,aAA3D,8CAHJ,OAQA,sBAAK7iB,UAAWF,EAAQkiB,SAAxB,UACI,cAAC,GAAD,CAAiB1+B,MAAK,YAAeiB,KAAI,UAAKkL,GAAL,cAAuBsD,EAAQgF,QAA/B,YAA0ChF,EAAQzK,MAC3F,cAAC,GAAD,CACI65B,gBAAiBA,EACjBQ,aAAcA,EACd5vB,QAASA,EAETzP,MAAM,gBAGd,cAAC,GAAD,CAAUA,MAAM,sBAAsBgpB,KAAM+V,IAC5C,cAAC,GAAD,CAAU/+B,MAAM,mBAAmBgpB,KAAMvZ,EAAQuZ,OAEjD,cAACsW,EAAA,EAAD,CAAS5iB,UAAWF,EAAQoV,UAC5B,mBAAG3wB,KAAK,yBAAyB+jB,OAAO,SAASua,IAAI,aAArD,SACI,qBACI7iB,UAAWF,EAAQmiB,WACnB9hB,IAAI,SACJD,IAAG,UAAK7Q,GAAL,+CCpCRyzB,GA3CW,WACtB,IAAMC,EAAmBvlB,aAAe5L,IAIlCoxB,EAAelkB,cAAkB,gBAAGC,EAAH,EAAGA,SAAU5F,EAAb,EAAaA,IAAb,8CAAuB,WAAO3D,GAAP,uBAAArT,EAAA,sEACrC4c,EAASkL,WAAW7P,IADiB,cACpD6oB,EADoD,gBAEjClkB,EAASkL,WAAW5P,GAAwB7E,IAFX,cAEpD0tB,EAFoD,gBAGtCnkB,EAASkL,WAAWvU,GAAyBF,IAHP,cAGpDpJ,EAHoD,iBAIpC2S,EAASkL,WAAW3P,IAJgB,QAIpD6oB,EAJoD,OAMtDC,GAAa,EAEZh3B,EAAMf,WAAae,EAAMf,UAAUxG,SAAWgV,kBAAgBM,QAC/DipB,GAAa,GAIbA,GAA6B,OAAfF,GACd/pB,EAAIiB,GAAD,uBAA+B6oB,GAA/B,CAAuCE,KAC1ChqB,EAAIkB,GAAwB7E,GAAM2tB,IAG5BC,GAA6B,OAAfF,IACpB/pB,EACIiB,GACA6oB,EAAO3gC,QAAO,SAAC+gC,GAAD,OAASA,IAAQH,MAEnC/pB,EAAIkB,GAAwB7E,GAAM,OAvBoB,4CAAvB,yDA2BvCoJ,qBAAU,WACN,IAAM0kB,EAAM,uCAAG,4BAAAnhC,EAAA,sDACFmM,EAAM,EADJ,YACOA,EAAMy0B,EAAiBr2B,QAD9B,mBAEHq2B,EAAiBz0B,GAAKnD,YAAchE,wBAAsBK,OAFvD,gCAGGw7B,EAAaD,EAAiBz0B,GAAKhG,IAHtC,OACsCgG,IADtC,0DAAH,qDAMZg1B,MACD,CAACP,KCyFOQ,GA3GqB,SAAC,GAAuC,IAArChgC,EAAoC,EAApCA,QAASoU,EAA2B,EAA3BA,KAAMI,EAAqB,EAArBA,QAE5C/H,EAAawN,aAAe9L,IAC5B8M,EAAoBhB,aAAe7K,IAGnC6wB,EAAgBzrB,GAAWhK,OAAOgnB,OAAO0O,qBAAmBr2B,QAAQ2K,EAAQ2rB,OAAS,EAQ3F,EAAyDC,GAAWhsB,EAAMI,GAAS,GAAO,GANlE,SAAChG,GAIrB,OAHIA,GACA8L,EAAgB+lB,gBAAhB,kBAA2C7rB,EAAQ8rB,YAAnD,YAAkE9xB,EAAKzJ,KAEpEw7B,QAAQC,aAEXhxB,EAAR,EAAQA,QAAkBixB,EAA1B,EAAiBtN,QAAwBuN,EAAzC,EAAyCA,YACzC,EAAyDC,GAAavsB,EAAMI,GAApEoqB,EAAR,EAAQA,gBAAiBgC,EAAzB,EAAyBA,eAAgB/B,EAAzC,EAAyCA,YAEnC9X,EAAe,SAAC8Z,GAAD,OAAmBrxB,EAAUoxB,EAAepxB,EAASqxB,GAAQN,QAAQC,WAU1F9lB,GAAgBtG,EAAM5E,GACtB+vB,KAGA,IAAMuB,EAAeziB,mBAAQ,kBAAM,cAAC,GAAD,MAAgB,IAC7C0iB,EAAgB1iB,mBAClB,kBACI,cAAC,GAAD,CACIO,KAAM,CACF,CACI3O,MAAO,eACPuP,MAAO,cAAC,GAAD,CAAoBuH,aAAcA,KAE7C,CACI9W,MAAO,eACPuP,MAAOhQ,EACH,cAAC,GAAD,CACIA,QAASA,EACTovB,gBAAiBA,EACjBC,YAAaA,IAGjB,8BAMpB,CAACrvB,EAASuX,EAAc6X,EAAiBC,IAE7C,OAAKoB,GASKS,GAAeD,EAEjB,cAAC,GAAD,CAAY1gC,MAAO,UAAWC,QAASA,EAASC,QAASmU,EAAKnU,QAA9D,SACI,cAAC,GAAD,CAAgBF,MAAO0gC,EAAgB,qBAAuB,sBAMhEjxB,GAAYA,EAAQd,MAQzBc,GAAYixB,GAAenmB,EAAgBC,MAAM,QAAS,oBAAqBzZ,OAAOC,SAASigC,MAGhG,qCACK/lB,EAAkB/U,KAAI,SAAC+6B,GAAD,OAGnB,aAFA,CAEC,GAAD,CAA2Bp5B,UAAWo5B,GAAhBA,MAE1B,cAAC,GAAD,CAAYlhC,MAAOyP,EAAQvC,KAAMjN,QAASA,EAASC,QAASmU,EAAKnU,QAAjE,SACI,cAAC,GAAD,CACI4d,KAAMpR,EACN8E,MAAM,WACNyM,QAAQ,SACRE,QAAS,IACTC,QAAQ,MACRF,YAAY,MACZH,OAAQijB,EACRhjB,OAAQ+iB,UAxBhB,cAAC,GAAD,CAAY/gC,MAAO,oBAAqBC,QAASA,EAASC,QAASmU,EAAKnU,QAAxE,SACI,cAAC,GAAD,OApBRqa,EAAgBC,MAAM,QAAS,gBAAiBzZ,OAAOC,SAASigC,MAE5D,cAAC,GAAD,CAAYjhC,MAAO,gBAAiBC,QAASA,EAASC,QAASmU,EAAKnU,QAApE,SACI,cAACihC,GAAD,CAAiB1sB,QAASA,EAAoBuR,QAAS,kBAAY/lB,EAAQwI,KAAK,Y,UClFhG8R,EAAgB5N,OAEhB,IAAMmH,GAAc,IAAIC,GAAiB,UAAW,KACpDD,GAAYE,QAEZ,IAAMotB,GAAwB,WAE1B,IAAMC,EAAetgC,OAAOC,SAASigC,KAAKzvB,MAAM,KAChD,OAAO6vB,EAAaj4B,OAAS,GAAKi4B,EAAa,GAAGvgB,MAAM,wBAA0BugB,EAAa,GAAK,MAqLzFC,GAlLkB,WAC7B,MAAgCjiB,qBAAhC,mBAAOkiB,EAAP,KAAiBC,EAAjB,KACA,EAAwCniB,mBAIrC,CACC5K,QAAS,KACT2e,SAAS,EACTmN,YAAaa,OAPjB,mBAAOK,EAAP,KAAqBC,EAArB,KASA,EAA8CriB,oBAAS,GAAvD,mBAAOsiB,EAAP,KAAwBC,EAAxB,KACMvtB,EAAwBwtB,aAAUN,GAAqC,GAAO,GAC9EthC,EAAU6hC,cAIhBxmB,qBAAU,WACNymB,oBAAU3G,EAAOnvB,UAAUC,QAAmB,GAAIxI,GAAY4I,YACzDyI,MAAK,SAACitB,GAAc,IAAD,EAChBr5B,IAAIC,MAAM,WAAYo5B,GACtB,IAAMC,EAAQ,UAAGD,EAAS5sB,YAAZ,aAAG,EAAef,KAC5B4tB,GAAYA,EAASC,SACrBV,EAAY,CACRU,OAAQD,EAASC,OACjBC,WAAYF,EAASG,SACrBC,oBAAqBJ,EAASK,SAC9BC,iBAAiB,EACjBC,MAAO,CACHvjC,OAAQgjC,EAAShjC,OACjBsqB,MAAO,CAAC,QAAS,UAAW,UAC5BkZ,eAAgBrH,EAAOztB,YAAYvC,WACnCs3B,gBAAiBtH,EAAOztB,YAAYvC,WACpCu3B,aAAc,UAGtBf,GAAmB,OAG1BnrB,OAAM,SAACC,GACJ/N,IAAI2M,MAAM,wBAAyBoB,QAE5C,IAGH4E,qBAAU,WACN,GAAKrb,EAAL,CAEA,IAAMi8B,EAAK,uCAAG,kCAAAr9B,EAAA,6DACJ0V,EADI,iBAEeT,GAAYtF,IAAY+F,GAFvC,OAEJquB,EAFI,OAIJC,EAAW5iC,EAAQe,SAAS8hC,SAClCn6B,IAAIC,MAAJ,WAAc2L,EAAd,uCAAqDquB,EAArD,gBAAuEC,IAElExuB,EAAK0uB,iBAAoB1uB,EAAKiB,QAASjB,EAAK2uB,iBAC7Cr6B,IAAIC,MAAJ,WAAc2L,EAAd,oCAAkDsuB,IAClD/uB,GAAY+B,IAAItB,EAAUsuB,IAE1BD,GAAcvuB,EAAK0uB,iBAAmB1uB,EAAK2uB,iBAAmB3uB,EAAKiB,QAC/DutB,IAAaD,IACbj6B,IAAIC,MAAJ,WAAc2L,EAAd,sCAAoDsuB,EAApD,gBAAoED,IACpE3iC,EAAQwI,KAAKm6B,GAERnB,EAAalB,cACRA,EAAca,KACpBz4B,IAAIC,MAAM,+BAAgC23B,GAC1CmB,EAAgB,2BAAKD,GAAN,IAAoBlB,mBAI3CzsB,GAAYmvB,IAAI1uB,IAvBV,2CAAH,qDA0BX2nB,OACD,CAACj8B,EAASoU,IAEb,IAAM6uB,EAAW7nB,uBAAY,SAACpb,EAAkBwU,EAAkBhF,GAC9D,IAAI0zB,EAESA,EAAT1zB,EAAmB,IAAMgF,EAAQ8rB,YAAc,IAAM9wB,EAAQzK,GAClD,IAAMyP,EAAQ8rB,YAE7BhmB,EAAgBC,MAAM,UAAW,WAAY2oB,GAC7CljC,EAAQwI,KAAK06B,KACd,IAGH7nB,qBAAU,WACDjH,EAAK0uB,mBAAN,OAAyBtB,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAchtB,UAAYgtB,EAAalB,aAEpElsB,EAAKS,kBACAC,MAAK,SAACC,GAAD,OACFouB,yBAAehI,EAAOnvB,UAAUC,QAAmB8I,EAAKysB,EAAalB,aAAe,cAEvFxrB,MAAK,SAACsuB,GACH16B,IAAIC,MAAM,iBAAkBy6B,GACxBA,EAAUjuB,MAAQiuB,EAAUjuB,KAAKX,SACjCitB,EAAgB,CACZjtB,QAAS4uB,EAAUjuB,KAAKX,QACxB2e,SAAS,EACTmN,YAAa8C,EAAUjuB,KAAKX,QAAQ8rB,iBAI/C9pB,OAAM,SAACC,GACJ/N,IAAI2M,MAAM,wBAAyBoB,QAG5C,CAACrC,EAAMotB,IAEV,IAAMtgC,EAAU,qBAAKyb,IvDpHgC,uBuDoHTC,IAAI,SAGhD,GAAI8kB,EACA,OACI,cAAC,GAAD,CAAY3hC,MAAM,8BAAlB,SACI,cAAC,IAAD,CACImB,QAASA,EACTnB,MAAO0D,GAAY2I,QACnBi3B,QAAS,8BACTr2B,QAASmuB,EAAOnuB,YAK5B,GAAKoH,EAAK0uB,gBAkBH,KAAKtB,IAAD,OAAiBA,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAcrO,SACtC,OACI,cAAC,GAAD,CAAYpzB,MAAM,UAAlB,SACI,cAAC,IAAD,CACImB,QAASA,EACTnB,MAAO,UACPsjC,QAAO,2BAAsB7B,EAAalB,aAAe,QACzDtzB,QAASmuB,EAAOnuB,YAK5B,IAAMs2B,EAAe,CAAEL,WAAUhjC,QAASmU,EAAKnU,SAC/C,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CACI+E,KvDjIK,kCuDkILu+B,OAAQ,SAACC,GAAD,OACJ,cAAC,GAAD,2BAAgBA,GAAhB,IAAuBpvB,KAAMA,EAAMI,QAAO,OAAEgtB,QAAF,IAAEA,OAAF,EAAEA,EAAchtB,cAGlE,cAAC,IAAD,CACIxP,KAAK,IACLu+B,OAAQ,SAACC,GAAD,OACJ,cAAC,GAAD,uCAAgBA,GAAWF,GAA3B,aACI,cAAC,GAAD,aA1CpB,OAAKlvB,EAAK2uB,eAaN,cAAC,GAAD,CAAYhjC,MAAM,UAAlB,SACI,cAAC,GAAD,CAAa0jC,OAAQrvB,EAAKqvB,OAAQ1jC,MAAO,6BAZzC,cAAC,GAAD,CAAYA,MAAM,UAAlB,SACI,cAAC,IAAD,CACImB,QAASA,EACTnB,MAAM,iBACNsjC,QAAS,iBACTr2B,QAASmuB,EAAOnuB,a,2BC9I5C02B,EAASC,YAAcC,EAAQ,KAAqDrlC,QAIpFslC,cAGAD,EAAQ,KAERE,IAASP,OACL,cAAC,KAAD,UACI,cAAC,IAAD,CAAQQ,SAAS,IAAI/jC,QAASgkC,GAA9B,SACI,cAAC,GAAD,QAGRroB,SAASsoB,eAAe,SAS5BnjC,OAAOojC,iBAAiB,QAAQ,WAC5BpjC,OAAOd,QAAQmkC,UAAU,GAAI,OAK7BnM,UAAUoM,SAAWpM,UAAUoM,QAAQC,QACvCrM,UAAUoM,QAAQC,UAAUvvB,MAAK,SAACwvB,GAC1BA,EACA57B,IAAIC,MAAM,8DAEVD,IAAI67B,KAAK,+DAIjB77B,IAAI67B,KAAK,4C","file":"static/js/main.bcd9f302.chunk.js","sourcesContent":["export { default as Multidot } from './Multidot';\nexport { default as Polygon } from './Polygon';\nexport { default as Polyline } from './Polyline';\nexport { default as QRCode } from './QRCode';\nexport { default as Raster } from './Raster';\nexport { default as LayerIcon } from './LayerIcon';\nexport { default as ContentCopy } from './ContentCopy';\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProjectTreeLayerTileTypes = exports.ProjectTreeLayerTypes = exports.TileTypes = exports.SymbologyStatus = exports.TilingStatusFinished = exports.TilingStatus = exports.RampType = exports.AccessEnum = exports.WarehouseRoleEnum = exports.FieldTypeEnum = void 0;\nvar FieldTypeEnum;\n(function (FieldTypeEnum) {\n    FieldTypeEnum[\"string\"] = \"S\";\n    FieldTypeEnum[\"number\"] = \"N\";\n    FieldTypeEnum[\"boolean\"] = \"BOOL\";\n    FieldTypeEnum[\"stringArr\"] = \"SARR\";\n    FieldTypeEnum[\"numberArr\"] = \"NARR\";\n})(FieldTypeEnum = exports.FieldTypeEnum || (exports.FieldTypeEnum = {}));\nvar WarehouseRoleEnum;\n(function (WarehouseRoleEnum) {\n    WarehouseRoleEnum[\"SuperUser\"] = \"SUPER\";\n    WarehouseRoleEnum[\"Admin\"] = \"ADMIN\";\n    WarehouseRoleEnum[\"Observer\"] = \"OBSERVER\";\n    WarehouseRoleEnum[\"Participant\"] = \"PARTICIPANT\";\n})(WarehouseRoleEnum = exports.WarehouseRoleEnum || (exports.WarehouseRoleEnum = {}));\nvar AccessEnum;\n(function (AccessEnum) {\n    AccessEnum[\"Public\"] = \"PUBLIC\";\n    AccessEnum[\"Private\"] = \"PRIVATE\";\n    AccessEnum[\"Secret\"] = \"SECRET\";\n})(AccessEnum = exports.AccessEnum || (exports.AccessEnum = {}));\nvar RampType;\n(function (RampType) {\n    RampType[\"INTERPOLATED\"] = \"INTERPOLATED\";\n    RampType[\"DISCRETE\"] = \"DISCRETE\";\n    RampType[\"EXACT\"] = \"EXACT\";\n})(RampType = exports.RampType || (exports.RampType = {}));\nvar TilingStatus;\n(function (TilingStatus) {\n    TilingStatus[\"UNKNOWN\"] = \"UNKNOWN\";\n    TilingStatus[\"QUEUED\"] = \"QUEUED\";\n    TilingStatus[\"FETCHING\"] = \"FETCHING\";\n    TilingStatus[\"NOT_APPLICABLE\"] = \"NOT_APPLICABLE\";\n    TilingStatus[\"CREATING\"] = \"CREATING\";\n    TilingStatus[\"NO_GEOMETRIES\"] = \"NO_GEOMETRIES\";\n    TilingStatus[\"TIMEOUT\"] = \"TIMEOUT\";\n    TilingStatus[\"TILING_ERROR\"] = \"TILING_ERROR\";\n    TilingStatus[\"INDEX_NOT_FOUND\"] = \"INDEX_NOT_FOUND\";\n    TilingStatus[\"LAYER_NOT_FOUND\"] = \"LAYER_NOT_FOUND\";\n    TilingStatus[\"FETCH_ERROR\"] = \"FETCH_ERROR\";\n    TilingStatus[\"SUCCESS\"] = \"SUCCESS\";\n})(TilingStatus = exports.TilingStatus || (exports.TilingStatus = {}));\nexports.TilingStatusFinished = [\n    TilingStatus.NOT_APPLICABLE,\n    TilingStatus.NO_GEOMETRIES,\n    TilingStatus.TIMEOUT,\n    TilingStatus.TILING_ERROR,\n    TilingStatus.SUCCESS\n];\nvar SymbologyStatus;\n(function (SymbologyStatus) {\n    SymbologyStatus[\"UNKNOWN\"] = \"UNKNOWN\";\n    SymbologyStatus[\"FETCHING\"] = \"FETCHING\";\n    SymbologyStatus[\"MISSING\"] = \"MISSING\";\n    SymbologyStatus[\"NOT_APPLICABLE\"] = \"NOT_APPLICABLE\";\n    SymbologyStatus[\"FOUND\"] = \"FOUND\";\n    SymbologyStatus[\"ERROR\"] = \"ERROR\";\n})(SymbologyStatus = exports.SymbologyStatus || (exports.SymbologyStatus = {}));\nvar TileTypes;\n(function (TileTypes) {\n    TileTypes[\"RASTER\"] = \"RASTER\";\n    TileTypes[\"HTML\"] = \"HTML\";\n    TileTypes[\"VECTOR_SHP\"] = \"VECTOR_SHP\";\n    TileTypes[\"VECTOR_GPKG\"] = \"VECTOR_GPKG\";\n})(TileTypes = exports.TileTypes || (exports.TileTypes = {}));\nvar ProjectTreeLayerTypes;\n(function (ProjectTreeLayerTypes) {\n    ProjectTreeLayerTypes[\"REPORT\"] = \"report\";\n    ProjectTreeLayerTypes[\"RASTER\"] = \"raster\";\n    ProjectTreeLayerTypes[\"LINE\"] = \"line\";\n    ProjectTreeLayerTypes[\"POLYGON\"] = \"polygon\";\n    ProjectTreeLayerTypes[\"POINT\"] = \"point\";\n    ProjectTreeLayerTypes[\"FILE\"] = \"file\";\n    ProjectTreeLayerTypes[\"TIN\"] = \"tin\";\n})(ProjectTreeLayerTypes = exports.ProjectTreeLayerTypes || (exports.ProjectTreeLayerTypes = {}));\nexports.ProjectTreeLayerTileTypes = [\n    ProjectTreeLayerTypes.RASTER,\n    ProjectTreeLayerTypes.POLYGON,\n    ProjectTreeLayerTypes.LINE,\n    ProjectTreeLayerTypes.POINT\n];\n//# sourceMappingURL=types.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verifyMeta = exports.augmentXML = exports.parseProjectXML = exports.parseProgramXML = exports.parseXMLMeta = exports.getXML = void 0;\nvar xml2js_1 = require(\"xml2js\");\nvar axios_1 = __importDefault(require(\"axios\"));\nvar _1 = require(\"./\");\nvar xmldom_1 = __importDefault(require(\"xmldom\"));\nvar loglevel_1 = __importDefault(require(\"loglevel\"));\nfunction getXML(url) {\n    return __awaiter(this, void 0, void 0, function () {\n        var start, result, duration;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    start = Date.now();\n                    return [4, (0, axios_1.default)({\n                            url: url,\n                            method: 'get'\n                        })];\n                case 1:\n                    result = _a.sent();\n                    duration = (Date.now() - start) / 1000;\n                    if (duration > 10)\n                        loglevel_1.default.warn(\"getXML took \" + duration.toFixed(1) + \" seconds\");\n                    if (!result.data)\n                        throw new Error('Error retrieving XML file');\n                    return [2, result.data];\n            }\n        });\n    });\n}\nexports.getXML = getXML;\nfunction parseXMLMeta(metaArr) {\n    try {\n        return metaArr.reduce(function (acc, _a) {\n            var _b;\n            var $ = _a.$, _ = _a._;\n            return (__assign(__assign({}, acc), (_b = {}, _b[$.name] = _ && _.trim(), _b)));\n        }, {});\n    }\n    catch (_a) {\n        return {};\n    }\n}\nexports.parseXMLMeta = parseXMLMeta;\nfunction _recursePaths(xmlDom, products, groups, collections) {\n    var HierarchyNode = xmlDom.getElementsByTagName('Hierarchy')[0];\n    var productsInHierarchy = Array.from(HierarchyNode.getElementsByTagName('Product'));\n    var retVal = [];\n    productsInHierarchy.forEach(function (prodEl) {\n        var pathArr = [];\n        var ref = prodEl.getAttribute('ref');\n        var product = products.find(function (o) { return o.id === ref; });\n        if (!product)\n            throw new Error(\"Product not found for ref='\" + ref + \"'\");\n        var currEl = prodEl.parentNode;\n        var _loop_1 = function () {\n            var ref_1 = currEl.getAttribute('ref');\n            var tag = currEl.tagName;\n            var def = tag === 'Group' ? groups.find(function (g) { return g.id === ref_1; }) : collections.find(function (g) { return g.id === ref_1; });\n            var folder = def.folder, name_1 = def.name;\n            pathArr.push({\n                type: tag,\n                id: ref_1,\n                folder: folder,\n                name: name_1\n            });\n            currEl = currEl.parentNode;\n        };\n        while (currEl && currEl.parentNode && currEl.tagName !== 'Hierarchy') {\n            _loop_1();\n        }\n        retVal.push(__assign(__assign({}, product), { pathArr: pathArr.reverse() }));\n    });\n    return retVal;\n}\nfunction parseProgramXML(rawXML) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedProgramJSON, _a, projectFile, projectXSDs, meta, collections, groups, productsRaw, xmlDom, products;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4, (0, xml2js_1.parseStringPromise)(rawXML).catch(function (err) {\n                        throw new _1.ValidationError('Error parsing XML file. This likely means a broken or unclosed tag.', [err.message]);\n                    })];\n                case 1:\n                    parsedProgramJSON = _b.sent();\n                    _a = parseXMLMeta(parsedProgramJSON.Program.MetaData[0].Meta), projectFile = _a.projectFile, projectXSDs = _a.projectXSDs, meta = __rest(_a, [\"projectFile\", \"projectXSDs\"]);\n                    collections = parsedProgramJSON.Program.Definitions[0].Collections[0].Collection.map(function (_a) {\n                        var $ = _a.$, Allow = _a.Allow, AllowRegex = _a.AllowRegex;\n                        return (__assign(__assign({}, $), { Allow: Allow ? (Array.isArray(Allow) ? Allow.map(function (a) { return a.$; }) : [Allow]) : undefined, AllowRegex: AllowRegex\n                                ? Array.isArray(AllowRegex)\n                                    ? AllowRegex.map(function (a) { return a.$.pattern; })\n                                    : [AllowRegex.pattern]\n                                : undefined }));\n                    });\n                    groups = [];\n                    if (parsedProgramJSON.Program.Definitions[0].Groups[0].Group) {\n                        if (Array.isArray(parsedProgramJSON.Program.Definitions[0].Groups[0].Group))\n                            groups = parsedProgramJSON.Program.Definitions[0].Groups[0].Group.map(function (a) { return a.$; });\n                        else\n                            groups = [parsedProgramJSON.Program.Definitions[0].Groups[0].Group];\n                    }\n                    productsRaw = [];\n                    if (parsedProgramJSON.Program.Definitions[0].Products[0].Product) {\n                        if (Array.isArray(parsedProgramJSON.Program.Definitions[0].Products[0].Product))\n                            productsRaw = parsedProgramJSON.Program.Definitions[0].Products[0].Product.map(function (a) { return a.$; });\n                        else\n                            productsRaw = [parsedProgramJSON.Program.Definitions[0].Products[0].Product];\n                    }\n                    xmlDom = new xmldom_1.default.DOMParser().parseFromString(rawXML);\n                    products = _recursePaths(xmlDom, productsRaw, groups, collections);\n                    return [2, Promise.resolve(new _1.Program({\n                            name: parsedProgramJSON.Program.Name[0],\n                            machineName: parsedProgramJSON.Program.MachineName[0],\n                            projectXSDs: projectXSDs,\n                            projectFile: projectFile,\n                            meta: meta,\n                            products: products,\n                            collections: collections,\n                            groups: groups\n                        }))];\n            }\n        });\n    });\n}\nexports.parseProgramXML = parseProgramXML;\nfunction parseProjectXML(rawXML) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedProjectJSON, retVal, whMeta, meta;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, (0, xml2js_1.parseStringPromise)(rawXML).catch(function (err) {\n                        throw new _1.ValidationError('Error parsing XML file. This likely means a broken or unclosed tag.', [err.message]);\n                    })];\n                case 1:\n                    parsedProjectJSON = _a.sent();\n                    retVal = parsedProjectJSON.Project;\n                    whMeta = {};\n                    if (retVal.Warehouse) {\n                        whMeta = parseXMLMeta(retVal.Warehouse[0].Meta);\n                    }\n                    meta = {};\n                    if (retVal.MetaData) {\n                        meta = parseXMLMeta(retVal.MetaData[0].Meta);\n                    }\n                    return [2, Promise.resolve({\n                            id: whMeta.id,\n                            name: retVal.Name[0],\n                            projType: retVal.ProjectType[0],\n                            Warehouse: whMeta,\n                            program: whMeta.program,\n                            meta: meta,\n                            tags: _1.Project.parseTagString(whMeta.tags),\n                            xml: rawXML,\n                            parsedProjectJSON: parsedProjectJSON,\n                            rawXML: rawXML\n                        })];\n            }\n        });\n    });\n}\nexports.parseProjectXML = parseProjectXML;\nfunction augmentXML(newMeta, xmlfile) {\n    var parsed = new xmldom_1.default.DOMParser().parseFromString(xmlfile);\n    var metadata = parsed.getElementsByTagName('MetaData')[0];\n    if (parsed.getElementsByTagName('Warehouse').length > 0) {\n        parsed.removeChild(parsed.getElementsByTagName('Warehouse')[0]);\n    }\n    var warehouseNode = parsed.createElement('Warehouse');\n    Object.keys(newMeta).forEach(function (k) {\n        var mNode = parsed.createElement('Meta');\n        mNode.setAttribute('name', k);\n        mNode.appendChild(parsed.createTextNode(newMeta[k]));\n        warehouseNode.appendChild(mNode);\n    });\n    parsed.insertBefore(warehouseNode, metadata);\n    var formatted = new xmldom_1.default.XMLSerializer().serializeToString(parsed);\n    return formatted;\n}\nexports.augmentXML = augmentXML;\nfunction verifyMeta(projType, projectMeta, program) {\n    var projectDef = program.products.find(function (p) { return p.id === projType; });\n    if (!projectDef) {\n        throw new Error(\"No project type '\" + projType + \"' found in program '\" + program.name + \"'\");\n    }\n    var collectionathArrs = projectDef.pathArr.filter(function (f) { return f.type === 'Collection'; });\n    return collectionathArrs.map(function (arrEl) { return ({\n        name: arrEl.name,\n        value: projectMeta[arrEl.name]\n    }); });\n}\nexports.verifyMeta = verifyMeta;\n//# sourceMappingURL=xml.js.map","\"use strict\";\nvar __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.adminGetUsers = exports.adminUpdateUserPermissions = exports.search = exports.deleteProject = exports.downloadZipFile = exports.getWebSymbology = exports.getLayerTiles = exports.downloadFile = exports.getUploadUrls = exports.getProject = exports.getProgram = exports.getProgramAuth = exports.getPrograms = exports.validateProjectXML = exports.authCheck = exports.apiCall = void 0;\nvar axios_1 = __importDefault(require(\"axios\"));\nvar graphql_1 = require(\"graphql\");\nvar graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nvar loglevel_1 = __importDefault(require(\"loglevel\"));\nvar _1 = require(\"./\");\nvar apiCall = function (url, jwt, query, variables, timeout) {\n    var start = Date.now();\n    return (0, axios_1.default)({\n        url: url,\n        method: 'post',\n        timeout: timeout,\n        headers: {\n            Authorization: jwt ? \"Bearer \" + jwt : 'Bearer NONE'\n        },\n        data: {\n            query: (0, graphql_1.print)(query),\n            variables: variables\n        }\n    })\n        .then(function (_a) {\n        var axiosData = _a.data;\n        var time = (Date.now() - start) / 1000;\n        if (time > 10)\n            loglevel_1.default.warn(\"Query took \" + time.toFixed(1) + \" seconds. \" + (0, graphql_1.print)(query)\n                .replace(/\\n/g, '')\n                .slice(0, 50) + \" \" + JSON.stringify(variables));\n        return axiosData;\n    })\n        .catch(function (err) {\n        if (err.response && err.response.status === 404) {\n            throw new Error(\"API Url not found: \" + url);\n        }\n        else if (err.code && err.code === 'ECONNREFUSED') {\n            throw new Error(\"Connection refused. Could not contact: '\" + url + \"'\");\n        }\n        else {\n            loglevel_1.default.error('apiCall Error', { url: url, jwt: jwt, query: (0, graphql_1.print)(query), variables: variables, err: err });\n            throw err;\n        }\n    });\n};\nexports.apiCall = apiCall;\nfunction authCheck(url, jwt, timeout) {\n    return (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n            query AuthCall {\\n                auth {\\n                    loggedIn\\n                    userPool\\n                    clientId\\n                    region\\n                    domain\\n                }\\n            }\\n        \"], [\"\\n            query AuthCall {\\n                auth {\\n                    loggedIn\\n                    userPool\\n                    clientId\\n                    region\\n                    domain\\n                }\\n            }\\n        \"]))), {}, timeout);\n}\nexports.authCheck = authCheck;\nfunction validateProjectXML(url, jwt, xml, projType, program, timeout) {\n    return (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n            query validateProject($xml: String!, $projType: String!, $program: String!) {\\n                validate(xml: $xml, projType: $projType, program: $program) {\\n                    result\\n                    xmlErrors\\n                }\\n            }\\n        \"], [\"\\n            query validateProject($xml: String!, $projType: String!, $program: String!) {\\n                validate(xml: $xml, projType: $projType, program: $program) {\\n                    result\\n                    xmlErrors\\n                }\\n            }\\n        \"]))), { xml: xml, program: program, projType: projType }, timeout);\n}\nexports.validateProjectXML = validateProjectXML;\nfunction getPrograms(url, jwt, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n            query programs {\\n                auth {\\n                    loggedIn\\n                    userPool\\n                    clientId\\n                    region\\n                    domain\\n                }\\n                programs {\\n                    name\\n                    machineName\\n                    projectXSDs\\n                    projectFile\\n                    role\\n                    groups {\\n                        id\\n                        name\\n                        folder\\n                    }\\n                    collections {\\n                        id\\n                        name\\n                        AllowRegex\\n                        Allow {\\n                            id\\n                            name\\n                            aliases\\n                            folder\\n                        }\\n                    }\\n                    products {\\n                        id\\n                        name\\n                        folder\\n                        pathArr\\n                    }\\n                    hierarchy\\n                    meta\\n                }\\n            }\\n        \"], [\"\\n            query programs {\\n                auth {\\n                    loggedIn\\n                    userPool\\n                    clientId\\n                    region\\n                    domain\\n                }\\n                programs {\\n                    name\\n                    machineName\\n                    projectXSDs\\n                    projectFile\\n                    role\\n                    groups {\\n                        id\\n                        name\\n                        folder\\n                    }\\n                    collections {\\n                        id\\n                        name\\n                        AllowRegex\\n                        Allow {\\n                            id\\n                            name\\n                            aliases\\n                            folder\\n                        }\\n                    }\\n                    products {\\n                        id\\n                        name\\n                        folder\\n                        pathArr\\n                    }\\n                    hierarchy\\n                    meta\\n                }\\n            }\\n        \"]))), {}, timeout).then(function (gqlReturn) {\n                    return __assign(__assign({}, gqlReturn), { data: {\n                            programs: gqlReturn.data.programs.map(_1.Program.fromGraphQL)\n                        } });\n                })];\n        });\n    });\n}\nexports.getPrograms = getPrograms;\nfunction getProgramAuth(url, jwt, programName, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a, program, errors;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n            query program($program: String!) {\\n                program(program: $program) {\\n                    name\\n                    machineName\\n                    projectXSDs\\n                    projectFile\\n                    role\\n                    groups {\\n                        id\\n                        name\\n                        folder\\n                    }\\n                    collections {\\n                        id\\n                        name\\n                        AllowRegex\\n                        Allow {\\n                            id\\n                            name\\n                            aliases\\n                            folder\\n                        }\\n                    }\\n                    products {\\n                        id\\n                        name\\n                        folder\\n                        pathArr\\n                    }\\n                    hierarchy\\n                    meta\\n                }\\n            }\\n        \"], [\"\\n            query program($program: String!) {\\n                program(program: $program) {\\n                    name\\n                    machineName\\n                    projectXSDs\\n                    projectFile\\n                    role\\n                    groups {\\n                        id\\n                        name\\n                        folder\\n                    }\\n                    collections {\\n                        id\\n                        name\\n                        AllowRegex\\n                        Allow {\\n                            id\\n                            name\\n                            aliases\\n                            folder\\n                        }\\n                    }\\n                    products {\\n                        id\\n                        name\\n                        folder\\n                        pathArr\\n                    }\\n                    hierarchy\\n                    meta\\n                }\\n            }\\n        \"]))), { program: programName }, timeout)];\n                case 1:\n                    _a = _b.sent(), program = _a.data.program, errors = _a.errors;\n                    return [2, {\n                            data: {\n                                program: _1.Program.fromGraphQL(program)\n                            },\n                            errors: errors\n                        }];\n            }\n        });\n    });\n}\nexports.getProgramAuth = getProgramAuth;\nfunction getProgram(url, jwt, programName, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a, program, errors;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_5 || (templateObject_5 = __makeTemplateObject([\"\\n            query program($program: String!) {\\n                program(program: $program) {\\n                    name\\n                    machineName\\n                    projectXSDs\\n                    projectFile\\n                    role\\n                    groups {\\n                        id\\n                        name\\n                        folder\\n                    }\\n                    collections {\\n                        id\\n                        name\\n                        AllowRegex\\n                        Allow {\\n                            id\\n                            name\\n                            aliases\\n                            folder\\n                        }\\n                    }\\n                    products {\\n                        id\\n                        name\\n                        folder\\n                        pathArr\\n                    }\\n                    hierarchy\\n                    meta\\n                }\\n            }\\n        \"], [\"\\n            query program($program: String!) {\\n                program(program: $program) {\\n                    name\\n                    machineName\\n                    projectXSDs\\n                    projectFile\\n                    role\\n                    groups {\\n                        id\\n                        name\\n                        folder\\n                    }\\n                    collections {\\n                        id\\n                        name\\n                        AllowRegex\\n                        Allow {\\n                            id\\n                            name\\n                            aliases\\n                            folder\\n                        }\\n                    }\\n                    products {\\n                        id\\n                        name\\n                        folder\\n                        pathArr\\n                    }\\n                    hierarchy\\n                    meta\\n                }\\n            }\\n        \"]))), { program: programName }, timeout)];\n                case 1:\n                    _a = _b.sent(), program = _a.data.program, errors = _a.errors;\n                    return [2, {\n                            data: {\n                                program: _1.Program.fromGraphQL(program)\n                            },\n                            errors: errors\n                        }];\n            }\n        });\n    });\n}\nexports.getProgram = getProgram;\nfunction getProject(url, jwt, id, program, files, tree, timeout) {\n    if (files === void 0) { files = false; }\n    if (tree === void 0) { tree = false; }\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_6 || (templateObject_6 = __makeTemplateObject([\"\\n            query getProject($id: ID!, $program: String!) {\\n                project(id: $id, program: $program) {\\n                    id\\n                    name\\n                    projType\\n                    totalSize\\n                    program\\n                    tags\\n                    createdBy\\n                    updatedBy\\n                    createdOn\\n                    updatedOn\\n                    meta\\n                    \", \"\\n                    \", \"\\n                }\\n            }\\n        \"], [\"\\n            query getProject($id: ID!, $program: String!) {\\n                project(id: $id, program: $program) {\\n                    id\\n                    name\\n                    projType\\n                    totalSize\\n                    program\\n                    tags\\n                    createdBy\\n                    updatedBy\\n                    createdOn\\n                    updatedOn\\n                    meta\\n                    \", \"\\n                    \", \"\\n                }\\n            }\\n        \"])), files\n                    ? \"\\n                    files {\\n                        key\\n                        md5\\n                        size\\n                        downloadUrl\\n                    }\"\n                    : '', tree\n                    ? \"\\n                        tree {\\n                            name\\n                            description\\n                            projectType\\n                            metaStr\\n                            leaves {\\n                                id\\n                                pid\\n                                label\\n                                layerId\\n                                blLayerId\\n                                layerType\\n                                layerPath\\n                                layerName\\n                                nodeExists\\n                                metaStr\\n                                symbology\\n                                transparency\\n                            }\\n                            branches {\\n                                label\\n                                collapsed\\n                                bid\\n                                pid\\n                            }\\n                            defaultView\\n                            views  {\\n                                id\\n                                name\\n                                description\\n                                layers{\\n                                id\\n                                visible\\n                                }\\n                            }\\n                        }\\n                    \"\n                    : ''), { id: id, program: program }, timeout).then(function (gqlReturn) { return (__assign(__assign({}, gqlReturn), { data: {\n                        project: _1.Project.fromGraphQL(gqlReturn.data.project)\n                    } })); })];\n        });\n    });\n}\nexports.getProject = getProject;\nfunction getUploadUrls(url, jwt, id, fileList, projectType, program, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_7 || (templateObject_7 = __makeTemplateObject([\"\\n            query requestUploadProject($id: ID, $files: [String!], $program: String!, $projectType: String!) {\\n                requestUpload(id: $id, files: $files, program: $program, projectType: $projectType) {\\n                    id\\n                    uploadUrls {\\n                        url\\n                        fields\\n                        origPath\\n                    }\\n                }\\n            }\\n        \"], [\"\\n            query requestUploadProject($id: ID, $files: [String!], $program: String!, $projectType: String!) {\\n                requestUpload(id: $id, files: $files, program: $program, projectType: $projectType) {\\n                    id\\n                    uploadUrls {\\n                        url\\n                        fields\\n                        origPath\\n                    }\\n                }\\n            }\\n        \"]))), { id: id, files: fileList, projectType: projectType, program: program }, timeout)];\n                case 1:\n                    response = _a.sent();\n                    return [2, response];\n            }\n        });\n    });\n}\nexports.getUploadUrls = getUploadUrls;\nfunction downloadFile(url, jwt, projType, program, id, filePath, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_8 || (templateObject_8 = __makeTemplateObject([\"\\n            query downloadFileQuery($program: String!, $id: ID!, $projType: String!, $filePath: String!) {\\n                downloadFile(program: $program, id: $id, projType: $projType, filePath: $filePath) {\\n                    key\\n                    md5\\n                    contentType\\n                    size\\n                    downloadUrl\\n                }\\n            }\\n        \"], [\"\\n            query downloadFileQuery($program: String!, $id: ID!, $projType: String!, $filePath: String!) {\\n                downloadFile(program: $program, id: $id, projType: $projType, filePath: $filePath) {\\n                    key\\n                    md5\\n                    contentType\\n                    size\\n                    downloadUrl\\n                }\\n            }\\n        \"]))), { projType: projType, program: program, id: id, filePath: filePath }, timeout)];\n                case 1:\n                    response = _a.sent();\n                    return [2, response];\n            }\n        });\n    });\n}\nexports.downloadFile = downloadFile;\nfunction getLayerTiles(url, jwt, projType, program, id, layerPath, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var res, retVal;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_9 || (templateObject_9 = __makeTemplateObject([\"\\n            query getLayerTilesQuery($program: String!, $id: ID!, $projType: String!, $layerPath: String!) {\\n                getLayerTiles(program: $program, id: $id, projType: $projType, layerPath: $layerPath) {\\n                    url\\n                    indexUrl\\n                    status\\n                    lastStatus\\n                    error\\n                    rsLayer\\n                    rasterStats\\n                    numFiles\\n                    started\\n                    duration\\n                    format\\n                    bounds\\n                    maxZoom\\n                    minZoom\\n                    originFile {\\n                        lastModified\\n                        etag\\n                        size\\n                        key\\n                    }\\n                }\\n            }\\n        \"], [\"\\n            query getLayerTilesQuery($program: String!, $id: ID!, $projType: String!, $layerPath: String!) {\\n                getLayerTiles(program: $program, id: $id, projType: $projType, layerPath: $layerPath) {\\n                    url\\n                    indexUrl\\n                    status\\n                    lastStatus\\n                    error\\n                    rsLayer\\n                    rasterStats\\n                    numFiles\\n                    started\\n                    duration\\n                    format\\n                    bounds\\n                    maxZoom\\n                    minZoom\\n                    originFile {\\n                        lastModified\\n                        etag\\n                        size\\n                        key\\n                    }\\n                }\\n            }\\n        \"]))), { projType: projType, program: program, id: id, layerPath: layerPath }, timeout)];\n                case 1:\n                    res = _a.sent();\n                    if (!res.data)\n                        return [2, { errors: res.errors }];\n                    else {\n                        retVal = res.data.getLayerTiles;\n                        return [2, {\n                                errors: res.errors,\n                                data: {\n                                    getLayerTiles: __assign(__assign({}, retVal), { started: retVal && retVal.started && parseInt(retVal.started, 10), lastStatus: retVal && retVal.lastStatus && parseInt(retVal.lastStatus, 10), rasterStats: retVal && retVal.rasterStats && JSON.parse(retVal.rasterStats), rsLayer: retVal && retVal.rsLayer && JSON.parse(retVal.rsLayer), originFile: retVal &&\n                                            retVal.originFile && __assign(__assign({}, retVal.originFile), { lastModified: parseInt(retVal.originFile.lastModified, 10) }) })\n                                }\n                            }];\n                    }\n                    return [2];\n            }\n        });\n    });\n}\nexports.getLayerTiles = getLayerTiles;\nfunction getWebSymbology(url, jwt, projType, name, isRaster, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var res;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_10 || (templateObject_10 = __makeTemplateObject([\"\\n            query getWebSymbology($projType: String!, $name: String!, $isRaster: Boolean) {\\n                getWebSymbology(projType: $projType, name: $name, isRaster: $isRaster) {\\n                    name\\n                    status\\n                    legend\\n                    rampType\\n                    mapboxJson\\n                    url\\n                    error\\n                }\\n            }\\n        \"], [\"\\n            query getWebSymbology($projType: String!, $name: String!, $isRaster: Boolean) {\\n                getWebSymbology(projType: $projType, name: $name, isRaster: $isRaster) {\\n                    name\\n                    status\\n                    legend\\n                    rampType\\n                    mapboxJson\\n                    url\\n                    error\\n                }\\n            }\\n        \"]))), { projType: projType, name: name, isRaster: isRaster }, timeout)];\n                case 1:\n                    res = _a.sent();\n                    if (!res.data)\n                        return [2, { errors: res.errors }];\n                    else {\n                        return [2, {\n                                errors: res.errors,\n                                data: {\n                                    getWebSymbology: res.data.getWebSymbology && __assign(__assign({}, res.data.getWebSymbology), { mapboxJson: res.data.getWebSymbology.mapboxJson && JSON.parse(res.data.getWebSymbology.mapboxJson) })\n                                }\n                            }];\n                    }\n                    return [2];\n            }\n        });\n    });\n}\nexports.getWebSymbology = getWebSymbology;\nfunction downloadZipFile(url, jwt, projType, program, id, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_11 || (templateObject_11 = __makeTemplateObject([\"\\n            query downloadZipFileQuery($program: String!, $id: ID!, $projType: String!) {\\n                downloadZip(program: $program, id: $id, projType: $projType) {\\n                    key\\n                    md5\\n                    contentType\\n                    size\\n                    downloadUrl\\n                    pendingSince\\n                }\\n            }\\n        \"], [\"\\n            query downloadZipFileQuery($program: String!, $id: ID!, $projType: String!) {\\n                downloadZip(program: $program, id: $id, projType: $projType) {\\n                    key\\n                    md5\\n                    contentType\\n                    size\\n                    downloadUrl\\n                    pendingSince\\n                }\\n            }\\n        \"]))), { projType: projType, program: program, id: id }, timeout)];\n                case 1:\n                    response = _a.sent();\n                    return [2, response];\n            }\n        });\n    });\n}\nexports.downloadZipFile = downloadZipFile;\nfunction deleteProject(url, jwt, id, program, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_12 || (templateObject_12 = __makeTemplateObject([\"\\n            mutation deleteProject($id: ID!, $program: String!) {\\n                deleteProject(id: $id, program: $program)\\n            }\\n        \"], [\"\\n            mutation deleteProject($id: ID!, $program: String!) {\\n                deleteProject(id: $id, program: $program)\\n            }\\n        \"]))), { program: program, id: id }, timeout)];\n                case 1:\n                    response = _a.sent();\n                    return [2, response];\n            }\n        });\n    });\n}\nexports.deleteProject = deleteProject;\nfunction search(url, jwt, program, params, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var res, _a, nextToken, projects, total;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_13 || (templateObject_13 = __makeTemplateObject([\"\\n            query searchQuery(\\n                $program: String!\\n                $projType: String\\n                $nameStr: String\\n                $metaStr: String\\n                $metaArr: String\\n                $tags: String\\n                $noTags: Boolean\\n                $limit: Int\\n                $nextToken: Int\\n            ) {\\n                search(\\n                    program: $program\\n                    projType: $projType\\n                    nameStr: $nameStr\\n                    metaStr: $metaStr\\n                    metaArr: $metaArr\\n                    tags: $tags\\n                    noTags: $noTags\\n                    limit: $limit\\n                    nextToken: $nextToken\\n                ) {\\n                    projects {\\n                        id\\n                        name\\n                        projType\\n                        program\\n                        tags\\n                        totalSize\\n                        createdBy\\n                        updatedBy\\n                        createdOn\\n                        updatedOn\\n                        meta\\n                        score\\n                    }\\n                    nextToken\\n                    total\\n                }\\n            }\\n        \"], [\"\\n            query searchQuery(\\n                $program: String!\\n                $projType: String\\n                $nameStr: String\\n                $metaStr: String\\n                $metaArr: String\\n                $tags: String\\n                $noTags: Boolean\\n                $limit: Int\\n                $nextToken: Int\\n            ) {\\n                search(\\n                    program: $program\\n                    projType: $projType\\n                    nameStr: $nameStr\\n                    metaStr: $metaStr\\n                    metaArr: $metaArr\\n                    tags: $tags\\n                    noTags: $noTags\\n                    limit: $limit\\n                    nextToken: $nextToken\\n                ) {\\n                    projects {\\n                        id\\n                        name\\n                        projType\\n                        program\\n                        tags\\n                        totalSize\\n                        createdBy\\n                        updatedBy\\n                        createdOn\\n                        updatedOn\\n                        meta\\n                        score\\n                    }\\n                    nextToken\\n                    total\\n                }\\n            }\\n        \"]))), __assign(__assign({}, params), { program: program }), timeout)];\n                case 1:\n                    res = _b.sent();\n                    if (!res.data)\n                        return [2, { errors: res.errors }];\n                    else {\n                        _a = res.data.search || {}, nextToken = _a.nextToken, projects = _a.projects, total = _a.total;\n                        return [2, {\n                                errors: res.errors,\n                                data: {\n                                    search: {\n                                        projects: Array.isArray(projects) ? projects.map(_1.Project.fromGraphQL) : projects,\n                                        nextToken: nextToken,\n                                        total: total\n                                    }\n                                }\n                            }];\n                    }\n                    return [2];\n            }\n        });\n    });\n}\nexports.search = search;\nfunction adminUpdateUserPermissions(url, jwt, id, program, permission, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_14 || (templateObject_14 = __makeTemplateObject([\"\\n            mutation project($id: ID!, $program: String!, $permission: String) {\\n                updateUser(id: $id, program: $program, permission: $permission) {\\n                    email\\n                    name\\n                    picture\\n                    username\\n                    createdOn\\n                    updatedOn\\n                    role\\n                }\\n            }\\n        \"], [\"\\n            mutation project($id: ID!, $program: String!, $permission: String) {\\n                updateUser(id: $id, program: $program, permission: $permission) {\\n                    email\\n                    name\\n                    picture\\n                    username\\n                    createdOn\\n                    updatedOn\\n                    role\\n                }\\n            }\\n        \"]))), { program: program, id: id, permission: permission }, timeout)];\n                case 1:\n                    response = _a.sent();\n                    if (!response.data)\n                        return [2, { errors: response.errors }];\n                    else {\n                        return [2, {\n                                errors: response.errors,\n                                data: {\n                                    updateUser: response.data.updateUser\n                                        ? __assign(__assign({}, response.data.updateUser), { createdOn: parseInt(response.data.updateUser.createdOn, 10), updatedOn: parseInt(response.data.updateUser.updatedOn, 10) }) : null\n                                }\n                            }];\n                    }\n                    return [2];\n            }\n        });\n    });\n}\nexports.adminUpdateUserPermissions = adminUpdateUserPermissions;\nfunction adminGetUsers(url, jwt, program, limit, nextToken, timeout) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response, _a, nextTokenNEW, users;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4, (0, exports.apiCall)(url, jwt, (0, graphql_tag_1.default)(templateObject_15 || (templateObject_15 = __makeTemplateObject([\"\\n            query getUsers($program: String!, $limit: Int, $nextToken: String) {\\n                getUsers(program: $program, limit: $limit, nextToken: $nextToken) {\\n                    users {\\n                        email\\n                        name\\n                        picture\\n                        username\\n                        createdOn\\n                        updatedOn\\n                        role\\n                    }\\n                    nextToken\\n                }\\n            }\\n        \"], [\"\\n            query getUsers($program: String!, $limit: Int, $nextToken: String) {\\n                getUsers(program: $program, limit: $limit, nextToken: $nextToken) {\\n                    users {\\n                        email\\n                        name\\n                        picture\\n                        username\\n                        createdOn\\n                        updatedOn\\n                        role\\n                    }\\n                    nextToken\\n                }\\n            }\\n        \"]))), { program: program, limit: limit, nextToken: nextToken }, timeout)];\n                case 1:\n                    response = _b.sent();\n                    if (!response.data)\n                        return [2, { errors: response.errors }];\n                    else {\n                        _a = response.data.getUsers || {}, nextTokenNEW = _a.nextToken, users = _a.users;\n                        return [2, {\n                                errors: response.errors,\n                                data: {\n                                    getUsers: {\n                                        users: Array.isArray(users)\n                                            ? users.map(function (u) { return (__assign(__assign({}, u), { createdOn: parseInt(u.createdOn, 10), updatedOn: parseInt(u.updatedOn, 10) })); })\n                                            : users,\n                                        nextToken: nextTokenNEW\n                                    }\n                                }\n                            }];\n                    }\n                    return [2];\n            }\n        });\n    });\n}\nexports.adminGetUsers = adminGetUsers;\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10, templateObject_11, templateObject_12, templateObject_13, templateObject_14, templateObject_15;\n//# sourceMappingURL=api.js.map","\"use strict\";\nvar __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nvar types_1 = require(\"./types\");\nvar typeDefs = (0, graphql_tag_1.default)(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n    # Check out the cheat sheet:\\n    # https://raw.githubusercontent.com/sogko/graphql-shorthand-notation-cheat-sheet/master/graphql-shorthand-notation-cheat-sheet.png\\n\\n    schema {\\n        query: Query\\n        mutation: Mutation\\n    }\\n\\n    type Query {\\n        # Get a project and associated metadata\\n        auth: AuthParams\\n\\n        project(id: ID!, program: String!): Project\\n        projects(program: String!, projType: String, limit: Int, nextToken: String): PaginatedProjects\\n\\n        program(program: String!): Program\\n        programs: [Program]\\n\\n        downloadFile(program: String!, id: ID!, projType: String!, filePath: String!): FileDownloadMeta\\n\\n        downloadZip(program: String!, id: ID!, projType: String!): FileDownloadMeta\\n\\n        getWebSymbology(projType: String, name: String!, isRaster: Boolean): Symbology\\n        getLayerTiles(program: String!, id: ID!, projType: String!, layerPath: String!): TileService\\n\\n\\n        # Request an upload start. Writes a manifest file on the upload bucket\\n        # and creates upload urls for everything\\n        requestUpload(id: ID, files: [String!], program: String!, projectType: String!): FileUpload\\n\\n        search(\\n            program: String!\\n            projType: String\\n            nameStr: String\\n            metaStr: String\\n            metaArr: String\\n            tags: String\\n            noTags: Boolean\\n            limit: Int\\n            nextToken: Int\\n        ): PaginatedSearchResults\\n\\n        validate(xml: String!, projType: String!, program: String!): Validation\\n\\n        getUsers(program: String!, limit: Int, nextToken: String): PaginatedUsers\\n\\n        projectTree(id: ID!, program: String!, projType: String!): ProjectTree\\n    }\\n\\n    # this schema allows the following mutation:\\n    type Mutation {\\n        # signal a deletion of a project\\n        deleteProject(id: ID!, program: String!): ID!\\n        updateUser(id: ID!, program: String!, permission: String): User\\n        reIndexProject(id: ID!, program: String!, projType: String!): WatcherOutput\\n        queueTileRebuild(id: ID!, program: String!, projType: String!, filePath: String, symbologies: [String]): String\\n    }\\n\\n    type User {\\n        email: String\\n        name: String\\n        picture: String\\n        username: String!\\n        createdOn: String\\n        updatedOn: String\\n        role: String\\n    }\\n\\n    type PaginatedUsers {\\n        users: [User]\\n        nextToken: String\\n    }\\n\\n    type Validation {\\n        result: Boolean\\n        xmlErrors: [String]\\n    }\\n\\n    type AuthParams {\\n        loggedIn: Boolean\\n        userPool: String\\n        clientId: String\\n        region: String\\n        domain: String\\n    }\\n\\n    interface ProjectBase {\\n        id: ID!\\n        name: String\\n        meta: String\\n        tags: String\\n        projType: String\\n        program: String\\n        createdBy: ID!\\n        updatedBy: ID!\\n        createdOn: String!\\n        updatedOn: String!\\n    }\\n\\n    type Project implements ProjectBase {\\n        id: ID!\\n        name: String\\n        meta: String\\n        tags: String\\n        projType: String\\n        totalSize: String\\n        program: String\\n        createdBy: ID!\\n        updatedBy: ID!\\n        createdOn: String!\\n        updatedOn: String!\\n        files: [FileDownloadMeta]\\n        tree: ProjectTree\\n    }\\n\\n    type ProjectSearchResult implements ProjectBase {\\n        id: ID!\\n        name: String\\n        meta: String\\n        tags: String\\n        projType: String\\n        totalSize: String\\n        program: String\\n        createdBy: ID!\\n        updatedBy: ID!\\n        createdOn: String!\\n        updatedOn: String!\\n        score: Float\\n        files: [FileDownloadMeta]\\n    }\\n\\n    # This is mostly just JSON that's stringified\\n    type Product {\\n        id: ID!\\n        name: String!\\n        folder: String\\n        # Stringified JSON Array:\\n        pathArr: String\\n    }\\n    type Group {\\n        id: ID!\\n        name: String!\\n        folder: String\\n    }\\n    type NamedAllow {\\n        id: ID!\\n        name: String!\\n        aliases: String\\n        folder: String\\n    }\\n    type Collection {\\n        id: ID!\\n        name: String!\\n        AllowRegex: [String]\\n        Allow: [NamedAllow]\\n    }\\n    type Program {\\n        name: String\\n        machineName: String\\n        projectXSDs: String\\n        projectFile: String\\n        meta: String\\n        groups: [Group]\\n        collections: [Collection]\\n        products: [Product]\\n        hierarchy: String\\n        role: String\\n    }\\n\\n    type FileDownloadMeta {\\n        key: String!\\n        md5: String!\\n        size: String\\n        contentType: String\\n        downloadUrl: String!\\n        pendingSince: String\\n    }\\n\\n    type FileUpload {\\n        id: ID!\\n        uploadUrls: [UploadUrl]\\n    }\\n\\n    type UploadUrl {\\n        url: String\\n        fields: String\\n        origPath: String\\n    }\\n\\n    type FileUploadMeta {\\n        key: String!\\n        downloadUrl: String!\\n    }\\n\\n    # Series Connection allows us to implement pagination easily\\n    type PaginatedProjects {\\n        projects: [Project]\\n        nextToken: String\\n    }\\n\\n    type PaginatedSearchResults {\\n        projects: [ProjectSearchResult]\\n        nextToken: Int\\n        total: Int\\n    }\\n\\n    type NewProject {\\n        id: ID!\\n    }\\n\\n    \\\"\\\"\\\"\\n    ProjectTreeLayerTypes is an enumeration to help us display layers with the\\n    correct icon and assign them to the right slot\\n    \\\"\\\"\\\"\\n    enum ProjectTreeLayerTypes {\\n        \", \"\\n    }\\n    enum SymbologyStatus {\\n        \", \"\\n    }\\n    enum TilingStatus {\\n        \", \"\\n    }\\n    enum RampType {\\n        \", \"\\n    }\\n\\n    type ProjectTreeBranch {\\n        label: String!\\n        collapsed: Boolean\\n        # Branch ID and parent ID\\n        bid: Int\\n        pid: Int\\n    }\\n    type ProjectTreeLeaf {\\n        id: Int # This is a global ID not an id within a branch\\n        pid: Int\\n        label: String!\\n        layerId: ID\\n        blLayerId: ID\\n        layerType: ProjectTreeLayerTypes!\\n        layerPath: String\\n        layerName: String\\n        nodeExists: Boolean\\n        # This is the path that helps u\\n        metaStr: String\\n        symbology: String\\n        transparency: Int\\n    }\\n\\n    # The project tree comes back as non-recursive list of layers.\\n    # The ProjectTree class will need to parse this into a typescript \\n    # Recursive type\\n    type ProjectTreeViewLayer {\\n        id: ID!\\n        visible: Boolean\\n    }\\n\\n    type ProjectTreeViews {\\n        id: ID!\\n        name: String!\\n        description: String\\n        layers: [ProjectTreeViewLayer]\\n    }\\n\\n    type ProjectTree {\\n        name: String\\n        description: String\\n        projectType: String\\n        metaStr: String\\n        leaves: [ProjectTreeLeaf]\\n        branches: [ProjectTreeBranch]\\n        defaultView: ID\\n        views: [ProjectTreeViews]\\n    }\\n\\n    type TileServiceOriginFile {\\n        lastModified: String\\n        etag: String\\n        size: Int\\n        key: String\\n    }\\n\\n    type TileService {\\n        url: String\\n        indexUrl: String\\n        status: TilingStatus!\\n        lastStatus: String\\n        error: String\\n        rasterStats: String\\n        numFiles: Int\\n        rsLayer: String        # Arbitrary depth so stringify rsLayer\\n        started: String\\n        duration: Float\\n        format: String\\n        bounds: [Float]\\n        maxZoom: Int\\n        minZoom: Int\\n        originFile: TileServiceOriginFile\\n    }\\n    type Symbology {\\n        name: String!\\n        status: SymbologyStatus\\n        legend: [[String]]\\n        rampType: RampType\\n        mapboxJson: String\\n        url: String\\n        error: String\\n    }\\n\\n    # Just a nice convenience type for our lambda invoke methods\\n    type WatcherOutput {\\n        message: String\\n        results: [String]\\n        errors: [String]\\n    }\\n\"], [\"\\n    # Check out the cheat sheet:\\n    # https://raw.githubusercontent.com/sogko/graphql-shorthand-notation-cheat-sheet/master/graphql-shorthand-notation-cheat-sheet.png\\n\\n    schema {\\n        query: Query\\n        mutation: Mutation\\n    }\\n\\n    type Query {\\n        # Get a project and associated metadata\\n        auth: AuthParams\\n\\n        project(id: ID!, program: String!): Project\\n        projects(program: String!, projType: String, limit: Int, nextToken: String): PaginatedProjects\\n\\n        program(program: String!): Program\\n        programs: [Program]\\n\\n        downloadFile(program: String!, id: ID!, projType: String!, filePath: String!): FileDownloadMeta\\n\\n        downloadZip(program: String!, id: ID!, projType: String!): FileDownloadMeta\\n\\n        getWebSymbology(projType: String, name: String!, isRaster: Boolean): Symbology\\n        getLayerTiles(program: String!, id: ID!, projType: String!, layerPath: String!): TileService\\n\\n\\n        # Request an upload start. Writes a manifest file on the upload bucket\\n        # and creates upload urls for everything\\n        requestUpload(id: ID, files: [String!], program: String!, projectType: String!): FileUpload\\n\\n        search(\\n            program: String!\\n            projType: String\\n            nameStr: String\\n            metaStr: String\\n            metaArr: String\\n            tags: String\\n            noTags: Boolean\\n            limit: Int\\n            nextToken: Int\\n        ): PaginatedSearchResults\\n\\n        validate(xml: String!, projType: String!, program: String!): Validation\\n\\n        getUsers(program: String!, limit: Int, nextToken: String): PaginatedUsers\\n\\n        projectTree(id: ID!, program: String!, projType: String!): ProjectTree\\n    }\\n\\n    # this schema allows the following mutation:\\n    type Mutation {\\n        # signal a deletion of a project\\n        deleteProject(id: ID!, program: String!): ID!\\n        updateUser(id: ID!, program: String!, permission: String): User\\n        reIndexProject(id: ID!, program: String!, projType: String!): WatcherOutput\\n        queueTileRebuild(id: ID!, program: String!, projType: String!, filePath: String, symbologies: [String]): String\\n    }\\n\\n    type User {\\n        email: String\\n        name: String\\n        picture: String\\n        username: String!\\n        createdOn: String\\n        updatedOn: String\\n        role: String\\n    }\\n\\n    type PaginatedUsers {\\n        users: [User]\\n        nextToken: String\\n    }\\n\\n    type Validation {\\n        result: Boolean\\n        xmlErrors: [String]\\n    }\\n\\n    type AuthParams {\\n        loggedIn: Boolean\\n        userPool: String\\n        clientId: String\\n        region: String\\n        domain: String\\n    }\\n\\n    interface ProjectBase {\\n        id: ID!\\n        name: String\\n        meta: String\\n        tags: String\\n        projType: String\\n        program: String\\n        createdBy: ID!\\n        updatedBy: ID!\\n        createdOn: String!\\n        updatedOn: String!\\n    }\\n\\n    type Project implements ProjectBase {\\n        id: ID!\\n        name: String\\n        meta: String\\n        tags: String\\n        projType: String\\n        totalSize: String\\n        program: String\\n        createdBy: ID!\\n        updatedBy: ID!\\n        createdOn: String!\\n        updatedOn: String!\\n        files: [FileDownloadMeta]\\n        tree: ProjectTree\\n    }\\n\\n    type ProjectSearchResult implements ProjectBase {\\n        id: ID!\\n        name: String\\n        meta: String\\n        tags: String\\n        projType: String\\n        totalSize: String\\n        program: String\\n        createdBy: ID!\\n        updatedBy: ID!\\n        createdOn: String!\\n        updatedOn: String!\\n        score: Float\\n        files: [FileDownloadMeta]\\n    }\\n\\n    # This is mostly just JSON that's stringified\\n    type Product {\\n        id: ID!\\n        name: String!\\n        folder: String\\n        # Stringified JSON Array:\\n        pathArr: String\\n    }\\n    type Group {\\n        id: ID!\\n        name: String!\\n        folder: String\\n    }\\n    type NamedAllow {\\n        id: ID!\\n        name: String!\\n        aliases: String\\n        folder: String\\n    }\\n    type Collection {\\n        id: ID!\\n        name: String!\\n        AllowRegex: [String]\\n        Allow: [NamedAllow]\\n    }\\n    type Program {\\n        name: String\\n        machineName: String\\n        projectXSDs: String\\n        projectFile: String\\n        meta: String\\n        groups: [Group]\\n        collections: [Collection]\\n        products: [Product]\\n        hierarchy: String\\n        role: String\\n    }\\n\\n    type FileDownloadMeta {\\n        key: String!\\n        md5: String!\\n        size: String\\n        contentType: String\\n        downloadUrl: String!\\n        pendingSince: String\\n    }\\n\\n    type FileUpload {\\n        id: ID!\\n        uploadUrls: [UploadUrl]\\n    }\\n\\n    type UploadUrl {\\n        url: String\\n        fields: String\\n        origPath: String\\n    }\\n\\n    type FileUploadMeta {\\n        key: String!\\n        downloadUrl: String!\\n    }\\n\\n    # Series Connection allows us to implement pagination easily\\n    type PaginatedProjects {\\n        projects: [Project]\\n        nextToken: String\\n    }\\n\\n    type PaginatedSearchResults {\\n        projects: [ProjectSearchResult]\\n        nextToken: Int\\n        total: Int\\n    }\\n\\n    type NewProject {\\n        id: ID!\\n    }\\n\\n    \\\"\\\"\\\"\\n    ProjectTreeLayerTypes is an enumeration to help us display layers with the\\n    correct icon and assign them to the right slot\\n    \\\"\\\"\\\"\\n    enum ProjectTreeLayerTypes {\\n        \", \"\\n    }\\n    enum SymbologyStatus {\\n        \", \"\\n    }\\n    enum TilingStatus {\\n        \", \"\\n    }\\n    enum RampType {\\n        \", \"\\n    }\\n\\n    type ProjectTreeBranch {\\n        label: String!\\n        collapsed: Boolean\\n        # Branch ID and parent ID\\n        bid: Int\\n        pid: Int\\n    }\\n    type ProjectTreeLeaf {\\n        id: Int # This is a global ID not an id within a branch\\n        pid: Int\\n        label: String!\\n        layerId: ID\\n        blLayerId: ID\\n        layerType: ProjectTreeLayerTypes!\\n        layerPath: String\\n        layerName: String\\n        nodeExists: Boolean\\n        # This is the path that helps u\\n        metaStr: String\\n        symbology: String\\n        transparency: Int\\n    }\\n\\n    # The project tree comes back as non-recursive list of layers.\\n    # The ProjectTree class will need to parse this into a typescript \\n    # Recursive type\\n    type ProjectTreeViewLayer {\\n        id: ID!\\n        visible: Boolean\\n    }\\n\\n    type ProjectTreeViews {\\n        id: ID!\\n        name: String!\\n        description: String\\n        layers: [ProjectTreeViewLayer]\\n    }\\n\\n    type ProjectTree {\\n        name: String\\n        description: String\\n        projectType: String\\n        metaStr: String\\n        leaves: [ProjectTreeLeaf]\\n        branches: [ProjectTreeBranch]\\n        defaultView: ID\\n        views: [ProjectTreeViews]\\n    }\\n\\n    type TileServiceOriginFile {\\n        lastModified: String\\n        etag: String\\n        size: Int\\n        key: String\\n    }\\n\\n    type TileService {\\n        url: String\\n        indexUrl: String\\n        status: TilingStatus!\\n        lastStatus: String\\n        error: String\\n        rasterStats: String\\n        numFiles: Int\\n        rsLayer: String        # Arbitrary depth so stringify rsLayer\\n        started: String\\n        duration: Float\\n        format: String\\n        bounds: [Float]\\n        maxZoom: Int\\n        minZoom: Int\\n        originFile: TileServiceOriginFile\\n    }\\n    type Symbology {\\n        name: String!\\n        status: SymbologyStatus\\n        legend: [[String]]\\n        rampType: RampType\\n        mapboxJson: String\\n        url: String\\n        error: String\\n    }\\n\\n    # Just a nice convenience type for our lambda invoke methods\\n    type WatcherOutput {\\n        message: String\\n        results: [String]\\n        errors: [String]\\n    }\\n\"])), Object.values(types_1.ProjectTreeLayerTypes).join('\\n      '), Object.values(types_1.SymbologyStatus).join('\\n      '), Object.values(types_1.TilingStatus).join('\\n      '), Object.values(types_1.RampType).join('\\n      '));\nexports.default = typeDefs;\nvar templateObject_1;\n//# sourceMappingURL=schema.graphql.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Program = void 0;\nvar Program = (function () {\n    function Program(programObj) {\n        Object.assign(this, programObj);\n    }\n    Program.fromGraphQL = function (input) {\n        if (!input)\n            return null;\n        var meta = input.meta ? JSON.parse(input.meta) : {};\n        return new Program(__assign(__assign({}, input), { meta: meta, role: input.role, products: input.products\n                ? input.products.map(function (p) { return (__assign(__assign({}, p), { pathArr: JSON.parse(p.pathArr) })); })\n                : [] }));\n    };\n    return Program;\n}());\nexports.Program = Program;\n//# sourceMappingURL=Program.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Project = void 0;\nvar path_1 = __importDefault(require(\"path\"));\nfunction fileSort(currFolder) {\n    currFolder.sort(function (a, b) {\n        if (a.children && !b.children)\n            return -1;\n        if (!a.children && b.children)\n            return 1;\n        if (a.name.toLowerCase() < b.name.toLowerCase())\n            return -1;\n        if (a.name.toLowerCase() > b.name.toLowerCase())\n            return 1;\n        return 0;\n    });\n}\nvar Project = (function () {\n    function Project(projectObj) {\n        var _this = this;\n        this.treeIzeFilePaths = function () {\n            var root = [];\n            _this.files.forEach(function (_a) {\n                var key = _a.key;\n                var pathArr = key.split('/');\n                if (pathArr.length === 1 && key.indexOf('\\\\') > -1) {\n                    pathArr = key.split('\\\\');\n                }\n                var currFolder = root;\n                var _loop_1 = function () {\n                    var folder = { name: pathArr.shift(), children: [] };\n                    var found = currFolder.find(function (f) { return f.name === folder.name; });\n                    if (found && found.children) {\n                        currFolder = found.children;\n                    }\n                    else {\n                        currFolder.push(folder);\n                        currFolder = folder.children;\n                    }\n                    fileSort(currFolder);\n                };\n                while (pathArr.length > 1) {\n                    _loop_1();\n                }\n                currFolder.push({ name: pathArr[0], path: key });\n            });\n            fileSort(root);\n            return root;\n        };\n        Object.assign(this, projectObj);\n        if (!this.files)\n            this.files = [];\n        if (this.tree && this.tree.leaves) {\n            this.tree.leaves = this.tree.leaves.map(function (lf) { return (__assign(__assign({}, lf), { meta: lf && lf.metaStr ? JSON.parse(lf.metaStr) : {} })); });\n        }\n    }\n    Project.fromGraphQL = function (input) {\n        if (!input)\n            return null;\n        return new Project(__assign(__assign({}, input), { createdOn: parseInt(input.createdOn, 10), updatedOn: parseInt(input.updatedOn, 10), meta: input.meta ? JSON.parse(input.meta) : {}, tags: input.tags ? input.tags.split(',') : [] }));\n    };\n    Project.fromDynamoDB = function (input) {\n        return new Project(__assign(__assign({}, input), { name: input.Name || input.name, meta: input.meta ? Project.parseDynamoMeta(input.meta) : undefined }));\n    };\n    Project.diff = function (left, right) {\n        var different = [];\n        var same = [];\n        if (!right || right.length === 0) {\n            return {\n                leftOnly: left.map(function (f) { return f.key; }),\n                rightOnly: [],\n                different: [],\n                same: []\n            };\n        }\n        else if (!left || left.length === 0) {\n            return {\n                leftOnly: [],\n                rightOnly: right.map(function (f) { return f.key; }),\n                different: [],\n                same: []\n            };\n        }\n        var leftOnly = left\n            .filter(function (leftFile) {\n            var found = right.find(function (rightFile) { return leftFile.key === rightFile.key; });\n            if (found) {\n                if (found.md5 === leftFile.md5)\n                    same.push(leftFile.key);\n                else\n                    different.push(leftFile.key);\n            }\n            return !found;\n        })\n            .map(function (f) { return f.key; });\n        var rightOnly = right\n            .filter(function (rightFile) { return !left.find(function (leftFile) { return rightFile.key === leftFile.key; }); })\n            .map(function (f) { return f.key; });\n        return {\n            leftOnly: leftOnly,\n            rightOnly: rightOnly,\n            different: different,\n            same: same\n        };\n    };\n    Project.getProjectS3Keys = function (program, projectId, projType) {\n        var prefix = path_1.default.join(program.machineName, projType, projectId);\n        var zipKey = prefix + \".zip\";\n        var projFileKey = path_1.default.join(prefix, program.projectFile);\n        var zipKeyPending = path_1.default.join(program.machineName, projType, projectId + \".zip.pending\");\n        var downloadFolderName = \"\" + [program.machineName, projType, projectId].join('-');\n        var downloadZipFilename = downloadFolderName + \".zip\";\n        return {\n            prefix: prefix,\n            zipKey: zipKey,\n            projFileKey: projFileKey,\n            zipKeyPending: zipKeyPending,\n            downloadFolderName: downloadFolderName,\n            downloadZipFilename: downloadZipFilename\n        };\n    };\n    Project.parseDynamoMeta = function (dynObj) {\n        var metavals = Object.keys(dynObj)\n            .filter(function (k) { return k.indexOf('META_') === 0; })\n            .reduce(function (acc, k) {\n            var _a;\n            var newk = k.split('META_')[1];\n            return __assign(__assign({}, acc), (_a = {}, _a[newk] = dynObj[k], _a));\n        }, {});\n        return JSON.stringify(metavals);\n    };\n    Project.parseTagString = function (tagString) {\n        if (!tagString || tagString.trim().length === 0)\n            return [];\n        return tagString\n            .split(',')\n            .map(function (t) { return t.trim(); })\n            .filter(function (t) { return t.length > 0 && t !== 'null' && t !== 'undefined'; });\n    };\n    Project.parseS3Key = function (program, key) {\n        var keyArr = key.split('/');\n        if (keyArr.length < 3)\n            throw new Error('Not a valid project key');\n        var _a = key.split('/'), programMachineName = _a[0], projType = _a[1], id = _a[2];\n        if (program.machineName !== programMachineName) {\n            throw new Error(\"Program passed to parseS3 key \" + program.machineName + \" does not correspond to program in key: \" + programMachineName);\n        }\n        return Project.getProjectS3Keys(program, id, projType);\n    };\n    Project.parseS3KeyDUMB = function (key) {\n        var keyArr = key.split('/');\n        if (keyArr.length < 3)\n            throw new Error('Not a valid project key');\n        var programMachineName = keyArr[0], projType = keyArr[1], id = keyArr[2];\n        var prefix = path_1.default.join(programMachineName, projType, id);\n        var zipKey = prefix + \".zip\";\n        return {\n            programMachineName: programMachineName,\n            projType: projType,\n            id: id,\n            zipKey: zipKey,\n            prefix: prefix\n        };\n    };\n    return Project;\n}());\nexports.Project = Project;\n//# sourceMappingURL=Project.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValidationError = void 0;\nvar ValidationError = (function (_super) {\n    __extends(ValidationError, _super);\n    function ValidationError(message, reasons) {\n        var _this = _super.call(this, message) || this;\n        _this.name = _this.constructor.name;\n        _this.reasons = reasons;\n        Error.captureStackTrace(_this, _this.constructor);\n        return _this;\n    }\n    return ValidationError;\n}(Error));\nexports.ValidationError = ValidationError;\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TileServiceJSONClass = void 0;\nvar TileServiceJSONClass = (function () {\n    function TileServiceJSONClass(raw) {\n        Object.assign(this, raw);\n    }\n    return TileServiceJSONClass;\n}());\nexports.TileServiceJSONClass = TileServiceJSONClass;\n//# sourceMappingURL=TileServiceJSONClass.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) { return ({\n    root: {\n        display: 'flex',\n        zIndex: theme.zIndex.drawer + 1\n    },\n    text: {\n        flexGrow: 1\n    },\n    logo: {}\n}); });\nvar Footer = function (_a) {\n    var version = _a.version;\n    var classes = useStyles();\n    return (_jsxs(Container, __assign({ className: classes.root, maxWidth: \"md\" }, { children: [version && (_jsxs(Typography, __assign({ component: \"div\", className: classes.text, color: \"textSecondary\", variant: \"overline\" }, { children: [\"v.\", version] }), void 0)), _jsx(\"img\", { className: classes.logo, alt: \"footer\", src: process.env.PUBLIC_URL + \"/cc-watermarks-riverscapes_orig.png\" }, void 0)] }), void 0));\n};\nexport default Footer;\n//# sourceMappingURL=Footer.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FacebookShareButton, LinkedinShareButton, TwitterShareButton, EmailShareButton, FacebookIcon, TwitterIcon, LinkedinIcon, EmailIcon } from 'react-share';\nvar useStyles = makeStyles(function (theme) { return ({\n    root: {},\n    shareIconTitle: {},\n    shareButtons: {\n        margin: theme.spacing(1, 0),\n        '&>*': {\n            marginRight: theme.spacing(1)\n        }\n    },\n    flexGrow: {\n        flexGrow: 1\n    },\n    dlgTitle: {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.main,\n        display: 'flex'\n    },\n    closeButton: {\n        flex: '0 0'\n    }\n}); });\nvar ShareDialog = function (_a) {\n    var open = _a.open, shareUrl = _a.shareUrl, handleClose = _a.handleClose;\n    var classes = useStyles();\n    return (_jsxs(Dialog, __assign({ open: open, onClose: handleClose, \"aria-labelledby\": \"form-dialog-title\" }, { children: [_jsxs(DialogTitle, __assign({ className: classes.dlgTitle, disableTypography: true }, { children: [_jsx(IconButton, __assign({ color: \"inherit\" }, { children: _jsx(ShareIcon, { className: classes.shareIconTitle }, void 0) }), void 0), _jsx(Typography, __assign({ variant: \"h4\", className: classes.flexGrow }, { children: \"Share\" }), void 0), _jsx(\"div\", __assign({ className: classes.closeButton }, { children: _jsx(IconButton, __assign({ onClick: handleClose, color: \"inherit\" }, { children: _jsx(CloseIcon, {}, void 0) }), void 0) }), void 0)] }), void 0), _jsxs(DialogContent, { children: [_jsx(DialogContentText, { children: \"Copy this link and share it using your preferred method.\" }, void 0), _jsx(TextField, { value: shareUrl, margin: \"dense\", id: \"name\", variant: \"outlined\", fullWidth: true, inputProps: {\n                            onClick: function (e) {\n                                e.preventDefault();\n                                var target = e.target;\n                                target.select();\n                            }\n                        } }, void 0), _jsxs(\"div\", __assign({ className: classes.shareButtons }, { children: [_jsx(EmailShareButton, __assign({ url: shareUrl }, { children: _jsx(EmailIcon, { size: 32, round: true }, void 0) }), void 0), _jsx(TwitterShareButton, __assign({ url: shareUrl }, { children: _jsx(TwitterIcon, { size: 32, round: true }, void 0) }), void 0), _jsx(LinkedinShareButton, __assign({ url: shareUrl }, { children: _jsx(LinkedinIcon, { size: 32, round: true }, void 0) }), void 0), _jsx(FacebookShareButton, __assign({ url: shareUrl, quote: 'title' }, { children: _jsx(FacebookIcon, { size: 32, round: true }, void 0) }), void 0)] }), void 0)] }, void 0)] }), void 0));\n};\nexport default ShareDialog;\n//# sourceMappingURL=ShareDialog.js.map","import { red, green, blue, orange, purple, cyan, lime, brown } from '@material-ui/core/colors';\nimport log from 'loglevel';\nexport var tagColors = {\n    tagColors: [\n        '#418CF0',\n        '#FCB441',\n        '#E0400A',\n        '#056492',\n        '#BFBFBF',\n        '#1A3B69',\n        '#FFE382',\n        '#129CDD',\n        '#CA6B4B',\n        '#005CDB',\n        '#F3D288',\n        '#506381',\n        '#F1B9A8',\n        '#E0830A',\n        '#7893BE'\n    ]\n};\nvar domain = process.env.REACT_APP_DOMAIN;\nif (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n    domain = 'localhost';\n}\nlog.debug('config: ', { domain: domain });\nexport var isDev = process.env.NODE_ENV && process.env.NODE_ENV === 'development';\nexport var mapConfig = {\n    mapBoxToken: process.env.REACT_APP_MAPBOX_TOKEN\n};\nexport var version = process.env.REACT_APP_VERSION;\nexport var endpoints = {\n    graphql: process.env.REACT_APP_GRAPHQL,\n    cdn: process.env.REACT_APP_CDN\n};\nexport var mandatoryMetaColors = [red, green, blue, orange, purple, cyan, lime, brown];\nexport var redirectUrl = new URL(process.env.PUBLIC_URL.endsWith('/') ? process.env.PUBLIC_URL : process.env.PUBLIC_URL + '/', window.location.origin);\nconsole.log('RedirectUrl', { redirectUrl: redirectUrl, publicUrl: process.env.PUBLIC_URL });\nexport var googleAnalytics = process.env.REACT_APP_GOOGLE_ANALYTICS;\nexport var awsAuth = {\n    Auth: {\n        region: process.env.REACT_APP_AWS_REGION_DEPLOY,\n        userPoolId: process.env.REACT_APP_AWS_USERPOOLID,\n        userPoolWebClientId: process.env.REACT_APP_AWS_USERPOOLWEBCLIENTID,\n        mandatorySignIn: true,\n        oauth: {\n            domain: process.env.REACT_APP_HOSTED_DOMAIN,\n            scope: ['email', 'profile', 'openid'],\n            redirectSignIn: redirectUrl,\n            redirectSignOut: redirectUrl,\n            responseType: 'code'\n        }\n    }\n};\n//# sourceMappingURL=config.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport ShareIcon from '@material-ui/icons/Share';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { WarehouseRoleEnum } from '@riverscapes/common';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport style from './Topbar.style';\nimport ShareDialog from '../modals/ShareDialog';\nimport { version } from '../config';\nvar useStyles = makeStyles(style);\nexport function isDisabled(prog) {\n    if (prog.meta && prog.meta.access && prog.meta.access === 'PUBLIC')\n        return false;\n    return prog.role === null;\n}\nvar TopBar = function (_a) {\n    var title = _a.title, program = _a.program, programs = _a.programs, signOutHandler = _a.signOutHandler, toolbarItems = _a.toolbarItems, shareUrl = _a.shareUrl, history = _a.history;\n    var classes = useStyles();\n    var _b = useState(false), shareOpen = _b[0], setShareOpen = _b[1];\n    var _c = useState(null), mobileMoreAnchorEl = _c[0], setMobileMoreAnchorEl = _c[1];\n    var handleMobileMenuClose = function () { return setMobileMoreAnchorEl(null); };\n    var handleShareMenuOpen = function () { return setShareOpen(true); };\n    var handleNavigate = function (nm) {\n        handleMobileMenuClose();\n        if (history)\n            history.push(\"/\" + nm.machineName);\n    };\n    var isAdmin = history && history.location.pathname.indexOf('/admin') > -1;\n    var handleAdmin = function () {\n        if (history && program) {\n            if (isAdmin)\n                history.push(\"/\" + program.machineName);\n            else\n                history.push(\"/\" + program.machineName + \"/admin\");\n        }\n    };\n    var handleMobileMenuOpen = function (event) { return setMobileMoreAnchorEl(event.currentTarget); };\n    var renderMobileMenu = (signOutHandler || programs) && (_jsxs(Menu, __assign({ anchorEl: mobileMoreAnchorEl, anchorOrigin: { vertical: 'top', horizontal: 'right' }, keepMounted: true, transformOrigin: { vertical: 'top', horizontal: 'right' }, open: !!mobileMoreAnchorEl, onClose: handleMobileMenuClose }, { children: [programs && (_jsx(MenuItem, { children: _jsx(Typography, __assign({ variant: \"overline\", onClick: function () { return history.push(\"/\"); } }, { children: \"Programs\" }), void 0) }, void 0)), programs && _jsx(Divider, {}, void 0), programs &&\n                programs.length > 0 &&\n                programs.map(function (prog, idx) { return (_jsx(MenuItem, __assign({ disabled: (program && program.machineName === prog.machineName) || isDisabled(prog), onClick: function () { return handleNavigate(prog); }, value: prog.machineName }, { children: prog.name }), \"prog-\" + idx)); }), signOutHandler && _jsx(Divider, {}, void 0), signOutHandler && _jsx(MenuItem, __assign({ onClick: signOutHandler }, { children: \"Log Out\" }), void 0)] }), void 0));\n    var showAdmin = program && (program.role === WarehouseRoleEnum.Admin || program.role === WarehouseRoleEnum.SuperUser);\n    return (_jsxs(React.Fragment, { children: [_jsx(AppBar, __assign({ position: \"static\", className: classes.appBar }, { children: _jsxs(Toolbar, __assign({ className: classes.root, disableGutters: true }, { children: [_jsx(\"a\", __assign({ href: \"http://riverscapes.xyz/\" }, { children: _jsx(\"img\", { className: classes.logo, src: 'https://riverscapes.xyz/assets/images/RiverscapesLogo.png', alt: \"logo\" }, void 0) }), void 0), program ? (_jsxs(\"div\", { children: [_jsx(Typography, __assign({ variant: \"subtitle1\" }, { children: program.name }), void 0), _jsx(Typography, __assign({ variant: \"caption\" }, { children: title }), void 0)] }, void 0)) : (_jsx(Typography, __assign({ variant: \"subtitle1\" }, { children: title }), void 0)), _jsx(\"div\", { className: classes.spacer }, void 0), version && (_jsxs(Typography, __assign({ component: \"div\", className: classes.text, color: \"inherit\", variant: \"overline\" }, { children: [\"v.\", version] }), void 0)), showAdmin && (_jsx(IconButton, __assign({ \"aria-haspopup\": \"true\", onClick: handleAdmin, color: \"inherit\" }, { children: isAdmin ? _jsx(ListAltIcon, {}, void 0) : _jsx(SupervisorAccountIcon, {}, void 0) }), void 0)), toolbarItems, shareUrl && (_jsx(IconButton, __assign({ \"aria-haspopup\": \"true\", onClick: handleShareMenuOpen, color: \"inherit\" }, { children: _jsx(ShareIcon, {}, void 0) }), void 0)), (signOutHandler || programs) && (_jsx(IconButton, __assign({ \"aria-haspopup\": \"true\", onClick: handleMobileMenuOpen, color: \"inherit\" }, { children: _jsx(MoreIcon, {}, void 0) }), void 0))] }), void 0) }), void 0), renderMobileMenu, shareUrl && _jsx(ShareDialog, { open: shareOpen, shareUrl: shareUrl, handleClose: function () { return setShareOpen(false); } }, void 0)] }, void 0));\n};\nexport default TopBar;\n//# sourceMappingURL=Topbar.js.map","import { alpha } from '@material-ui/core/styles';\nexport default (function (theme) {\n    var _a, _b, _c, _d;\n    return ({\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1\n        },\n        root: {\n            display: 'flex',\n            alignItems: 'center',\n            width: '100%',\n            padding: theme.spacing(0, 1),\n            textShadow: '3px 3px 3px rgba(0,0,0,0.7)',\n            backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/HeaderBackground.png)\",\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: '0% 50%',\n            backgroundSize: 'cover',\n            backgroundColor: '#444444'\n        },\n        logo: {\n            height: 40,\n            width: 40,\n            marginRight: theme.spacing(2)\n        },\n        programChooser: {\n            margin: theme.spacing(0, 1),\n            color: theme.palette.primary.contrastText,\n            '& svg': {\n                color: theme.palette.primary.contrastText\n            },\n            '&:before': {\n                borderColor: theme.palette.primary.contrastText\n            },\n            '&:after': {\n                borderColor: theme.palette.primary.contrastText\n            }\n        },\n        transparent: {\n            backgroundColor: 'transparent',\n            background: 'none',\n            color: theme.palette.text.primary\n        },\n        search: (_a = {\n                position: 'relative',\n                borderRadius: theme.shape.borderRadius,\n                backgroundColor: alpha(theme.palette.common.white, 0.15),\n                '&:hover': {\n                    backgroundColor: alpha(theme.palette.common.white, 0.25)\n                },\n                marginRight: theme.spacing(2),\n                marginLeft: 0,\n                width: '100%',\n                flexGrow: 1\n            },\n            _a[theme.breakpoints.up('sm')] = {\n                marginLeft: theme.spacing(3),\n                width: 'auto'\n            },\n            _a),\n        searchIcon: {\n            width: theme.spacing(7),\n            height: '100%',\n            position: 'absolute',\n            pointerEvents: 'none',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n        },\n        inputRoot: {\n            color: 'inherit'\n        },\n        spacer: {\n            flexGrow: 1\n        },\n        inputInput: (_b = {\n                padding: theme.spacing(1, 1, 1, 7),\n                transition: theme.transitions.create('width'),\n                width: '100%'\n            },\n            _b[theme.breakpoints.up('sm')] = {\n                width: 200\n            },\n            _b),\n        sectionDesktop: (_c = {\n                display: 'none'\n            },\n            _c[theme.breakpoints.up('sm')] = {\n                display: 'flex',\n                flexGrow: 1\n            },\n            _c),\n        sectionMobile: (_d = {\n                display: 'flex',\n                flexGrow: 1\n            },\n            _d[theme.breakpoints.up('sm')] = {\n                display: 'none'\n            },\n            _d)\n    });\n});\n//# sourceMappingURL=Topbar.style.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function () { return ({\n    root: {\n        '& *': {\n            cursor: 'pointer'\n        }\n    },\n    disabledButton: {\n        opacity: 0.5\n    }\n}); });\nvar DownloadZipBtn = function (_a) {\n    var title = _a.title, project = _a.project, pendingSince = _a.pendingSince, btnProps = _a.btnProps, downloadZipFile = _a.downloadZipFile;\n    var classes = useStyles();\n    var btnRender = (_jsx(Tooltip, __assign({ title: _jsxs(React.Fragment, { children: [_jsx(Typography, __assign({ variant: \"body1\" }, { children: \"Download Project Zip\" }), void 0), _jsx(Typography, __assign({ variant: \"caption\", paragraph: true }, { children: \"Click to download this project as a single zip file\" }), void 0), _jsx(Typography, __assign({ variant: \"caption\", paragraph: true }, { children: \"There may be a delay if the zip file needs to be built.\" }), void 0)] }, void 0) }, { children: title ? (_jsx(Button, __assign({ variant: \"contained\", color: \"primary\", onClick: function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n                downloadZipFile(project);\n            }, startIcon: _jsx(CloudDownloadIcon, {}, void 0) }, btnProps, { children: title || 'ZIP' }), void 0)) : (_jsx(IconButton, __assign({ color: \"primary\", onClick: function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n                downloadZipFile(project);\n            } }, btnProps, { children: _jsx(CloudDownloadIcon, {}, void 0) }), void 0)) }), void 0));\n    if (pendingSince) {\n        btnRender = (_jsx(Tooltip, __assign({ title: _jsxs(React.Fragment, { children: [_jsx(Typography, __assign({ variant: \"body1\" }, { children: \"Preparing Zip\" }), void 0), _jsx(Typography, __assign({ variant: \"caption\", paragraph: true }, { children: \"The warehouse is building your zip file for you.\" }), void 0), _jsxs(Typography, __assign({ variant: \"caption\", paragraph: true }, { children: [\"started \", moment(pendingSince, 'x').fromNow()] }), void 0)] }, void 0) }, { children: _jsx(Button, __assign({ variant: \"outlined\", disableFocusRipple: true, disableRipple: true, disableTouchRipple: true, color: \"primary\", onClick: function (e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }, className: classes.disabledButton, startIcon: _jsx(CircularProgress, { color: btnProps && btnProps.color && btnProps.color === 'secondary' ? 'primary' : 'secondary', size: 24, thickness: 6 }, void 0) }, btnProps, { children: title || 'ZIP' }), void 0) }), void 0));\n    }\n    return _jsx(\"div\", __assign({ className: classes.root }, { children: btnRender }), void 0);\n};\nexport default DownloadZipBtn;\n//# sourceMappingURL=DownloadZipBtn.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { googleAnalytics } from '..';\nvar useStyles = makeStyles(function (theme) { return ({\n    root: {},\n    whBtnLogo: { height: 20, width: 20, marginRight: theme.spacing(1) },\n    whButton: {\n        maxWidth: 300\n    }\n}); });\nvar WarehouseButton = function (_a) {\n    var title = _a.title, href = _a.href, stay = _a.stay;\n    var classes = useStyles();\n    return (_jsxs(Button, __assign({ className: classes.whButton, target: stay ? undefined : '_blank', variant: \"contained\", href: href, onClick: function () {\n            googleAnalytics.event('webrave', 'open_warehouse', 'open_warehouse');\n        }, color: \"secondary\", fullWidth: true }, { children: [_jsx(\"img\", { className: classes.whBtnLogo, src: 'https://riverscapes.xyz/assets/images/RiverscapesLogo.png', alt: \"logo\" }, void 0), title] }), void 0));\n};\nexport default WarehouseButton;\n//# sourceMappingURL=WarehouseButton.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport PublicIcon from '@material-ui/icons/Public';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { googleAnalytics } from '..';\nvar useStyles = makeStyles(function () { return ({\n    root: {\n        '& *': {\n            cursor: 'pointer'\n        }\n    },\n    disabledButton: {\n        opacity: 0.5\n    }\n}); });\nvar WebRaveBtn = function (_a) {\n    var title = _a.title, project = _a.project, url = _a.url, btnProps = _a.btnProps;\n    var classes = useStyles();\n    if (!url || url.length === 0)\n        return null;\n    var webRaveUrl = url + \"#/\" + project.program + \"/\" + project.id;\n    var btnRender = (_jsx(Tooltip, __assign({ title: _jsxs(React.Fragment, { children: [_jsx(Typography, __assign({ variant: \"body1\" }, { children: \"Explore using map\" }), void 0), _jsx(Typography, __assign({ variant: \"caption\", paragraph: true }, { children: \"Explore this data set using an online map\" }), void 0)] }, void 0) }, { children: title ? (_jsx(Button, __assign({ variant: \"contained\", onClick: function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n                googleAnalytics.event('warehouse', 'open_webrave', 'open_webrave');\n                window.open(webRaveUrl);\n            }, color: \"primary\", startIcon: _jsx(PublicIcon, {}, void 0) }, btnProps, { children: title || 'MAP' }), void 0)) : (_jsx(IconButton, __assign({ color: \"primary\", onClick: function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n                googleAnalytics.event('warehouse', 'open_webrave', 'open_webrave');\n                window.open(webRaveUrl);\n            } }, btnProps, { children: _jsx(PublicIcon, {}, void 0) }), void 0)) }), void 0));\n    return _jsx(\"div\", __assign({ className: classes.root }, { children: btnRender }), void 0);\n};\nexport default WebRaveBtn;\n//# sourceMappingURL=WebRaveBtn.js.map","var _a;\nimport { WarehouseRoleEnum } from '@riverscapes/common';\nimport { red, pink, blue, lime } from '@material-ui/core/colors';\nexport var accessColors = (_a = {},\n    _a[WarehouseRoleEnum.SuperUser] = pink,\n    _a[WarehouseRoleEnum.Admin] = red,\n    _a[WarehouseRoleEnum.Participant] = lime,\n    _a[WarehouseRoleEnum.Observer] = blue,\n    _a);\n//# sourceMappingURL=constants.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Chip from '@material-ui/core/Chip';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport FaceIcon from '@material-ui/icons/Face';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { accessColors } from '../constants';\nvar useStyles = makeStyles(function (theme) { return ({\n    rootContainer: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden'\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: theme.spacing(2, 4, 4, 4),\n        maxHeight: '85%',\n        overflow: 'hidden'\n    },\n    instruct: {\n        flex: '0 0'\n    },\n    progList: {\n        flex: '1 1',\n        overflowY: 'scroll'\n    },\n    logoContainer: {\n        flex: '0 0',\n        padding: theme.spacing(2),\n        textAlign: 'center'\n    },\n    logo: {},\n    accessChip: __assign({}, Object.keys(accessColors).reduce(function (acc, ack) {\n        var _a;\n        return (__assign(__assign({}, acc), (_a = {}, _a[\"&.access_\" + ack] = {\n            color: theme.palette.getContrastText(accessColors[ack][500]),\n            background: accessColors[ack][500]\n        }, _a)));\n    }, {}))\n}); });\nexport function isDisabled(prog) {\n    if (prog.meta && prog.meta.access && prog.meta.access === 'PUBLIC')\n        return false;\n    return prog.role === null;\n}\nvar ProgramChooser = function (_a) {\n    var programs = _a.programs, history = _a.history, navigate = _a.navigate;\n    var classes = useStyles();\n    return (_jsxs(\"div\", __assign({ className: classes.rootContainer }, { children: [_jsx(\"div\", { className: classes.spacer }, void 0), _jsxs(Paper, __assign({ className: classes.root, elevation: 1 }, { children: [_jsx(\"div\", __assign({ className: classes.logoContainer }, { children: _jsx(\"img\", { className: classes.logo, src: process.env.PUBLIC_URL + '/RiverscapesLogo.png', alt: \"logo\" }, void 0) }), void 0), _jsx(Typography, __assign({ variant: \"h5\", className: classes.instruct }, { children: \"Choose a program:\" }), void 0), _jsx(List, __assign({ className: classes.progList }, { children: programs &&\n                            programs.map(function (p, idx) {\n                                var chip = (_jsx(Chip, { icon: _jsx(FaceIcon, {}, void 0), className: clsx(classes.accessChip, \"access_\" + p.role), label: p.role || 'Observer', color: \"primary\" }, void 0));\n                                var disabled = isDisabled(p);\n                                if (disabled)\n                                    chip = _jsx(Chip, { label: \"No Access\", color: \"default\" }, void 0);\n                                return (_jsxs(ListItem, __assign({ disabled: disabled, button: true, divider: true, onClick: function () { return navigate(history, p); } }, { children: [_jsx(ListItemAvatar, { children: _jsx(Avatar, __assign({ alt: \"programname\" }, { children: p.name.substr(0, 1) }), void 0) }, void 0), _jsx(ListItemText, { primary: p.name, secondary: p.meta.description }, void 0), chip] }), \"progKey-\" + idx));\n                            }) }), void 0), _jsxs(Typography, __assign({ paragraph: true, variant: \"caption\", className: classes.instruct }, { children: [\"If there are programs labeled\", ' ', _jsx(Chip, { label: \"No Access\", component: \"span\", color: \"default\", size: \"small\" }, void 0), \" and you think you should be able to see them please contact your program administrator.\"] }), void 0)] }), void 0), _jsx(\"div\", { className: classes.spacer }, void 0)] }), void 0));\n};\nexport default ProgramChooser;\n//# sourceMappingURL=ProgramChooser.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport filesize from 'filesize';\nimport style from './RecurseTreeItem.style';\nvar useStyles = makeStyles(style);\nvar RecurseTreeItem = function (_a) {\n    var item = _a.item, fileDict = _a.fileDict, keyStr = _a.keyStr, project = _a.project, fileClick = _a.fileClick;\n    var classes = useStyles();\n    if (item.children) {\n        var childNodes = item.children.map(function (c, idx) { return (_jsx(RecurseTreeItem, { keyStr: keyStr + \"-l\" + idx, item: c, fileDict: fileDict, project: project, fileClick: fileClick }, keyStr + \"-l\" + idx)); });\n        return (_jsx(TreeItem, __assign({ nodeId: keyStr, className: classes.treeFolder, classes: {\n                content: classes.treeFolderContent\n            }, label: _jsx(\"div\", __assign({ className: classes.treeFolderText }, { children: item.name }), void 0) }, { children: childNodes }), void 0));\n    }\n    else {\n        var lookup = item.path ? fileDict[item.path] : { size: '0' };\n        return (_jsx(TreeItem, { nodeId: keyStr, className: classes.treeFile, classes: {\n                root: classes.treeItemRoot,\n                content: classes.treeFileContent\n            }, label: _jsxs(\"div\", __assign({ className: classes.treeItemContainer }, { children: [_jsxs(\"div\", __assign({ className: classes.treeItemText }, { children: [_jsx(Typography, __assign({ color: \"textPrimary\", component: \"div\", variant: \"body1\" }, { children: item.name }), void 0), _jsxs(Typography, __assign({ color: \"textSecondary\", component: \"div\", variant: \"caption\" }, { children: [filesize(parseInt(lookup.size, 10)), \" --\", ' ', _jsx(\"span\", __assign({ className: classes.allowSelect }, { children: item.path }), void 0)] }), void 0)] }), void 0), _jsx(Tooltip, __assign({ title: _jsx(React.Fragment, { children: _jsxs(Typography, __assign({ variant: \"body1\" }, { children: [\"Download: \", item.path] }), void 0) }, void 0) }, { children: _jsx(IconButton, __assign({ disableRipple: true, className: classes.treeItemIcon, color: \"primary\", onClick: function () { return fileClick(project, item.path); } }, { children: _jsx(CloudDownloadIcon, {}, void 0) }), void 0) }), void 0)] }), void 0), endIcon: lookup.icon }, void 0));\n    }\n};\nexport default RecurseTreeItem;\n//# sourceMappingURL=RecurseTreeItem.js.map","export default (function (theme) { return ({\n    treeItemRoot: {\n        backgroundColor: theme.palette.background.paper,\n        '&:nth-child(odd)': {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    treeItemContainer: {\n        display: 'flex'\n    },\n    treeItemText: {\n        marginLeft: theme.spacing(1),\n        padding: theme.spacing(1),\n        flexGrow: 1\n    },\n    treeItemIcon: {},\n    treeFile: {},\n    treeFileContent: {\n        borderBottom: \"1px solid \" + theme.palette.grey[100]\n    },\n    treeFolder: {},\n    treeFolderContent: {},\n    treeFolderText: {\n        padding: theme.spacing(1)\n    },\n    allowSelect: {\n        '&,& *': {\n            userSelect: 'text',\n            cursor: 'auto'\n        }\n    }\n}); });\n//# sourceMappingURL=RecurseTreeItem.style.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Popover from '@material-ui/core/Popover';\nimport ShareIcon from '@material-ui/icons/Share';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport Terrain from '@material-ui/icons/Terrain';\nimport Assignment from '@material-ui/icons/Assignment';\nimport TreeView from '@material-ui/lab/TreeView';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport WarehouseTags from '../../misc/WarehouseTags';\nimport clsx from 'clsx';\nimport filesize from 'filesize';\nimport moment from 'moment';\nimport WebRaveBtn from '../../misc/WebRaveBtn';\nimport DownloadZipBtn from '../../misc/DownloadZipBtn';\nimport ShareDialog from '../../modals/ShareDialog';\nimport RecurseTreeItem from './RecurseTreeItem';\nimport style from './ProjectModal.style';\nvar useStyles = makeStyles(style);\nvar ProjectModal = function (_a) {\n    var onClose = _a.onClose, project = _a.project, downloadFile = _a.downloadFile, webRaveUrl = _a.webRaveUrl, program = _a.program, showFileTree = _a.showFileTree, pendingZips = _a.pendingZips, downloadZipFile = _a.downloadZipFile;\n    var classes = useStyles();\n    var _b = useState(null), popOver = _b[0], setPopover = _b[1];\n    var _c = useState(false), shareOpen = _c[0], setShareOpen = _c[1];\n    var pendingSince = pendingZips[project.id];\n    var iconMapping = [\n        { pattern: /.*\\.(png|gif|jpg|jpeg)$/i, icon: _jsx(PhotoIcon, { className: classes.photoIcon }, void 0), classStr: 'photo' },\n        { pattern: /.*\\.(tif|img|shp)$/i, icon: _jsx(Terrain, { className: classes.TerrainIcon }, void 0), classStr: 'terrain' },\n        {\n            pattern: /.*\\.(csv|pdf|doc)$/i,\n            icon: _jsx(Assignment, { className: classes.documentIcon }, void 0),\n            classStr: 'assignment'\n        }\n    ];\n    var files = (project.files || []).reduce(function (acc, file) {\n        var _a;\n        var found = iconMapping.find(function (_a) {\n            var pattern = _a.pattern;\n            return file.key.match(pattern);\n        });\n        return __assign(__assign({}, acc), (_a = {}, _a[file.key] = __assign(__assign({}, file), { icon: found ? found.icon : _jsx(InsertDriveFileIcon, { className: classes.normalIcon }, void 0), classStr: found ? found.classStr : 'normalIcon' }), _a));\n    }, {});\n    var fileTree = project.treeIzeFilePaths();\n    var pType = program.products.find(function (p) { return p.id === project.projType; });\n    var pTypeName = pType ? pType.name : 'Unknown';\n    var descriptionTag = Object.keys(project.meta).find(function (k) { return k.toLowerCase() === 'description'; });\n    return (_jsxs(Dialog, __assign({ onClose: onClose, open: true, maxWidth: \"md\", fullWidth: true, className: classes.root, classes: {\n            scrollPaper: classes.scrollPaper\n        } }, { children: [_jsx(ShareDialog, { open: shareOpen, shareUrl: window.location.href, handleClose: function () { return setShareOpen(false); } }, void 0), _jsxs(DialogTitle, __assign({ disableTypography: true, className: classes.titlebar }, { children: [_jsxs(\"div\", __assign({ className: classes.titlebarLeft }, { children: [_jsx(Tooltip, __assign({ title: _jsx(Typography, __assign({ variant: \"body1\" }, { children: project.name }), void 0) }, { children: _jsx(Typography, __assign({ variant: \"h5\", component: \"div\", className: clsx(classes.name, classes.allowSelect) }, { children: project.name }), void 0) }), void 0), _jsx(\"div\", __assign({ className: classes.subHeader }, { children: _jsx(\"div\", __assign({ className: classes.flexGrow }, { children: _jsxs(Typography, __assign({ variant: \"caption\", color: \"inherit\", component: \"div\" }, { children: [\"ID: \", _jsx(\"span\", __assign({ className: classes.allowSelect }, { children: project.id }), void 0)] }), void 0) }), void 0) }), void 0)] }), void 0), onClose ? (_jsx(\"div\", { children: _jsx(IconButton, __assign({ \"aria-label\": \"close\", className: classes.closeButton, onClick: onClose, size: \"small\" }, { children: _jsx(CloseIcon, {}, void 0) }), void 0) }, void 0)) : null] }), void 0), _jsxs(DialogContent, __assign({ dividers: true }, { children: [_jsxs(\"div\", __assign({ className: clsx(classes.allowSelect) }, { children: [_jsxs(\"div\", __assign({ className: classes.header }, { children: [_jsxs(\"div\", __assign({ className: classes.headerLeft }, { children: [_jsxs(Typography, __assign({ variant: \"caption\", component: \"div\", color: \"inherit\" }, { children: [_jsx(\"strong\", { children: \"Project Type\" }, void 0), \": \", _jsx(\"strong\", { children: pTypeName }, void 0), \" (\", pType && pType.id, \")\"] }), void 0), _jsxs(Typography, __assign({ variant: \"caption\", component: \"div\", color: \"inherit\" }, { children: [_jsx(\"strong\", { children: \"Created\" }, void 0), \": \", moment(project.createdOn, 'x').fromNow(), \" (\", moment(project.createdOn, 'x').format('lll'), \")\"] }), void 0), _jsxs(Typography, __assign({ variant: \"caption\", component: \"div\", color: \"inherit\" }, { children: [_jsx(\"strong\", { children: \"Updated\" }, void 0), \": \", moment(project.updatedOn, 'x').fromNow(), \" (\", moment(project.updatedOn, 'x').format('lll'), \")\"] }), void 0), _jsxs(Typography, __assign({ variant: \"caption\", component: \"div\", color: \"inherit\" }, { children: [_jsx(\"strong\", { children: \"Warehouse tags: \" }, void 0), _jsx(WarehouseTags, { tags: project.tags }, void 0)] }), void 0), _jsxs(Typography, __assign({ variant: \"caption\", component: \"div\", color: \"inherit\" }, { children: [_jsx(\"strong\", { children: \"Size (Unzipped)\" }, void 0), \":\", ' ', project.totalSize && project.totalSize > -1\n                                                        ? filesize(project.totalSize)\n                                                        : 'Not available'] }), void 0)] }), void 0), _jsx(\"div\", __assign({ className: classes.headerRight }, { children: _jsxs(ButtonGroup, __assign({ color: \"primary\" }, { children: [webRaveUrl && (_jsx(WebRaveBtn, __assign({ title: \"Map\", url: webRaveUrl }, { project: project }, { btnProps: {\n                                                        variant: 'text'\n                                                    } }), void 0)), _jsx(Button, __assign({ variant: \"text\", onClick: function () { return setShareOpen(true); }, style: {\n                                                        cursor: 'pointer'\n                                                    }, startIcon: _jsx(ShareIcon, {}, void 0) }, { children: \"Share\" }), void 0), _jsx(DownloadZipBtn, __assign({ title: \"Download\" }, { project: project, pendingSince: pendingSince, downloadZipFile: downloadZipFile }, { btnProps: {\n                                                        variant: 'text'\n                                                    } }), void 0)] }), void 0) }), void 0)] }), void 0), descriptionTag && (_jsxs(\"div\", { children: [_jsx(Typography, __assign({ className: classes.title, color: \"inherit\", component: \"div\", variant: \"subtitle1\" }, { children: \"Description\" }), void 0), _jsx(Typography, __assign({ color: \"textSecondary\", variant: \"body2\" }, { children: project.meta[descriptionTag] }), void 0)] }, void 0)), _jsx(Typography, __assign({ className: classes.title, color: \"inherit\", variant: \"subtitle1\" }, { children: \"Metadata\" }), void 0), _jsx(Divider, {}, void 0), _jsx(\"div\", __assign({ className: classes.metaDisplay }, { children: Object.keys(project.meta)\n                                    .filter(function (k) { return ['description'].indexOf(k.toLowerCase()) === -1; })\n                                    .map(function (metaKey, idk) {\n                                    var textComponent = project.meta[metaKey];\n                                    if (project.meta[metaKey].indexOf('http') === 0) {\n                                        textComponent = (_jsx(Link, __assign({ href: project.meta[metaKey], target: \"_blank\" }, { children: project.meta[metaKey] }), void 0));\n                                    }\n                                    return (_jsx(Tooltip, __assign({ placement: \"bottom\", title: _jsxs(React.Fragment, { children: [_jsx(Typography, __assign({ variant: \"body1\", component: \"div\" }, { children: _jsx(\"strong\", { children: metaKey }, void 0) }), void 0), _jsx(Typography, __assign({ variant: \"body2\", component: \"div\" }, { children: textComponent }), void 0)] }, void 0) }, { children: _jsxs(\"div\", __assign({ className: classes.metaDisplayItem }, { children: [_jsx(Typography, __assign({ variant: \"caption\", component: \"div\", color: \"textPrimary\" }, { children: _jsx(\"strong\", { children: metaKey }, void 0) }), void 0), _jsx(Typography, __assign({ variant: \"caption\", component: \"div\", color: \"textPrimary\" }, { children: textComponent }), void 0)] }), void 0) }), \"result-\" + idk));\n                                }) }), void 0)] }), void 0), showFileTree && (_jsxs(_Fragment, { children: [_jsx(Typography, __assign({ className: classes.title, color: \"inherit\", variant: \"subtitle1\" }, { children: \"Files\" }), void 0), _jsx(Divider, {}, void 0), _jsx(TreeView, __assign({ className: classes.treeRoot, defaultExpanded: ['1'], disableSelection: true, defaultCollapseIcon: _jsx(ExpandMoreIcon, { color: \"inherit\" }, void 0), defaultExpandIcon: _jsx(ChevronRightIcon, { color: \"inherit\" }, void 0) }, { children: fileTree.map(function (ft, idx) { return (_jsx(RecurseTreeItem, { project: project, keyStr: \"treeNode-\" + idx, item: ft, fileDict: files, fileClick: downloadFile }, \"treeNode-\" + idx)); }) }), void 0)] }, void 0))] }), void 0), _jsx(Popover, __assign({ open: Boolean(popOver), anchorEl: popOver ? popOver[0] : null, onClose: function () { return setPopover(null); }, anchorOrigin: {\n                    vertical: 'bottom',\n                    horizontal: 'center'\n                }, transformOrigin: {\n                    vertical: 'top',\n                    horizontal: 'center'\n                } }, { children: _jsx(Typography, __assign({ className: classes.popOver }, { children: popOver ? popOver[1] : '' }), void 0) }), void 0)] }), void 0));\n};\nexport default ProjectModal;\n//# sourceMappingURL=ProjectModal.js.map","import { red, purple, green } from '@material-ui/core/colors';\nexport default (function (theme) { return ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2)\n    },\n    allowSelect: {\n        '&,& *': {\n            userSelect: 'text',\n            cursor: 'auto'\n        }\n    },\n    scrollPaper: {\n        alignItems: 'baseline'\n    },\n    name: {\n        maxWidth: '95%',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        marginBottom: theme.spacing(1)\n    },\n    titlebar: {\n        backgroundColor: '#444444',\n        color: theme.palette.primary.contrastText,\n        display: 'flex'\n    },\n    titlebarLeft: {\n        flexGrow: 1\n    },\n    header: {\n        display: 'flex'\n    },\n    headerLeft: {\n        flex: '1 1 80%'\n    },\n    headerRight: {\n        textAlign: 'right',\n        flex: '1 0'\n    },\n    flexGrow: {\n        flexGrow: 1\n    },\n    closeButton: {\n        flex: '0 0',\n        color: theme.palette.grey[500]\n    },\n    normalIcon: {},\n    documentIcon: {\n        color: red[500]\n    },\n    photoIcon: {\n        color: purple[500]\n    },\n    TerrainIcon: {\n        color: green[500]\n    },\n    metaDisplay: {\n        display: 'flex',\n        flexFlow: 'wrap'\n    },\n    title: {\n        marginTop: theme.spacing(2)\n    },\n    treeItemContainer: {\n        display: 'flex'\n    },\n    treeItemText: {\n        marginLeft: theme.spacing(1),\n        flexGrow: 1\n    },\n    treeItemIcon: {},\n    treeFileContent: {\n        borderBottom: \"1px solid \" + theme.palette.grey[100],\n        padding: theme.spacing(1)\n    },\n    treeFolder: {},\n    treeFolderContent: {\n        padding: theme.spacing(1)\n    },\n    metaDisplayItem: {\n        flex: '1 1',\n        borderRadius: theme.spacing(1),\n        backgroundColor: '#fafafa',\n        margin: theme.spacing(1, 0.5),\n        border: '#1px solid #e7e7e7',\n        padding: theme.spacing(1),\n        maxWidth: '25%',\n        minWidth: 150,\n        '&>*': {\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis'\n        }\n    },\n    prodChip: {\n        marginLeft: theme.spacing(1),\n        backgroundColor: theme.palette.primary.light,\n        color: 'white'\n    },\n    popOver: {\n        padding: theme.spacing(2)\n    },\n    subHeader: {\n        width: '100%',\n        display: 'flex'\n    }\n}); });\n//# sourceMappingURL=ProjectModal.style.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) { return ({\n    rootContainer: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    root: {\n        padding: theme.spacing(2, 4, 4, 4)\n    },\n    logoContainer: {\n        padding: theme.spacing(2),\n        textAlign: 'center'\n    },\n    logo: {}\n}); });\nvar LoginScreen = function (_a) {\n    var title = _a.title, signIn = _a.signIn;\n    var classes = useStyles();\n    return (_jsxs(Container, __assign({ className: classes.rootContainer, maxWidth: \"md\" }, { children: [_jsx(\"div\", { className: classes.spacer }, void 0), _jsxs(Paper, __assign({ className: classes.root }, { children: [_jsx(\"div\", __assign({ className: classes.logoContainer }, { children: _jsx(\"img\", { className: classes.logo, src: process.env.PUBLIC_URL + '/RiverscapesLogo.png', alt: \"logo\" }, void 0) }), void 0), _jsxs(Typography, __assign({ paragraph: true, variant: \"body1\" }, { children: [\"Welcome to \", _jsx(\"strong\", { children: title }, void 0), \". Please click the button below to log in.\"] }), void 0), _jsx(Typography, __assign({ paragraph: true, variant: \"body1\" }, { children: \"If you don't have an account you will be prompted to use your Google account or create a new account using another email address.\" }), void 0), _jsx(Button, __assign({ variant: \"contained\", onClick: signIn, color: \"primary\", fullWidth: true, size: \"large\", startIcon: _jsx(LockOpenIcon, {}, void 0) }, { children: \"Sign In\" }), void 0)] }), void 0), _jsx(\"div\", { className: classes.spacer }, void 0)] }), void 0));\n};\nexport default LoginScreen;\n//# sourceMappingURL=LoginScreen.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Typography from '@material-ui/core/Typography';\nvar useStyles = makeStyles(function (theme) { return ({\n    root: {\n        marginLeft: theme.spacing(1)\n    },\n    titlebar: {\n        display: 'flex',\n        background: theme.palette.error.main,\n        color: theme.palette.error.contrastText\n    },\n    closeButton: {},\n    name: {\n        paddingLeft: theme.spacing(1),\n        flexGrow: 1\n    }\n}); });\nvar ProjectModal = function (_a) {\n    var onClose = _a.onClose, program = _a.program;\n    var classes = useStyles();\n    return (_jsxs(Dialog, __assign({ onClose: onClose, open: true, maxWidth: \"xs\", fullWidth: true, className: classes.root, classes: {} }, { children: [_jsxs(DialogTitle, __assign({ disableTypography: true, className: classes.titlebar }, { children: [_jsx(ErrorIcon, { color: \"inherit\" }, void 0), _jsx(Typography, __assign({ className: classes.name }, { children: \"Access Denied\" }), void 0)] }), void 0), _jsx(DialogContent, __assign({ dividers: true }, { children: program ? (_jsxs(Typography, __assign({ variant: \"body1\", component: \"div\", color: \"inherit\" }, { children: [\"You don't have access to the program \", _jsx(\"strong\", { children: program.name }, void 0), \".\", 'If you arrived here via URL you will be able to use the URL ', 'again once you have access.'] }), void 0)) : (_jsx(Typography, __assign({ variant: \"body1\", component: \"div\", color: \"inherit\" }, { children: 'This URL is not valid. If you arrived here via URL you will be able to use the URL again once you have access.' }), void 0)) }), void 0), _jsx(DialogActions, { children: _jsx(Button, __assign({ onClick: onClose, color: \"primary\" }, { children: 'Back' }), void 0) }, void 0)] }), void 0));\n};\nexport default ProjectModal;\n//# sourceMappingURL=NotAllowedModal.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport localforage from 'localforage';\nimport log from 'loglevel';\nvar makeKey = function (name, key) { return \"_\" + name + \"_\" + key; };\nvar checkExpired = function (ts, ttl) {\n    return !ts || ts < Date.now() - ttl * 1000;\n};\nvar getKeys = function (ns) { return __awaiter(void 0, void 0, void 0, function () {\n    var keys;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4, localforage.keys()];\n            case 1:\n                keys = _a.sent();\n                return [2, keys.filter(function (k) { return k.indexOf(\"_\" + ns + \"_\") === 0; })];\n        }\n    });\n}); };\nvar LocalForageCache = (function () {\n    function LocalForageCache(ns, ttl) {\n        var _this = this;\n        this.prune = function () { return __awaiter(_this, void 0, void 0, function () {\n            var keys, idx, key, val;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        log.debug(\"[\" + this.ns + \"]LocalForageClass PRUNE\");\n                        return [4, getKeys(this.ns)];\n                    case 1:\n                        keys = _a.sent();\n                        idx = 0;\n                        _a.label = 2;\n                    case 2:\n                        if (!(idx < keys.length)) return [3, 6];\n                        key = keys[idx];\n                        return [4, localforage.getItem(key)];\n                    case 3:\n                        val = _a.sent();\n                        if (!checkExpired(val === null || val === void 0 ? void 0 : val.ts, this.ttl)) return [3, 5];\n                        log.debug(\"[\" + this.ns + \"]LocalForageClass Prune Expired. Deleting: \" + key);\n                        return [4, localforage.removeItem(key)];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5:\n                        idx++;\n                        return [3, 2];\n                    case 6: return [2];\n                }\n            });\n        }); };\n        this.get = function (key, update) {\n            if (update === void 0) { update = false; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var newKey, item;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            newKey = makeKey(this.ns, key);\n                            return [4, localforage.getItem(newKey).catch(function (e) {\n                                    log.error('LocalForageClass ERROR', e);\n                                })];\n                        case 1:\n                            item = _a.sent();\n                            if (!(item && item.v && item.ts)) return [3, 7];\n                            if (!checkExpired(item.ts, this.ttl)) return [3, 3];\n                            log.debug(\"[\" + this.ns + \"]LocalForageClass Get Expired. Deleting: \" + key);\n                            return [4, localforage.removeItem(newKey)];\n                        case 2:\n                            _a.sent();\n                            return [2, null];\n                        case 3:\n                            log.debug(\"[\" + this.ns + \"]LocalForageClass HIT: \" + key);\n                            if (!(update === true)) return [3, 5];\n                            return [4, localforage.setItem(newKey, __assign(__assign({}, item), { ts: Date.now() }))];\n                        case 4:\n                            _a.sent();\n                            _a.label = 5;\n                        case 5: return [2, item.v];\n                        case 6: return [3, 8];\n                        case 7: return [2, null];\n                        case 8: return [2];\n                    }\n                });\n            });\n        };\n        this.set = function (key, value) {\n            var newKey = makeKey(_this.ns, key);\n            var val = {\n                ts: Date.now(),\n                v: value\n            };\n            return localforage.setItem(newKey, val).then(function () {\n                log.debug(\"[\" + _this.ns + \"]LocalForageClass Set: \" + key);\n            });\n        };\n        this.del = function (key) {\n            log.debug(\"[\" + _this.ns + \"]LocalForageClass Deleting: \" + key);\n            return localforage\n                .removeItem(makeKey(_this.ns, key))\n                .catch(function () {\n            })\n                .then();\n        };\n        this.clear = function () { return __awaiter(_this, void 0, void 0, function () {\n            var keys, idx;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        log.debug(\"[\" + this.ns + \"]LocalForageClass clear\");\n                        return [4, getKeys(this.ns)];\n                    case 1:\n                        keys = _a.sent();\n                        for (idx = 0; idx < keys.length; idx++) {\n                            localforage.removeItem(keys[idx]);\n                        }\n                        return [2];\n                }\n            });\n        }); };\n        this.ns = ns;\n        this.ttl = ttl;\n    }\n    return LocalForageCache;\n}());\nexport default LocalForageCache;\n//# sourceMappingURL=LocalForageCache.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { useState, useRef, useCallback } from 'react';\nimport { downloadFile, downloadZipFile as apiDownloadZip } from '@riverscapes/common';\nimport _ from 'lodash';\nimport log from 'loglevel';\nimport { endpoints } from '../config';\nvar useDownload = function (auth, program) {\n    var _a = useState({}), pendingZips = _a[0], setPendingZips = _a[1];\n    var pendingZipsRef = useRef();\n    pendingZipsRef.current = pendingZips;\n    var downloadFileFn = useCallback(function (project, fkey) { return __awaiter(void 0, void 0, void 0, function () {\n        var jwt, res, error_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!program)\n                        return [2, Promise.resolve()];\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 4, , 5]);\n                    return [4, auth.getCurrentToken()];\n                case 2:\n                    jwt = _a.sent();\n                    return [4, downloadFile(endpoints.graphql, jwt, project.projType, program.machineName, project.id, fkey)];\n                case 3:\n                    res = _a.sent();\n                    try {\n                        if (res.data)\n                            window.open(res.data.downloadFile.downloadUrl, '_self');\n                    }\n                    catch (err) {\n                        log.error('DOWNLOAD err', err);\n                    }\n                    return [3, 5];\n                case 4:\n                    error_1 = _a.sent();\n                    log.error('DOWNLOAD err', error_1);\n                    return [3, 5];\n                case 5: return [2];\n            }\n        });\n    }); }, [program, auth]);\n    var downloadZipFile = useCallback(function (project) {\n        if (!program)\n            return Promise.resolve();\n        var checkZipFunc = function () {\n            return auth\n                .getCurrentToken()\n                .then(function (jwt) {\n                return apiDownloadZip(endpoints.graphql, jwt, project.projType, program.machineName, project.id);\n            })\n                .then(function (res) {\n                var _a;\n                try {\n                    if (res.data && !res.data.downloadZip.pendingSince) {\n                        setPendingZips(_.pickBy(pendingZipsRef.current, function (val, key) { return key !== project.id; }));\n                        window.open(res.data.downloadZip.downloadUrl, '_self');\n                    }\n                    else {\n                        setPendingZips(__assign(__assign({}, pendingZipsRef.current), (_a = {}, _a[project.id] = res.data ? res.data.downloadZip.pendingSince : Date.now(), _a)));\n                        setTimeout(checkZipFunc, 5000);\n                    }\n                }\n                catch (err) {\n                    log.error('DOWNLOAD err', err);\n                }\n            })\n                .catch(function (err) {\n                log.error('DOWNLOAD err', err);\n            });\n        };\n        return checkZipFunc();\n    }, [program, auth]);\n    return {\n        pendingZips: pendingZipsRef.current,\n        downloadFileFn: downloadFileFn,\n        downloadZipFile: downloadZipFile\n    };\n};\nexport default useDownload;\n//# sourceMappingURL=useDownloads.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getProject } from '@riverscapes/common';\nimport { endpoints } from '../config';\nimport log from 'loglevel';\nvar STATE_INIT = { loading: false, initialized: false };\nvar useProject = function (auth, program, files, tree, onProjectChange) {\n    if (files === void 0) { files = false; }\n    if (tree === void 0) { tree = false; }\n    var projectId = useParams().projectId;\n    var _a = useState(STATE_INIT), projState = _a[0], setProjState = _a[1];\n    var currProjectStateRef = useRef(STATE_INIT);\n    currProjectStateRef.current = projState;\n    var projLoadingDone = useRef(false);\n    useEffect(function () {\n        if (!projectId || projectId.length < 2) {\n            setProjState(STATE_INIT);\n            return;\n        }\n        try {\n            if (!program || !projectId)\n                return;\n            if (projectId && projState.project && projectId === projState.project.id)\n                return;\n            var progMachineName_1 = program.machineName;\n            setTimeout(function () {\n                if (!projLoadingDone.current && !projState.project)\n                    setProjState(__assign(__assign({}, currProjectStateRef.current), { loading: true }));\n            }, 500);\n            auth.getCurrentToken()\n                .then(function (jwt) { return getProject(endpoints.graphql, jwt, projectId, progMachineName_1, files, tree); })\n                .then(function (res) { return __awaiter(void 0, void 0, void 0, function () {\n                var _a;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            projLoadingDone.current = true;\n                            log.debug('getProjectById::Response', res);\n                            if (!(res.data &&\n                                res.data.project &&\n                                currProjectStateRef.current &&\n                                currProjectStateRef.current.project &&\n                                ((_a = currProjectStateRef.current) === null || _a === void 0 ? void 0 : _a.project.id) === res.data.project.id)) return [3, 1];\n                            return [2];\n                        case 1:\n                            if (!res.data) return [3, 4];\n                            setProjState({ project: res.data.project, loading: false, initialized: true });\n                            if (!onProjectChange) return [3, 3];\n                            return [4, onProjectChange(res.data.project)];\n                        case 2:\n                            _b.sent();\n                            _b.label = 3;\n                        case 3: return [3, 6];\n                        case 4:\n                            setProjState({ project: undefined, loading: false, initialized: true });\n                            if (!onProjectChange) return [3, 6];\n                            return [4, onProjectChange(null)];\n                        case 5:\n                            _b.sent();\n                            _b.label = 6;\n                        case 6: return [2];\n                    }\n                });\n            }); })\n                .catch(function (err) {\n                projLoadingDone.current = true;\n                setProjState({ project: undefined, loading: false, initialized: true });\n                log.error('api.getProjectById error', err);\n            });\n        }\n        catch (_a) {\n            return;\n        }\n    }, [projectId, program, auth]);\n    return projState;\n};\nexport default useProject;\n//# sourceMappingURL=useProject.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { useEffect, useState } from 'react';\nimport { useParams, generatePath } from 'react-router-dom';\nimport log from 'loglevel';\nimport base64url from 'base64url';\nimport { createHashHistory } from 'history';\nimport { isUndefined } from 'lodash';\nexport var hashHistory = createHashHistory();\nvar useQueryParams = function (pathPattern, history) {\n    var _a = useParams(), config = _a.config, params = __rest(_a, [\"config\"]);\n    var _b = useState([null, {}]), _c = _b[0], encoded = _c[0], decoded = _c[1], setState = _b[1];\n    var setQuery = function (input) {\n        if (Object.keys(input).length === 0) {\n            setState([null, {}]);\n            var newPath = generatePath(pathPattern, params);\n            history.replace(newPath);\n        }\n        else {\n            var newEncoded = encode(input);\n            if (newEncoded !== config) {\n                var newPath = generatePath(pathPattern, __assign(__assign({}, params), { config: newEncoded }));\n                log.debug('DEBUG::useQueryParams setQuery', { newEncoded: newEncoded, input: input });\n                setState([newEncoded, input]);\n                history.replace(newPath);\n            }\n        }\n    };\n    useEffect(function () {\n        if (!config || encoded === config) {\n            return;\n        }\n        else {\n            try {\n                var decoded_1 = decode(config);\n                log.debug('DEBUG::useQueryParams  YES!!!', { encoded: encoded, config: config, decoded: decoded_1 });\n                setState([config, decoded_1]);\n            }\n            catch (e) {\n                log.error(e);\n                setState([null, {}]);\n            }\n        }\n    }, [config, encoded]);\n    return { query: decoded, setQuery: setQuery };\n};\nexport default useQueryParams;\nfunction encode(qry) {\n    if (qry === null || isUndefined(qry))\n        return null;\n    switch (typeof qry) {\n        case 'string':\n            return qry;\n        default:\n            if (typeof qry === 'object' && Object.keys(qry || {}).length === 0) {\n                return '';\n            }\n            else {\n                return '~' + base64url(JSON.stringify(qry));\n            }\n    }\n}\nfunction decode(input) {\n    if (!input || input.length < 2 || input[0] !== '~')\n        return {};\n    var output = {};\n    try {\n        output = JSON.parse(base64url.decode(input.slice(1)));\n    }\n    catch (_a) {\n        output = {};\n    }\n    return output;\n}\n//# sourceMappingURL=useQueryParams.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { createTheme } from '@material-ui/core/styles';\nimport { indigo, orange } from '@material-ui/core/colors';\nvar home = {\n    palette: {\n        primary: {\n            main: indigo[500]\n        },\n        secondary: {\n            main: orange[600],\n            contrastText: '#FFFFFF'\n        },\n        text: {}\n    }\n};\nvar homeDark = __assign(__assign({}, home), { palette: __assign(__assign({}, home.palette), { type: 'dark' }) });\nexport default {\n    home: createTheme(home),\n    homeDark: createTheme(homeDark)\n};\n//# sourceMappingURL=themes.js.map","import ReactGA from 'react-ga';\nimport { googleAnalytics } from './config';\nimport log from 'loglevel';\nexport var init = function () {\n    if (googleAnalytics)\n        ReactGA.initialize(googleAnalytics, {\n            titleCase: false\n        });\n    else\n        log.error('Google Analytics: no UA- code found');\n};\nexport var currentPageView = function (path) {\n    ReactGA.pageview(path || window.location.pathname + window.location.hash);\n};\nexport var event = function (category, action, label) {\n    ReactGA.event({\n        category: category,\n        action: action,\n        label: label\n    });\n};\n//# sourceMappingURL=googleAnalytics.js.map","import React from 'react'\nimport { History, useHistory } from 'react-router-dom'\nimport log from 'loglevel'\n\nimport { ThemeProvider } from '@material-ui/styles'\nimport { AppFrame } from '@northarrowresearch/react-common'\nimport { ContainerProps } from '@material-ui/core/Container'\n\nimport { Topbar, themes } from '@riverscapes/react-common'\n\ninterface Props {\n    title: string\n    children: React.ReactChild | React.ReactChildren | React.ReactElement\n    history?: History\n    containerProps?: Partial<ContainerProps>\n    signOut?: () => Promise<void>\n}\n\n/**\n * Note: We keep this as a separate component in case WebRAVE needs a second screen\n * (like a settings screen or something)\n * It's basically the screen template with topbar and app frame all set up\n * @param param0\n * @returns\n */\nconst AppWrapper: React.FC<Props> = ({ title, children, history, signOut, containerProps }: Props) => {\n    return (\n        <ThemeProvider theme={themes.home}>\n            <AppFrame\n                containerProps={{ maxWidth: 'md', ...containerProps }}\n                noScroll\n                fullWidth\n                topbar={\n                    <Topbar history={history} title={title} signOutHandler={signOut} shareUrl={window.location.href} />\n                }\n                // footer={<Footer version={config.version as string} />}\n            >\n                <>{children}</>\n            </AppFrame>\n        </ThemeProvider>\n    )\n}\nexport default AppWrapper\n\n/**\n * The cosmos wrapper is here to make our cosmos experience prettier\n * @param param0\n * @returns\n */\nexport const CosmosAppWrapper: React.FC<Props> = ({ children, containerProps }: Props) => {\n    const signOut = (): Promise<void> => Promise.resolve(log.info('logging out'))\n    const history = useHistory()\n    return (\n        <ThemeProvider theme={themes.home}>\n            <AppFrame\n                containerProps={{ maxWidth: 'md', ...containerProps }}\n                noScroll\n                fullWidth\n                topbar={\n                    <Topbar\n                        history={history}\n                        title=\"Riverscapes Warehouse\"\n                        signOutHandler={signOut}\n                        shareUrl={window.location.href}\n                    />\n                }\n            >\n                {children}\n            </AppFrame>\n        </ThemeProvider>\n    )\n}\n","import React from 'react'\n// import log from 'loglevel'\n// import { useHosted } from '@northarrowresearch/react-auth'\nimport { Typography, CircularProgress } from '@material-ui/core'\nimport { Loading } from '@northarrowresearch/react-common'\n\ninterface Props {\n    title?: string\n}\n\nconst ProjectLoading: React.FC<Props> = ({ title }: Props) => {\n    return (\n        <Loading\n            logoSVG={<CircularProgress size=\"7rem\" thickness={7} />}\n            status={\n                <Typography variant=\"h5\" component=\"div\">\n                    {title || 'Loading...'}\n                </Typography>\n            }\n            containerProps={{\n                maxWidth: 'xl',\n                style: {\n                    position: 'absolute',\n                    zIndex: 1000,\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    background: '#FFFFFF77'\n                }\n            }}\n        />\n    )\n}\n\nexport default ProjectLoading\n","import { appDefaults } from '../config'\nimport { WebMercatorViewport, ViewportProps } from 'react-map-gl'\nimport { Project, ProjectTreeLeaf, ProjectTreeLayerTypes } from '@riverscapes/common'\nimport { decomposeColor, recomposeColor } from '@material-ui/core/styles/colorManipulator'\nimport { isUndefined } from 'lodash'\n\nexport type FallbackColor = { fg: string; bg: string }\n\n// It's annoying that MaterialUI doesn't expose Alpha function\n// Hopefully this stays put over the next few versions\nexport function addColorAlpha(inColor: string, alpha: number): string {\n    const bgTmp = decomposeColor(inColor)\n    if (bgTmp.type === 'rgb' || bgTmp.type === 'hsl') {\n        bgTmp.type += 'a'\n    }\n    bgTmp.values[3] = alpha\n    const bg = recomposeColor(bgTmp)\n    return bg\n}\n/**\n * Get a latitude, longitude and zoom for a bounds and frame size\n * @param cornersArr\n * @param width\n * @param height\n * @returns\n */\nexport const zoomExtents = (\n    cornersArr: [number, number, number, number],\n    width: number,\n    height: number\n): ViewportProps => {\n    // Use WebMercatorViewport to get center longitude/latitude and zoom\n    const viewport = new WebMercatorViewport({ width, height }).fitBounds(\n        [\n            [cornersArr[0], cornersArr[1]],\n            [cornersArr[2], cornersArr[3]]\n        ],\n        { padding: 200 }\n    ) // Can also use option: offset: [0, -100]\n    const { longitude, latitude, zoom } = viewport\n    return { longitude, latitude, zoom }\n}\n\n/**\n * Just a function to grow a bounding rectangle around a set of tiled bounds\n * @param oldBounds [minx, miny, maxx, maxy]\n * @param newRect\n * @returns\n */\nexport function newBounds(\n    worldBounds: [number, number, number, number],\n    oldBounds: [number, number, number, number] | null,\n    newRect: [number, number, number, number] | null\n): [number, number, number, number] | null {\n    if (!newRect && !oldBounds) return null\n    else if (newRect && !oldBounds)\n        return [\n            // Note the extra wrapper function. We do this to keep really wonky values out\n            Math.max(worldBounds[0], newRect[0]),\n            Math.max(worldBounds[1], newRect[1]),\n            Math.min(worldBounds[2], newRect[2]),\n            Math.min(worldBounds[3], newRect[3])\n        ]\n    else if (oldBounds && !newRect)\n        return [\n            // Note the extra wrapper function. We do this to keep really wonky values out\n            Math.max(worldBounds[0], oldBounds[0]),\n            Math.max(worldBounds[1], oldBounds[1]),\n            Math.min(worldBounds[2], oldBounds[2]),\n            Math.min(worldBounds[3], oldBounds[3])\n        ]\n    else if (oldBounds && newRect) {\n        return [\n            // Note the extra wrapper function. We do this to keep really wonky values out\n            Math.max(worldBounds[0], Math.min(newRect[0], oldBounds[0])),\n            Math.max(worldBounds[1], Math.min(newRect[1], oldBounds[1])),\n            Math.min(worldBounds[2], Math.max(newRect[2], oldBounds[2])),\n            Math.min(worldBounds[3], Math.max(newRect[3], oldBounds[3]))\n        ]\n    }\n    return null\n}\n\nexport function calculateOpacity(transparency = 0): number {\n    const sanitized = Math.max(0, Math.min(100, transparency))\n    return 1 - sanitized / 100\n}\n\n/**\n *\n * @param coords The [lon,lat] we're testing\n * @param bounds The bounds of the system (or null if we don't have them)\n * @param center Jump to the center of the bounds if true\n * @returns\n */\nexport function geoFence(\n    coords: [number | undefined, number | undefined] | null,\n    bounds: [number, number, number, number] | null,\n    center = false\n): [number, number] | null {\n    // If we have bounds but not coords then we can still send back a correction if the\n    // center is requested\n    if (!coords && bounds && center === true) {\n        return [(bounds[0] + bounds[2]) / 2, (bounds[1] + bounds[3]) / 2]\n    }\n    // If there's nothing to compare there's nothing to correct\n    if (!bounds || !coords || isUndefined(coords[0]) || isUndefined(coords[1])) return null\n    const newCoords = [\n        bounds[0] > coords[0] ? bounds[0] : bounds[2] < coords[0] ? bounds[2] : coords[0],\n        bounds[1] > coords[1] ? bounds[1] : bounds[3] < coords[1] ? bounds[3] : coords[1]\n    ] as [number, number]\n    if (newCoords[0] === coords[0] && newCoords[1] === coords[1]) return null\n    else if (center) return [(bounds[0] + bounds[2]) / 2, (bounds[1] + bounds[3]) / 2]\n    else return newCoords\n}\n\nexport function newZoomBounds(\n    oldZBounds: [number, number],\n    newZbounds?: [number | undefined, number | undefined]\n): [number, number] {\n    const fallback = appDefaults.zoomRange as [number, number]\n    if (!oldZBounds && !newZbounds) return fallback\n    else if (!newZbounds) return oldZBounds\n\n    // The min zoom is always set at the APP level\n    const min = oldZBounds ? oldZBounds[0] : appDefaults.zoomRange[0]\n    const max = Math.min(appDefaults.zoomRange[1], Math.max(oldZBounds[1], newZbounds[1] || oldZBounds[1]))\n\n    return [min, max]\n}\n\nexport type TreeNodeID = { branches: number[]; leaves: number[] }\n\n/**\n * MAterial UI uses strings as treenodes. This is a bit awkward for us trying to differentiate branches and leaves\n * @param ids\n */\nexport function treeNodeIDsParse(rawIds: string[]): TreeNodeID {\n    return {\n        branches: rawIds.filter((ids) => ids.indexOf('b-') > -1).map((ids) => parseInt(ids.replace('b-', ''), 10)),\n        leaves: rawIds.filter((ids) => ids.indexOf('l-') > -1).map((ids) => parseInt(ids.replace('l-', ''), 10))\n    }\n}\n\n/**\n * This is the return trip function for taking our TreeNodeID and squooshing it back to an array of strings\n * @param betterIds\n * @returns\n */\nexport function treeNodeIDCreate(betterIds: TreeNodeID): string[] {\n    return [...betterIds.branches.map((bid) => `b-${bid}`), ...betterIds.leaves.map((lid) => `l-${lid}`)]\n}\n\n/**\n * Create an ancestry array with search text we can use to filter the tree\n * it is ordered deepest (current) --> shallowest (root)\n * @param project\n * @param bid\n * @returns\n */\nexport function projectLeafSearchAncestry(project: Project, leaf: ProjectTreeLeaf): [number, string][] {\n    let parent = leaf.pid\n    // Let's just track what we've already found so we don't get circles\n    const ancestry: number[] = []\n    const searchStrings: string[] = []\n\n    // The touchedIds is basically just to insulate against\n    // Everything in  a tree can only have one parent so work down\n    while (parent > -1 && ancestry.length < project.tree.branches.length) {\n        const foundBranch = project.tree.branches.find((br) => br.bid === parent)\n        // If we've found a valid parent then add its label to the search terms\n        if (foundBranch && ancestry.indexOf(foundBranch.bid) < 0) {\n            ancestry.push(foundBranch.bid)\n            searchStrings.push(foundBranch.label.toLowerCase().trim())\n            parent = foundBranch.pid\n        }\n        // Insulate ourselves from endless searching\n        else {\n            parent = -1\n        }\n    }\n    // We put it back int\n    return ancestry.map((bid, idx) => [bid, searchStrings[idx]])\n}\n\nconst SORT_ORDER = [\n    ProjectTreeLayerTypes.POINT,\n    ProjectTreeLayerTypes.LINE,\n    ProjectTreeLayerTypes.POLYGON,\n    ProjectTreeLayerTypes.TIN,\n    ProjectTreeLayerTypes.RASTER\n]\n\nexport function layerSort(leaves: ProjectTreeLeaf[]): ProjectTreeLeaf[] {\n    const newArr = [...leaves]\n    newArr.sort((lyrA, lyrB) => {\n        // First we sort by the layer type\n        if (lyrA.layerType !== lyrB.layerType)\n            return SORT_ORDER.indexOf(lyrA.layerType) - SORT_ORDER.indexOf(lyrB.layerType)\n        // Then we sort by the treePath id order. The way the BusinessLogic file is parsed should be the\n        // same as tree order (TODO: Verify this?!?)\n        else {\n            return lyrA.id - lyrB.id\n        }\n    })\n    return newArr\n}\n","import { TileService, GISTileLayer, ProjectTreeLeaf } from '@riverscapes/common'\nimport { Color } from '@material-ui/core'\nimport { LayerProps } from 'react-map-gl'\nimport { calculateOpacity } from '../../lib/util'\n\nfunction commonFeatures(layerId?: string, tiles?: TileService): Partial<LayerProps> {\n    const lyrProps: Partial<LayerProps> = {\n        minzoom: tiles?.minZoom || 0,\n        maxzoom: 24,\n        layout: {}\n    }\n    if (tiles?.rsLayer?.subLayers) {\n        const sublyr = tiles.rsLayer.subLayers.find((sl) => sl.id === layerId) as GISTileLayer\n        lyrProps['source-layer'] = sublyr.path\n    } else {\n        lyrProps['source-layer'] = tiles?.rsLayer?.id\n    }\n    return lyrProps\n}\n\nfunction getPolygonOutlineLayer(leaf: ProjectTreeLeaf, rndColor: Color, tiles?: TileService): Partial<LayerProps> {\n    const lyrProps: Partial<LayerProps> = {\n        ...commonFeatures(leaf.layerId, tiles),\n        type: 'line',\n        paint: {\n            'line-color': rndColor[500],\n            'line-opacity': calculateOpacity(leaf.transparency)\n        }\n    }\n    return lyrProps\n}\n\nfunction getPolygonLayer(leaf: ProjectTreeLeaf, rndColor: Color, tiles?: TileService): Partial<LayerProps> {\n    const lyrProps: Partial<LayerProps> = {\n        ...commonFeatures(leaf.layerId, tiles),\n        type: 'fill',\n        paint: {\n            'fill-opacity': calculateOpacity(leaf.transparency),\n            'fill-color': rndColor[700]\n        }\n    }\n    return lyrProps\n}\n\nfunction getPointLayer(leaf: ProjectTreeLeaf, rndColor: Color, tiles?: TileService): Partial<LayerProps> {\n    const lyrProps: Partial<LayerProps> = {\n        ...commonFeatures(leaf.layerId, tiles),\n        type: 'circle',\n        paint: {\n            'circle-stroke-opacity': 1,\n            'circle-stroke-width': 2,\n            'circle-stroke-color': rndColor[500],\n            'circle-opacity': calculateOpacity(leaf.transparency),\n            'circle-radius': 4,\n            'circle-color': rndColor[700]\n        }\n    }\n    return lyrProps\n}\n\nfunction getLineLayer(leaf: ProjectTreeLeaf, rndColor: Color, tiles?: TileService): Partial<LayerProps> {\n    const lyrProps: Partial<LayerProps> = {\n        ...commonFeatures(leaf.layerId, tiles),\n        type: 'line',\n        paint: {\n            'line-color': rndColor[500],\n            'line-opacity': calculateOpacity(leaf.transparency)\n        }\n    }\n    return lyrProps\n}\n\nexport default {\n    line: getLineLayer,\n    point: getPointLayer,\n    polygon: getPolygonLayer,\n    outline: getPolygonOutlineLayer\n}\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-unused-vars */\nimport MapboxGL from 'mapbox-gl'\nimport { BaseLayer } from '../types'\nimport { SourceProps, LayerProps } from 'react-map-gl'\nimport log from 'loglevel'\nimport defaultSymbology from '../components/map/defaultSymbology'\nimport { ProjectTreeLayerTypes, TileService } from '@riverscapes/common'\n\nimport { legendColors, initMapStyle } from '../config'\nimport { calculateOpacity } from '../lib/util'\nimport { RenderableMapLayer, MapLayerState } from '../recoil'\nimport { isUndefined } from 'lodash'\n// Sources accumulate but layers get swapped in and out\n\nexport type FixedMapBoxExport = {\n    sources: MapboxGL.Sources\n    layers: MapboxGL.AnyLayer[]\n    glyphs?: string\n    sprite?: string\n}\n\nexport type MapLayerMeta = {\n    mType: string\n    mIdx: number\n    mRef: string\n}\n\nexport enum MapLayerTypes {\n    bgLayer = 'BGL',\n    userContent = 'USRLYR',\n    // These don't sort\n    bgSource = 'BGSRC',\n    layerSource = 'SRC'\n}\n\n// Helper functions to make sure we name layers and sources consistently\nconst sourceIdGen = (lpath?: string, sName?: string): string => {\n    return `${MapLayerTypes.layerSource}_${lpath || 'NOPATH'}_${sName || 'SRC'}`\n}\n\nconst layerIdGen = (lpath?: string, sName?: string, subIdx = 0): string =>\n    `${MapLayerTypes.userContent}_${lpath || 'UNKNOWN'}_${sName || 'NOSYMB'}_${subIdx}`\n\nconst checkLoaded = (map: any): boolean => Boolean(map && map.isStyleLoaded())\nconst getMapLayerIds = (map: any, filter?: MapLayerTypes): string[] => {\n    const mStyle = map.getStyle().layers\n    return mStyle.filter(({ metadata }) => isUndefined(filter) || metadata.mType === filter).map(({ id }) => id)\n}\n\nconst metaMaker = (mType: MapLayerTypes, mIdx = 0, mRef = ''): MapLayerMeta => ({\n    mType,\n    mIdx,\n    mRef\n})\n\n/**\n * This function changes Riverscapes layer order if we need to move any slots around\n * @param newLayers\n */\nexport function userLayerRecalc(map: any, renderablelayers: RenderableMapLayer[]): boolean {\n    if (!checkLoaded(map)) return false\n    let mapInst = map\n    const start = Date.now()\n\n    // Keep track of everything that's supposed to be on the map so we can delete everything else\n    const validLayerIds: string[] = []\n    let beforeId: string | null = null\n    // First make sure we have a divider layer\n    renderablelayers\n        .slice() // renderablelayers is immutable so make a sliced copy before reversing\n        .reverse()\n        .forEach((lyr) => {\n            // We tightly control the Ids. Rasters have one source per symbology.\n            // Vectors share a source but have different layers\n            const sourceId =\n                lyr.leaf.layerType === ProjectTreeLayerTypes.RASTER\n                    ? sourceIdGen(lyr.leaf.layerPath, lyr.leaf.symbology)\n                    : sourceIdGen(lyr.leaf.layerPath, lyr.leaf.layerName || lyr.leaf.layerId)\n\n            // Add the source (if necessary)\n            if (!mapInst.getSource(sourceId)) {\n                if (lyr.leaf.layerType === ProjectTreeLayerTypes.RASTER) {\n                    mapInst = mapInst.addSource(sourceId, getRasterSource(lyr.tiles as TileService, lyr.leaf.symbology))\n                } else {\n                    mapInst = mapInst.addSource(\n                        sourceId,\n                        getVectorSource(lyr.tiles as TileService, lyr.leaf.layerName || lyr.leaf.layerId)\n                    )\n                }\n            }\n\n            // If this is a RASTER layer then it's a lot easier\n            if (lyr.leaf.layerType === ProjectTreeLayerTypes.RASTER) {\n                const layerId = layerIdGen(lyr.leaf.layerPath, lyr.leaf.symbology)\n                validLayerIds.push(layerId)\n                if (!mapInst.getLayer(layerId)) {\n                    log.debug(`DEBUG::MM: Adding raster layer \"${layerId}\" before \"${beforeId}\"`)\n                    mapInst = mapInst.addLayer(\n                        {\n                            ...getRasterLayerProps(lyr, layerId, sourceId),\n                            metadata: metaMaker(\n                                MapLayerTypes.userContent,\n                                undefined,\n                                `${lyr.leaf.layerPath}/${lyr.leaf.symbology}`\n                            )\n                        },\n                        beforeId\n                    )\n                    beforeId = layerId\n                }\n            } else {\n                // Layer has already been added. We can set the layer order but otherwise do nothing\n                // fetch the symbology from the state object\n                let symbJSONArr = (lyr.symbology?.mapboxJson || []) as Partial<LayerProps>[]\n                // If we need a default fallback symbology then go create one\n                if ((!symbJSONArr || symbJSONArr.length === 0) && lyr.randomColor !== null) {\n                    const rndCol = legendColors[lyr.randomColor]\n                    switch (lyr.leaf.layerType) {\n                        case ProjectTreeLayerTypes.LINE:\n                            symbJSONArr = [defaultSymbology.line(lyr.leaf, rndCol, lyr.tiles)]\n                            break\n                        case ProjectTreeLayerTypes.POLYGON:\n                            symbJSONArr = [\n                                defaultSymbology.polygon(lyr.leaf, rndCol, lyr?.tiles),\n                                defaultSymbology.outline(lyr.leaf, rndCol, lyr?.tiles)\n                            ]\n                            break\n                        case ProjectTreeLayerTypes.POINT:\n                            symbJSONArr = [defaultSymbology.line(lyr.leaf, rndCol, lyr.tiles)]\n                            break\n                        default:\n                            break\n                    }\n                }\n                // Vector user layers can have multiple mapbox layers.\n                symbJSONArr\n                    // .slice() // renderablelayers is immutable so make a sliced copy before reversing\n                    // .reverse()\n                    .forEach((symb, subIdx) => {\n                        const subLyrId = layerIdGen(\n                            `${lyr.leaf.layerPath}/${lyr.leaf.layerName || lyr.leaf.layerId}`,\n                            lyr.leaf.symbology,\n                            subIdx\n                        )\n                        validLayerIds.push(subLyrId)\n                        // If this is the last item (idx== 0 because of reverse) then tuck it behind the slot placeholder\n                        // Otherwise put it behind its predecessor\n                        if (!mapInst.getLayer(subLyrId)) {\n                            log.debug(`DEBUG::MM: Adding vector sublayer \"${subLyrId}\" before \"${beforeId}\"`)\n                            mapInst = mapInst.addLayer(\n                                {\n                                    ...getVectorLayerProps(lyr, symb, subLyrId, sourceId),\n                                    metadata: metaMaker(\n                                        MapLayerTypes.userContent,\n                                        subIdx,\n                                        `${lyr.leaf.layerPath}/${lyr.leaf.symbology}`\n                                    )\n                                },\n                                beforeId\n                            )\n                            beforeId = subLyrId\n                        } else {\n                            log.debug(`DEBUG::MM: Already found \"${subLyrId}\" in the map`)\n                        }\n                    })\n            }\n        })\n    // Now we need to clean up anything that shouldn't be on the map\n    getMapLayerIds(mapInst, MapLayerTypes.userContent).forEach((lyrId) => {\n        if (validLayerIds.indexOf(lyrId) < 0) {\n            log.debug(`DEBUG::MM: Removing unused layer: ${lyrId}`, { validLayerIds })\n            mapInst = mapInst.removeLayer(lyrId)\n        }\n    })\n    // Finally if anything has changed call the sort function to put everything in the right order\n    log.debug(`DEBUG::MM: userLayerRecalc took ${Date.now() - start} ms`)\n    return true\n}\n\n/**\n * Here we build up the array we want to have for layer order and then correct it, making the smallest number of moves\n * possible\n * @param map\n * @param renderablelayers\n * @returns\n */\nexport function verifyLayerOrder(map: any, renderablelayers: RenderableMapLayer[]): boolean {\n    if (!checkLoaded(map)) return false\n    let mapInst = map\n\n    const lMeta = getMapLayerIds(mapInst).reduce<Record<string, MapLayerMeta>>(\n        (acc, lyrId) => ({ ...acc, [lyrId]: mapInst.getLayer(lyrId).metadata as MapLayerMeta }),\n        {}\n    )\n\n    const usrLyrOrder = renderablelayers.map(({ leaf }) => `${leaf.layerPath}/${leaf.symbology}`).reverse()\n\n    // The background stack\n    const bgIds = getMapLayerIds(mapInst, MapLayerTypes.bgLayer)\n    bgIds.sort((a: string, b: string) => lMeta[a].mIdx - lMeta[b].mIdx)\n\n    const slotIds = getMapLayerIds(mapInst, MapLayerTypes.userContent)\n    slotIds.sort((a: string, b: string) => {\n        // If we're not in the same slot then the sort is easy\n        const delta = usrLyrOrder.indexOf(lMeta[a].mRef) - usrLyrOrder.indexOf(lMeta[b].mRef)\n        if (delta !== 0) return delta\n        // If we're in the same slot then sort by index\n        else {\n            return lMeta[a].mIdx - lMeta[b].mIdx\n        }\n    })\n\n    // This will be the truth\n    const correctStack: string[] = [...bgIds, ...slotIds]\n    correctStack.reverse()\n\n    // Now we have the layer order and the intended layer order\n    log.debug('DEBUG::MM: verifyLayerOrder', { have: getMapLayerIds(mapInst).reverse(), need: correctStack })\n\n    let allLayers = getMapLayerIds(mapInst)\n    allLayers.reverse()\n    correctStack.forEach((needId, needIdx) => {\n        if (needIdx !== allLayers.indexOf(needId)) {\n            const beforeId = needIdx === 0 ? null : correctStack[needIdx - 1]\n            log.debug(`DEBUG::MM: Move Needed ${needId} to before ${beforeId}`)\n            mapInst = mapInst.moveLayer(needId, beforeId)\n            allLayers = getMapLayerIds(mapInst)\n            allLayers.reverse()\n        }\n    })\n    return true\n}\n\n/**\n * When the user changes or initializes a base layer we need to swap out all the base layers that\n * may be affected\n * @param newBase\n * @returns\n */\nexport function changeBaseLayer(map: any, newBase: BaseLayer): boolean {\n    if (!checkLoaded(map)) return false\n    log.debug('DEBUG::MM: changeBaseLayer', newBase.id)\n    const start = Date.now()\n    let mapInst = map\n\n    const validBgLayers: string[] = []\n\n    // 1. Add any new sources we might need\n    Object.keys(newBase.sources).forEach((newSourceKey) => {\n        if (!mapInst.getSource(newSourceKey)) mapInst = mapInst.addSource(newSourceKey, newBase.sources[newSourceKey])\n    })\n\n    // 2. Add any background layers Back in reverse order\n    let beforeId: string | null = null\n    let addCounter = 0\n    newBase.layers.forEach((lyr) => {\n        // Layer names should be unique so if they are just move them\n        if (!mapInst.getLayer(lyr.id)) {\n            mapInst = mapInst.addLayer(lyr, beforeId)\n            addCounter++\n        }\n        validBgLayers.push(lyr.id)\n        beforeId = lyr.id\n    })\n    log.debug(`DEBUG::MM: changeBaseLayer Added ${addCounter} background layers`)\n\n    // 3. Find any old background layers and remove them\n    let removeCounter = 0\n    getMapLayerIds(mapInst)\n        .filter((lyrId) => lyrId.indexOf(MapLayerTypes.bgLayer) === 0)\n        .filter((lyrId) => validBgLayers.indexOf(lyrId) < 0)\n        .forEach((lyrId) => {\n            removeCounter++\n            mapInst = mapInst.removeLayer(lyrId)\n        })\n    if (removeCounter > 0) log.debug(`DEBUG::MM: changeBaseLayer Removed ${removeCounter} unneeded background layers`)\n\n    // Now we need to Put All the placeholders back where they should be if anything has changed\n    log.debug(`DEBUG::MM: userLayerRecalc took ${Date.now() - start} ms`)\n    return true\n}\n\nexport function createInitialStyle(baseLayer: BaseLayer): MapboxGL.Style {\n    return {\n        ...initMapStyle,\n        sources: baseLayer.sources,\n        layers: baseLayer.layers\n    }\n}\n\n/**\n * This is just stripping out all the useful information from a direct export from Mapbox\n * We prefix the IDs too so that we can find them easier for map shuffling\n * @param sourcePrefix\n * @param rawStyle\n * @returns\n */\nexport function fixMapboxExport(sourcePrefix: string, rawStyle: MapboxGL.Style): FixedMapBoxExport {\n    if (!rawStyle.sources) return { sources: {}, layers: [] }\n    const rawSources = rawStyle.sources || {}\n    const rawLayers = rawStyle.layers || []\n    const glyphs = rawStyle.glyphs\n    const sprite = rawStyle.sprite\n    const sourceLookup: Record<string, string> = {}\n    const sources = Object.keys(rawStyle.sources).reduce((acc, sKey) => {\n        const newId = `${MapLayerTypes.bgSource}_${sourcePrefix}_${sKey}`\n        const source = rawSources[sKey]\n        // Add to the lookup so we can find this in the layers later\n        sourceLookup[sKey] = newId\n        return {\n            ...acc,\n            [newId]: source\n        }\n    }, {})\n    const layers = rawLayers.map<MapboxGL.AnyLayer>((lyr, idx) => {\n        const lyrMeta = (lyr.type !== 'custom' && lyr.metadata) || {}\n        const newLyr = {\n            ...lyr,\n            metadata: { ...lyrMeta, ...metaMaker(MapLayerTypes.bgLayer, idx) },\n            id: `${MapLayerTypes.bgLayer}_${idx}_${lyr.id}`\n        }\n        // IF the source is specified (and it is not a complex type) then go get it from the lookup\n        if (\n            newLyr.type !== 'background' &&\n            newLyr.type !== 'circle' &&\n            newLyr.type !== 'custom' &&\n            newLyr.source &&\n            typeof newLyr.type === 'string'\n        )\n            newLyr.source = sourceLookup[newLyr.source.toString()]\n        return newLyr\n    })\n    return { sources, layers, glyphs, sprite }\n}\n\nfunction getVectorSource(tiles: TileService, layerId?: string): SourceProps {\n    const layerIdPath = `${layerId}/`\n    return {\n        type: 'vector',\n        maxzoom: tiles.maxZoom || 20,\n        minzoom: tiles.minZoom || 4,\n        tiles: [`${tiles.url}${layerIdPath}{z}/{x}/{y}.${tiles.format || 'pbf'}`]\n    }\n}\nfunction getRasterSource(tiles: TileService, symbologyName?: string): SourceProps {\n    return {\n        type: 'raster',\n        scheme: 'tms',\n        maxzoom: tiles.maxZoom || 20,\n        minzoom: tiles.minZoom || 4,\n        tiles: [`${tiles.url}${symbologyName || 'raster'}/{z}/{x}/{y}.${tiles.format || 'png'}`]\n    }\n}\n\nfunction getRasterLayerProps(layer: MapLayerState, id: string, sourceId: string): LayerProps {\n    const lyrProps: LayerProps = {\n        type: 'raster',\n        id,\n        source: sourceId,\n        minzoom: layer.tiles?.minZoom || 0,\n        maxzoom: 24,\n        layout: {},\n        paint: {}\n    }\n    if (layer.leaf.transparency && layer.leaf.transparency > 0) {\n        lyrProps.paint['raster-opacity'] = calculateOpacity(layer.leaf.transparency)\n    }\n    return lyrProps\n}\n\nfunction getVectorLayerProps(\n    layer: MapLayerState,\n    symb: Record<string, unknown>,\n    id: string,\n    sourceId: string\n): LayerProps {\n    const lyrProps: LayerProps = {\n        // this will get overridden by\n        type: 'fill',\n        minzoom: layer.tiles?.minZoom || 0,\n        maxzoom: 24, // hardcoded to the max value possible\n        layout: {},\n        paint: {\n            // 'fill-opacity': 0,\n            // 'line-opacity': 0,\n            // 'circle-opacity': 0\n        },\n        ...symb,\n        id,\n        source: sourceId,\n        'source-layer': layer.leaf.layerName || layer.leaf.layerId\n    }\n    if (layer.leaf.transparency && layer.leaf.transparency > 0) {\n        const opacity = calculateOpacity(layer.leaf.transparency)\n        switch (lyrProps.type) {\n            case 'fill':\n                lyrProps.paint = { ...lyrProps.paint, ['fill-opacity']: opacity }\n                break\n            case 'line':\n                lyrProps.paint = { ...lyrProps.paint, ['line-opacity']: opacity }\n                break\n            case 'circle':\n                lyrProps.paint = { ...lyrProps.paint, ['circle-opacity']: opacity }\n                break\n            default:\n                break\n        }\n    }\n    return lyrProps\n}\n","import Satellite from './SatStreets.json'\n// import Satellite from './Satellite.json'\nimport BasicMap from './BasicMap.json'\n// import TopoMap from './TopoMap.json'\n// import GrayscaleHS from './GrayscaleHS.json'\nimport RiverscapesTopo from './RiverscapesTopo.json'\nimport { BaseLayer } from '../types'\nimport { fixMapboxExport } from '../lib/MapManager'\nimport MapboxGL from 'mapbox-gl'\n\nimport {\n    // Satellite as SatIcon,\n    SatelliteOutlined,\n    // Terrain,\n    // DirectionsCar,\n    DirectionsCarOutlined,\n    TerrainOutlined\n} from '@material-ui/icons'\n\nconst mapStyles: BaseLayer[] = [\n    {\n        id: 'SATELLITE',\n        title: 'Satellite Imagery',\n        toolTip: 'Satellite Imagery',\n        Icon: SatelliteOutlined,\n        color: 'green',\n        ...fixMapboxExport('SAT', Satellite as MapboxGL.Style)\n    },\n    {\n        id: 'HILLSHADE',\n        title: 'Topo',\n        toolTip: 'OSM Topo Map',\n        Icon: TerrainOutlined,\n        color: 'blue',\n        ...fixMapboxExport('HS', RiverscapesTopo as MapboxGL.Style)\n    },\n    {\n        id: 'STREET',\n        title: 'Street Map',\n        toolTip: 'Street Map',\n        Icon: DirectionsCarOutlined,\n        color: 'blue',\n        ...fixMapboxExport('ST', BasicMap as MapboxGL.Style)\n    }\n    // {\n    //     id: 'HILLSHADE',\n    //     title: 'Hillshade',\n    //     toolTip: 'Hillshade',\n    //     Icon: TerrainOutlined,\n    //     color: 'blue',\n    //     ...fixMapboxExport('HS', GrayscaleHS as MapboxGL.Style)\n    // }\n]\n\nexport default mapStyles\n","import { red, green, blue, orange, purple, cyan, lime, brown } from '@material-ui/core/colors'\nimport { Color } from '@material-ui/core'\nimport log from 'loglevel'\nimport MapboxGL from 'mapbox-gl'\nimport baseLayers from './mapStyles'\n\nlet domain = process.env.REACT_APP_DOMAIN\nif (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n    domain = 'localhost'\n    // basename = ''\n}\nlog.debug('config: ', { domain })\nexport const isDev = process.env.NODE_ENV && process.env.NODE_ENV === 'development'\nexport const version = process.env.REACT_APP_VERSION\n\nexport const endpoints = {\n    graphql: `${process.env.REACT_APP_GRAPHQL}` as string\n}\n\nexport const warehouseIconUrl = process.env.PUBLIC_URL + '/RiverscapesLogo.png'\nexport const warehouseUrl = process.env.REACT_APP_WAREHOUSE_URL\nexport const imagesUrl = process.env.PUBLIC_URL + '/images'\n\n/**\n * Here are the App defaults we might want to change\n */\nexport const appDefaults = {\n    appName: 'Riverscapes Project Viewer (webRAVE)',\n    zoomRange: [4, 18], // Think of this like the min and max possible zooms\n    apiTimeout: 20000, // ms timeout for API Queries\n    defaultViewport: {\n        zoom: 8\n    },\n    worldBounds: [-131.044921875, 22.998851594142913, -58.095703125, 51.28940590271679] as [\n        number,\n        number,\n        number,\n        number\n    ], // the maximum possible bounds\n    baseLayer: baseLayers[0],\n    drawerOpen: true,\n    init: false,\n    minFilterTextLength: 3,\n    maxMapLayers: 5,\n    retryDelayS: 2,\n    refreshDelayS: 20\n}\n\nexport const initMapStyle: MapboxGL.Style = {\n    version: 8,\n    name: 'WebRaveStyle',\n    sprite: 'mapbox://sprites/northarrowresearch/ckmuw9x2e5f0417pe3vy7y0cz/55jsegcrpjhdm8ibxtin56tly',\n    glyphs: 'mapbox://fonts/northarrowresearch/{fontstack}/{range}.pbf'\n}\n\nexport const appRouterPath = '/:programId/:projectId/:config?'\n\nexport const mandatoryMetaColors: Color[] = [red, green, blue, orange, purple, cyan, lime, brown]\n// These are used if the symbology fails to load\nexport const legendColors: Color[] = [red, green, blue, orange, purple, cyan, lime, brown]\n\nexport const redirectUrl = new URL(\n    process.env.PUBLIC_URL.endsWith('/') ? process.env.PUBLIC_URL : process.env.PUBLIC_URL + '/',\n    window.location.origin\n)\n\nlog.debug('RedirectUrl', { redirectUrl, publicUrl: process.env.PUBLIC_URL })\n","import { atom, selector } from 'recoil'\nimport { appDefaults } from '../config'\nimport { Project, ProjectTreeLeaf, ProjectTreeLayerTileTypes } from '@riverscapes/common'\nimport { UseHostedReturn } from '@northarrowresearch/react-auth'\nimport { layerSort } from '../lib/util'\n// import log from 'loglevel'\n\n/**\n * This is the SOURCE OF TRUTH for the project tree. In some ways it's the MOST IMPORTANT ATOM\n */\nexport const projectAtom = atom<Project | null>({\n    key: 'project',\n    default: null\n})\n\nexport const authAtom = atom<UseHostedReturn | null>({\n    key: 'auth',\n    default: null\n})\n\n/**\n * Whether the tree pane is open or closed.\n * TODO: this might be way better using useState. Not sure any other components need this\n */\nexport const drawerOpenAtom = atom<boolean>({\n    key: 'drawerOpen',\n    default: appDefaults.drawerOpen\n})\n\n/**\n * When setting active layers or when order isn't important use this one\n */\nexport const activeIdsAtom = atom<number[]>({\n    key: 'map/activeLayerIds',\n    default: []\n})\n\n/**\n * Which layer ids are currently on the map and highlighted in the tree\n */\n\nexport const activeTreeLeavesSelector = selector<ProjectTreeLeaf[]>({\n    key: 'activeTreeLeaves',\n    get: ({ get }) => {\n        const proj = get(projectAtom)\n        const activeIds = get(activeIdsAtom)\n        if (!proj || !proj.tree) return []\n        return proj?.tree.leaves.filter((leaf) => activeIds.indexOf(leaf.id) > -1) || []\n    }\n})\n\n/**\n * Get the active map layer ids in the correct order. Use this in the map or legend, anywhere order\n * is important\n */\nexport const activeLeavesSortedSelector = selector<ProjectTreeLeaf[]>({\n    key: 'map/activeLeavesSorted',\n    get: ({ get }) => {\n        const activeTreeLeaves = get(activeTreeLeavesSelector)\n        const sorted = layerSort(activeTreeLeaves)\n        return sorted\n    }\n})\n\n/**\n * Utility selector for getting just the leaves we can add to a map\n */\nexport const projectMapLayerLeafsSelector = selector<ProjectTreeLeaf[]>({\n    key: 'project/mapLayerLeaves',\n    get: ({ get }) => {\n        const proj = get(projectAtom)\n        if (!proj || !proj.tree) return []\n        return proj.tree.leaves.filter(\n            ({ layerType, layerPath, nodeExists }) =>\n                ProjectTreeLayerTileTypes.indexOf(layerType) > -1 && nodeExists && layerPath && layerPath.length > 0\n        )\n    }\n})\n\n/**\n * Get all the unique layer paths in a project\n * Use to initilize project-level downloader\n */\nexport const projectLayerPathsSelector = selector<string[]>({\n    key: 'project/layerPaths',\n    get: ({ get }) => {\n        const mapLyrs = get(projectMapLayerLeafsSelector)\n        return mapLyrs.reduce<string[]>((acc, leaf) => {\n            const newPath = leaf.layerName ? `${leaf.layerPath}/${leaf.layerName}` : leaf.layerPath || 'unknown'\n            return !leaf.layerPath || acc.indexOf(newPath) > -1 ? acc : [...acc, newPath]\n        }, [])\n    }\n})\n","import { atom, selector, selectorFamily } from 'recoil'\nimport { appDefaults } from '../config'\nimport { ProjectTreeLeaf, TilingStatus, ProjectTreeBranch, ProjectTreeLayerTypes } from '@riverscapes/common'\nimport { treeNodeIDsParse, TreeNodeID, projectLeafSearchAncestry } from '../lib/util'\n// import log from 'loglevel'\n\nimport { projectAtom, activeIdsAtom } from './project'\nimport { layerStateSelectorFamily } from './layers'\n\nexport const treeFilterTextAtom = atom<string>({\n    key: 'treeFilterText',\n    default: ''\n})\n\nexport const projectLeafHierarchySelector = selector<Record<number, [number, string][]>>({\n    key: 'projectLeafHierarchy',\n    get: ({ get }) => {\n        const proj = get(projectAtom)\n        if (!proj || !proj.tree) return {}\n        const leafHier = proj.tree.leaves.reduce<Record<number, [number, string][]>>((acc, leaf) => {\n            return {\n                ...acc,\n                [leaf.id]: projectLeafSearchAncestry(proj, leaf)\n            }\n        }, {})\n        return leafHier\n    }\n})\n\nexport const treeInfoPaneIdAtom = atom<number | null>({\n    key: 'tree/treeInfoPaneId',\n    default: null\n})\nexport const treeInfoPaneOpenAtom = atom<boolean>({\n    key: 'tree/treeInfoPaneOpen',\n    default: false\n})\n\n/**\n * Keep track of all the ProjectTreeLeaf objects in the system\n */\nexport const treeLeafSelectorFamily = selectorFamily<ProjectTreeLeaf, number>({\n    key: 'treeLeafSelectorFamily',\n    get:\n        (ptid) =>\n        ({ get }) => {\n            const proj = get(projectAtom)\n            if (!proj) throw new Error('treeLeafSelectorFamily: No project found')\n\n            const leaf = proj.tree.leaves.find(({ id }) => id === ptid)\n            if (!leaf) throw new Error('treeLeafSelectorFamily: No leaf found')\n\n            return leaf\n        }\n})\n\n/**\n * Keep track of the selected tree item.\n * MAterial tree control uses strings for ids so we use the convention 'b-##' and 'l-##' to separate leaves and branches\n */\nexport const treeSelectedIdsAtom = atom<string[]>({\n    key: 'tree/selectedIds',\n    default: []\n})\n\n// This is a convenience selector because the above ids are hard to parse\nexport const treeSelectedSelector = selector<TreeNodeID>({\n    key: 'tree/selectedIdsSelect',\n    get: ({ get }) => {\n        const selectedIds = get(treeSelectedIdsAtom)\n        return treeNodeIDsParse(selectedIds)\n    }\n})\n\n/**\n * Precalc the hidden nodes every time the search text changes\n */\nexport type HiddenNodes = { branches: number[]; leaves: number[] }\nexport const projectHiddenNodesSelector = selector<HiddenNodes>({\n    key: 'projectHiddenNodes',\n    get: ({ get }) => {\n        const proj = get(projectAtom)\n        const retVal: HiddenNodes = { branches: [], leaves: [] }\n        if (!proj) return retVal\n        const hierarchy = get(projectLeafHierarchySelector)\n        const filterText = get(treeFilterTextAtom).toLowerCase().trim()\n\n        // Return nothing if the search text is less than (n) characters\n        if (filterText.length < appDefaults.minFilterTextLength) return retVal\n\n        // Split words by spaces and filter out anything empties\n        const filterTextArr = filterText.split(' ').filter((w) => w.length > 0)\n\n        // Return nothing if there aren't any words\n        if (filterTextArr.length < 1) return retVal\n\n        // First we figure out which leaves are left\n        const allowedLeaves = proj.tree.leaves\n            .filter((leaf) => {\n                const leafHierarchy = hierarchy[leaf.id]\n                // Figure out if all our search words are present somewhere in the leaf's ancestry\n                return filterTextArr.every((word) => {\n                    // Easy case: the leaf contains the word\n                    if (leaf.label.toLowerCase().indexOf(word) > -1) return true\n                    // Harder case: the branch contains the work\n                    return leafHierarchy.find(([, bText]) => bText.indexOf(word) > -1)\n                })\n            })\n            .map(({ id }) => id)\n\n        // Now we figure out which branches have children that re allowed\n        const allowedBranches = Array.from(\n            new Set(allowedLeaves.reduce<number[]>((acc, lid) => [...acc, ...hierarchy[lid].map(([bid]) => bid)], []))\n        )\n        // Then we remove everything else\n        retVal.leaves = proj.tree.leaves.map(({ id }) => id).filter((lid) => allowedLeaves.indexOf(lid) < 0)\n        retVal.branches = proj.tree.branches.map(({ bid }) => bid).filter((bid) => allowedBranches.indexOf(bid) < 0)\n        return retVal\n    }\n})\n\nexport type TreeLeafState = {\n    leaf: ProjectTreeLeaf\n    reportUrl?: string\n    tilesState: TilingStatus\n    treeAllowed: boolean\n    renderable: boolean\n    hidden: boolean\n    active: boolean\n}\n\nexport const treeLeafStateSelector = selectorFamily<TreeLeafState, number>({\n    key: 'treeLeafStateFamily',\n    get:\n        (ptid) =>\n        ({ get }) => {\n            const layer = get(layerStateSelectorFamily(ptid))\n            const hidden = get(projectHiddenNodesSelector).leaves.indexOf(ptid) > -1\n            const active = get(activeIdsAtom).indexOf(ptid) > -1\n            const reportUrl =\n                layer.leaf.layerType === ProjectTreeLayerTypes.REPORT &&\n                layer.tileStatus === TilingStatus.SUCCESS &&\n                layer.tiles?.url + 'index.html'\n            return {\n                leaf: layer.leaf,\n                tilesState: layer.tileStatus,\n                treeAllowed: true,\n                reportUrl: reportUrl || undefined,\n                renderable: layer.renderable,\n                hidden,\n                active\n            }\n        }\n})\n\nexport const treeRootBranchId = selector<number | null>({\n    key: 'tree/rootBranchId',\n    get: ({ get }) => {\n        const proj = get(projectAtom)\n        if (!proj || !proj.tree) return null\n        const branch = proj?.tree.branches.find((br) => br.pid === -1) as ProjectTreeBranch\n        if (!branch) return null\n        return branch.bid\n    }\n})\n\n/**\n * This is going to let us build a tree in a lazy-loading way\n */\n/**\n * This is just the raw, static treebranch\n */\nexport type TreeBranchSelectorReturn = {\n    branch: ProjectTreeBranch\n    children: {\n        // We store these as ids to keep the memory footprint small\n        branches: number[]\n        leaves: number[]\n    }\n}\n\nexport const treeBranchSelectorFamily = selectorFamily<TreeBranchSelectorReturn, number>({\n    key: 'tree/branches',\n    get:\n        (bid) =>\n        ({ get }) => {\n            const proj = get(projectAtom)\n            const branch = proj?.tree.branches.find((br) => br.bid === bid) as ProjectTreeBranch\n\n            if (!proj) throw new Error('treeBranchSelectorFamily: No project found')\n            if (!branch) throw new Error('treeBranchSelectorFamily: No branch found')\n\n            return {\n                branch,\n                children: {\n                    branches: proj.tree.branches.filter((br) => br.pid === bid).map((br) => br.bid),\n                    leaves: proj.tree.leaves.filter((lf) => lf.pid === bid).map(({ id }) => id)\n                }\n            }\n        }\n})\n\n/**\n * Branch state is things like collapsed and selected. We keep that separete so we don't need to worry about re-recursing the tree\n */\nexport type TreeBranchStateReturn = {\n    branch: TreeBranchSelectorReturn\n    hidden: boolean\n    selected: boolean\n    collapsed: boolean\n}\nexport const treeBranchStateSelectorFamily = selectorFamily<TreeBranchStateReturn, number>({\n    key: 'tree/branchState',\n    get:\n        (bid) =>\n        ({ get }) => {\n            const selectedIds = get(treeSelectedSelector)\n            const branch = get(treeBranchSelectorFamily(bid))\n            const hiddenNodes = get(projectHiddenNodesSelector)\n\n            const collapsed = Boolean(get(treeExpandedSelector).indexOf(bid) > -1)\n\n            const selected = Boolean(selectedIds.branches.indexOf(bid) > -1)\n\n            // Testing to see if this tree node should be hidden\n            const hidden = hiddenNodes.branches.indexOf(bid) > -1\n\n            return {\n                branch,\n                hidden,\n                selected,\n                collapsed\n            }\n        }\n})\n\n/****************************************\n * Misc Tree State\n ****************************************/\n\nexport type TreeCtxState = { leafId: number; position: { top: number; left: number } }\n\nexport const treeContextMenuAtom = atom<TreeCtxState | null>({\n    key: 'tree/contextMenu',\n    default: null\n})\n\n/**\n * Keep track of which branches are expanded\n * NOTE: We use 'collapsed' in the xml so this is inverted and a little messy\n * TODO: Not sure this needs to be externalized. Might be a good case for useState\n */\nexport const treeExpandedIdsAtom = atom<string[]>({\n    key: 'tree/expandedIds',\n    default: []\n})\n// This is a convenience selector because the above ids are hard to parse\nexport const treeExpandedSelector = selector<number[]>({\n    key: 'tree/expandedIdsSelect',\n    get: ({ get }) => {\n        return get(treeExpandedIdsAtom)\n            .filter((ids) => ids.indexOf('b-') > -1)\n            .map((ids) => parseInt(ids.replace('b-', ''), 10))\n    }\n})\n// Just get all ids in the project\nexport const treeAllIdsSelector = selector<string[]>({\n    key: 'tree/treeAllIds',\n    get: ({ get }) => {\n        const proj = get(projectAtom)\n        if (!proj || !proj.tree) return []\n        return [...proj.tree.branches.map(({ bid }) => `b-${bid}`), ...proj.tree.leaves.map(({ id }) => `l-${id}`)]\n    }\n})\n","import Bottleneck from 'bottleneck'\n\nconst QUEUE = new Bottleneck({\n    maxConcurrent: 5\n})\n\nexport default QUEUE\n","import { atom, atomFamily, selectorFamily } from 'recoil'\nimport { endpoints, appDefaults } from '../config'\n// import { orange } from '@material-ui/core/colors'\nimport { TileService, TilingStatus, getLayerTiles, TilingStatusFinished } from '@riverscapes/common'\nimport downloadQueue from '../lib/downloadQueue'\nimport log from 'loglevel'\nimport { LocalForageCache } from '@riverscapes/react-common'\n\nimport { authAtom, projectAtom } from './project'\n\nconst LOCAL_CACHE = new LocalForageCache('TILES', 60 * 60) // 1 hour ttl since tiles almost never change\nLOCAL_CACHE.prune() // prune once on load\n\n/****************************************\n * Tile Service Library\n ****************************************/\n// This is using the requestId pattern found here: https://recoiljs.org/docs/guides/asynchronous-data-queries/\n// This atom does nothign but track the requests made\nexport const tilesRequestIdAtomFamily = atomFamily<number, string>({\n    key: 'tiles/tileReq',\n    default: 0\n})\n// Request and retry are subtly different. Requests can be used as a generic way to refresh data (valid or not)\n// Retries get incremented only when there's an error\nexport const tilesRetriesAtomFamily = atomFamily<number, string>({\n    key: 'tiles/tileRetries',\n    default: 0\n})\n\nexport const usableIdsAtom = atom<number[]>({\n    key: 'tiles/usableIds',\n    default: []\n})\n\nexport const tilesSelectorFamily = selectorFamily<TileService, string>({\n    key: 'tiles/tiles',\n    get:\n        (layerPath) =>\n        async ({ get }) => {\n            // By just including this here (even if we don't assign it) we add tilesRequestIdAtomFamily\n            // as a rippling dependency so updating tilesRequestIdAtomFamily will cause this query to refresh\n            get(tilesRequestIdAtomFamily(layerPath))\n            // Retries are for errors\n            get(tilesRetriesAtomFamily(layerPath))\n\n            const auth = get(authAtom)\n            const proj = get(projectAtom)\n\n            // TODO: Set Priority here\n            // ATOM LOOKUP PRIORITY\n            let retVal: TileService = {\n                status: TilingStatus.UNKNOWN\n            }\n            if (!proj || !auth || !layerPath) return retVal\n\n            // Localstorage cache check\n            const cacheKey = `${proj.projType}/${proj?.program}/${proj?.id}/${layerPath}`\n            const cacheVal = await LOCAL_CACHE.get<TileService>(cacheKey)\n\n            if (cacheVal) return cacheVal\n\n            // Make the Asynchronous call to the API here\n            // A priority between 0 and 9. A job with a priority of 4 will be queued ahead of a job with a priority of 5\n            // Default is 5\n            try {\n                const apiRes = await downloadQueue.schedule({ priority: 5 }, () =>\n                    auth\n                        .getCurrentToken()\n                        .then((jwt) =>\n                            getLayerTiles(\n                                endpoints.graphql,\n                                jwt,\n                                proj.projType,\n                                proj?.program,\n                                proj?.id,\n                                layerPath,\n                                appDefaults.apiTimeout\n                            )\n                        )\n                )\n                if (!apiRes || apiRes.errors || !apiRes.data) {\n                    // Tiling errors don't get retried. We reached the server correctly so\n                    // Any further request will likely be met with a similar result\n                    retVal.status = TilingStatus.FETCH_ERROR\n                    if (apiRes.errors && apiRes.errors.length > 0) {\n                        retVal.error = apiRes.errors.map((e) => JSON.stringify(e)).join(', \\n')\n                    }\n                }\n                retVal = {\n                    ...retVal,\n                    ...apiRes.data?.getLayerTiles\n                }\n            } catch (err) {\n                log.error('Tile fetch error', err)\n                retVal.status = TilingStatus.FETCH_ERROR\n                retVal.error = String(err)\n            }\n\n            // Write anything that's finished to the localstorage\n            if (TilingStatusFinished.indexOf(retVal.status as TilingStatus) > -1) {\n                LOCAL_CACHE.set<TileService>(cacheKey, retVal)\n            }\n\n            return retVal\n        }\n})\n","import { selector, selectorFamily } from 'recoil'\nimport { endpoints, appDefaults } from '../config'\n// import { orange } from '@material-ui/core/colors'\nimport {\n    Symbology,\n    SymbologyStatus,\n    getWebSymbology,\n    ProjectTreeLayerTypes,\n    ProjectTreeLeaf\n} from '@riverscapes/common'\nimport { LocalForageCache } from '@riverscapes/react-common'\nimport downloadQueue from '../lib/downloadQueue'\nimport { authAtom, projectAtom, activeTreeLeavesSelector, projectMapLayerLeafsSelector } from './project'\nimport log from 'loglevel'\nimport { isEqual } from 'lodash'\n\nconst LOCAL_CACHE = new LocalForageCache('SYMB', 6 * 60 * 60) // 6 hour ttl since symbologies almost never change\nLOCAL_CACHE.prune() // prune once on load\n\n/****************************************\n * Tile Vector Symbology Library\n ****************************************/\n/**\n * Selector for all the unique symbologies currently on the map\n */\nexport type SymbologyKey = [string, boolean]\n\nconst createSymbologyKeys = (leaves: ProjectTreeLeaf[]): SymbologyKey[] => {\n    return leaves.reduce<SymbologyKey[]>((acc, leaf) => {\n        if (!leaf.symbology) return acc\n        const symbKey: SymbologyKey = [leaf.symbology, leaf.layerType === ProjectTreeLayerTypes.RASTER]\n        if (!acc.find((sk) => isEqual(sk, symbKey))) return [...acc, symbKey]\n        else return acc\n    }, [])\n}\n\n/**\n * Selector for all the unique symbologies in the whole project\n * Use to initilize project-level downloader\n */\nexport const projectSymbologiesSelector = selector<SymbologyKey[]>({\n    key: 'symbology/uniqueSymb',\n    get: ({ get }) => {\n        const mapLyrs = get(projectMapLayerLeafsSelector)\n        return createSymbologyKeys(mapLyrs)\n    }\n})\n\n// A unique symbology key consists of a string name and whether or not it is a raster\nexport const activeMapSymbologiesSelector = selector<SymbologyKey[]>({\n    key: 'symbology/activeSymbologies',\n    get: ({ get }) => {\n        const activeSymb = get(activeTreeLeavesSelector)\n        return createSymbologyKeys(activeSymb)\n    }\n})\n\nexport const symbologySelectorFamily = selectorFamily<Symbology | null, SymbologyKey>({\n    key: 'symbology/symbology',\n    get:\n        ([name, isRaster]) =>\n        async ({ get }) => {\n            const proj = get(projectAtom)\n            const auth = get(authAtom)\n            if (!proj || !auth || !name) return null\n            const retVal: Symbology = {\n                name,\n                status: SymbologyStatus.UNKNOWN\n            }\n\n            // Localstorage cache check\n            const cacheKey = `${proj.projType}/${name}`\n            const cacheVal = await LOCAL_CACHE.get<Symbology>(cacheKey)\n\n            if (cacheVal) return cacheVal\n\n            // Make the Asynchronous call to the API here\n            // A priority between 0 and 9. A job with a priority of 4 will be queued ahead of a job with a priority of 5\n            // Default is 5\n            const apiRes = await downloadQueue.schedule({ priority: 5 }, () =>\n                auth\n                    .getCurrentToken()\n                    .then((jwt) =>\n                        getWebSymbology(endpoints.graphql, jwt, proj.projType, name, isRaster, appDefaults.apiTimeout)\n                    )\n                    .catch((err) => {\n                        log.debug('symbologySelectorFamily', err)\n                    })\n            )\n\n            if (!apiRes || apiRes.errors) {\n                retVal.status = SymbologyStatus.ERROR\n                retVal.error = 'Error downloading symbology'\n                return retVal\n            }\n\n            const finalVal = apiRes.data?.getWebSymbology\n                ? {\n                      ...apiRes.data?.getWebSymbology,\n                      status: SymbologyStatus.FOUND\n                  }\n                : retVal\n            if (finalVal.status === SymbologyStatus.FOUND) await LOCAL_CACHE.set<Symbology>(cacheKey, finalVal)\n            return finalVal\n        }\n})\n","import { atom, atomFamily, selector, selectorFamily, noWait } from 'recoil'\nimport {\n    ProjectTreeLeaf,\n    TileService,\n    Symbology,\n    SymbologyStatus,\n    TilingStatus,\n    ProjectTreeLayerTileTypes,\n    ProjectTreeLayerTypes\n} from '@riverscapes/common'\n// import log from 'loglevel'\nimport { projectAtom, activeIdsAtom } from './project'\nimport { treeLeafSelectorFamily, treeSelectedSelector } from './tree'\nimport { tilesSelectorFamily } from './tiles'\nimport { symbologySelectorFamily } from './symbology'\nimport { legendColors } from '../config'\n\nexport const assignedRandomColorsAtom = atom<number[]>({\n    key: 'map/assignedColors',\n    default: []\n})\nexport const leafRandomColAtomFamily = atomFamily<number | null, number>({\n    key: 'map/leafRandomCol',\n    default: null\n})\nexport const selectNextColor = selector<number>({\n    key: 'map/selectNextColor',\n    get: ({ get }) => {\n        const current = get(assignedRandomColorsAtom)\n        // Little sloppy here but after all the colours are used up we just get the same color over and over\n        // This shouldn't be an issue because we can't have more than 5 map layers active at a time usually.\n        for (let idx = 0; idx < legendColors.length; idx++) {\n            if (current.indexOf(idx) < 0) return idx\n        }\n        return 0\n    }\n})\n\n/**\n * Layers are derivative state objects with things that are commonly grouped together\n * THis is used PRETTY MUCH EVERYWHERE\n */\n\nexport type MapLayerState = {\n    leaf: ProjectTreeLeaf\n    tiles?: TileService\n    // Symbology can be null for rasters\n    symbology?: Symbology | null\n    treeSelected: boolean\n    legendActive: boolean\n    renderable: boolean\n    symbologyStatus: SymbologyStatus\n    tileStatus: TilingStatus\n}\nexport const layerStateSelectorFamily = selectorFamily<MapLayerState, number>({\n    key: 'map/layers',\n    get:\n        (leafid) =>\n        ({ get }): MapLayerState => {\n            const leaf = get(treeLeafSelectorFamily(leafid)) as ProjectTreeLeaf\n            const selectedIds = get(treeSelectedSelector)\n\n            const isMapAddable = ProjectTreeLayerTileTypes.indexOf(leaf.layerType) > -1\n            const isOnTileServer = isMapAddable || leaf.layerType === ProjectTreeLayerTypes.REPORT\n\n            // It can be active on the legend without being renderable\n            const legendActive = get(activeIdsAtom).indexOf(leafid) > -1\n\n            const treeSelected = Boolean(selectedIds.leaves && selectedIds.leaves.indexOf(leafid) > -1)\n\n            const retVal: MapLayerState = {\n                leaf,\n                treeSelected,\n                legendActive,\n                renderable: false,\n                tileStatus: TilingStatus.NOT_APPLICABLE,\n                symbologyStatus: SymbologyStatus.NOT_APPLICABLE\n            }\n\n            if (isOnTileServer) {\n                const tileServLoadable = get(noWait(tilesSelectorFamily(leaf.layerPath as string)))\n                if (isMapAddable) {\n                    const symbologyLoadable = get(\n                        noWait(\n                            symbologySelectorFamily([\n                                leaf.symbology as string,\n                                leaf.layerType === ProjectTreeLayerTypes.RASTER\n                            ])\n                        )\n                    )\n                    retVal.symbologyStatus =\n                        symbologyLoadable.state !== 'hasValue'\n                            ? SymbologyStatus.FETCHING\n                            : symbologyLoadable.contents?.status || SymbologyStatus.NOT_APPLICABLE\n                    if (symbologyLoadable.state === 'hasValue') retVal.symbology = symbologyLoadable.contents\n                }\n\n                retVal.tileStatus =\n                    tileServLoadable.state !== 'hasValue' ? TilingStatus.FETCHING : tileServLoadable.contents.status\n                // Files are a direct download so they just get an automatic pass because there's nothing to tile\n                // NOTE: THis is not true for TilingStatus.REPORT that still needs to be copied\n                if (leaf.layerType === ProjectTreeLayerTypes.FILE) retVal.tileStatus === TilingStatus.SUCCESS\n\n                retVal.renderable =\n                    retVal.tileStatus === TilingStatus.SUCCESS && retVal.symbologyStatus !== SymbologyStatus.FETCHING\n                if (tileServLoadable.state === 'hasValue') retVal.tiles = tileServLoadable.contents\n            }\n\n            return retVal\n        }\n})\n\n/**\n * Pull out the map leaf ids for a given view\n */\nexport const viewProjLeafIdsSelector = selector<Record<string, number[]>>({\n    key: 'map/viewProjLeafIds',\n    get: ({ get }): Record<string, number[]> => {\n        const proj = get(projectAtom)\n        if (!proj || !proj.tree || !proj.tree.views) return {}\n        const retVal = proj.tree.views.reduce<Record<string, number[]>>((acc, view) => {\n            const viewIds = view.layers.reduce<number[]>((acc, vl) => {\n                const ptl = proj.tree.leaves.find(({ blLayerId }) => blLayerId && blLayerId === vl.id)\n                if (!ptl) return acc\n                else return [...acc, ptl.id]\n            }, [])\n            return {\n                ...acc,\n                [view.id]: viewIds\n            }\n        }, {})\n\n        return retVal\n    }\n})\n","import { TilingStatus } from '@riverscapes/common'\nimport { atom, selector } from 'recoil'\nimport { appDefaults } from '../config'\nimport { BaseLayer } from '../types'\nimport { ViewportProps } from 'react-map-gl'\nimport { newBounds } from '../lib/util'\nimport { layerStateSelectorFamily, leafRandomColAtomFamily, MapLayerState } from './layers'\nimport { activeLeavesSortedSelector } from './project'\nimport { MapSize } from '../types'\n// import log from 'loglevel'\n\n/****************************************\n * Misc Map State\n ****************************************/\n\nexport const baseLayerAtom = atom<BaseLayer>({\n    key: 'map/baseLayer',\n    default: appDefaults.baseLayer\n})\n\n/**\n * What state the viewport is currently in. I'd like this to be ZOOM and LAT/LNG so we can code it into the url\n */\nexport const viewportAtom = atom<ViewportProps>({\n    key: 'map/viewport',\n    default: appDefaults.defaultViewport\n})\n\nexport const mapSizeAtom = atom<MapSize | null>({\n    key: 'map/mapSize',\n    default: null\n})\n\nexport const mapErrorAtom = atom<string>({\n    key: 'map/mapError',\n    default: ''\n})\n\nexport const mapLoadedAtom = atom<boolean>({\n    key: 'map/mapLoaded',\n    default: false\n})\n\nexport interface RenderableMapLayer extends MapLayerState {\n    randomColor: number | null\n    lid: number\n}\n\nexport const activeBoundsSelector = selector<[number, number, number, number] | null>({\n    key: 'map/activeBoundsSelector',\n    get: ({ get }) => {\n        // TODO: If we want to allow layer re-ordering we need to not sort like this\n        const renderableLayers = get(renderableMapLayersSelector)\n        let bounds: [number, number, number, number] | null = null\n        for (let idx = 0; idx < renderableLayers.length; idx++) {\n            const lyr = renderableLayers[idx]\n            if (lyr.tiles?.bounds) {\n                bounds = newBounds(appDefaults.worldBounds, bounds, lyr.tiles?.bounds)\n            }\n        }\n        return bounds\n    }\n})\n\n/**\n * This selector aims to find the difference between what's requested on the map and return only\n * what's actually renderable. This is important because if 'beforeId' references a dud layer\n * there can be problems so it's important that Mapbox only try to render layers we can actually show\n */\nexport const renderableMapLayersSelector = selector<RenderableMapLayer[]>({\n    key: 'map/renderableMapLayers',\n    get: ({ get }) => {\n        // TODO: If we want to allow layer re-ordering we need to not sort like this\n\n        const activeLeavesSorted = get(activeLeavesSortedSelector)\n        const usableLayers = activeLeavesSorted\n            .map(({ id }) => get(layerStateSelectorFamily(id)))\n            .filter(({ tileStatus }) => tileStatus === TilingStatus.SUCCESS)\n        const rndCols = usableLayers.map(({ leaf: { id } }) => get(leafRandomColAtomFamily(id)))\n\n        const retVal = usableLayers.reduce<RenderableMapLayer[]>((acc, lyr, idx) => {\n            const id = lyr.leaf.id\n            const retVal: RenderableMapLayer = {\n                ...lyr,\n                randomColor: rndCols[idx],\n                lid: id\n            }\n            return [...acc, retVal]\n        }, [])\n        return retVal\n    }\n})\n\n/**\n * Which view is currently active.\\\n */\nexport const activeViewAtom = atom<string | null>({\n    key: 'map/view',\n    default: null\n})\n\n/**\n * The bound fence of the map (all layers including innactive ones)\n * [minx, miny, maxx, maxy]\n */\nexport const boundsAtom = atom<[number, number, number, number] | null>({\n    key: 'map/bounds',\n    default: null\n})\n\n/**\n * The zoom bound limits [minz, maxz]\n */\nexport const zoomBoundsAtom = atom<[number, number]>({\n    key: 'map/zoomBounds',\n    default: [appDefaults.zoomRange[0], appDefaults.zoomRange[1]]\n})\n/**\n * THis selector is what the map will use to read the bounds. It has two functions\n * 1. It will always return something valid (even though bounds can be null)\n * 2. it groups bounds and zoombounds together since we use them that way a lot\n */\nexport const boundsSelector = selector<{ zoom: [number, number]; bounds: [number, number, number, number] }>({\n    key: 'bounds',\n    get: ({ get }) => {\n        return {\n            zoom: get(zoomBoundsAtom),\n            bounds: get(boundsAtom) || appDefaults.worldBounds\n        }\n    }\n})\n","import { googleAnalytics } from '@riverscapes/react-common'\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil'\nimport { viewProjLeafIdsSelector, activeViewAtom, activeIdsAtom, projectAtom } from '../recoil'\n\nexport interface UseViewsReturn {\n    setView: (viewId: string) => void\n    resetView: () => void\n}\n\nconst useViews = (): UseViewsReturn => {\n    const [currView, setCurrView] = useRecoilState(activeViewAtom)\n    const viewLeafIds = useRecoilValue(viewProjLeafIdsSelector)\n    const proj = useRecoilValue(projectAtom)\n    const setActiveMapIds = useSetRecoilState(activeIdsAtom)\n\n    const setView = (viewId: string) => {\n        if (viewId === null || currView === viewId || !viewLeafIds[viewId]) return\n        googleAnalytics.event('webrave', 'set_view')\n        setCurrView(viewId)\n        setActiveMapIds(viewLeafIds[viewId])\n    }\n    const resetView = () => {\n        googleAnalytics.event('webrave', 'set_default_view')\n        if (proj && proj.tree.defaultView) setView(proj.tree.defaultView)\n    }\n\n    return { setView, resetView }\n}\n\nexport default useViews\n","import { selector } from 'recoil'\nimport { viewportAtom, renderableMapLayersSelector, activeViewAtom, baseLayerAtom } from './map'\nimport { drawerOpenAtom } from './project'\nimport { AppUrlState } from '../types'\nimport { appDefaults } from '../config'\nimport log from 'loglevel'\n/**\n * This is the selector for divining the URL params we use in our share\n */\nexport const urlParamsSelector = selector<AppUrlState>({\n    key: 'url/params',\n    get: ({ get }) => {\n        const viewport = get(viewportAtom)\n        const baseLayer = get(baseLayerAtom)\n        const currentView = get(activeViewAtom)\n        const drawerOpen = get(drawerOpenAtom)\n        const layers = get(renderableMapLayersSelector)\n\n        const retVal: AppUrlState = {}\n        if (!drawerOpen) retVal.d = 0\n        if (viewport)\n            retVal.c = [viewport.longitude, viewport.latitude, viewport.zoom, viewport.bearing, viewport.pitch]\n        if (baseLayer && baseLayer.id !== appDefaults.baseLayer.id) retVal.b = baseLayer.id\n        if (currentView) {\n            retVal.v = currentView\n        } else {\n            // if this is not a view then we need to enumerate the layers and their order\n            retVal.l = layers.map((lyr) => lyr.leaf.id)\n        }\n        log.debug('URLPARAMS:: urlParamsSelector fire', retVal)\n        return retVal\n    }\n})\n","import { useCallback, useEffect } from 'react'\nimport { useRecoilCallback, useRecoilValue, useSetRecoilState, useRecoilState } from 'recoil'\nimport { UseHostedReturn } from '@northarrowresearch/react-auth'\nimport useViews from './useViews'\nimport {\n    authAtom,\n    projectAtom,\n    activeIdsAtom,\n    tilesSelectorFamily,\n    symbologySelectorFamily,\n    projectLayerPathsSelector,\n    projectSymbologiesSelector,\n    treeExpandedIdsAtom,\n    SymbologyKey\n} from '../recoil'\nimport { Project } from '@riverscapes/common'\nimport log from 'loglevel'\n\n/**\n * This custom hook does all the state setup we need to initialize the project once it is loaded\n */\nconst useAppStateInit = (initAuth?: UseHostedReturn, initProj?: Project): void => {\n    const [project, setProjectTree] = useRecoilState(projectAtom)\n    const setActiveIds = useSetRecoilState(activeIdsAtom)\n    const setAuth = useSetRecoilState(authAtom)\n    const projectSymbologies = useRecoilValue(projectSymbologiesSelector)\n    const projectLayerPaths = useRecoilValue(projectLayerPathsSelector)\n\n    const setExpanded = useSetRecoilState(treeExpandedIdsAtom)\n    const { resetView } = useViews()\n\n    const resetApp = useCallback(() => {\n        log.debug('RESETTING THE APP')\n    }, [])\n\n    // This just basically stuffs our project into Recoil\n    // TODO: This may not be needed later when the common library uses recoil too\n    useEffect(() => {\n        if ((!initProj && project) || (initProj && project && initProj.id !== project.id)) {\n            resetApp()\n        }\n        setProjectTree(initProj || null)\n    }, [initProj])\n    useEffect(() => {\n        // if (!initAuth || initAuth.isAuthenticated) resetApp()\n        setAuth(initAuth || null)\n    }, [initAuth])\n    // If the project or the auth changes we reset everything\n\n    const preFetchLayerTile = useRecoilCallback(({ snapshot }) => (layerPath: string) => {\n        snapshot.getLoadable(tilesSelectorFamily(layerPath)) // pre-fetch user info\n    })\n\n    const preFetchSymbology = useRecoilCallback(({ snapshot }) => (sKey: SymbologyKey) => {\n        snapshot.getLoadable(symbologySelectorFamily(sKey)) // pre-fetch symbology\n    })\n\n    // TODO:\n    // - load url params\n\n    // Here we set the default expanded nodes when the project loads\n    useEffect(() => {\n        if (!project || !project.tree) {\n            setExpanded([])\n            document.title = 'RAVE'\n        } else {\n            if (project.name) {\n                document.title = project.name\n            }\n            setActiveIds([])\n            resetView() // reset to the default view\n            setExpanded(project.tree.branches.filter((br) => !br.collapsed).map((br) => `b-${br.bid}`))\n        }\n    }, [project])\n\n    // When the symbologies change, preload them\n    useEffect(() => {\n        projectSymbologies.map(preFetchSymbology)\n    }, [projectSymbologies])\n    // When the unique layer paths change preload them\n    useEffect(() => {\n        projectLayerPaths.map(preFetchLayerTile)\n    }, [projectLayerPaths])\n}\n\nexport default useAppStateInit\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Container from '@material-ui/core/Container'\nimport Link from '@material-ui/core/Link'\nimport { warehouseUrl } from '../config'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { WarehouseButton } from '@riverscapes/react-common'\n\nconst useStyles = makeStyles((theme) => ({\n    rootContainer: {\n        // maxWidth: '50em',\n        // margin: '0 auto',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    root: {\n        padding: theme.spacing(2, 4, 4, 4)\n    },\n    buttonContainer: {\n        textAlign: 'center'\n    },\n    logoContainer: {\n        padding: theme.spacing(2),\n        textAlign: 'center'\n    },\n    logo: {}\n}))\n\n// interface Props {\n//     title: string\n// }\n\nconst ProjectNotFound: React.FC = () => {\n    const classes = useStyles()\n\n    return (\n        <Container className={classes.rootContainer} maxWidth=\"sm\">\n            <div className={classes.spacer} />\n            <Paper className={classes.root}>\n                <div className={classes.logoContainer}>\n                    <img className={classes.logo} src={process.env.PUBLIC_URL + '/RiverscapesLogo.png'} alt=\"logo\" />\n                </div>\n                <Typography paragraph variant=\"body1\">\n                    The project you are looking for could not be found.\n                </Typography>\n                <Typography paragraph variant=\"body1\">\n                    Please go back to the <Link href={`${warehouseUrl}/#/`}>Riverscapes Data Warehouse</Link> and choose\n                    a new project\n                </Typography>\n                <div className={classes.buttonContainer}>\n                    <WarehouseButton title={`Warehouse`} href={`${warehouseUrl}/#/`} stay />\n                </div>\n            </Paper>\n            <div className={classes.spacer} />\n        </Container>\n    )\n}\nexport default ProjectNotFound\n","import React, { useMemo } from 'react'\nimport SplitPane, { Size } from 'react-split-pane'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        height: '100%',\n        position: 'relative'\n        // marginLeft: theme.spacing(1)\n    },\n    splitPane: {},\n    resizer: {\n        background: '#000',\n        opacity: 0.2,\n        zIndex: 1,\n        boxSizing: 'border-box',\n        backgroundClip: 'padding-box',\n        '&:hover': {\n            transition: 'all 2s ease'\n        },\n        '&.horizontal': {\n            height: 11,\n            margin: '-5px 0',\n            borderTop: '5px solid rgba(255, 255, 255, 0)',\n            borderBottom: '5px solid rgba(255, 255, 255, 0)',\n            cursor: 'row-resize',\n            width: '100%',\n            '&:hover': {\n                borderTop: '5px solid rgba(0, 0, 0, 0.5)',\n                borderBottom: '5px solid rgba(0, 0, 0, 0.5)'\n            }\n        },\n        '&.vertical': {\n            width: 11,\n            margin: '0 -5px',\n            borderLeft: '5px solid rgba(255, 255, 255, 0)',\n            borderRight: '5px solid rgba(255, 255, 255, 0)',\n            cursor: 'col-resize',\n            height: '100%',\n            '&:hover': {\n                borderLeft: '5px solid rgba(0, 0, 0, 0.5)',\n                borderRight: '5px solid rgba(0, 0, 0, 0.5)'\n            }\n        },\n        '&.disabled': {\n            cursor: 'not-allowed',\n            '&:hover': {\n                borderColor: 'transparent'\n            }\n        }\n    }\n}))\n\nexport interface AppSplitterProps {\n    open: boolean\n    child1: React.ReactChild\n    child2: React.ReactChild\n    split?: 'horizontal' | 'vertical'\n    primary?: 'first' | 'second'\n    defaultSize?: Size\n    minSize?: Size\n    maxSize?: Size\n}\n\nconst AppSplitter: React.FC<AppSplitterProps> = ({\n    open,\n    child1,\n    child2,\n    split,\n    primary,\n    defaultSize,\n    minSize,\n    maxSize\n}: AppSplitterProps) => {\n    const classes = useStyles()\n    const child1Memoized = useMemo(() => child1, [child1])\n    const child2Memoized = useMemo(() => child2, [child2])\n    if (!open)\n        return <div className={classes.root}>{!primary || primary === 'first' ? child1Memoized : child2Memoized}</div>\n    else {\n        return (\n            <div className={classes.root}>\n                <SplitPane\n                    className={classes.splitPane}\n                    resizerClassName={classes.resizer}\n                    split={split}\n                    primary={primary}\n                    defaultSize={defaultSize}\n                    minSize={minSize}\n                    maxSize={maxSize}\n                    pane1Style={{ overflow: 'hidden' }}\n                    pane2Style={{ overflow: 'hidden' }}\n                >\n                    {child1Memoized}\n                    {child2Memoized}\n                </SplitPane>\n            </div>\n        )\n    }\n}\n\nexport default AppSplitter\n","import React, { useState } from 'react'\n\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden'\n    },\n    appBar: {\n        flex: '0 0'\n    },\n    tabs: {},\n    tabContents: {\n        position: 'relative',\n        overflow: 'hidden',\n        flexGrow: 1\n    },\n    closeButton: {\n        zIndex: 1000,\n        background: theme.palette.secondary.main,\n        color: theme.palette.secondary.contrastText,\n        position: 'absolute',\n        top: 0,\n        right: 0\n    }\n}))\n\ninterface TreeDrawerProps {\n    tabs: { label: string; value: React.ReactChild }[]\n}\n\nconst TreeDrawer: React.FC<TreeDrawerProps> = ({ tabs }: TreeDrawerProps) => {\n    const classes = useStyles()\n    const [activeTab, setValue] = useState<number>(0)\n\n    const handleChange = (event: React.ChangeEvent<Record<string, unknown>>, newValue: number) => {\n        setValue(newValue)\n    }\n    return (\n        <div className={classes.root}>\n            <Tabs\n                value={activeTab}\n                className={classes.tabs}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant=\"fullWidth\"\n                aria-label=\"full width tabs example\"\n            >\n                {tabs.map((tab, idx) => (\n                    <Tab key={`tab-${idx}`} label={tab.label} value={idx} />\n                ))}\n            </Tabs>\n            {tabs.map(({ value }, tid) => (\n                <div\n                    key={`tab-${tid}`}\n                    className={classes.tabContents}\n                    style={{ display: tid === activeTab ? 'block' : 'none' }}\n                >\n                    {value}\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default TreeDrawer\n","import { useRecoilState } from 'recoil'\nimport { activeIdsAtom, activeViewAtom, mapErrorAtom } from '../recoil'\nimport { appDefaults } from '../config'\nimport { googleAnalytics } from '@riverscapes/react-common'\n\ninterface UseMapLayersReturn {\n    removeLayer: (lid: number) => void\n    addLayer: (lid: number) => void\n    toggleLayer: (lid: number) => void\n}\n\n/**\n * This is everything you'd ever want to do to manipulate layers on the map\n * @returns\n */\nconst useMapLayers = (): UseMapLayersReturn => {\n    const [currView, setCurrView] = useRecoilState(activeViewAtom)\n    const [activeIds, setActiveIds] = useRecoilState(activeIdsAtom)\n    const [error, setError] = useRecoilState(mapErrorAtom)\n\n    const removeLayer = (lid: number): void => {\n        googleAnalytics.event('webrave', 'remove_layer')\n        if (error) setError('')\n        if (currView !== null) setCurrView(null)\n        setActiveIds(activeIds.filter((id) => id !== lid))\n    }\n    const addLayer = (lid: number): void => {\n        googleAnalytics.event('webrave', 'add_layer')\n        if (activeIds.length === appDefaults.maxMapLayers) {\n            googleAnalytics.event('error', 'too_many_layers')\n            setError(`Only ${appDefaults.maxMapLayers} layers are allowed at a time.`)\n            return\n        }\n\n        if (error) setError('')\n        if (currView !== null) setCurrView(null)\n        setActiveIds(Array.from(new Set([...activeIds, lid])))\n    }\n    const toggleLayer = (lid: number): void => {\n        if (activeIds.indexOf(lid) > -1) removeLayer(lid)\n        else addLayer(lid)\n    }\n\n    return { removeLayer, addLayer, toggleLayer }\n}\n\nexport default useMapLayers\n","import React from 'react'\nimport highlightWords from 'highlight-words'\nimport { makeStyles } from '@material-ui/core/styles'\n\ninterface TreeNodeLabelProps {\n    text: string\n    query?: string\n}\n\nconst useStyles = makeStyles(() => ({\n    normal: {\n        fontStyle: 'italic',\n        opacity: 0.8\n    },\n    highlighted: {\n        fontWeight: 'bold'\n    }\n}))\n\nexport const TreeNodeLabel: React.FC<TreeNodeLabelProps> = ({ text, query }: TreeNodeLabelProps) => {\n    const classes = useStyles()\n    if (!query || query.length === 0) return <span>{text}</span>\n    const sanitized = query\n        .split(' ')\n        .map((t) => t.trim())\n        .filter((t) => t && t.length > 0)\n        .join(' ')\n    const chunks = highlightWords({ text, query: sanitized })\n\n    return (\n        <span>\n            {chunks.map((c, idx) => (\n                <span key={`textMatch-${idx}`} className={c.match ? classes.highlighted : classes.normal}>\n                    {c.text}\n                </span>\n            ))}\n        </span>\n    )\n}\n\nexport default TreeNodeLabel\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport createSvgIcon from '@material-ui/icons/utils/createSvgIcon';\nexport default createSvgIcon(_jsxs(React.Fragment, { children: [_jsx(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"5.5\", cy: \"5.5\", r: \"2.5\" }, void 0), _jsx(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"5.5\", cy: \"18.5\", r: \"2.5\" }, void 0), _jsx(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"12\", cy: \"12\", r: \"2.5\" }, void 0), _jsx(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"18.5\", cy: \"10\", r: \"2.5\" }, void 0), _jsx(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"17.5\", cy: \"16.5\", r: \"2.5\" }, void 0)] }, void 0), 'Multidot');\n//# sourceMappingURL=Multidot.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport createSvgIcon from '@material-ui/icons/utils/createSvgIcon';\nexport default createSvgIcon(_jsx(React.Fragment, { children: _jsx(\"path\", { d: \" M 5.932 4.519 C 5.976 4.353 6 4.179 6 4 C 6 2.896 5.104 2 4 2 C 2.896 2 2 2.896 2 4 L 2 4 L 2 4 L 2 4 L 2 4 C 2 4.74 2.402 5.386 3 5.732 L 3 18.268 C 2.402 18.614 2 19.26 2 20 L 2 20 L 2 20 L 2 20 L 2 20 C 2 21.104 2.896 22 4 22 C 4.74 22 5.386 21.598 5.732 21 L 18.268 21 L 18.268 21 C 18.614 21.598 19.26 22 20 22 C 21.104 22 22 21.104 22 20 C 22 19.26 21.598 18.614 21 18.268 L 21 9.732 L 21 9.732 C 21.598 9.386 22 8.74 22 8 C 22 6.896 21.104 6 20 6 C 18.937 6 18.067 6.831 18.004 7.878 L 13.1 10.33 C 12.784 10.121 12.406 10 12 10 C 11.822 10 11.65 10.023 11.486 10.067 L 5.932 4.519 Z  M 5 18.268 C 5.303 18.444 5.556 18.697 5.732 19 L 18.268 19 C 18.444 18.697 18.697 18.444 19 18.268 L 19 9.732 C 18.966 9.712 18.933 9.692 18.9 9.67 L 13.996 12.122 C 13.933 13.169 13.063 14 12 14 C 10.896 14 10 13.104 10 12 L 10 12 C 10 11.822 10.023 11.649 10.067 11.485 L 5 6.41 L 5 18.268 Z \", fillRule: \"evenodd\" }, void 0) }, void 0), 'Polygon');\n//# sourceMappingURL=Polygon.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport createSvgIcon from '@material-ui/icons/utils/createSvgIcon';\nexport default createSvgIcon(_jsxs(React.Fragment, { children: [_jsx(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"4\", cy: \"13\", r: \"2\" }, void 0), _jsx(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"12\", cy: \"9\", r: \"2\" }, void 0), _jsx(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"20\", cy: \"13\", r: \"2\" }, void 0), _jsx(\"path\", { d: \" M 4.45 13.89 L 3.55 14.34 L 2.66 12.55 L 3.55 12.11 L 12 7.88 L 20.45 12.11 L 21.34 12.55 L 20.45 14.34 L 19.55 13.89 L 12 10.12 L 4.45 13.89 Z \" }, void 0)] }, void 0), 'Polyline');\n//# sourceMappingURL=Polyline.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport createSvgIcon from '@material-ui/icons/utils/createSvgIcon';\nexport default createSvgIcon(_jsxs(React.Fragment, { children: [_jsx(\"path\", { d: \"M22,2l0,20l-20,0l0,-20l20,0Zm-2,2l-16,0l0,16l16,0l0,-16Z\" }, void 0), _jsx(\"rect\", { x: \"5\", y: \"5\", width: \"4\", height: \"4\" }, void 0), _jsx(\"rect\", { x: \"15\", y: \"5\", width: \"4\", height: \"4\" }, void 0), _jsx(\"rect\", { x: \"5\", y: \"15\", width: \"4\", height: \"4\" }, void 0), _jsx(\"rect\", { x: \"10\", y: \"10\", width: \"1\", height: \"5\" }, void 0), _jsx(\"rect\", { x: \"11\", y: \"10\", width: \"6\", height: \"2\" }, void 0), _jsx(\"rect\", { x: \"11\", y: \"12\", width: \"2\", height: \"2\" }, void 0), _jsx(\"rect\", { x: \"13\", y: \"7\", width: \"1\", height: \"2\" }, void 0), _jsx(\"rect\", { x: \"14\", y: \"9\", width: \"1\", height: \"1\" }, void 0), _jsx(\"rect\", { x: \"8\", y: \"10\", width: \"1\", height: \"4\" }, void 0), _jsx(\"rect\", { x: \"7\", y: \"11\", width: \"1\", height: \"3\" }, void 0), _jsx(\"rect\", { x: \"9\", y: \"11\", width: \"1\", height: \"1\" }, void 0), _jsx(\"rect\", { x: \"10\", y: \"6\", width: \"2\", height: \"3\" }, void 0), _jsx(\"rect\", { x: \"12\", y: \"7\", width: \"1\", height: \"1\" }, void 0), _jsx(\"rect\", { x: \"15\", y: \"14\", width: \"2\", height: \"4\" }, void 0), _jsx(\"rect\", { x: \"14\", y: \"14\", width: \"1\", height: \"1\" }, void 0), _jsx(\"rect\", { x: \"17\", y: \"15\", width: \"2\", height: \"2\" }, void 0), _jsx(\"rect\", { x: \"11\", y: \"16\", width: \"1\", height: \"3\" }, void 0), _jsx(\"rect\", { x: \"12\", y: \"15\", width: \"2\", height: \"2\" }, void 0), _jsx(\"rect\", { x: \"10\", y: \"18\", width: \"1\", height: \"1\" }, void 0)] }, void 0), 'QRCode');\n//# sourceMappingURL=QRCode.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport createSvgIcon from '@material-ui/icons/utils/createSvgIcon';\nexport default createSvgIcon(_jsxs(React.Fragment, { children: [_jsxs(\"g\", { children: [_jsx(\"g\", __assign({ transform: \"matrix(1,0,0,1,-1.77636e-15,3.97768)\" }, { children: _jsx(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" }, void 0) }), void 0), _jsx(\"g\", __assign({ transform: \"matrix(1,0,0,1,0,11.9777)\" }, { children: _jsx(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" }, void 0) }), void 0), _jsx(\"g\", __assign({ transform: \"matrix(1,0,0,1,8,4)\" }, { children: _jsx(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" }, void 0) }), void 0), _jsx(\"g\", __assign({ transform: \"matrix(1,0,0,1,8,12)\" }, { children: _jsx(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" }, void 0) }), void 0), _jsx(\"g\", __assign({ transform: \"matrix(1,0,0,1,4,-0.0223232)\" }, { children: _jsx(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" }, void 0) }), void 0), _jsx(\"g\", __assign({ transform: \"matrix(1,0,0,1,4,7.97768)\" }, { children: _jsx(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" }, void 0) }), void 0), _jsx(\"g\", __assign({ transform: \"matrix(1,0,0,1,12,0)\" }, { children: _jsx(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" }, void 0) }), void 0), _jsx(\"g\", __assign({ transform: \"matrix(1,0,0,1,12,8)\" }, { children: _jsx(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" }, void 0) }), void 0)] }, void 0), _jsxs(\"g\", __assign({ id: \"Raster\" }, { children: [_jsx(\"path\", { d: \"M21,5.432C21,4.09 19.91,3 18.568,3L5.432,3C4.09,3 3,4.09 3,5.432L3,18.568C3,19.91 4.09,21 5.432,21L18.568,21C19.91,21 21,19.91 21,18.568L21,5.432Z\", style: { fillOpacity: 0 } }, void 0), _jsx(\"path\", { d: \"M22,5.432C22,3.538 20.462,2 18.568,2L5.432,2C3.538,2 2,3.538 2,5.432L2,18.568C2,20.462 3.538,22 5.432,22L18.568,22C20.462,22 22,20.462 22,18.568L22,5.432ZM20,5.432L20,18.568C20,19.358 19.358,20 18.568,20C18.568,20 5.432,20 5.432,20C4.642,20 4,19.358 4,18.568C4,18.568 4,5.432 4,5.432C4,4.642 4.642,4 5.432,4C5.432,4 18.568,4 18.568,4C19.358,4 20,4.642 20,5.432Z\" }, void 0)] }), void 0)] }, void 0), 'Multidot');\n//# sourceMappingURL=Raster.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { ProjectTreeLayerTypes } from '@riverscapes/common';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { Multidot, Polygon, Polyline, Raster } from './';\nvar useStyles = makeStyles(function () { return ({\n    root: {}\n}); });\nvar LayerIcon = function (_a) {\n    var layerType = _a.layerType, iconProps = _a.iconProps, className = _a.className;\n    var classes = useStyles();\n    var Icon = Multidot;\n    switch (layerType) {\n        case ProjectTreeLayerTypes.POINT:\n            Icon = Multidot;\n            break;\n        case ProjectTreeLayerTypes.LINE:\n            Icon = Polyline;\n            break;\n        case ProjectTreeLayerTypes.POLYGON:\n            Icon = Polygon;\n            break;\n        case ProjectTreeLayerTypes.RASTER:\n            Icon = Raster;\n            break;\n        case ProjectTreeLayerTypes.FILE:\n            Icon = InsertDriveFileIcon;\n            break;\n        case ProjectTreeLayerTypes.REPORT:\n            Icon = DescriptionIcon;\n            break;\n        default:\n            break;\n    }\n    return _jsx(Icon, __assign({ className: className || classes.root }, iconProps), void 0);\n};\nexport default LayerIcon;\n//# sourceMappingURL=LayerIcon.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport createSvgIcon from '@material-ui/icons/utils/createSvgIcon';\nexport default createSvgIcon(_jsx(\"path\", { d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\" }, void 0), 'Multidot');\n//# sourceMappingURL=ContentCopy.js.map","import React from 'react'\nimport { TilingStatus, ProjectTreeLayerTypes, ProjectTreeLayerTileTypes } from '@riverscapes/common'\n// import log from 'loglevel'\nimport TreeItem from '@material-ui/lab/TreeItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport TreeNodeLabel from './TreeNodeLabel'\n\nimport { LayerIcon } from '@riverscapes/react-icons'\nimport clsx from 'clsx'\n// import log from 'loglevel'\n\nexport interface TreeLeafProps {\n    id: number\n    layerType: ProjectTreeLayerTypes\n    label: string\n    tilesState: TilingStatus\n    active?: boolean\n    hidden?: boolean\n    searchText?: string\n    handleContext: (lid: number, mousex: number, mousey: number) => void\n    handleClick: (lid: number) => void\n    handleDoubleClick: (lid: number) => void\n}\n// const FADE_TIME = 500\n\nconst useLeafStyles = makeStyles((theme) => ({\n    leaf: {\n        cursor: 'context-menu',\n        marginLeft: theme.spacing(2)\n    },\n    active: {\n        fontWeight: 'bold'\n    },\n    treeLeafLabel: {\n        display: 'flex'\n    },\n    innerLabel: {\n        flexGrow: 0\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    metaIcon: {\n        margin: theme.spacing(0.25),\n        opacity: 0.2,\n        fontSize: theme.spacing(2),\n        lineHeight: '1rem'\n    },\n    loadingSpinner: {\n        color: theme.palette.text.secondary\n    },\n    tileStatus: {\n        flexGrow: 0,\n        fontStyle: 'italic'\n    },\n    leafQUEUED: {\n        color: '#999999',\n        fontStyle: 'italic'\n    },\n    leafNO_GEOMETRIES: {\n        color: '#666666'\n    },\n    leafCREATING: {\n        color: 'orange'\n    },\n    leafTILING_ERROR: {\n        color: 'red',\n        fontStyle: 'italic'\n    },\n    leafTIMEOUT: {\n        color: '#999999',\n        fontStyle: 'italic'\n    },\n    leafFETCH_ERROR: {\n        color: 'red',\n        fontStyle: 'italic'\n    },\n    leafNOT_FOUND: {\n        color: 'red',\n        fontStyle: 'italic'\n    },\n    leafINDEX_NOT_FOUND: {\n        color: 'red',\n        fontStyle: 'italic'\n    },\n    leafLAYER_NOT_FOUND: {\n        color: 'red',\n        fontStyle: 'italic'\n    },\n    leafUNKNOWN: {\n        color: theme.palette.text.secondary,\n        fontStyle: 'italic'\n    },\n    leafFETCHING: {\n        color: theme.palette.text.secondary,\n        fontStyle: 'italic'\n    },\n    leafSUCCESS: {}\n}))\n\nexport const TreeLeaf: React.FC<TreeLeafProps> = ({\n    id,\n    layerType,\n    label,\n    active,\n    hidden,\n    searchText,\n    tilesState,\n    handleContext,\n    handleClick,\n    handleDoubleClick\n}: TreeLeafProps) => {\n    const classes = useLeafStyles()\n\n    const onCtxMenu = (event) => {\n        event.preventDefault()\n        handleContext(id, event.clientX - 2, event.clientY - 4)\n    }\n    let tileStatusStr: React.ReactElement | string | null = null\n    if (ProjectTreeLayerTileTypes.indexOf(layerType) > -1 || layerType === ProjectTreeLayerTypes.REPORT) {\n        switch (tilesState) {\n            case TilingStatus.SUCCESS:\n                // tileStatusStr = 'Available'\n                break\n            case TilingStatus.QUEUED:\n                tileStatusStr = 'Queued...'\n                break\n            case TilingStatus.CREATING:\n                tileStatusStr = 'Building...'\n                break\n            case TilingStatus.TILING_ERROR:\n                tileStatusStr = 'Tile Error'\n                break\n            case TilingStatus.TIMEOUT:\n                tileStatusStr = 'Timeout'\n                break\n            case TilingStatus.INDEX_NOT_FOUND:\n                tileStatusStr = 'Index Error'\n                break\n            case TilingStatus.NO_GEOMETRIES:\n                tileStatusStr = 'Empty'\n                break\n            case TilingStatus.LAYER_NOT_FOUND:\n                tileStatusStr = 'Layer Missing'\n                break\n            case TilingStatus.FETCH_ERROR:\n                tileStatusStr = 'Fetch Error'\n                break\n            case TilingStatus.UNKNOWN:\n                tileStatusStr = (\n                    <CircularProgress className={classes.loadingSpinner} color=\"inherit\" thickness={3} size={15} />\n                )\n                break\n            case TilingStatus.FETCHING:\n                tileStatusStr = (\n                    <CircularProgress className={classes.loadingSpinner} color=\"inherit\" thickness={3} size={15} />\n                )\n                break\n            default:\n                break\n        }\n    }\n\n    return (\n        <TreeItem\n            // this is IMPORTANT! 'l-##' denotes a branch\n            nodeId={`l-${id}`}\n            className={clsx(classes.leaf, tilesState && classes[`leaf${tilesState}`])}\n            // TODO: Temproarily hide layers\n            hidden={hidden}\n            onClick={() => handleClick(id)}\n            onDoubleClick={() => handleDoubleClick(id)}\n            label={\n                <div className={classes.treeLeafLabel}>\n                    <Typography\n                        variant=\"body2\"\n                        color=\"inherit\"\n                        className={clsx(classes.innerLabel, active && classes.active)}\n                    >\n                        <TreeNodeLabel text={label} query={searchText} />\n                    </Typography>\n                    <div className={classes.spacer} />\n                    {tileStatusStr && (\n                        <Typography\n                            variant=\"caption\"\n                            color=\"inherit\"\n                            className={clsx(classes.innerLabel, active && classes.active)}\n                        >\n                            {tileStatusStr}\n                        </Typography>\n                    )}\n                </div>\n            }\n            onContextMenu={onCtxMenu}\n            icon={<LayerIcon layerType={layerType} />}\n        />\n    )\n}\n\nexport default TreeLeaf\n","import React from 'react'\n\nimport TreeItem from '@material-ui/lab/TreeItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport TreeNodeLabel from './TreeNodeLabel'\nimport clsx from 'clsx'\n\nexport interface TreeBranchProps {\n    id: number\n    label: string\n    hidden?: boolean\n    searchText?: string\n    children?: React.ReactChild[]\n}\n\nconst useBranchStyles = makeStyles((theme) => ({\n    branch: {\n        marginTop: theme.spacing(0.5)\n    },\n    iconContainer: {\n        width: theme.spacing(4)\n    },\n    label: {\n        // paddingLeft: theme.spacing(1.5)\n    }\n}))\n\nexport const TreeBranch: React.FC<TreeBranchProps> = ({ id, hidden, label, searchText, children }: TreeBranchProps) => {\n    const classes = useBranchStyles()\n    return (\n        <TreeItem\n            // this is IMPORTANT! 'b-##' denotes a branch\n            nodeId={`b-${id}`}\n            className={clsx(classes.branch)}\n            classes={{\n                label: classes.label,\n                iconContainer: classes.iconContainer\n            }}\n            onDoubleClick={(e) => {\n                e.preventDefault()\n                e.stopPropagation()\n            }}\n            onContextMenu={(e) => {\n                e.preventDefault()\n                e.stopPropagation()\n            }}\n            hidden={hidden}\n            label={\n                <Typography variant=\"body1\">\n                    <TreeNodeLabel text={label} query={searchText} />\n                </Typography>\n            }\n        >\n            {children}\n        </TreeItem>\n    )\n}\n\nexport default TreeBranch\n","import React from 'react'\n\nimport TreeView from '@material-ui/lab/TreeView'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport FolderIcon from '@material-ui/icons/Folder'\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen'\nimport SearchIcon from '@material-ui/icons/Search'\n\nimport AppSplitter from '../AppSplitter'\nimport { debounce } from 'lodash'\n// import log from 'loglevel'\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    folderIcon: {\n        color: theme.palette.secondary.main\n    },\n    tree: {\n        flexGrow: 1,\n        overflow: 'scroll',\n        paddingBottom: theme.spacing(5)\n    },\n    searchBox: {\n        flexGrow: 0,\n        padding: theme.spacing(0.5)\n    },\n    searchBoxInput: {\n        padding: theme.spacing(0.75, 0.5)\n    }\n}))\n\ninterface TreeControlProps {\n    lyrInfoOpen: boolean\n    setSearchText: (text: string) => void\n    expanded: string[]\n    ctxMenu: React.ReactElement | null\n    lyrInfo: React.ReactElement | null\n    selected: string[]\n    setExpanded: (ids: string[]) => void\n    setSelected: (id: string[]) => void\n    children: React.ReactChild | React.ReactChild[]\n}\n\nconst TreeControl: React.FC<TreeControlProps> = ({\n    lyrInfoOpen,\n    setSearchText,\n    expanded,\n    ctxMenu,\n    lyrInfo,\n    selected,\n    setExpanded,\n    setSelected,\n    children\n}: TreeControlProps) => {\n    const classes = useStyles()\n\n    const onNodeToggle = (event: React.ChangeEvent<Record<string, unknown>>, nodeIds: string[]) => {\n        setExpanded(nodeIds)\n    }\n\n    const onNodeSelect = (event: React.ChangeEvent<Record<string, unknown>>, nodeIds: string | string[]) => {\n        setSelected(Array.isArray(nodeIds) ? nodeIds : [nodeIds])\n    }\n    const setSearchDebounced = debounce((stext: string) => setSearchText(stext), 100)\n\n    return (\n        <AppSplitter\n            open={lyrInfoOpen}\n            split=\"horizontal\"\n            primary=\"first\"\n            defaultSize=\"60%\"\n            maxSize=\"80%\"\n            minSize=\"30%\"\n            child1={\n                <div className={classes.container}>\n                    <TextField\n                        fullWidth\n                        className={classes.searchBox}\n                        placeholder=\"Filter Project Layers...\"\n                        variant=\"outlined\"\n                        onChange={(event) => {\n                            setSearchDebounced((event.target.value as string).toLowerCase().trim())\n                        }}\n                        InputProps={{\n                            classes: { input: classes.searchBoxInput },\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <SearchIcon />\n                                </InputAdornment>\n                            )\n                        }}\n                    />\n                    <TreeView\n                        className={classes.tree}\n                        defaultCollapseIcon={\n                            <>\n                                <ExpandMoreIcon />\n                                <FolderOpenIcon className={classes.folderIcon} />\n                            </>\n                        }\n                        defaultExpandIcon={\n                            <>\n                                <ChevronRightIcon />\n                                <FolderIcon className={classes.folderIcon} />\n                            </>\n                        }\n                        onNodeToggle={onNodeToggle}\n                        onNodeSelect={onNodeSelect}\n                        selected={selected}\n                        expanded={expanded}\n                    >\n                        {children}\n                    </TreeView>\n                    {ctxMenu}\n                </div>\n            }\n            child2={lyrInfo || <div />}\n        />\n    )\n}\n\nexport default TreeControl\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { SvgIconComponent } from '@material-ui/icons'\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    item: {},\n    menuItemIcon: {\n        marginRight: theme.spacing(1)\n    },\n    error: {\n        color: theme.palette.error.main\n    }\n}))\n\nexport type CtxMenuItemType = {\n    label: string\n    error?: boolean\n    Icon?: SvgIconComponent\n    handleClick?: () => void\n    disabled?: boolean\n}[]\n\nexport interface TreeControlProps {\n    position?: { top: number; left: number }\n    open: boolean\n    onClose: () => void\n    menuItems: CtxMenuItemType\n}\n\nconst TreeContextMenu: React.FC<TreeControlProps> = ({ open, position, onClose, menuItems }: TreeControlProps) => {\n    const classes = useStyles()\n    return (\n        <Menu\n            keepMounted\n            open={open}\n            onClose={onClose}\n            anchorReference=\"anchorPosition\"\n            anchorPosition={position}\n            className={classes.root}\n        >\n            {menuItems.map(({ label, Icon, handleClick, disabled, error }, idx) => (\n                <MenuItem\n                    key={`ctxMenuIt-${idx}`}\n                    onClick={handleClick}\n                    disabled={disabled}\n                    className={clsx(classes.item, error && classes.error)}\n                >\n                    {Icon && <Icon className={classes.menuItemIcon} color=\"inherit\" />}\n                    {label}\n                </MenuItem>\n            ))}\n        </Menu>\n    )\n}\n\nexport default TreeContextMenu\n","import { useRecoilCallback } from 'recoil'\nimport { mapSizeAtom, viewportAtom } from '../recoil'\nimport { zoomExtents } from '../lib/util'\n\nexport type UseZoomExtentsReturn = (lyrBounds?: [number, number, number, number]) => Promise<boolean>\n\nconst useZoomExtents = (): UseZoomExtentsReturn => {\n    const zoomLayerExtent = useRecoilCallback(\n        ({ snapshot, set }) =>\n            async (lyrBounds?: [number, number, number, number]): Promise<boolean> => {\n                const mapSize = await snapshot.getPromise(mapSizeAtom)\n                const viewport = await snapshot.getPromise(viewportAtom)\n                if (mapSize && lyrBounds) {\n                    const zoomView = zoomExtents(lyrBounds, mapSize.width, mapSize.height)\n                    set(viewportAtom, { ...viewport, ...zoomView })\n                    return true\n                } else return false\n            }\n    )\n    return zoomLayerExtent\n}\n\nexport default useZoomExtents\n","import React from 'react'\nimport TreeContextMenu, { CtxMenuItemType } from '../components/tree/TreeContextMenu'\nimport { useRecoilValue, useSetRecoilState } from 'recoil'\nimport { layerStateSelectorFamily, TreeCtxState, treeInfoPaneIdAtom, treeInfoPaneOpenAtom } from '../recoil'\nimport { ProjectTreeLayerTypes, SymbologyStatus, TilingStatus } from '@riverscapes/common'\nimport useMapLayers from '../hooks/useMapLayers'\nimport useZoomExtents from '../hooks/useZoomExtents'\n\n// Icons for our menu items\nimport ZoomOutMapIcon from '@material-ui/icons/ZoomOutMap'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle'\nimport DownloadIcon from '@material-ui/icons/CloudDownload'\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty'\nimport AssessmentIcon from '@material-ui/icons/Assessment'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport InfoIcon from '@material-ui/icons/Info'\n\ninterface Props {\n    ctxState: TreeCtxState\n    downloadFile: (fkey: string) => Promise<void>\n    onClose: () => void\n}\n\nconst TreeContextMenuConnect: React.FC<Props> = ({ ctxState, onClose, downloadFile }: Props) => {\n    const layer = useRecoilValue(layerStateSelectorFamily(ctxState.leafId))\n    const setTreeInfoPaneId = useSetRecoilState(treeInfoPaneIdAtom)\n    const setTreeeInfoPaneOpen = useSetRecoilState(treeInfoPaneOpenAtom)\n    const { addLayer, removeLayer } = useMapLayers()\n    const zoomLayerExtent = useZoomExtents()\n    const menuItems: CtxMenuItemType = []\n\n    if (layer.leaf.layerType === ProjectTreeLayerTypes.REPORT) {\n        if (layer.tileStatus === TilingStatus.FETCHING || layer.tileStatus === TilingStatus.QUEUED) {\n            menuItems.push({\n                label: 'Report queued for upload...',\n                Icon: HourglassEmptyIcon,\n                disabled: true\n            })\n        } else {\n            menuItems.push({\n                label: 'Open Report',\n                Icon: AssessmentIcon,\n                disabled: !(layer.tiles?.url && layer.tileStatus === TilingStatus.SUCCESS),\n                handleClick: (): void => {\n                    const newWindow = window.open(layer.tiles?.url + 'index.html', '_blank', 'noopener,noreferrer')\n                    if (newWindow) newWindow.opener = null\n                    onClose()\n                }\n            })\n        }\n    } else if (layer.leaf.layerType === ProjectTreeLayerTypes.FILE) {\n        menuItems.push({\n            label: 'Download file',\n            Icon: DownloadIcon,\n            handleClick: (): void => {\n                if (layer.leaf.layerPath) downloadFile(layer.leaf.layerPath)\n                onClose()\n            }\n        })\n    } else if (layer.tileStatus === TilingStatus.FETCHING || layer.symbologyStatus === SymbologyStatus.FETCHING) {\n        menuItems.push({\n            label: 'Loading tile data...',\n            Icon: HourglassEmptyIcon,\n            disabled: true\n        })\n    } else {\n        // Now we add some layers\n        if (layer.tileStatus === TilingStatus.SUCCESS) {\n            if (layer.legendActive) {\n                menuItems.push(\n                    {\n                        label: 'Remove from map',\n                        Icon: RemoveCircleIcon,\n                        handleClick: (): void => {\n                            removeLayer(layer.leaf.id)\n                            onClose()\n                        }\n                    },\n                    {\n                        label: 'Zoom layer extents',\n                        Icon: ZoomOutMapIcon,\n                        // disabled: Boolean(layer.tiles?.bounds),\n                        handleClick: (): void => {\n                            zoomLayerExtent(layer.tiles?.bounds)\n                            onClose()\n                        }\n                    }\n                )\n            } else if (!layer.legendActive && layer.renderable) {\n                menuItems.push(\n                    {\n                        label: 'Add to map',\n                        Icon: AddCircleIcon,\n                        handleClick: (): void => {\n                            addLayer(layer.leaf.id)\n                            onClose()\n                        }\n                    },\n                    {\n                        label: 'Zoom layer extents (add to map first)',\n                        Icon: ZoomOutMapIcon,\n                        disabled: true\n                    }\n                )\n            }\n        } else if (layer.tileStatus === TilingStatus.QUEUED) {\n            menuItems.push({\n                label: 'Queued for tiling...',\n                Icon: HourglassEmptyIcon,\n                disabled: true\n            })\n        } else if (layer.tileStatus === TilingStatus.NOT_APPLICABLE) {\n            menuItems.push({\n                label: 'Tiling is not applicable to this layer',\n                Icon: ErrorIcon,\n                disabled: true\n            })\n        } else if (layer.tileStatus === TilingStatus.NO_GEOMETRIES) {\n            menuItems.push({\n                label: 'No Geometries were found',\n                Icon: ErrorIcon,\n                disabled: true\n            })\n        } else if (layer.tileStatus === TilingStatus.CREATING) {\n            menuItems.push({\n                label: 'Currently building tiles...',\n                Icon: HourglassEmptyIcon,\n                disabled: true\n            })\n        } else if (layer.tileStatus === TilingStatus.TILING_ERROR) {\n            menuItems.push({\n                label: 'Tiles did not build',\n                Icon: ErrorIcon,\n                disabled: true,\n                error: true\n            })\n        } else if (layer.tileStatus === TilingStatus.TIMEOUT) {\n            menuItems.push({\n                label: 'Tiling timed out',\n                Icon: ErrorIcon,\n                disabled: true,\n                error: true\n            })\n        } else if (layer.tileStatus === TilingStatus.INDEX_NOT_FOUND) {\n            menuItems.push({\n                label: 'Error fetching tile info',\n                Icon: ErrorIcon,\n                disabled: true,\n                error: true\n            })\n        } else if (layer.tileStatus === TilingStatus.LAYER_NOT_FOUND) {\n            menuItems.push({\n                label: 'The original GIS layer is missing',\n                Icon: ErrorIcon,\n                disabled: true,\n                error: true\n            })\n        } else if (layer.tileStatus === TilingStatus.FETCH_ERROR) {\n            menuItems.push({\n                label: 'Error fetching tile info',\n                Icon: ErrorIcon,\n                disabled: true,\n                error: true\n            })\n        }\n        menuItems.push({\n            label: 'Layer Information',\n            Icon: InfoIcon,\n            handleClick: (): void => {\n                setTreeInfoPaneId(ctxState.leafId)\n                setTreeeInfoPaneOpen(true)\n                onClose()\n            }\n        })\n    }\n\n    return (\n        <TreeContextMenu\n            open={Boolean(ctxState)}\n            position={ctxState.position}\n            onClose={onClose}\n            menuItems={menuItems}\n        />\n    )\n}\n\nexport default TreeContextMenuConnect\n","import React from 'react'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableRow from '@material-ui/core/TableRow'\nimport { dates } from '@northarrowresearch/common'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography, Link } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1)\n    },\n    table: {},\n    section: {\n        marginBottom: theme.spacing(3)\n    },\n    sectionHeader: {\n        borderBottom: '1px solid'\n    },\n    metaKey: { fontWeight: 'bold' },\n    metaValue: {\n        color: theme.palette.text.secondary,\n        overflowWrap: 'anywhere',\n        textAlign: 'left'\n    }\n}))\n\ninterface MetaDataProps {\n    title: string\n    meta: Record<string, string>\n}\n\nconst SPECIAL_FORMATS: Record<string, (val: string) => string> = {\n    datecreated: (val) => {\n        const valDate = dates.HTML5InputToTimestamp(val)\n        return valDate > 0 ? `${dates.formatDate(valDate, 'lll')} (${dates.formatDateAgo(valDate)})` : 'unknown'\n    }\n}\nconst formatString = (key: string, val: string): React.ReactNode => {\n    const lwrKey = key.toLowerCase()\n    if (Object.keys(SPECIAL_FORMATS).indexOf(lwrKey) > -1) {\n        return SPECIAL_FORMATS[lwrKey](val)\n    } else if (\n        val &&\n        val.match(/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/)\n    ) {\n        return (\n            <Link href={val} target=\"_blank\">\n                {val}\n            </Link>\n        )\n    } else return val\n}\n\nconst MetaData: React.FC<MetaDataProps> = ({ title, meta }: MetaDataProps) => {\n    const classes = useStyles()\n    if (Object.keys(meta).length === 0) return null\n    return (\n        <div className={classes.section}>\n            <Typography variant=\"subtitle1\" className={classes.sectionHeader}>\n                {title}\n            </Typography>\n            <TableContainer>\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                    <TableBody>\n                        {Object.keys(meta).map((rowKey) => (\n                            <TableRow key={rowKey}>\n                                <TableCell component=\"th\" scope=\"row\" className={classes.metaKey}>\n                                    {rowKey}\n                                </TableCell>\n                                <TableCell align=\"right\" className={classes.metaValue}>\n                                    {formatString(rowKey, meta[rowKey])}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    )\n}\n\nexport default MetaData\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\nimport { WarehouseButton } from '@riverscapes/react-common'\nimport { ProjectTreeLeaf } from '@riverscapes/common'\n\nimport MetaData from './MetaData'\n\n// TODO: Maybe this isn't the best but I don't want to pass it through the whole system\n// Maybe a connector for WarehouseButton????\nimport { warehouseUrl } from '../../config'\n\nconst DONTSHOW = ['_rs_lyr_origin_url']\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1)\n    },\n    minimal: {\n        // background:\n    },\n    whNote: {\n        padding: theme.spacing(2, 1)\n    }\n}))\n\ninterface LayerMetaProps {\n    leaf: ProjectTreeLeaf\n    minimal?: boolean\n}\n\nfunction makeSections(meta: Record<string, string>): Record<string, Record<string, string>> {\n    const keys = Object.keys(meta).filter((k) => DONTSHOW.indexOf(k) < 0)\n\n    const distill = (key) =>\n        keys.filter((k) => k.indexOf(key) === 0).reduce((acc, rk) => ({ ...acc, [rk.replace(key, '')]: meta[rk] }), {})\n\n    return {\n        upstreamWarehouse: distill('_rs_wh_'),\n        upstreamProject: distill('_rs_prj_'),\n        upstreamLayer: distill('_rs_lyr_'),\n        Layer: keys.filter((k) => k.indexOf('_rs') !== 0).reduce((acc, rk) => ({ ...acc, [rk]: meta[rk] }), {})\n    }\n}\n\nconst LayerMeta: React.FC<LayerMetaProps> = ({ leaf, minimal }: LayerMetaProps) => {\n    const classes = useStyles()\n    const meta = leaf.meta || {}\n    const sections = makeSections(meta)\n    return (\n        <Paper className={minimal ? classes.minimal : classes.root}>\n            {Object.keys(sections.Layer).length > 0 && <MetaData title=\"Layer Metadata\" meta={sections.Layer} />}\n            {!minimal && Object.keys(sections.upstreamWarehouse).length > 0 && (\n                <div className={classes.whNote}>\n                    <Typography variant=\"caption\" component=\"div\">\n                        This layer was imported from a {meta._rs_prj_projType} project in the Riverscapes warehouse. You\n                        can visit the original project using the button below.\n                    </Typography>\n                    <WarehouseButton\n                        title={`Original ${meta._rs_prj_projType} Project`}\n                        href={`${warehouseUrl}#/${meta['_rs_wh_program']}/${meta['_rs_wh_id']}`}\n                    />\n                </div>\n            )}\n            {Object.keys(sections.upstreamProject).length > 0 && (\n                <MetaData title=\"Original Project Metadata\" meta={sections.upstreamProject} />\n            )}\n            {Object.keys(sections.upstreamLayer).length > 0 && (\n                <MetaData title=\"Original Layer Metadata\" meta={sections.upstreamLayer} />\n            )}\n            <MetaData\n                title=\"Other\"\n                meta={{\n                    Symbology: leaf.symbology || 'None',\n                    'Layer Name': leaf.layerName || 'None',\n                    'Layer Id': leaf.layerId || 'None',\n                    'Default Transparency': `${leaf.transparency || 'None'}`\n                }}\n            />\n        </Paper>\n    )\n}\n\nexport default LayerMeta\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { dates } from '@northarrowresearch/common'\nimport { TileService } from '@riverscapes/common'\n\nimport numeral from 'numeral'\nimport MetaData from './MetaData'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1)\n    },\n    sectionHeader: {\n        borderBottom: '1px solid'\n    },\n    table: {},\n    metaKey: { fontWeight: 'bold' },\n    metaValue: {\n        color: theme.palette.text.secondary\n    }\n}))\n\ninterface LayerTileInfoProps {\n    tiles: TileService\n}\n\nconst LayerTileInfo: React.FC<LayerTileInfoProps> = ({ tiles }: LayerTileInfoProps) => {\n    const classes = useStyles()\n    const meta: Record<string, string> = {\n        Status: tiles.status as string,\n        Error: tiles.error as string,\n        Started: tiles\n            ? `${dates.formatDate(tiles.started, 'lll')} (${dates.formatDateAgo(tiles.started)})`\n            : 'unknown',\n        'Last status': tiles\n            ? `${dates.formatDate(tiles.lastStatus, 'lll')} (${dates.formatDateAgo(tiles.lastStatus)})`\n            : 'unknown',\n        'Creation time': tiles ? `${((tiles.duration || 0) / 60).toFixed(0)} minutes` : 'unknown',\n        'Original Size': tiles && tiles.originFile ? numeral(tiles.originFile.size).format('0.0 b') : 'unknown',\n        Files: tiles && tiles.numFiles ? numeral(tiles.numFiles).format('0,0') : 'unknown',\n        'Relative path': tiles.rsLayer?.path || 'unknown',\n        'Physical path': tiles ? (tiles.originFile?.key as string) : 'unknown',\n        'Modified (origin)': tiles\n            ? `${dates.formatDate(tiles.originFile?.lastModified, 'lll')} (${dates.formatDateAgo(\n                  tiles.originFile?.lastModified\n              )})`\n            : 'unknown'\n    }\n    return (\n        <Paper className={classes.root}>\n            <MetaData title=\"Webtile information\" meta={meta} />\n        </Paper>\n    )\n}\n\nexport default LayerTileInfo\n","import React from 'react'\n\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { ProjectTreeLeaf, TileService } from '@riverscapes/common'\nimport { LayerIcon } from '@riverscapes/react-icons'\n\nimport LayerMeta from './LayerMeta'\nimport LayerTileInfo from './LayerTileInfo'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100%',\n        overflow: 'hidden',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    toolbar: {\n        flex: '0 0 ',\n        padding: theme.spacing(0, 1),\n        minHeight: theme.spacing(6),\n        background: theme.palette.primary.dark,\n        color: theme.palette.primary.contrastText\n    },\n    spacer: { flexGrow: 1 },\n    layerTitle: {},\n    layerIcon: {},\n    layerMeta: {\n        flexGrow: 1,\n        overflowY: 'scroll',\n        userSelect: 'text',\n        '& *': {\n            userSelect: 'text'\n        }\n    },\n    typeContainer: {\n        // borderRadius: theme.spacing(1),\n        // background: '#FFFFFF22',\n        // margin: theme.spacing(1),\n        // padding: theme.spacing(0, 1),\n        // border: '1px solid #FFFFFF22'\n    },\n    closeButton: {\n        // marginLeft: theme.spacing(2)\n    }\n}))\n\ninterface LayerInfoProps {\n    leaf: ProjectTreeLeaf\n    tiles?: TileService\n    handleClose: () => void\n}\n\nconst LayerInfo: React.FC<LayerInfoProps> = ({ leaf, tiles, handleClose }: LayerInfoProps) => {\n    const classes = useStyles()\n    return (\n        <div className={classes.root}>\n            <Toolbar className={classes.toolbar}>\n                <Tooltip title={`This is a ${leaf.layerType} layer`}>\n                    <IconButton edge=\"start\" className={classes.layerIcon} color=\"inherit\" aria-label=\"menu\">\n                        <LayerIcon layerType={leaf.layerType} />\n                    </IconButton>\n                </Tooltip>\n                <Typography variant=\"body2\" className={classes.layerTitle}>\n                    {leaf.label}\n                </Typography>\n                <div className={classes.spacer} />\n                {/* <div className={classes.typeContainer}>\n                    </div> */}\n                <IconButton\n                    edge=\"start\"\n                    className={classes.closeButton}\n                    color=\"inherit\"\n                    aria-label=\"menu\"\n                    onClick={handleClose}\n                >\n                    <CloseIcon />\n                </IconButton>\n            </Toolbar>\n            <div className={classes.layerMeta}>\n                {leaf && <LayerMeta leaf={leaf} />}\n                {tiles && <LayerTileInfo tiles={tiles} />}\n            </div>\n        </div>\n    )\n}\n\nexport default LayerInfo\n","import React from 'react'\nimport { useRecoilValue } from 'recoil'\nimport { layerStateSelectorFamily } from '../recoil'\nimport LayerInfo from '../components/meta/LayerInfo'\n\ninterface Props {\n    leafID: number\n    handleClose: () => void\n}\n\nconst TreeLayerInfo: React.FC<Props> = ({ leafID, handleClose }: Props) => {\n    const layer = useRecoilValue(layerStateSelectorFamily(leafID))\n    return <LayerInfo leaf={layer.leaf} tiles={layer.tiles} handleClose={handleClose} />\n}\n\nexport default TreeLayerInfo\n","import React from 'react'\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil'\nimport {\n    projectHiddenNodesSelector,\n    treeAllIdsSelector,\n    treeContextMenuAtom,\n    treeSelectedIdsAtom,\n    treeExpandedIdsAtom,\n    treeFilterTextAtom,\n    treeBranchStateSelectorFamily,\n    treeLeafStateSelector,\n    treeInfoPaneIdAtom,\n    treeInfoPaneOpenAtom,\n    treeRootBranchId\n} from '../recoil'\nimport useMapLayers from '../hooks/useMapLayers'\nimport TreeLeaf from '../components/tree/TreeLeaf'\nimport TreeBranch from '../components/tree/TreeBranch'\nimport TreeControl from '../components/tree/TreeControl'\nimport { isEqual } from 'lodash'\n\nimport TreeContextMenuConnect from './TreeContextMenu.connect'\nimport TreeLayerInfoConnect from './TreeLayerInfo.connect'\nimport log from 'loglevel'\nimport { ProjectTreeLayerTypes } from '@riverscapes/common'\nimport { googleAnalytics } from '@riverscapes/react-common'\ninterface TreeBranchProps {\n    downloadFile: (fkey: string) => Promise<void>\n    branchId: number\n    depth: number\n}\n\nconst TreeBranchConnector: React.FC<TreeBranchProps> = ({ branchId, depth, downloadFile }: TreeBranchProps) => {\n    const branchState = useRecoilValue(treeBranchStateSelectorFamily(branchId))\n    const filterText = useRecoilValue(treeFilterTextAtom)\n    if (!branchState || !branchState.branch) return null\n\n    const branches = branchState?.branch.children.branches\n        .map((bid, idx) => (\n            <TreeBranchConnector\n                key={`${branchState?.branch.branch.label}-${bid}-${idx}`}\n                downloadFile={downloadFile}\n                branchId={bid}\n                depth={depth + 1}\n            />\n        ))\n        .filter((d) => d)\n\n    const leaves = branchState?.branch.children.leaves\n        .map((lid, idx) => (\n            <TreeLeafConnector\n                key={`${branchState?.branch.branch.label}-${lid}-${idx}`}\n                downloadFile={downloadFile}\n                leafId={lid}\n                depth={depth + 1}\n            />\n        ))\n        .filter((d) => d)\n\n    // Clean up any dead ends with no leaves\n    if (leaves.length === 0 && branches.length === 0) return null\n\n    return (\n        <TreeBranch\n            id={branchId}\n            label={branchState?.branch.branch.label}\n            hidden={branchState?.hidden}\n            searchText={filterText}\n        >\n            {[...branches, ...leaves]}\n        </TreeBranch>\n    )\n}\n\ninterface TreeLeafProps {\n    downloadFile: (fkey: string) => Promise<void>\n    leafId: number\n    depth: number\n}\n\nconst TreeLeafConnector: React.FC<TreeLeafProps> = ({ leafId, downloadFile }: TreeLeafProps) => {\n    const treeLeafState = useRecoilValue(treeLeafStateSelector(leafId))\n    const filterText = useRecoilValue(treeFilterTextAtom)\n    const setCtxState = useSetRecoilState(treeContextMenuAtom)\n    const setInfoPaneId = useSetRecoilState(treeInfoPaneIdAtom)\n    const { toggleLayer } = useMapLayers()\n\n    const handleContext = (leafId: number, left: number, top: number) => {\n        googleAnalytics.event('webrave', 'open_context_menu')\n        setCtxState({ leafId, position: { left, top } })\n    }\n\n    const doubleClick = () => {\n        googleAnalytics.event('webrave', 'double_click')\n        if (treeLeafState.leaf.layerType === ProjectTreeLayerTypes.REPORT && treeLeafState.renderable) {\n            const newWindow = window.open(treeLeafState.reportUrl, '_blank', 'noopener,noreferrer')\n            if (newWindow) newWindow.opener = null\n        } else if (treeLeafState.leaf.layerType === ProjectTreeLayerTypes.FILE) {\n            if (treeLeafState.leaf.layerPath) downloadFile(treeLeafState.leaf.layerPath)\n        } else if (treeLeafState.renderable) toggleLayer(treeLeafState.leaf.id)\n    }\n\n    if (!treeLeafState || !treeLeafState.leaf || !treeLeafState.leaf.nodeExists) return null\n    const { id, layerType, label } = treeLeafState.leaf\n    return (\n        <TreeLeaf\n            id={id}\n            layerType={layerType}\n            label={label}\n            active={treeLeafState.active}\n            hidden={treeLeafState.hidden}\n            tilesState={treeLeafState.tilesState}\n            searchText={filterText}\n            handleClick={setInfoPaneId}\n            handleDoubleClick={doubleClick}\n            handleContext={handleContext}\n        />\n    )\n}\ninterface TreeControlConnectProps {\n    downloadFile: (fkey: string) => Promise<void>\n}\n\nconst TreeControlConnect: React.FC<TreeControlConnectProps> = ({ downloadFile }: TreeControlConnectProps) => {\n    const setFilterText = useSetRecoilState(treeFilterTextAtom)\n    const rootBranchId = useRecoilValue(treeRootBranchId)\n    const [expandedIds, setExpandedIds] = useRecoilState(treeExpandedIdsAtom)\n    const [selectedIds, setSelectedIds] = useRecoilState(treeSelectedIdsAtom)\n    const [ctxState, setCtxState] = useRecoilState(treeContextMenuAtom)\n    const infoPaneId = useRecoilValue(treeInfoPaneIdAtom)\n    const allIds = useRecoilValue(treeAllIdsSelector)\n\n    const hiddenNodes = useRecoilValue(projectHiddenNodesSelector)\n    const [infoPaneOpen, setInfoPaneOpen] = useRecoilState(treeInfoPaneOpenAtom)\n\n    const setSelected = (ids) => {\n        if (!isEqual(ids, selectedIds)) setSelectedIds(ids)\n    }\n\n    // If there's a search query on then everything is expanded\n    const realExpanded = hiddenNodes.branches.length > 0 ? allIds : expandedIds\n    const realSetExpanded =\n        hiddenNodes.branches.length > 0\n            ? () => {\n                  log.debug('collapsing turned off')\n              }\n            : setExpandedIds\n\n    const lyrInfo =\n        infoPaneOpen && infoPaneId !== null ? (\n            <TreeLayerInfoConnect leafID={infoPaneId} handleClose={() => setInfoPaneOpen(false)} />\n        ) : null\n\n    const treeContrextMenu = ctxState && (\n        <TreeContextMenuConnect ctxState={ctxState} onClose={() => setCtxState(null)} downloadFile={downloadFile} />\n    )\n    const rootBranch =\n        rootBranchId !== null ? (\n            <TreeBranchConnector branchId={rootBranchId} depth={0} downloadFile={downloadFile} />\n        ) : (\n            <div />\n        )\n\n    return (\n        <TreeControl\n            lyrInfoOpen={infoPaneOpen}\n            setSearchText={setFilterText}\n            expanded={realExpanded}\n            ctxMenu={treeContrextMenu}\n            lyrInfo={lyrInfo}\n            selected={selectedIds}\n            setExpanded={realSetExpanded}\n            setSelected={setSelected}\n        >\n            {rootBranch}\n        </TreeControl>\n    )\n}\n\nexport default TreeControlConnect\n","import React, { useEffect } from 'react'\nimport { useRecoilCallback, useRecoilValueLoadable } from 'recoil'\nimport {\n    tilesRequestIdAtomFamily,\n    tilesRetriesAtomFamily,\n    boundsAtom,\n    zoomBoundsAtom,\n    tilesSelectorFamily\n} from '../recoil'\nimport { appDefaults } from '../config'\nimport { newBounds, newZoomBounds } from '../lib/util'\nimport { TileService, TilingStatus } from '@riverscapes/common'\n// import log from 'loglevel'\nimport { isEqual } from 'lodash'\n\ninterface MPDProps {\n    layerPath: string\n}\n\nconst MapTilesConnect: React.FC<MPDProps> = ({ layerPath }: MPDProps) => {\n    const tLoad = useRecoilValueLoadable(tilesSelectorFamily(layerPath))\n\n    const updateBoundsState = useRecoilCallback(({ snapshot, set }) => async () => {\n        const tLoad = snapshot.getLoadable(tilesSelectorFamily(layerPath))\n        if (tLoad.state !== 'hasValue') return\n        const tiles = tLoad.contents as TileService\n        // Now we have to carefully decide whether to queue up another fetch or give up\n        const reqId = await snapshot.getPromise(tilesRequestIdAtomFamily(layerPath))\n        const retryId = await snapshot.getPromise(tilesRetriesAtomFamily(layerPath))\n        const bounds = await snapshot.getPromise(boundsAtom)\n        const zoomBounds = await snapshot.getPromise(zoomBoundsAtom)\n\n        // If we failed to fetch then retry the network call\n        if (tiles.status === TilingStatus.FETCH_ERROR) {\n            if (retryId < 5)\n                setTimeout(() => set(tilesRetriesAtomFamily(layerPath), retryId + 1), appDefaults.retryDelayS * 1000)\n        }\n        // If the tile status is on a transitory state (QUEUED, UNKNOWN, CREATING) then try again in (n) seconds\n        else if (\n            tiles.status === TilingStatus.QUEUED ||\n            tiles.status === TilingStatus.UNKNOWN ||\n            tiles.status === TilingStatus.CREATING\n        ) {\n            setTimeout(() => set(tilesRequestIdAtomFamily(layerPath), reqId + 1), appDefaults.refreshDelayS * 1000)\n        } else if (tiles.status === TilingStatus.SUCCESS) {\n            // Here's where the bounds gets calculated. The actual geofencing happens separately.\n            const newBoundsCalc = newBounds(appDefaults.worldBounds, bounds, tiles.bounds || null)\n            const newZoomBoundsCalc = newZoomBounds(zoomBounds, [tiles.minZoom, tiles.maxZoom])\n\n            if (!isEqual(bounds, newBoundsCalc)) {\n                set(boundsAtom, newBoundsCalc)\n            }\n            if (!isEqual(zoomBounds, newZoomBoundsCalc)) {\n                set(zoomBoundsAtom, newZoomBoundsCalc)\n            }\n        }\n        // Otherwise there's nothing left to do:\n        // (SUCCESS, NOT_APPLICABLE, NO_GEOMETRIES, TILING_ERROR, INDEX_NOT_FOUND, TIMEOUT)\n    })\n    useEffect(() => {\n        updateBoundsState()\n    }, [tLoad])\n\n    return null\n}\n\nexport default MapTilesConnect\n","import React, { useMemo } from 'react'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { ProjectTreeView } from '@riverscapes/common'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        // margin: theme.spacing(1, 0)\n    }\n}))\nconst EMPTY_VID = 'custom'\nexport interface ViewListProps {\n    activeView: string | null\n    defaultView?: string\n    projectViews: ProjectTreeView[]\n    handleChange: (viewId: string) => void\n}\nconst ViewList: React.FC<ViewListProps> = ({ activeView, defaultView, projectViews, handleChange }: ViewListProps) => {\n    const classes = useStyles()\n    const realView = activeView === null ? EMPTY_VID : activeView\n    const viewOptions = useMemo(() => {\n        if (!projectViews || projectViews.length === 0)\n            return [\n                <MenuItem key={EMPTY_VID} value=\"custom\" disabled>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        <em>No custom views</em>\n                    </Typography>\n                </MenuItem>\n            ]\n        const viewOpts =\n            projectViews.map((v, idx) => {\n                const isDefault = v.id === defaultView\n                const defaultString = isDefault ? '(default)' : ''\n                return (\n                    <MenuItem key={`view-${idx}`} value={v.id}>\n                        {v.name} {defaultString}\n                    </MenuItem>\n                )\n            }) || []\n        return [\n            ...viewOpts,\n            activeView === null && (\n                <MenuItem key={EMPTY_VID} value=\"custom\">\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        <em>Custom View</em>\n                    </Typography>\n                </MenuItem>\n            )\n        ]\n    }, [projectViews, activeView])\n\n    return (\n        <FormControl className={classes.root} fullWidth size=\"small\">\n            <InputLabel htmlFor=\"grouped-native-select\">Curated Views</InputLabel>\n            <Select\n                id=\"view\"\n                value={realView}\n                disabled={!projectViews || projectViews.length === 0}\n                variant=\"filled\"\n                onChange={(event) => event.target.value !== EMPTY_VID && handleChange(event.target.value as string)}\n            >\n                {viewOptions}\n            </Select>\n        </FormControl>\n    )\n}\n\nexport default ViewList\n","import React from 'react'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport { BaseLayer } from '../../types'\n\ninterface BaseLayerPickerProps {\n    baseLayer: BaseLayer\n    baseLayers: BaseLayer[]\n    setBaseLayer: (baseLyr: BaseLayer) => void\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // margin: theme.spacing(1, 0)\n    },\n    menuIcon: {\n        marginRight: theme.spacing(1)\n    },\n    menuItem: {\n        display: 'flex'\n    }\n}))\n\nconst BaseLayerPicker: React.FC<BaseLayerPickerProps> = ({\n    baseLayer,\n    baseLayers,\n    setBaseLayer\n}: BaseLayerPickerProps) => {\n    const classes = useStyles()\n\n    const viewOptions = baseLayers.map((v, idx) => {\n        const Icon = v.Icon\n        return (\n            <MenuItem key={`view-${idx}`} value={v.id} className={classes.menuItem}>\n                <Icon className={classes.menuIcon} />\n                <Typography>{v.title}</Typography>\n            </MenuItem>\n        )\n    })\n\n    return (\n        <FormControl className={classes.root} fullWidth size=\"small\">\n            <InputLabel>Basemap</InputLabel>\n            <Select\n                id=\"baselayer\"\n                value={baseLayer.id}\n                variant=\"filled\"\n                classes={{\n                    selectMenu: classes.menuItem\n                }}\n                onChange={(event) => {\n                    const newBl = baseLayers.find((bl) => bl.id === event.target.value)\n                    if (newBl) setBaseLayer(newBl)\n                }}\n            >\n                {viewOptions}\n            </Select>\n        </FormControl>\n    )\n}\n\nexport default BaseLayerPicker\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\ninterface Props {\n    error?: string\n}\n\nconst LegendError: React.FC<Props> = ({ error }: Props) => {\n    return <Typography color=\"error\">{error || ' '}</Typography>\n}\n\nexport default LegendError\n","import React from 'react'\nimport { ProjectTreeView } from '@riverscapes/common'\nimport ViewList from './ViewList'\nimport BaseLayerPicker from './BaseLayerPicker'\nimport { List } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport LegendError from './LegendError'\nimport { BaseLayer } from '../../types'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        zIndex: 1000,\n        padding: theme.spacing(0),\n        border: '1px solid #EEEEEE',\n        borderRadius: 5,\n        position: 'absolute',\n        background: 'white',\n        width: 270,\n        maxHeight: '90%',\n        overflow: 'hidden',\n        boxShadow: '3px 3px 3px #00000066',\n        top: 15,\n        right: 15,\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    subheaders: {\n        background: 'white'\n    },\n    legendList: {\n        height: '100%',\n        flex: '1 1',\n        overflow: 'scroll'\n    }\n}))\n\nexport interface LegendProps {\n    defaultView: string\n    views: ProjectTreeView[]\n    error?: string\n    viewId: string | null\n    setViewId: (viewId: string) => void\n    baseLayer: BaseLayer\n    baseLayers: BaseLayer[]\n    setBaseLayer: (baselayer: BaseLayer) => void\n    children: React.ReactElement[]\n}\n\nconst Legend: React.FC<LegendProps> = ({\n    views,\n    defaultView,\n    children,\n    baseLayer,\n    baseLayers,\n    setBaseLayer,\n    error,\n    viewId,\n    setViewId\n}: LegendProps) => {\n    const classes = useStyles()\n    return (\n        <div className={classes.root}>\n            <BaseLayerPicker baseLayer={baseLayer} baseLayers={baseLayers} setBaseLayer={setBaseLayer} />\n            <ViewList activeView={viewId} defaultView={defaultView} handleChange={setViewId} projectViews={views} />\n            <List dense disablePadding className={classes.legendList}>\n                {children}\n            </List>\n            <LegendError error={error} />\n        </div>\n    )\n}\n\nexport default Legend\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport Typography from '@material-ui/core/Typography'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { RampType } from '@riverscapes/common'\n// import log from 'loglevel'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexDirection: 'column',\n        paddingLeft: theme.spacing(5)\n    },\n    tooltip: {\n        display: 'flex',\n        '&>div': {\n            marginRight: theme.spacing(1)\n        }\n    },\n    row: {\n        width: '100%',\n        display: 'flex'\n    },\n    colorBox: {\n        flexGrow: 0,\n        flexShrink: 0,\n        border: '1px solid #eaeaea',\n        overflow: 'hidden',\n        color: '#FFFFFF00',\n        width: theme.spacing(2),\n        height: theme.spacing(2)\n    },\n    value: {\n        color: theme.palette.text.secondary,\n        paddingLeft: theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    }\n}))\n\nexport interface ColorRampProps {\n    max?: number\n    min?: number\n    rampType?: RampType\n    legend: [string, string][]\n}\nconst ColorRamp: React.FC<ColorRampProps> = ({ max, min, rampType, legend }: ColorRampProps) => {\n    const classes = useStyles()\n    const pRamp = parseRamp(legend, max, min, rampType)\n    return (\n        <ListItem divider dense disableGutters className={classes.root}>\n            {pRamp.map((row, idr) => (\n                <div key={`cr-${idr}`} className={classes.row}>\n                    <div className={classes.colorBox} style={{ background: row[0] }}>\n                        color\n                    </div>\n                    <Tooltip\n                        enterDelay={2000}\n                        title={\n                            <div className={classes.tooltip}>\n                                <div className={classes.colorBox} style={{ background: row[0] }}>\n                                    color\n                                </div>\n                                {row[1]}\n                            </div>\n                        }\n                    >\n                        <Typography variant=\"caption\" component=\"div\" className={classes.value}>\n                            {row[1]}\n                        </Typography>\n                    </Tooltip>\n                </div>\n            ))}\n        </ListItem>\n    )\n}\n\nexport default ColorRamp\n\nfunction parseRamp(ramp: [string, string][], max?: number, min?: number, rampType?: RampType): [string, string][] {\n    let newRamp: [string, string][] = []\n    if (!max || !min || rampType !== RampType.INTERPOLATED) newRamp = [...ramp]\n    else {\n        newRamp = ramp.map(([color, value]) => {\n            const regMatch = value.match(/^([0-9.]+)%$/)\n            if (regMatch) {\n                const percent = parseFloat(regMatch[1])\n                const interp = (min + ((max - min) * percent) / 100).toFixed(2)\n                return [color, interp]\n            } else return [color, value]\n        })\n    }\n    const newRampDict = newRamp.reduce((acc, r) => ({ ...acc, [`${r[0]}${r[1]}`]: r }), {})\n    return Object.values(newRampDict)\n}\n","import React, { useState } from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport ListItem from '@material-ui/core/ListItem'\nimport Typography from '@material-ui/core/Typography'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport ColorRamp from './ColorRamp'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport ZoomOutMapIcon from '@material-ui/icons/ZoomOutMap'\n\nimport { LayerIcon } from '@riverscapes/react-icons'\nimport { ProjectTreeLayerTypes, Symbology } from '@riverscapes/common'\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\n\nimport { ListItemIcon, Color } from '@material-ui/core'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles((theme) => ({\n    container: {},\n    listItem: {\n        paddingTop: 0,\n        paddingBottom: 0,\n        paddingLeft: 0,\n        paddingRight: 26\n    },\n    listItemActive: {\n        '& *': {\n            cursor: 'pointer'\n        }\n    },\n    listItemAvatar: {\n        minWidth: theme.spacing(3.5)\n    },\n    expandIcon: {\n        minWidth: theme.spacing(1)\n    },\n    avatar: {\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n        '& svg': {\n            height: '0.7em',\n            width: '0.7em'\n        }\n    },\n    expandIconButton: {\n        padding: 0,\n        '& svg': {\n            width: '0.7em',\n            height: '0.7em'\n        }\n    },\n    expandDisabled: {\n        color: 'rgba(0,0,0,0.05)!important'\n    },\n    textPrimary: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    },\n    textSecondary: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    },\n    secondary: {\n        right: 0\n    },\n    root: {\n        marginTop: theme.spacing(2)\n    },\n    heading: {\n        marginTop: theme.spacing(1)\n    },\n    loadingSpinner: {\n        color: theme.palette.text.secondary\n    },\n    layerItem: {\n        display: 'flex'\n    },\n    legendName: {\n        flexGrow: 1\n    },\n    deleteButtonHover: {},\n    legendColor: {\n        border: '1px solid black',\n        width: '20px',\n        display: 'inline-block',\n        height: '14px',\n        marginRight: '5px'\n    },\n    deleteButton: {\n        flexGrow: 0,\n        color: '#CCCCCC',\n        padding: 0,\n        marginRight: 0,\n        '& < svg': {\n            width: '0.8em',\n            height: '0.8em'\n        }\n    },\n    zoomButton: {\n        flexGrow: 0,\n        color: '#CCCCCC',\n        padding: 0,\n        marginRight: 0,\n        '& < svg': {\n            width: '0.8em',\n            height: '0.8em'\n        }\n    }\n}))\n\nexport interface LegendLayerItemProps {\n    label: string\n    leafId: number\n    layerType: ProjectTreeLayerTypes\n    subLabel?: string\n    overZoomed?: boolean\n    max?: number\n    min?: number\n    fallbackColor?: Color\n    loading?: boolean\n    zoomLayerExtent?: () => void\n    symbology?: Symbology | null\n    removeLayer: (lid: number) => void\n}\n\nconst LegendLayerItem: React.FC<LegendLayerItemProps> = ({\n    label,\n    leafId,\n    loading,\n    max,\n    min,\n    subLabel,\n    fallbackColor,\n    zoomLayerExtent,\n    symbology,\n    layerType,\n    removeLayer\n}: LegendLayerItemProps) => {\n    const classes = useStyles()\n    const theme = useTheme()\n    const [open, setOpen] = useState<boolean>(true)\n\n    const hasLegend = Boolean(symbology && symbology.legend && symbology.legend.length > 1)\n    const hasOneItemLegend = Boolean(symbology && symbology.legend && symbology.legend.length === 1)\n\n    let fgColor = theme.palette.text.primary\n    let bgColor = theme.palette.background.default\n    if (hasOneItemLegend && symbology?.legend) {\n        if (layerType === ProjectTreeLayerTypes.POLYGON || layerType === ProjectTreeLayerTypes.RASTER) {\n            bgColor = symbology.legend[0][0]\n            fgColor = theme.palette.getContrastText(bgColor)\n        } else {\n            fgColor = symbology.legend[0][0]\n            bgColor = theme.palette.background.default\n        }\n        // fgColor = symbology?.legend?[0][0]\n    } else if (fallbackColor) {\n        if (layerType === ProjectTreeLayerTypes.POLYGON || layerType === ProjectTreeLayerTypes.RASTER) {\n            fgColor = fallbackColor[500]\n            bgColor = fallbackColor[100]\n        } else {\n            fgColor = fallbackColor[500]\n            bgColor = theme.palette.background.default\n        }\n    }\n\n    const toggle = (): void => (hasLegend ? setOpen(!open) : undefined)\n\n    return (\n        <React.Fragment>\n            <ListItem dense className={clsx(classes.listItem, hasLegend && classes.listItemActive)}>\n                <ListItemIcon className={classes.expandIcon}>\n                    <IconButton\n                        size=\"small\"\n                        onClick={toggle}\n                        disabled={!hasLegend}\n                        classes={{ root: classes.expandIconButton, disabled: classes.expandDisabled }}\n                    >\n                        {hasLegend && open ? <ExpandMoreIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </ListItemIcon>\n                <ListItemAvatar className={classes.listItemAvatar}>\n                    <Avatar className={classes.avatar} style={{ background: bgColor }} onClick={toggle}>\n                        <LayerIcon\n                            layerType={layerType}\n                            iconProps={{\n                                style: { color: fgColor }\n                            }}\n                        />\n                    </Avatar>\n                </ListItemAvatar>\n                <Tooltip\n                    enterDelay={1500}\n                    title={\n                        <React.Fragment>\n                            <Typography color=\"inherit\">{label}</Typography>\n                            {subLabel && <Typography variant=\"caption\">{subLabel}</Typography>}\n                        </React.Fragment>\n                    }\n                >\n                    <ListItemText\n                        primary={label}\n                        secondary={subLabel}\n                        onClick={toggle}\n                        classes={{ primary: classes.textPrimary, secondary: classes.textSecondary }}\n                    />\n                </Tooltip>\n                <ListItemSecondaryAction className={classes.secondary}>\n                    {loading && (\n                        <CircularProgress className={classes.loadingSpinner} color=\"inherit\" thickness={3} size={15} />\n                    )}\n                    {!loading && (\n                        <>\n                            {zoomLayerExtent && (\n                                <Tooltip enterDelay={1500} title=\"Zoom layer extents\">\n                                    <IconButton\n                                        edge=\"end\"\n                                        className={classes.zoomButton}\n                                        aria-label=\"zoomExtent\"\n                                        onClick={(event) => {\n                                            event.stopPropagation()\n                                            zoomLayerExtent()\n                                        }}\n                                    >\n                                        <ZoomOutMapIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            )}\n                            <Tooltip enterDelay={1500} title=\"Remove map layer\">\n                                <IconButton\n                                    edge=\"end\"\n                                    className={classes.deleteButton}\n                                    aria-label=\"delete\"\n                                    onClick={(event) => {\n                                        event.stopPropagation()\n                                        removeLayer(leafId)\n                                    }}\n                                >\n                                    <CancelIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </>\n                    )}\n                </ListItemSecondaryAction>\n            </ListItem>\n            {hasLegend && open && (\n                <ColorRamp\n                    max={max}\n                    min={min}\n                    rampType={symbology?.rampType}\n                    legend={symbology?.legend as [string, string][]}\n                />\n            )}\n        </React.Fragment>\n    )\n}\n\nexport default LegendLayerItem\n","import React, { useEffect } from 'react'\nimport Legend from '../components/legend/Legend'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport useMapLayers from '../hooks/useMapLayers'\nimport {\n    baseLayerAtom,\n    activeViewAtom,\n    projectAtom,\n    layerStateSelectorFamily,\n    activeLeavesSortedSelector,\n    leafRandomColAtomFamily,\n    treeLeafSelectorFamily,\n    mapErrorAtom\n} from '../recoil'\nimport useZoomExtents from '../hooks/useZoomExtents'\nimport { legendColors } from '../config'\nimport baseLayers from '../mapStyles'\nimport { ProjectTreeView, SymbologyStatus, TilingStatus } from '@riverscapes/common'\nimport LegendLayerItem from '../components/legend/LegendLayerItem'\nimport useViews from '../hooks/useViews'\nimport { googleAnalytics } from '@riverscapes/react-common'\nimport { BaseLayer } from '../types'\nimport { useSnackbar } from 'notistack'\nimport log from 'loglevel'\n\nconst LegendConnect: React.FC = () => {\n    const proj = useRecoilValue(projectAtom)\n    const [mapError, setMapError] = useRecoilState(mapErrorAtom)\n    const { enqueueSnackbar } = useSnackbar()\n    const activeLeaves = useRecoilValue(activeLeavesSortedSelector)\n    const [baseLayer, _setBaseLayer] = useRecoilState(baseLayerAtom)\n    const currentView = useRecoilValue(activeViewAtom)\n\n    const { setView } = useViews()\n\n    const setBaseLayer = (bl: BaseLayer): void => {\n        googleAnalytics.event('webrave', 'set_base_layer', bl.id)\n        _setBaseLayer(bl)\n    }\n\n    useEffect(() => {\n        if (mapError && mapError.length > 0) {\n            enqueueSnackbar(mapError, { variant: 'error', autoHideDuration: 3000 })\n            setMapError('')\n        }\n    }, [mapError])\n\n    if (!proj) return null\n\n    const views: ProjectTreeView[] = proj.tree.views ? proj.tree.views : []\n    const defaultView = views.length > 0 && proj.tree.defaultView ? proj.tree.defaultView : ''\n    return (\n        <Legend\n            views={views}\n            defaultView={defaultView}\n            baseLayer={baseLayer}\n            baseLayers={baseLayers}\n            setBaseLayer={setBaseLayer}\n            viewId={currentView}\n            setViewId={setView}\n        >\n            {activeLeaves.map(({ id }, idx) => (\n                <LegendItemConnect key={`lgdLyr-${idx}`} lid={id} />\n            ))}\n        </Legend>\n    )\n}\n\nexport default LegendConnect\n\ninterface ItemProps {\n    lid: number\n}\n\nconst LegendItemConnect: React.FC<ItemProps> = ({ lid }: ItemProps) => {\n    const leaf = useRecoilValue(treeLeafSelectorFamily(lid))\n    const layer = useRecoilValue(layerStateSelectorFamily(lid))\n    const rndColIdx = useRecoilValue(leafRandomColAtomFamily(lid))\n    const zoomLayerExtent = useZoomExtents()\n    const { removeLayer } = useMapLayers()\n\n    const stats = layer.tiles?.rasterStats?.stats as Record<string, unknown>\n    const { id, layerType, label } = leaf\n\n    let max: number | undefined = undefined\n    let min: number | undefined = undefined\n    let subLabel: string | undefined = undefined\n\n    if (stats) {\n        try {\n            max = (stats.max as number) || (stats.maximum as number) || undefined\n            min = (stats.min as number) || (stats.minimum as number) || undefined\n            if (max && max > 0 && min && min > 0) subLabel = `min: ${min?.toFixed(2)} max: ${max?.toFixed(2)}`\n        } catch {\n            log.error(`Could not get stats using object: ${JSON.stringify(stats)}`)\n        }\n    }\n    const overZoomed = true\n    return (\n        <LegendLayerItem\n            leafId={id}\n            layerType={layerType}\n            symbology={layer.symbology}\n            max={max}\n            min={min}\n            label={label}\n            subLabel={subLabel}\n            overZoomed={overZoomed}\n            zoomLayerExtent={() => zoomLayerExtent(layer.tiles?.bounds)}\n            fallbackColor={rndColIdx !== null ? legendColors[rndColIdx] : undefined}\n            loading={layer.tileStatus === TilingStatus.FETCHING || layer.symbologyStatus === SymbologyStatus.FETCHING}\n            removeLayer={removeLayer}\n        />\n    )\n}\n","import React, { useState } from 'react'\nimport Chip from '@material-ui/core/Chip'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { ViewportProps } from 'react-map-gl'\nimport clsx from 'clsx'\nimport WarningOutlineIcon from '@material-ui/icons/WarningOutlined'\nimport { ContentCopy } from '@riverscapes/react-icons'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    normalBG: {\n        color: theme.palette.primary.contrastText,\n        background: theme.palette.primary.light,\n        '&:hover,&.focus': {\n            color: theme.palette.primary.contrastText,\n            background: theme.palette.primary.dark\n        }\n    },\n    '@keyframes overzoomFade': {\n        '0%': {\n            backgroundColor: theme.palette.warning.dark\n        },\n        '50%': {\n            backgroundColor: theme.palette.warning.light\n        },\n        '100%': {\n            backgroundColor: theme.palette.warning.dark\n        }\n    },\n    normalButtons: {\n        color: theme.palette.primary.contrastText,\n        background: theme.palette.primary.dark\n    },\n    overZBG: {\n        color: theme.palette.warning.contrastText,\n        background: theme.palette.warning.main,\n        '&:hover,&.focus': {\n            color: theme.palette.warning.contrastText,\n            background: theme.palette.warning.dark\n        },\n        animation: '$overzoomFade 2s infinite'\n    },\n    overZButtons: {\n        color: theme.palette.warning.contrastText,\n        background: theme.palette.warning.dark\n    },\n    labelIcon: {\n        background: 'transparent',\n        '&:hover,&.focus': {\n            background: 'transparent'\n        }\n    },\n    warnText: {\n        color: theme.palette.warning.light\n    },\n    label: {\n        display: 'flex'\n    },\n    chipIcon: {\n        height: theme.spacing(2),\n        width: theme.spacing(2),\n        fontSize: theme.typography.caption.fontSize,\n        padding: 0,\n        '& svg': {\n            fontSize: theme.typography.caption.fontSize\n        }\n    },\n    coordsTxt: {\n        marginRight: theme.spacing(1),\n        marginLeft: theme.spacing(1)\n    },\n    avatar: {},\n    expanded: {},\n    helpIcon: { marginLeft: theme.spacing(1) },\n    overZoomed: {\n        color: theme.palette.warning.contrastText,\n        background: theme.palette.warning.main\n    }\n}))\n\ninterface ZoomIndicatorProps {\n    className?: string\n    viewport: ViewportProps\n    overZoomed?: boolean\n    onHelpClick: () => void\n    onCopyClick: () => void\n}\n\nconst ZoomIndicator: React.FC<ZoomIndicatorProps> = ({\n    className,\n    viewport,\n    overZoomed,\n    onHelpClick,\n    onCopyClick\n}: ZoomIndicatorProps) => {\n    const classes = useStyles()\n    const [expanded, setExpanded] = useState<boolean>(false)\n    const cc = {\n        bg: overZoomed ? classes.overZBG : classes.normalBG,\n        btn: overZoomed ? classes.overZButtons : classes.normalButtons\n    }\n    const preventDefault = (cb?: () => unknown) => (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        if (cb) cb()\n    }\n    return (\n        <Chip\n            size=\"small\"\n            onClick={() => setExpanded(!expanded)}\n            className={clsx(classes.root, cc.bg, className)}\n            clickable={false}\n            classes={{\n                icon: clsx(cc.bg, classes.labelIcon),\n                labelSmall: classes.label\n            }}\n            label={\n                <>\n                    <Tooltip\n                        title={\n                            <>\n                                <div>{!expanded ? 'Map zoom (click to expand)' : 'Map zoom & coords'}</div>\n                                {overZoomed && (\n                                    <div className={classes.warnText}>\n                                        Warning: Map Zoom exceeds raster tile resolution\n                                    </div>\n                                )}\n                            </>\n                        }\n                    >\n                        <span>\n                            {expanded && `Zoom: `}\n                            {viewport.zoom ? viewport.zoom.toFixed(1) : '?'}\n                            {expanded && (\n                                <span className={classes.coordsTxt}>\n                                    {' Center: '}( {viewport.longitude?.toFixed(5)}, {viewport.latitude?.toFixed(5)} ){' '}\n                                </span>\n                            )}\n                        </span>\n                    </Tooltip>\n                    {expanded && (\n                        <Tooltip title=\"Copy map coordinates to clipboard\">\n                            <IconButton\n                                onMouseOver={preventDefault()}\n                                className={clsx(classes.chipIcon, cc.btn, classes.helpIcon)}\n                                onClick={preventDefault(onCopyClick)}\n                            >\n                                <ContentCopy />\n                            </IconButton>\n                        </Tooltip>\n                    )}\n                    {overZoomed && (\n                        <Tooltip title=\"Click to learn more about this warning.\">\n                            <IconButton\n                                onMouseOver={preventDefault()}\n                                className={clsx(classes.chipIcon, cc.btn, classes.helpIcon)}\n                                onClick={preventDefault(onHelpClick)}\n                            >\n                                <WarningOutlineIcon />\n                            </IconButton>\n                        </Tooltip>\n                    )}\n                </>\n            }\n        />\n    )\n}\n\nexport default ZoomIndicator\n","import React from 'react'\nimport Link from '@material-ui/core/Link'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport { imagesUrl } from '../../config'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    title: {\n        margin: 0,\n        padding: theme.spacing(2),\n        background: theme.palette.warning.main,\n        color: theme.palette.warning.contrastText\n    },\n    actions: {\n        margin: 0,\n        padding: theme.spacing(1)\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    rasterImgsContainer: {\n        display: 'flex',\n        width: '100%',\n        overflow: 'hidden'\n    },\n    rasterImgsContainerCol: {},\n    rasterImgs: {\n        width: '100%',\n        height: 'auto'\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1)\n    }\n}))\nexport interface OverZoomedHelpProps {\n    open: boolean\n    onClose: () => void\n}\n\nconst OverZoomedHelp: React.FC<OverZoomedHelpProps> = ({ onClose, open }: OverZoomedHelpProps) => {\n    const classes = useStyles()\n    return (\n        <Dialog aria-labelledby=\"customized-dialog-title\" open={open} maxWidth=\"sm\" onClose={onClose}>\n            <DialogTitle disableTypography className={classes.title}>\n                <Typography variant=\"h6\">Map Zoom exceeds raster tile resolution</Typography>\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose} color=\"inherit\">\n                    <CloseIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent dividers>\n                <Typography paragraph>\n                    {\"For a smoother web experience we've capped the maximum zoom level for rasters \"}\n                    {'we serve on the web. As a result you may notice some rasters get a little blurry '}\n                    {'at higher zoom levels.'}\n                </Typography>\n                <div className={classes.rasterImgsContainer}>\n                    <div className={classes.rasterImgsContainerCol}>\n                        <Typography variant=\"h6\">Original</Typography>\n                        <img src={`${imagesUrl}/desktop_raster.png`} className={classes.rasterImgs} />\n                    </div>\n                    <div className={classes.rasterImgsContainerCol}>\n                        <Typography variant=\"h6\">Web</Typography>\n                        <img src={`${imagesUrl}/web_raster.png`} className={classes.rasterImgs} />\n                    </div>\n                </div>\n                <Typography paragraph>\n                    {\n                        'If you find that you need the extra clarity at high zoom levels please consider downloading this project from the '\n                    }\n                    {'\"Project Info\" tab on the left.'}\n                </Typography>\n                <Typography paragraph>\n                    {'You can then use one of our '}\n                    <Link href=\"http://rave.riverscapes.xyz/\" target=\"_blank\">\n                        desktop plugins\n                    </Link>\n                    {' (QRAVE for QGIS, ArcRAVE for ESRI ArcGIS) '}\n                    {'to view these datasets at their maximum resolution.'}\n                </Typography>\n            </DialogContent>\n        </Dialog>\n    )\n}\n\nexport default OverZoomedHelp\n","import React, { useState } from 'react'\nimport { viewportAtom, renderableMapLayersSelector } from '../recoil'\nimport { useRecoilValue } from 'recoil'\nimport { ProjectTreeLayerTypes } from '@riverscapes/common'\nimport ZoomIndicator from '../components/map/ZoomIndicator'\nimport OverzoomedHelp from '../components/map/OverzoomedHelp'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useSnackbar } from 'notistack'\n// import log from 'loglevel'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        left: theme.spacing(2)\n    }\n}))\n\nconst TreeToggleConnect: React.FC = () => {\n    const [overZoomDlg, setOverZoomDlg] = useState<boolean>(false)\n    const { enqueueSnackbar } = useSnackbar()\n    const classes = useStyles()\n    const viewport = useRecoilValue(viewportAtom)\n    const mapLayers = useRecoilValue(renderableMapLayersSelector)\n    const minMaxRasterZoom: number = mapLayers\n        .filter((lyr) => lyr.leaf.layerType === ProjectTreeLayerTypes.RASTER)\n        .reduce<number>((acc, lyr) => {\n            const lyrMaxZoom = lyr.tiles && lyr.tiles.maxZoom && lyr.tiles.maxZoom > 0 ? lyr.tiles.maxZoom : 100\n            return Math.min(lyrMaxZoom, acc)\n        }, 100)\n\n    const overZoomed = Boolean(viewport && viewport.zoom && minMaxRasterZoom && viewport.zoom > minMaxRasterZoom)\n\n    const cbCopy = () => {\n        const { zoom, width, height, latitude, longitude, bearing, pitch } = viewport\n        navigator.clipboard.writeText(\n            JSON.stringify({ zoom, width, height, latitude, longitude, bearing, pitch }, null, 2)\n        )\n        enqueueSnackbar('Coordinates copied to clipboard!', { variant: 'info', autoHideDuration: 1000 })\n    }\n\n    return (\n        <>\n            <ZoomIndicator\n                className={classes.root}\n                viewport={viewport}\n                onCopyClick={cbCopy}\n                onHelpClick={() => setOverZoomDlg(true)}\n                overZoomed={overZoomed}\n            />\n            <OverzoomedHelp open={overZoomDlg} onClose={() => setOverZoomDlg(false)} />\n        </>\n    )\n}\n\nexport default TreeToggleConnect\n","import React from 'react'\n// import { makeStyles } from '@material-ui/core/styles'\nimport { Typography, CircularProgress } from '@material-ui/core'\nimport { Loading } from '@northarrowresearch/react-common'\n\nconst MapLoading: React.FC = () => {\n    return (\n        <Loading\n            logoSVG={<CircularProgress size=\"3rem\" thickness={4} />}\n            status={\n                <Typography variant=\"h5\" component=\"div\">\n                    Loading Map...\n                </Typography>\n            }\n            containerProps={{\n                maxWidth: 'xl',\n                style: {\n                    position: 'absolute',\n                    zIndex: 1000,\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    background: '#FFFFFF33'\n                }\n            }}\n        />\n    )\n}\n\nexport default MapLoading\n","import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react'\nimport { config } from '@riverscapes/react-common'\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil'\nimport MapGL, { ViewportProps, NavigationControl } from 'react-map-gl'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CircularProgress } from '@material-ui/core'\nimport MapLoading from './MapLoading'\nimport { geoFence } from '../../lib/util'\nimport { createInitialStyle } from '../../lib/MapManager'\nimport { appDefaults } from '../../config'\nimport { viewportAtom, mapLoadedAtom, boundsAtom, mapSizeAtom } from '../../recoil/map'\nimport { BaseLayer } from '../../types'\n\nimport 'mapbox-gl/dist/mapbox-gl.css'\n\nimport _ from 'lodash'\nimport log from 'loglevel'\n\ninterface MapProps {\n    baseLayer: BaseLayer\n    styleLoading?: boolean\n    bounds?: [minx: number, miny: number, maxx: number, maxy: number]\n    zoomBounds: [minZoom: number, maxZoom: number]\n    children?: React.ReactChild | React.ReactChildren | React.ReactElement[]\n}\n\nconst navControlStyle = {\n    left: 15,\n    top: 60\n}\n\nconst useStyles = makeStyles((theme) => ({\n    '@global': {\n        '.mapboxgl-ctrl-bottom-left': {\n            zIndex: '0 !important', // This is 1000 by default\n            position: 'absolute',\n            pointerEvents: 'none',\n            left: 'initial',\n            right: theme.spacing(2),\n            bottom: theme.spacing(3)\n        }\n    },\n    root: {\n        marginLeft: theme.spacing(1)\n    },\n    container: {\n        display: 'flex',\n        height: '100%'\n    },\n    mapContainer: {\n        position: 'relative',\n        background: '#CCCCCC',\n        height: '100%',\n        width: '100%',\n        '&>h1': {\n            color: '#9999FF',\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)'\n        }\n    },\n    drawerContents: {\n        // border: '1px solid green',\n        height: '100%',\n        display: 'flex'\n    },\n    drawerSpacer: {\n        flex: '0 0 0%'\n    },\n    drawerSpacerOpen: {\n        // flex: `0 0 ${DRAWER_WIDTH}`\n    },\n    dialogContainer: {\n        alignItems: 'left',\n        justifyContent: 'left'\n    },\n    loaderSpinner: {\n        position: 'absolute',\n        bottom: 10,\n        right: 10,\n        color: theme.palette.secondary.main\n    },\n    dialog: {\n        position: 'absolute',\n        margin: 0,\n        left: '20px',\n        top: '20px'\n    },\n    subheaders: {\n        background: 'white'\n    },\n    dummyText: {}\n}))\n\nconst debounceConsoleLog = _.debounce((...vals) => log.debug(...vals), 1500)\n\nconst Map: React.FC<MapProps> = ({ children, baseLayer, styleLoading, bounds, zoomBounds }: MapProps) => {\n    const classes = useStyles()\n    const [viewport, _setViewport] = useRecoilState(viewportAtom)\n    const [boundsSet, setBoundsSet] = useState<boolean>(false)\n    const rawBounds = useRecoilValue(boundsAtom)\n    const setMapSize = useSetRecoilState(mapSizeAtom)\n    const [mapLoaded, setMapLoaded] = useRecoilState(mapLoadedAtom)\n\n    const viewportRef = useRef<ViewportProps>()\n    viewportRef.current = viewport\n\n    const loadHandler = useCallback(\n        (e) => {\n            const styleLoaded = e.target.isStyleLoaded()\n            if (mapLoaded !== styleLoaded) setMapLoaded(styleLoaded)\n        },\n        [mapLoaded]\n    )\n\n    const handleResize = ({ width, height }) => {\n        log.debug('resize map', width, height)\n        setMapSize(width > 0 && height > 0 ? { width, height } : null)\n    }\n\n    // Constrain the Bounds and zoom\n    const setViewport = useCallback(\n        (inV: ViewportProps) => {\n            const outV = { ...viewportRef.current, ...inV }\n            // Constrict bounds\n            if (zoomBounds && outV.zoom) {\n                if (outV.zoom > zoomBounds[1]) outV.zoom = zoomBounds[1]\n                else if (outV.zoom < zoomBounds[0]) outV.zoom = zoomBounds[0]\n            }\n            const geoFenceCorrect = geoFence(\n                [outV.longitude, outV.latitude] as [number, number],\n                // Bounds is an object or fall back to the world fence\n                bounds || appDefaults.worldBounds,\n                // We center the world if we need to\n                Boolean(rawBounds && !boundsSet)\n            )\n\n            // If we're out of bounds then bring us back\n            if (Array.isArray(geoFenceCorrect)) {\n                outV.longitude = geoFenceCorrect[0]\n                outV.latitude = geoFenceCorrect[1]\n            }\n\n            if (rawBounds && !boundsSet) setBoundsSet(true)\n\n            debounceConsoleLog('setViewport DEBOUNCED', { inV, outV, bounds, center: bounds && !boundsSet })\n            _setViewport(outV)\n        },\n        [bounds, zoomBounds, boundsSet, rawBounds]\n    )\n\n    // Just the first time we offer a default style\n    const baseStyle = useMemo(() => createInitialStyle(baseLayer), [])\n\n    // When loading we may get an initial zoom and/or bounds value\n    useEffect(() => {\n        debounceConsoleLog('setViewport useEffect', { bounds, zoomBounds, boundsSet, rawBounds })\n        setViewport({ ...viewportRef.current })\n    }, [bounds, zoomBounds, boundsSet, rawBounds])\n\n    const mapLoader = styleLoading && <CircularProgress size=\"2rem\" thickness={6} className={classes.loaderSpinner} />\n\n    const onError = (e) => {\n        // Hide those annoying non-error errors. Cloudfront hides 404 errors behind 403\n        if (!e.error || !e.error.status || e.error.status < 400 || e.error.status > 500) {\n            console.error('MAP ERROR', e)\n        }\n    }\n\n    // NO HOOKS BELOW HERE\n    if (!baseStyle || !bounds) return <MapLoading />\n\n    return (\n        <div className={classes.mapContainer}>\n            <MapGL\n                {...viewport}\n                width=\"100%\"\n                height=\"100%\"\n                minZoom={zoomBounds[0] || 4}\n                maxZoom={zoomBounds[1] || 20}\n                clickRadius={2}\n                onLoad={loadHandler}\n                onResize={handleResize}\n                mapStyle={baseStyle}\n                onViewportChange={setViewport}\n                onError={onError}\n                mapboxApiAccessToken={config.mapConfig.mapBoxToken}\n            >\n                <NavigationControl style={navControlStyle} />\n                {mapLoader}\n                {children}\n            </MapGL>\n        </div>\n    )\n}\n\nexport default Map\n","import React from 'react'\nimport { Fab, Tooltip } from '@material-ui/core'\nimport LayersClearIcon from '@material-ui/icons/LayersClear'\nimport { makeStyles } from '@material-ui/core/styles'\nimport LayersIcon from '@material-ui/icons/Layers'\nimport ZoomOutMapIcon from '@material-ui/icons/ZoomOutMap'\n\ninterface Props {\n    drawerOpen?: boolean\n    toggleDrawer: () => void\n    bounds: [number, number, number, number] | null\n    zoomExtents: () => void\n}\n\nconst useStyles = makeStyles((theme) => ({\n    toggleTree: {\n        position: 'absolute',\n        top: theme.spacing(1),\n        left: theme.spacing(1)\n    },\n    zoomExtent: {\n        position: 'absolute',\n        top: theme.spacing(1),\n        left: theme.spacing(7)\n    }\n}))\n\nconst ProjectLoading: React.FC<Props> = ({ drawerOpen, toggleDrawer, zoomExtents, bounds }: Props) => {\n    const classes = useStyles()\n    return (\n        <>\n            <Tooltip title=\"Toggle the tree sidebar\">\n                <Fab\n                    color=\"primary\"\n                    aria-label=\"add\"\n                    onClick={toggleDrawer}\n                    size=\"small\"\n                    className={classes.toggleTree}\n                >\n                    {drawerOpen ? <LayersClearIcon /> : <LayersIcon />}\n                </Fab>\n            </Tooltip>\n            <Tooltip\n                title={!bounds ? 'Cannot zoom to map extent. No bounding box found' : 'Zoom to active layer extent'}\n            >\n                <Fab\n                    color=\"secondary\"\n                    aria-label=\"zoomOut\"\n                    onClick={() => zoomExtents()}\n                    size=\"small\"\n                    disabled={!bounds}\n                    className={classes.zoomExtent}\n                >\n                    <ZoomOutMapIcon />\n                </Fab>\n            </Tooltip>\n        </>\n    )\n}\n\nexport default ProjectLoading\n","import React from 'react'\nimport { useRecoilState } from 'recoil'\nimport { googleAnalytics } from '@riverscapes/react-common'\nimport { drawerOpenAtom } from '../recoil'\nimport TreeToggleBtn from '../components/TreeToggleBtn'\nimport useZoomExtents from '../hooks/useZoomExtents'\nimport { activeBoundsSelector } from '../recoil'\nimport { useRecoilValue } from 'recoil'\n// import log from 'loglevel'\n\nconst TreeToggleConnect: React.FC = () => {\n    const [drawerOpen, toggleDrawer] = useRecoilState(drawerOpenAtom)\n    const zoomLayerExtent = useZoomExtents()\n    const bounds = useRecoilValue(activeBoundsSelector)\n    return (\n        <TreeToggleBtn\n            key=\"treeToggleBtn\"\n            drawerOpen={drawerOpen}\n            bounds={bounds}\n            zoomExtents={() => {\n                if (bounds) zoomLayerExtent(bounds)\n            }}\n            toggleDrawer={() => {\n                googleAnalytics.event('webrave', 'set_map_drawer', !drawerOpen ? 'closed' : 'open')\n                toggleDrawer(!drawerOpen)\n            }}\n        />\n    )\n}\n\nexport default TreeToggleConnect\n","import React, { useEffect, useRef, useState } from 'react'\nimport { MapContext } from 'react-map-gl'\nimport { useRecoilValue } from 'recoil'\nimport { baseLayerAtom, renderableMapLayersSelector } from '../recoil'\nimport { changeBaseLayer, userLayerRecalc, verifyLayerOrder } from '../lib/MapManager'\nimport { isEqual } from 'lodash'\nimport log from 'loglevel'\n\nconst MapLayers: React.FC = () => {\n    const { map } = React.useContext(MapContext)\n    const baseLayer = useRecoilValue(baseLayerAtom)\n    const renderableMapLayers = useRecoilValue(renderableMapLayersSelector)\n    const mapRef = useRef(map)\n    const [refreshNeeded, setRefreshNeeded] = useState<{ check: number; base: number; layers: number }>({\n        check: 0,\n        base: 0,\n        layers: 0\n    })\n\n    useEffect(() => {\n        if (!mapRef.current) return\n        const { check, base, layers } = refreshNeeded\n        const newState = { check, base, layers }\n        if (base > 0) {\n            const c_success = changeBaseLayer(mapRef.current, baseLayer)\n            log.debug(`MapLayers::changeBaseLayer: ${c_success}`)\n            if (c_success) {\n                newState.base = 0\n                newState.check += 1 // If we succeeded then we immediately queue up a check\n            } else newState.base += 1\n        }\n        if (layers > 0) {\n            const l_success = userLayerRecalc(mapRef.current, renderableMapLayers)\n            log.debug(`MapLayers::userLayerRecalc: ${l_success}`)\n            if (l_success) {\n                newState.layers = 0\n                newState.check += 1\n            } else newState.layers += 1\n        }\n        if (check > 0) {\n            const v_success = verifyLayerOrder(mapRef.current, renderableMapLayers)\n            log.debug(`MapLayers::verifyLayerOrder: ${v_success}`)\n            if (v_success) newState.check = 0\n            else newState.check += 1\n        }\n        if (!isEqual(newState, refreshNeeded)) {\n            setTimeout(() => {\n                log.debug(`MapLayers::setRefreshNeeded`, refreshNeeded, newState)\n                setRefreshNeeded(newState)\n            }, 500)\n        }\n    }, [refreshNeeded, baseLayer, renderableMapLayers])\n\n    // Every 3 seconds we refresh the map based on what should be there. This is a bit hack-ey but it\n    // prevents a lot of de-sync issues with the map and the tree getting out of date\n    useEffect(() => {\n        const refreshInterval = setInterval(() => {\n            setRefreshNeeded({ ...refreshNeeded, check: refreshNeeded.check + 1 })\n        }, 3000)\n        return () => clearInterval(refreshInterval)\n    }, [])\n\n    useEffect(() => {\n        setRefreshNeeded({ ...refreshNeeded, base: refreshNeeded.base + 1 })\n    }, [baseLayer])\n    useEffect(() => {\n        setRefreshNeeded({ ...refreshNeeded, layers: refreshNeeded.layers + 1 })\n    }, [renderableMapLayers])\n\n    // This is kind of a bogus react component. We need it though in order\n    // to execute rebuilding of layers inside the MapContext\n    return null\n}\n\nexport default MapLayers\n","import React, { useEffect, useState } from 'react'\nimport LegendConnect from './Legend.connect'\nimport ZoomIndicatorConnect from './ZoomIndicator.connect'\n// import MapLayerConnect from './MapLayer.connect'\nimport { useRecoilValue } from 'recoil'\nimport { baseLayerAtom, boundsSelector, mapLoadedAtom, activeBoundsSelector } from '../recoil'\nimport Map from '../components/map/Map'\nimport TreeToggleConnect from '../connectors/TreeToggle.connect'\nimport MapLayerConnect from './MapLayer.connect'\nimport useZoomExtents from '../hooks/useZoomExtents'\n\n// We're letting notistack handle all our snackbars\n// https://v4.mui.com/components/snackbars/#complementary-projects\nimport { SnackbarProvider } from 'notistack'\n\nimport log from 'loglevel'\n\nconst MapConnect: React.FC = () => {\n    const zoomLayerExtent = useZoomExtents()\n    const bounds = useRecoilValue(boundsSelector)\n    const mapLoaded = useRecoilValue(mapLoadedAtom)\n    const baseLayer = useRecoilValue(baseLayerAtom)\n    const activeBounds = useRecoilValue(activeBoundsSelector)\n\n    const [boundsSet, setBoundsSet] = useState<boolean>(false)\n    // log.debug('RENDER MapConnect')\n    useEffect(() => {\n        const run = async () => {\n            if (!boundsSet && activeBounds) {\n                const success = await zoomLayerExtent(activeBounds)\n                log.info('MapConnect: Trying to center map the first time', success)\n                if (success) setBoundsSet(true)\n            }\n        }\n        run()\n    }, [activeBounds, boundsSet])\n\n    return (\n        <SnackbarProvider\n            maxSnack={3}\n            dense\n            preventDuplicate\n            autoHideDuration={2000}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center'\n            }}\n        >\n            <LegendConnect />\n            <Map baseLayer={baseLayer} zoomBounds={bounds.zoom} bounds={bounds.bounds} styleLoading={!mapLoaded}>\n                {[\n                    // This is the button that turns off the tree\n                    <TreeToggleConnect key=\"toggleBtn\" />,\n                    <MapLayerConnect key=\"mapLayers\" />\n                ]}\n            </Map>\n            <ZoomIndicatorConnect />\n        </SnackbarProvider>\n    )\n}\n\nexport default MapConnect\n","import React from 'react'\nimport { dates } from '@northarrowresearch/common'\nimport { DownloadZipBtn, PendingZips } from '@riverscapes/react-common'\nimport Paper from '@material-ui/core/Paper'\nimport Divider from '@material-ui/core/Divider'\nimport { warehouseUrl } from '../config'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\nimport { Project } from '@riverscapes/common'\nimport MetaData from './meta/MetaData'\nimport { WarehouseButton } from '@riverscapes/react-common'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1),\n        height: '100%',\n        overflowY: 'scroll',\n        userSelect: 'text',\n        '& *': {\n            userSelect: 'text'\n        }\n    },\n    btnGroup: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n        '&>*': {\n            flex: '0 0 calc(50% - 0.5em)'\n        },\n        margin: theme.spacing(1, 1, 3, 1)\n    },\n    divider: {\n        marginTop: theme.spacing(3)\n    },\n    footerLogo: {}\n}))\n\ninterface ProjectInfoTabProps {\n    project: Project\n    downloadZipFile: (project: Project) => Promise<void>\n    pendingZips: PendingZips\n}\n\nconst ProjectInfoTab: React.FC<ProjectInfoTabProps> = ({\n    project,\n    downloadZipFile,\n    pendingZips\n}: ProjectInfoTabProps) => {\n    const classes = useStyles()\n\n    const projectInfo = {\n        Title: project.name,\n        Type: project.projType,\n        'Warehouse ID': project.id,\n        'Warehouse Tags': Array.isArray(project.tags) ? project.tags.join(', ') : '<None>',\n        'Project Created': `${dates.formatDate(project.createdOn, 'lll')} (${dates.formatDateAgo(project.createdOn)})`,\n        'Project Updated': `${dates.formatDate(project.updatedOn, 'lll')} (${dates.formatDateAgo(project.updatedOn)})`\n    }\n    const pendingSince = project && pendingZips[project.id]\n    return (\n        <Paper className={classes.root}>\n            <Typography variant=\"h4\" paragraph color=\"textPrimary\">\n                {project.projType} Project\n            </Typography>\n            <Divider />\n            <Typography component=\"div\" paragraph>\n                This project exists within the Riverscapes Data Warehouse. You can download this project and view it\n                using free{' '}\n                <a href=\"https://rave.riverscapes.xyz\" target=\"_blank\" rel=\"noreferrer\">\n                    RAVE plugins for ArcGIS and QGIS\n                </a>\n                .\n            </Typography>\n            <div className={classes.btnGroup}>\n                <WarehouseButton title={`Warehouse`} href={`${warehouseUrl}/#/${project.program}/${project.id}`} />\n                <DownloadZipBtn\n                    downloadZipFile={downloadZipFile}\n                    pendingSince={pendingSince}\n                    project={project}\n                    // btnProps={{}}\n                    title=\"Download\"\n                />\n            </div>\n            <MetaData title=\"Project Information\" meta={projectInfo} />\n            <MetaData title=\"Project Metadata\" meta={project.meta} />\n\n            <Divider className={classes.divider} />\n            <a href=\"http://riverscapes.xyz\" target=\"_blank\" rel=\"noreferrer\">\n                <img\n                    className={classes.footerLogo}\n                    alt=\"footer\"\n                    src={`${process.env.PUBLIC_URL}/cc-watermarks-riverscapes_orig.png`}\n                />\n            </a>\n        </Paper>\n    )\n}\n\nexport default ProjectInfoTab\n","import { ProjectTreeLayerTypes, SymbologyStatus } from '@riverscapes/common'\nimport { useEffect } from 'react'\nimport { useRecoilValue, useRecoilCallback } from 'recoil'\nimport {\n    assignedRandomColorsAtom,\n    selectNextColor,\n    layerStateSelectorFamily,\n    leafRandomColAtomFamily,\n    activeTreeLeavesSelector\n} from '../recoil'\n// import log from 'loglevel'\n\nconst useColourFallback = (): void => {\n    const activeTreeLeaves = useRecoilValue(activeTreeLeavesSelector)\n    /**\n     * We can use a Recoil Callback here to make sure we don't overfetch any state while we're assigning a color\n     */\n    const assignRndCol = useRecoilCallback(({ snapshot, set }) => async (lid: number) => {\n        const colIds = await snapshot.getPromise(assignedRandomColorsAtom) // pre-fetch user info\n        const currRndCol = await snapshot.getPromise(leafRandomColAtomFamily(lid)) // pre-fetch user info\n        const layer = await snapshot.getPromise(layerStateSelectorFamily(lid))\n        const nextCol = await snapshot.getPromise(selectNextColor) // pre-fetch user info\n\n        let needRndCol = false\n        // Symbology and tiles are loaded asynchronously so we might need a loading state here\n        if (!layer.symbology || layer.symbology.status !== SymbologyStatus.FOUND) {\n            needRndCol = true\n        }\n\n        // Only do this if we haven't already assigned a color. Should save on churn\n        if (needRndCol && currRndCol === null) {\n            set(assignedRandomColorsAtom, [...colIds, nextCol])\n            set(leafRandomColAtomFamily(lid), nextCol)\n        }\n        // Unsetting isn't exactly just an Else case\n        else if (!needRndCol && currRndCol !== null) {\n            set(\n                assignedRandomColorsAtom,\n                colIds.filter((cid) => cid === currRndCol)\n            )\n            set(leafRandomColAtomFamily(lid), null)\n        }\n    })\n\n    useEffect(() => {\n        const exFunc = async () => {\n            for (let idx = 0; idx < activeTreeLeaves.length; idx++) {\n                if (activeTreeLeaves[idx].layerType !== ProjectTreeLayerTypes.RASTER)\n                    await assignRndCol(activeTreeLeaves[idx].id)\n            }\n        }\n        exFunc()\n    }, [activeTreeLeaves])\n}\n\nexport default useColourFallback\n","import React, { useMemo } from 'react'\nimport { History } from 'react-router-dom'\nimport AppWrapper from '../components/AppWrapper'\n// import { useHosted } from '@northarrowresearch/react-auth'\nimport { UseHostedReturn } from '@northarrowresearch/react-auth'\nimport ProjectLoading from '../components/ProjectLoading'\nimport { useDownloads, NotAllowedModal, useProject, googleAnalytics } from '@riverscapes/react-common'\nimport { Program, WarehouseRoleEnum, Project } from '@riverscapes/common'\n\nimport useAppStateInit from '../hooks/useAppStateInit'\nimport { drawerOpenAtom, projectLayerPathsSelector } from '../recoil'\nimport { useRecoilValue } from 'recoil'\nimport ProjectNotFound from '../components/ProjectNotFound'\nimport AppSplitter from '../components/AppSplitter'\nimport TreeDrawer from '../components/TreeDrawer'\nimport TreeControlConnect from './Treecontrol.connect'\nimport MapTilesConnect from './MapTiles.connect'\nimport MapConnect from './Map.connect'\nimport ProjectInfoTab from '../components/ProjectInfoTab'\nimport useColourFallback from '../hooks/useColourFallback'\n// import { appRouterPath } from '../config'\n// import { AppUrlState } from '../types'\n\n/**\n * This is the over-arching wrapper for the app. It combines all the\n * same place. Time will tell if that's a good strategy.\n * This is also where we carry the bulk of the state and the hooks for the app\n */\ninterface Props {\n    auth: UseHostedReturn\n    history: History\n    program: Program\n}\n\nconst AppConnect: React.FC<Props> = ({ history, auth, program }: Props) => {\n    // Here we make the graphql call to retrieve the project and program from the API\n    const drawerOpen = useRecoilValue(drawerOpenAtom)\n    const projectLayerPaths = useRecoilValue(projectLayerPathsSelector)\n\n    // Init state won't change unless I reload this component\n    const hasViewAccess = program && Object.values(WarehouseRoleEnum).indexOf(program.role) > -1\n    // const urlParams = useRecoilValue(urlParamsSelector)\n    const onProjectChange = (proj: Project | null): Promise<void> => {\n        if (proj) {\n            googleAnalytics.currentPageView(`webRAVE/${program.machineName}/${proj.id}`)\n        }\n        return Promise.resolve()\n    }\n    const { project, loading: isProjLoading, initialized } = useProject(auth, program, false, true, onProjectChange)\n    const { downloadZipFile, downloadFileFn, pendingZips } = useDownloads(auth, program as Program)\n\n    const downloadFile = (fkey: string) => (project ? downloadFileFn(project, fkey) : Promise.resolve())\n\n    // Set up a link between our map state and the URL bar so we can share things well\n    // const { query, setQuery } = useQueryParams<AppUrlState>(appRouterPath, history)\n    // useEffect(() => {\n    //     setQuery(urlParams)\n    //     log.debug('App:DEBUG::useQueryParams', query)\n    // }, [urlParams])\n\n    // This is where we initialize all the recoil pre-fetch stuff\n    useAppStateInit(auth, project)\n    useColourFallback()\n\n    // 1. If we don's have access then tell the user that\n    const mapComponent = useMemo(() => <MapConnect />, [])\n    const treeComponent = useMemo(\n        () => (\n            <TreeDrawer\n                tabs={[\n                    {\n                        label: 'Project Tree',\n                        value: <TreeControlConnect downloadFile={downloadFile} />\n                    },\n                    {\n                        label: 'Project Info',\n                        value: project ? (\n                            <ProjectInfoTab\n                                project={project}\n                                downloadZipFile={downloadZipFile}\n                                pendingZips={pendingZips}\n                            />\n                        ) : (\n                            <div />\n                        )\n                    }\n                ]}\n            />\n        ),\n        [project, downloadFile, downloadZipFile, pendingZips]\n    )\n    if (!hasViewAccess) {\n        googleAnalytics.event('error', 'access_denied', window.location.hash)\n        return (\n            <AppWrapper title={'Access Denied'} history={history} signOut={auth.signOut}>\n                <NotAllowedModal program={program as Program} onClose={(): void => history.push('/')} />\n            </AppWrapper>\n        )\n    }\n    // 2. If we haven't made the query yet then this is in LOADING state\n    else if (!initialized || isProjLoading) {\n        return (\n            <AppWrapper title={'Loading'} history={history} signOut={auth.signOut}>\n                <ProjectLoading title={isProjLoading ? 'Loading Project...' : 'Initializing...'} />\n            </AppWrapper>\n        )\n    }\n\n    // 4. Default to project not found otherwise\n    else if (!project || !project.tree) {\n        return (\n            <AppWrapper title={'Project not found'} history={history} signOut={auth.signOut}>\n                <ProjectNotFound />\n            </AppWrapper>\n        )\n    }\n    // Send a 404 to analytics if necessary\n    if (!project && !isProjLoading) googleAnalytics.event('error', 'project_not_found', window.location.hash)\n\n    return (\n        <>\n            {projectLayerPaths.map((plp) => (\n                // This is maybe a little bit of a hack and a small concession. Usually I don't like dummy\n                // React components that return nothing but in this case I can't figure out a way to do this nicely\n                <MapTilesConnect key={plp} layerPath={plp} />\n            ))}\n            <AppWrapper title={project.name} history={history} signOut={auth.signOut}>\n                <AppSplitter\n                    open={drawerOpen}\n                    split=\"vertical\"\n                    primary=\"second\"\n                    minSize={500}\n                    maxSize=\"85%\"\n                    defaultSize=\"75%\"\n                    child1={treeComponent}\n                    child2={mapComponent}\n                />\n            </AppWrapper>\n        </>\n    )\n}\nexport default AppConnect\n","import React, { useState, useEffect, useCallback } from 'react'\nimport AppConnect from './App.connect'\nimport { LoginScreen, config, googleAnalytics, LocalForageCache } from '@riverscapes/react-common'\nimport { Route, Switch, History, useHistory } from 'react-router-dom'\nimport { Loading } from '@northarrowresearch/react-common'\nimport { useHosted, UseHostedReturn } from '@northarrowresearch/react-auth'\nimport { warehouseIconUrl, appDefaults, appRouterPath } from '../config'\nimport { authCheck } from '@riverscapes/common'\nimport AppWrapper from '../components/AppWrapper'\nimport ProjectNotFound from '../components/ProjectNotFound'\nimport { Program, Project, getProgramAuth } from '@riverscapes/common'\nimport log from 'loglevel'\n\ngoogleAnalytics.init()\n\nconst LOCAL_CACHE = new LocalForageCache('AppAuth', 5 * 60) // We only need 5 minutes tops on this one\nLOCAL_CACHE.prune() // prune once on load\n\nconst getProgramMachineName = (): string | null => {\n    // If we just get the program from the hash it makes a lot less API calls\n    const locationHash = window.location.hash.split('/')\n    return locationHash.length > 1 && locationHash[1].match(/[A-Za-z0-9-_]{3,25}/g) ? locationHash[1] : null\n}\n\nconst AppAuthConnect: React.FC = () => {\n    const [authInfo, setAuthInfo] = useState<Record<string, unknown>>()\n    const [programState, setProgramState] = useState<{\n        program: Program | null\n        loading: boolean\n        machineName: string | null\n    }>({\n        program: null,\n        loading: true,\n        machineName: getProgramMachineName()\n    })\n    const [isAppPreLoading, setIsAppPreLoading] = useState(true)\n    const auth: UseHostedReturn = useHosted(authInfo as Record<string, unknown>, false, false) //config.isDev\n    const history = useHistory()\n\n    // Go get all the startup info we need to start logging in\n    // Initial fetch gets us all the program objects\n    useEffect(() => {\n        authCheck(config.endpoints.graphql as string, '', appDefaults.apiTimeout)\n            .then((authResp) => {\n                log.debug('authResp', authResp)\n                const authVals = authResp.data?.auth\n                if (authVals && authVals.region) {\n                    setAuthInfo({\n                        region: authVals.region,\n                        userPoolId: authVals.userPool,\n                        userPoolWebClientId: authVals.clientId,\n                        mandatorySignIn: true,\n                        oauth: {\n                            domain: authVals.domain,\n                            scope: ['email', 'profile', 'openid'],\n                            redirectSignIn: config.redirectUrl.toString(),\n                            redirectSignOut: config.redirectUrl.toString(),\n                            responseType: 'code'\n                        }\n                    })\n                    setIsAppPreLoading(false)\n                }\n            })\n            .catch((err) => {\n                log.error('api.getPrograms error', err)\n            })\n    }, [])\n\n    // This lets us do a redirect after login using localstorage\n    useEffect(() => {\n        if (!history) return\n\n        const check = async () => {\n            const cacheKey = `RSUrl`\n            const storageUrl = await LOCAL_CACHE.get<string>(cacheKey)\n\n            const localUrl = history.location.pathname\n            log.debug(`[${cacheKey}] Cache:::REDIRECT checking ${storageUrl} === ${localUrl}`)\n\n            if (!auth.isAuthenticated && !auth.error && auth.isAuthComplete) {\n                log.debug(`[${cacheKey}] Cache:::REDIRECT:::SET ${localUrl}`)\n                LOCAL_CACHE.set(cacheKey, localUrl)\n            }\n            if (storageUrl && auth.isAuthenticated && auth.isAuthComplete && !auth.error) {\n                if (localUrl !== storageUrl) {\n                    log.debug(`[${cacheKey}] Cache:::REDIRECT Needed! ${localUrl} !== ${storageUrl}`)\n                    history.push(storageUrl)\n                    // Now we need to trigger a re-fetch of the program\n                    if (!programState.machineName) {\n                        const machineName = getProgramMachineName()\n                        log.debug('Setting program machine name', machineName)\n                        setProgramState({ ...programState, machineName })\n                    }\n                }\n                // Delete once we're done to stop strange behaviour later\n                LOCAL_CACHE.del(cacheKey)\n            }\n        }\n        check()\n    }, [history, auth])\n\n    const navigate = useCallback((history: History, program: Program, project?: Project): void => {\n        let address\n\n        if (project) address = '/' + program.machineName + '/' + project.id\n        else address = '/' + program.machineName\n\n        googleAnalytics.event('webrave', 'navigate', address)\n        history.push(address)\n    }, [])\n\n    // Initial fetch gets us all the program objects\n    useEffect(() => {\n        if (!auth.isAuthenticated || programState?.program || !programState.machineName) return\n\n        auth.getCurrentToken()\n            .then((jwt) =>\n                getProgramAuth(config.endpoints.graphql as string, jwt, programState.machineName || 'UNKNOWN')\n            )\n            .then((apiReturn) => {\n                log.debug('API GetProgram', apiReturn)\n                if (apiReturn.data && apiReturn.data.program) {\n                    setProgramState({\n                        program: apiReturn.data.program,\n                        loading: false,\n                        machineName: apiReturn.data.program.machineName\n                    })\n                }\n            })\n            .catch((err) => {\n                log.error('api.getPrograms error', err)\n                // setIsAppPreLoading(false)\n            })\n    }, [auth, programState])\n\n    const logoSVG = <img src={warehouseIconUrl} alt=\"logo\" />\n\n    // render the login helper screen if that's called for\n    if (isAppPreLoading) {\n        return (\n            <AppWrapper title=\"Loading authentication info\">\n                <Loading\n                    logoSVG={logoSVG}\n                    title={appDefaults.appName}\n                    message={'Loading authentication info'}\n                    version={config.version}\n                />\n            </AppWrapper>\n        )\n    } else {\n        if (!auth.isAuthenticated) {\n            if (!auth.isAuthComplete) {\n                return (\n                    <AppWrapper title=\"webRAVE\">\n                        <Loading\n                            logoSVG={logoSVG}\n                            title=\"Authenticating\"\n                            message={'Authenticating'}\n                            version={config.version}\n                        />\n                    </AppWrapper>\n                )\n            }\n            return (\n                <AppWrapper title=\"Sign in\">\n                    <LoginScreen signIn={auth.signIn} title={'Riverscapes Map Viewer'} />\n                </AppWrapper>\n            )\n        } else if (!programState || programState?.loading) {\n            return (\n                <AppWrapper title=\"webRAVE\">\n                    <Loading\n                        logoSVG={logoSVG}\n                        title={'WebRave'}\n                        message={`Loading Program: ${programState.machineName || 'NULL'}`}\n                        version={config.version}\n                    />\n                </AppWrapper>\n            )\n        } else {\n            const appWrapProps = { navigate, signOut: auth.signOut }\n            return (\n                <Switch>\n                    <Route\n                        path={appRouterPath}\n                        render={(props): React.ReactElement => (\n                            <AppConnect {...props} auth={auth} program={programState?.program} />\n                        )}\n                    />\n                    <Route\n                        path=\"*\"\n                        render={(props): React.ReactElement => (\n                            <AppWrapper {...props} {...appWrapProps}>\n                                <ProjectNotFound />\n                            </AppWrapper>\n                        )}\n                    />\n                </Switch>\n            )\n        }\n    }\n}\nexport default AppAuthConnect\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport AppAuthConnect from './connectors/AppAuth.connect'\nimport { Router } from 'react-router-dom'\nimport { hashHistory } from '@riverscapes/react-common'\nimport log from 'loglevel'\nimport { devSetup } from '@northarrowresearch/react-common'\n// Here's our global overrides css\nimport './base.css'\nimport { RecoilRoot } from 'recoil'\n\n// THIS FIX IS NECESSARY FOR PRODUCTION AND WEBPACK!!!!\n// https://docs.mapbox.com/mapbox-gl-js/api/#transpiling-v2\n// https://github.com/mapbox/mapbox-gl-js/issues/10173\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nmapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default\n\n// This does its own process.env.NODE_ENV check\n// In production it only presents a minimal set of tools\ndevSetup()\n\n// This is the font we need\nrequire('typeface-roboto')\n\nReactDOM.render(\n    <RecoilRoot>\n        <Router basename=\"/\" history={hashHistory}>\n            <AppAuthConnect />\n        </Router>\n    </RecoilRoot>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register()\n\n// On android this will trick the back button into not closing the app\nwindow.addEventListener('load', () => {\n    window.history.pushState({}, '')\n})\n\n// In Chrome > 52 we need to explicitly request persistent storage to make sure our\n// stuff isn't cleaned up automatically.\nif (navigator.storage && navigator.storage.persist) {\n    navigator.storage.persist().then((granted) => {\n        if (granted) {\n            log.debug('Storage will not be cleared except by explicit user action')\n        } else {\n            log.warn('Storage may be cleared by the UA under storage pressure.')\n        }\n    })\n} else {\n    log.warn('navigator.storage API not implemented.')\n}\n"],"sourceRoot":""}